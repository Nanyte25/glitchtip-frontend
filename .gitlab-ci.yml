image: node:12

variables:
  CHROME_BIN: chromium-browser
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  POSTGRES_HOST_AUTH_METHOD: "trust"
  SECRET_KEY: "testing"
  ENABLE_TEST_API: "true"
  FF_NETWORK_PER_BUILD: 1
  DEBUG: "true"

stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: registry.gitlab.com/dasch8/angular-ci:latest
  cache:
    key: ${CI_COMMIT_REF_SLUG}-dasch8
    paths:
      - .npm/
  script:
    - apk add --no-cache git
    - npm ci --cache .npm --prefer-offline
    - npm run lint
    - npm run test -- --progress false --watch=false --browsers=Chromium_CI

test-e2e:
  stage: test
  services:
    - postgres
    - name: registry.gitlab.com/glitchtip/glitchtip-backend:master
      alias: backend
      command: ["./bin/run-migrate-and-runserver.sh"]
  image:
    name: cypress/included:4.2.0
    entrypoint: [""]
  script:
    - npm ci --cache .npm --prefer-offline
    - cp src/proxy.conf.ci.json src/proxy.conf.json
    - npm run e2e
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
  artifacts:
    when: always
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day

build-assets:
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/
  script:
    - npm ci --cache .npm --prefer-offline
    - node --max_old_space_size=6000 node_modules/@angular/cli/bin/ng build --prod --progress false
  artifacts:
    paths:
      - dist/

build-docker:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  dependencies:
    - build-assets
  only:
    - master
    - staging
    - dev
    - tags
  script:
    - echo "Start build docker step $CI_REGISTRY_IMAGE commit ref $CI_COMMIT_REF_NAME"
    - trap '' PIPE
    - VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' package.json | head -n 1)
    - echo "Build version $VERSION ci registry image $CI_REGISTRY_IMAGE commit ref $CI_COMMIT_REF_NAME"
    - docker build -f Dockerfile.prod -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} -t ${CONTAINER_IMAGE} --build-arg GLITCHTIP_VERSION=$VERSION .
    - if [ $CI_COMMIT_REF_NAME = "master" ]; then docker tag ${CONTAINER_IMAGE} ${CI_REGISTRY_IMAGE}:latest; fi
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker push ${CONTAINER_IMAGE}
    - if [ $CI_COMMIT_REF_NAME = "master" ]; then docker push ${CI_REGISTRY_IMAGE}:latest; fi

deploy-staging:
  stage: deploy
  image: lwolf/helm-kubectl-docker:v1.18.1-v3.1.2
  script:
    - helm upgrade glitchtip-staging ./chart --set image.tag=${CI_COMMIT_SHORT_SHA} --reuse-values
  environment:
    name: staging
    url: https://staging.glitchtip.com
  only:
    - master

deploy-dockerhub:
  stage: deploy
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker login -u ${DOCKER_CI_REGISTRY_USER} -p ${DOCKER_CI_REGISTRY_PASSWORD}
    - echo tag image ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} as ${DOCKER_CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} ${DOCKER_CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} ${DOCKER_CI_REGISTRY_IMAGE}:latest
    - docker push ${DOCKER_CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker push ${DOCKER_CI_REGISTRY_IMAGE}:latest
  only:
    - tags
