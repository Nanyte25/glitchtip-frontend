{
    "pipes": [
        {
            "name": "DaysAgoPipe",
            "id": "pipe-DaysAgoPipe-58ee2e9b8161805d590ee0d8e64f4b6a",
            "file": "src/app/shared/days-ago.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "daysAgo",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\nimport { formatDistanceStrict } from \"date-fns\";\n\n@Pipe({\n  name: \"daysAgo\",\n})\nexport class DaysAgoPipe implements PipeTransform {\n  transform(value: string): string {\n    const inputDate = new Date(value).getTime();\n    try {\n      return formatDistanceStrict(inputDate, new Date(), { addSuffix: true });\n    } catch (err) {\n      console.warn(\"Unable to process date\", value);\n      return \"\";\n    }\n  }\n}\n\n@Pipe({\n  name: \"daysOld\",\n})\nexport class DaysOldPipe implements PipeTransform {\n  transform(value: string): string {\n    const inputDate = new Date(value).getTime();\n    try {\n      const date = formatDistanceStrict(inputDate, new Date(), {\n        addSuffix: true,\n      });\n      return date.replace(\"ago\", \"old\");\n    } catch (err) {\n      console.warn(\"Unable to process date\", value);\n      return \"\";\n    }\n  }\n}\n"
        },
        {
            "name": "DaysOldPipe",
            "id": "pipe-DaysOldPipe-58ee2e9b8161805d590ee0d8e64f4b6a",
            "file": "src/app/shared/days-ago.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "daysOld",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\nimport { formatDistanceStrict } from \"date-fns\";\n\n@Pipe({\n  name: \"daysAgo\",\n})\nexport class DaysAgoPipe implements PipeTransform {\n  transform(value: string): string {\n    const inputDate = new Date(value).getTime();\n    try {\n      return formatDistanceStrict(inputDate, new Date(), { addSuffix: true });\n    } catch (err) {\n      console.warn(\"Unable to process date\", value);\n      return \"\";\n    }\n  }\n}\n\n@Pipe({\n  name: \"daysOld\",\n})\nexport class DaysOldPipe implements PipeTransform {\n  transform(value: string): string {\n    const inputDate = new Date(value).getTime();\n    try {\n      const date = formatDistanceStrict(inputDate, new Date(), {\n        addSuffix: true,\n      });\n      return date.replace(\"ago\", \"old\");\n    } catch (err) {\n      console.warn(\"Unable to process date\", value);\n      return \"\";\n    }\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AcceptAPIResponse",
            "id": "interface-AcceptAPIResponse-d104ba9c07a5e3114377d079b1b0a9e5",
            "file": "src/app/api/accept/accept-invite.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OrganizationUser } from \"../organizations/organizations.interface\";\n\nexport interface AcceptAPIResponse {\n  accept_invite: boolean;\n  org_user: OrganizationUser;\n}\n",
            "properties": [
                {
                    "name": "accept_invite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "org_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationUser",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "AcceptState",
            "id": "interface-AcceptState-6bd548de320a67ad1da9c7e075ae9339",
            "file": "src/app/api/accept/accept-invite.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap, catchError, map } from \"rxjs/operators\";\nimport { EMPTY, BehaviorSubject, combineLatest } from \"rxjs\";\nimport { baseUrl } from \"../../constants\";\nimport { AcceptAPIResponse } from \"./accept-invite.interfaces\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { OrganizationsService } from \"../organizations/organizations.service\";\n\ninterface AcceptState {\n  acceptInfo: AcceptAPIResponse | null;\n}\n\nconst initialState: AcceptState = {\n  acceptInfo: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AcceptInviteService {\n  private readonly state = new BehaviorSubject<AcceptState>(initialState);\n  readonly acceptInfo$ = this.state.pipe(map((state) => state.acceptInfo));\n  readonly orgSlug$ = this.acceptInfo$.pipe(\n    map((acceptInfo) => acceptInfo?.org_user.organization.slug)\n  );\n  readonly alreadyInOrg$ = combineLatest([\n    this.orgSlug$,\n    this.orgService.organizations$,\n  ]).pipe(\n    map(([orgSlugToMatch, organizations]) => {\n      if (orgSlugToMatch) {\n        const match = organizations.find(\n          (organization) => organization.slug === orgSlugToMatch\n        );\n        if (match) {\n          return true;\n        }\n        return false;\n      } else {\n        return false;\n      }\n    })\n  );\n  private readonly url = baseUrl + \"/accept/\";\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private orgService: OrganizationsService\n  ) {}\n\n  getAcceptInviteDetails(memberId: string, token: string) {\n    this.getAcceptInvite(memberId, token)\n      .pipe(\n        tap((response) => {\n          this.setAcceptInfo(response);\n        }),\n        catchError((error) => {\n          if (error.error?.detail === \"Not found.\") {\n            this.snackBar.open(`\n              This invitation link expired or is invalid. Please\n              issue a new invitation request.\n            `);\n          } else {\n            this.snackBar.open(error.error?.detail);\n          }\n          this.router.navigate([\"/\"]);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  acceptInvite(memberId: string, token: string) {\n    this.postAcceptInvite(memberId, token)\n      .pipe(\n        tap((response: AcceptAPIResponse) => {\n          this.orgService.retrieveOrganizations().subscribe();\n          this.snackBar.open(\n            `You have been added to ${response.org_user.organization.name}.`\n          );\n          this.router.navigate([\"/\"]);\n        }),\n        catchError((error) => {\n          if (error.status === 500) {\n            if ((error.error as string).includes(\"already exists\")) {\n              this.snackBar.open(`\n                There was an error, probably because you tried to join an organization\n                that you're already a part of.\n              `);\n            } else {\n              this.snackBar.open(`\n                There was an error. Try again later.\n              `);\n            }\n          } else if (error.error?.detail === \"Not found.\") {\n            this.snackBar.open(`\n              This invitation link expired or is invalid. Please\n              issue a new invitation request.\n            `);\n          } else {\n            this.snackBar.open(error.error?.detail);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  private getAcceptInvite(memberId: string, token: string) {\n    return this.http.get<AcceptAPIResponse>(`${this.url}${memberId}/${token}/`);\n  }\n\n  private postAcceptInvite(memberId: string, token: string) {\n    return this.http.post<AcceptAPIResponse>(\n      `${this.url}${memberId}/${token}/`,\n      {\n        accept_invite: true,\n      }\n    );\n  }\n\n  private setAcceptInfo(acceptInfo: AcceptAPIResponse) {\n    this.state.next({ ...this.state.getValue(), acceptInfo });\n  }\n}\n",
            "properties": [
                {
                    "name": "acceptInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AcceptAPIResponse | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Activity",
            "id": "interface-Activity-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 258
                },
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 259
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 260
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 261
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Json | null",
                    "optional": false,
                    "description": "",
                    "line": 262
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "AlertRecipient",
            "id": "interface-AlertRecipient-f98f56566935cf8eb49c122dfa353927",
            "file": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NewProjectAlert {\n  timespan_minutes: number;\n  quantity: number;\n  alertRecipients: NewAlertRecipient[];\n}\n\nexport interface ProjectAlert extends NewProjectAlert {\n  pk: number;\n  alertRecipients: AlertRecipient[];\n}\n\nexport interface NewAlertRecipient {\n  recipientType: RecipientType;\n  url: string;\n}\n\nexport interface AlertRecipient extends NewAlertRecipient {\n  pk: number;\n}\n\nexport type RecipientType = \"email\" | \"webhook\";\n",
            "properties": [
                {
                    "name": "pk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "NewAlertRecipient"
        },
        {
            "name": "AnnotatedContexts",
            "id": "interface-AnnotatedContexts-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "matIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextsType",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "AnnotatedRequest",
            "id": "interface-AnnotatedRequest-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "domainName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 157
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Request"
        },
        {
            "name": "APIToken",
            "id": "interface-APIToken-00ac36a6fb722fa0e47d4d8c7b21f5a9",
            "file": "src/app/api/api-tokens/api-tokens.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NewAPIToken {\n  scopes: string[];\n  label: string;\n}\n\nexport interface APIToken extends NewAPIToken {\n  dateCreated: string;\n  token: string;\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "NewAPIToken"
        },
        {
            "name": "AuthState",
            "id": "interface-AuthState-5da2a89fe2b5491bd1cb353624db68a7",
            "file": "src/app/api/auth/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { map, tap } from \"rxjs/operators\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\nexport interface AuthState {\n  isLoggedIn: boolean;\n  redirectUrl: string;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  redirectUrl: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService extends StatefulService<AuthState> {\n  isLoggedIn = this.getState$.pipe(map((data) => data.isLoggedIn));\n  private readonly url = \"/rest-auth/logout/\";\n\n  constructor(private http: HttpClient, private router: Router) {\n    super(initialState);\n    const authData = localStorage.getItem(\"auth\");\n    if (authData) {\n      const auth = JSON.parse(authData);\n      this.setState({\n        isLoggedIn: auth.isLoggedIn,\n        redirectUrl: auth.redirectUrl,\n      });\n    }\n  }\n\n  setAuth(data: AuthState) {\n    this.state.next(data);\n    localStorage.setItem(\"auth\", JSON.stringify(data));\n  }\n\n  setRedirectUrl(url: string) {\n    this.setAuth({\n      isLoggedIn: false,\n      redirectUrl: url,\n    });\n  }\n\n  afterLogin(redirect = true) {\n    const redirectUrl = this.state.getValue().redirectUrl;\n    this.setAuth({ isLoggedIn: true, redirectUrl: \"\" });\n    if (redirect) {\n      this.router.navigateByUrl(redirectUrl);\n    }\n  }\n\n  /** Log out user from the backend  */\n  logout() {\n    this.http\n      .post(this.url, null)\n      .pipe(\n        tap(() => this.removeAuth()),\n        tap(() => {\n          // tslint:disable:no-any\n          const _paq = (window as any)._paq;\n          _paq.push([\"resetUserId\"]);\n        })\n      )\n      .toPromise();\n  }\n\n  passwordReset(email: string) {\n    const data = { email };\n    const url = \"/rest-auth/password/reset/\";\n    return this.http.post(url, data);\n  }\n\n  /** Explicitly log out */\n  removeAuth() {\n    this.clearAuth();\n    window.location.href = \"/login\";\n  }\n\n  /** Run if server thinks user is logged out. */\n  expireAuth() {\n    this.clearAuth();\n    this.setRedirectUrl(window.location.pathname);\n    window.location.href = \"/login\";\n  }\n\n  private clearAuth() {\n    this.clearState();\n    localStorage.clear();\n  }\n}\n",
            "properties": [
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "redirectUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "AuthTokensState",
            "id": "interface-AuthTokensState-a3f65109ef9543d6844984dac342c7ec",
            "file": "src/app/profile/auth-tokens/auth-tokens.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, EMPTY } from \"rxjs\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport { APIToken } from \"src/app/api/api-tokens/api-tokens.interfaces\";\nimport { APITokenService } from \"src/app/api/api-tokens/api-tokens.service\";\n\ninterface AuthTokensState {\n  apiTokens: APIToken[];\n  loading: {\n    apiTokens: boolean;\n    create: boolean;\n    delete: string | null;\n  };\n  createError: string;\n  createErrorLabel: string;\n  createErrorScopes: string;\n}\n\nconst initialState: AuthTokensState = {\n  apiTokens: [],\n  loading: {\n    apiTokens: false,\n    create: false,\n    delete: null,\n  },\n  createError: \"\",\n  createErrorLabel: \"\",\n  createErrorScopes: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthTokensService {\n  private readonly state = new BehaviorSubject<AuthTokensState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  readonly apiTokens$ = this.getState$.pipe(map((state) => state.apiTokens));\n  readonly initialLoad$ = this.getState$.pipe(\n    map((state) => state.loading.apiTokens)\n  );\n  readonly createError$ = this.getState$.pipe(\n    map((state) => state.createError)\n  );\n  readonly createErrorLabel$ = this.getState$.pipe(\n    map((state) => state.createErrorLabel)\n  );\n  readonly createErrorScopes$ = this.getState$.pipe(\n    map((state) => state.createErrorScopes)\n  );\n  readonly createLoading$ = this.getState$.pipe(\n    map((state) => state.loading.create)\n  );\n  readonly deleteLoading$ = this.getState$.pipe(\n    map((state) => state.loading.delete)\n  );\n\n  constructor(\n    private apiTokenService: APITokenService,\n    private router: Router\n  ) {}\n\n  loadAuthTokens() {\n    this.apiTokenService\n      .list()\n      .pipe(\n        tap((apiTokens) => {\n          this.setAPITokensLoading();\n          this.setAPITokens(apiTokens);\n        })\n      )\n      .toPromise();\n  }\n\n  createAuthToken(label: string, scopes: string[]) {\n    this.setCreateLoading(true);\n    this.apiTokenService\n      .create({ label, scopes })\n      // TODO handle errors\n      .pipe(\n        tap(() => {\n          this.setCreateLoading(false);\n          this.router.navigate([\"/profile/auth-tokens\"]);\n        }),\n        catchError((error) => {\n          this.setCreateLoading(false);\n          if (error) {\n            if (error.status === 400) {\n              if (error.error.label) {\n                error.error.label.length === 1\n                  ? this.setCreateLabelError(error.error.label[0])\n                  : this.setCreateLabelError(error.error.label.join(\" \"));\n              }\n              if (error.error.scopes) {\n                error.error.scopes.length === 1\n                  ? this.setCreateScopesError(error.error.scopes[0])\n                  : this.setCreateScopesError(error.error.scopes.join(\" \"));\n              }\n            } else {\n              this.setCreateError(`${error.statusText}: ${error.status}`);\n            }\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  deleteAuthToken(id: string) {\n    this.setDeleteLoading(id);\n    this.apiTokenService\n      .destroy(id)\n      .pipe(\n        tap(() => {\n          this.loadAuthTokens();\n        })\n      )\n      .toPromise();\n  }\n\n  clear() {\n    this.state.next(initialState);\n  }\n\n  resetCreateErrors() {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createError: \"\",\n      createErrorLabel: \"\",\n      createErrorScopes: \"\",\n    });\n  }\n\n  private setAPITokens(apiTokens: APIToken[]) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      apiTokens,\n    });\n  }\n\n  private setAPITokensLoading() {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: { ...state.loading, apiTokens: true },\n    });\n  }\n\n  private setDeleteLoading(id: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: { ...state.loading, delete: id },\n    });\n  }\n\n  private setCreateLoading(isLoading: boolean) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: { ...state.loading, create: isLoading },\n    });\n  }\n\n  private setCreateError(error: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createError: error,\n    });\n  }\n\n  private setCreateLabelError(error: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createErrorLabel: error,\n    });\n  }\n\n  private setCreateScopesError(error: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createErrorScopes: error,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "apiTokens",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "APIToken[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "createError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "createErrorLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "createErrorScopes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Avatar",
            "id": "interface-Avatar-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "avatarType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "avatarUuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Avatar",
            "id": "interface-Avatar-11da721fe3246d88fc632914b098238e-1",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "avatarType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "avatarUuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Avatar-1"
        },
        {
            "name": "BackUpCodesRequest",
            "id": "interface-BackUpCodesRequest-95eb60cb3a3ebc9c52f10211bc3fdcfd",
            "file": "src/app/api/mfa/user-keys.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\n\ntype UserKeyType = \"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\";\n\nexport interface UserKey {\n  id: number;\n  user: number;\n  name: string;\n  created: string;\n  key_type: UserKeyType;\n  last_used: string;\n}\n\nexport interface TOTPResponse {\n  provisioning_uri: string;\n  secret_key: string;\n}\n\nexport type BackupCodes = string[];\n\ninterface BackUpGenerateResponse {\n  codes: BackupCodes;\n}\n\ninterface BackUpCodesRequest {\n  name: string;\n  codes: BackupCodes;\n}\n\ninterface TOTPRequest {\n  answer: string;\n  secret_key: string;\n}\n\n/**\n * MFA User Keys\n * Create requires a specific mfa type and sometimes requires a GET to fetch\n * relevant data before submitting a POST to actually create the key\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserKeysService extends APIBaseService {\n  readonly url = \"/api/mfa/user_keys/\";\n  readonly fido2Url = this.url + \"fido2/\";\n  readonly totpUrl = this.url + \"totp/\";\n  readonly backupCodesUrl = this.url + \"backup_codes/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n  list() {\n    return this.http.get<UserKey[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<UserKey>(this.detailURL(id));\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  fido2() {\n    // Should use cbor\n    return this.http.get<unknown>(this.fido2Url);\n  }\n\n  fido2Create(data: unknown) {\n    return this.http.post<unknown>(this.fido2Url, data);\n  }\n\n  totp() {\n    return this.http.get<TOTPResponse>(this.totpUrl);\n  }\n\n  totpCreate(data: TOTPRequest) {\n    return this.http.post<unknown>(this.totpUrl, data);\n  }\n\n  backupCodes() {\n    return this.http.get<BackUpGenerateResponse>(this.backupCodesUrl);\n  }\n\n  backupCodesCreate(data: BackUpCodesRequest) {\n    return this.http.post<UserKey>(this.backupCodesUrl, data);\n  }\n}\n",
            "properties": [
                {
                    "name": "codes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackupCodes",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "BackUpGenerateResponse",
            "id": "interface-BackUpGenerateResponse-95eb60cb3a3ebc9c52f10211bc3fdcfd",
            "file": "src/app/api/mfa/user-keys.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\n\ntype UserKeyType = \"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\";\n\nexport interface UserKey {\n  id: number;\n  user: number;\n  name: string;\n  created: string;\n  key_type: UserKeyType;\n  last_used: string;\n}\n\nexport interface TOTPResponse {\n  provisioning_uri: string;\n  secret_key: string;\n}\n\nexport type BackupCodes = string[];\n\ninterface BackUpGenerateResponse {\n  codes: BackupCodes;\n}\n\ninterface BackUpCodesRequest {\n  name: string;\n  codes: BackupCodes;\n}\n\ninterface TOTPRequest {\n  answer: string;\n  secret_key: string;\n}\n\n/**\n * MFA User Keys\n * Create requires a specific mfa type and sometimes requires a GET to fetch\n * relevant data before submitting a POST to actually create the key\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserKeysService extends APIBaseService {\n  readonly url = \"/api/mfa/user_keys/\";\n  readonly fido2Url = this.url + \"fido2/\";\n  readonly totpUrl = this.url + \"totp/\";\n  readonly backupCodesUrl = this.url + \"backup_codes/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n  list() {\n    return this.http.get<UserKey[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<UserKey>(this.detailURL(id));\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  fido2() {\n    // Should use cbor\n    return this.http.get<unknown>(this.fido2Url);\n  }\n\n  fido2Create(data: unknown) {\n    return this.http.post<unknown>(this.fido2Url, data);\n  }\n\n  totp() {\n    return this.http.get<TOTPResponse>(this.totpUrl);\n  }\n\n  totpCreate(data: TOTPRequest) {\n    return this.http.post<unknown>(this.totpUrl, data);\n  }\n\n  backupCodes() {\n    return this.http.get<BackUpGenerateResponse>(this.backupCodesUrl);\n  }\n\n  backupCodesCreate(data: BackUpCodesRequest) {\n    return this.http.post<UserKey>(this.backupCodesUrl, data);\n  }\n}\n",
            "properties": [
                {
                    "name": "codes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackupCodes",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "BaseProduct",
            "id": "interface-BaseProduct-368fc6d3b78c0c82a085ab80d3e5d024",
            "file": "src/app/api/subscriptions/subscriptions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface BaseProduct {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  metadata: { [key: string]: string };\n}\n\nexport interface Plan {\n  id: string;\n  nickname: string;\n  amount: number | string;\n  metadata: { [key: string]: string };\n  product: BaseProduct;\n}\n\nexport interface Product extends BaseProduct {\n  plans: Plan[];\n}\n\nexport interface Subscription {\n  id: string;\n  created: string;\n  collection_method: string;\n  billing_cycle_anchor: string;\n  current_period_end: string;\n  current_period_start: string;\n  start_date: string;\n  status:\n    | \"active\"\n    | \"canceled\"\n    | \"incomplete\"\n    | \"incomplete_expired\"\n    | \"past_due\"\n    | \"trialing\"\n    | \"unpaid\";\n  plan: Plan;\n}\n\nexport interface CreateSubscriptionResp {\n  organization: number;\n  plan: string;\n  subscription: Subscription;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Breadcrumb",
            "id": "interface-Breadcrumb-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "event_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\"",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 115
                },
                {
                    "name": "timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"http\" | \"error\"",
                    "optional": false,
                    "description": "",
                    "line": 119
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "BreadcrumbValueData",
            "id": "interface-BreadcrumbValueData-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Breadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 110
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ChangePassword",
            "id": "interface-ChangePassword-588fadbe5ba92d9ec269448d7eb795c7",
            "file": "src/app/profile/change-password/password.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\ninterface ChangePassword {\n  old_password: string;\n  new_password1: string;\n  new_password2: string;\n}\n\nconst baseUrl = \"/rest-auth/password\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PasswordService {\n  constructor(private http: HttpClient) {}\n\n  changePassword(\n    // tslint:disable: variable-name\n    old_password: string,\n    new_password1: string,\n    new_password2: string\n  ) {\n    const url = baseUrl + \"/change/\";\n    const data: ChangePassword = {\n      old_password,\n      new_password1,\n      new_password2,\n    };\n    return this.http.post(url, data);\n  }\n}\n",
            "properties": [
                {
                    "name": "new_password1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "new_password2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "old_password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "CreateSubscriptionResp",
            "id": "interface-CreateSubscriptionResp-368fc6d3b78c0c82a085ab80d3e5d024",
            "file": "src/app/api/subscriptions/subscriptions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface BaseProduct {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  metadata: { [key: string]: string };\n}\n\nexport interface Plan {\n  id: string;\n  nickname: string;\n  amount: number | string;\n  metadata: { [key: string]: string };\n  product: BaseProduct;\n}\n\nexport interface Product extends BaseProduct {\n  plans: Plan[];\n}\n\nexport interface Subscription {\n  id: string;\n  created: string;\n  collection_method: string;\n  billing_cycle_anchor: string;\n  current_period_end: string;\n  current_period_start: string;\n  start_date: string;\n  status:\n    | \"active\"\n    | \"canceled\"\n    | \"incomplete\"\n    | \"incomplete_expired\"\n    | \"past_due\"\n    | \"trialing\"\n    | \"unpaid\";\n  plan: Plan;\n}\n\nexport interface CreateSubscriptionResp {\n  organization: number;\n  plan: string;\n  subscription: Subscription;\n}\n",
            "properties": [
                {
                    "name": "organization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "plan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "CSP",
            "id": "interface-CSP-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-957d706c54eea51f744c80eeb987a356",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string | number",
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 172,
            "methods": []
        },
        {
            "name": "DSN",
            "id": "interface-DSN-11da721fe3246d88fc632914b098238e",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "public",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "security",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Email",
            "id": "interface-Email-1ba0165fb70f1e3206a6a41046d99e6c",
            "file": "src/app/api/user/user.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OAuthProvider } from \"../oauth/oauth.interfaces\";\nimport { Avatar } from \"../organizations/organizations.interface\";\n\nexport interface SocialAccount {\n  id: number;\n  provider: OAuthProvider;\n  uid: string;\n  last_login: string;\n  date_joined: string;\n  email: string;\n  username: string | null;\n}\n\nexport interface SocialApp {\n  provider: OAuthProvider;\n  name: string;\n  client_id: string;\n}\n\nexport interface User {\n  username: string;\n  lastLogin: string;\n  isSuperuser: boolean;\n  emails: Email[];\n  isManaged: boolean;\n  lastActive: string;\n  identities: SocialAccount[];\n  id: string;\n  isActive: boolean;\n  has2fa: boolean;\n  canReset2fa: boolean;\n  name: string;\n  avatarUrl: string;\n  authenticators: [];\n  dateJoined: string;\n  options: UserOptions;\n  flags: object;\n  avatar: Avatar;\n  hasPasswordAuth: boolean;\n  permissions: [];\n  email: string;\n}\n\ninterface Email {\n  is_verified: boolean;\n  id: string;\n  email: string;\n}\n\ninterface UserOptions {\n  timezone: string;\n  stacktraceOrder: number;\n  language: string;\n  clock24Hours: boolean;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "is_verified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "EmailAddress",
            "id": "interface-EmailAddress-d03c30752e64e0c124830c7c61d890d1",
            "file": "src/app/api/emails/email.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface EmailAddress {\n  isPrimary: boolean;\n  email: string;\n  isVerified: boolean;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isVerified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "EmailState",
            "id": "interface-EmailState-8b96fc17935de9c91dc45f33fda80ad5",
            "file": "src/app/api/emails/email.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, Subject, EMPTY } from \"rxjs\";\nimport { EmailAddress } from \"./email.interfaces\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"../../constants\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\ntype LoadingStateNames =\n  | \"add\"\n  | \"delete\"\n  | \"makePrimary\"\n  | \"resendConfirmation\";\n\ninterface LoadingStates {\n  add: boolean;\n  /**\n   * Theoretically you could be deleting two at once and the UI won't\n   * reflect this. Didn't think it was a 1.0 problem\n   */\n  delete: string | null;\n  /**\n   * If you click one \"Make primary\" button and then another quickly, could\n   * cause problems. Again, didn't think it was a 1.0 problem\n   */\n  makePrimary: string | null;\n  resendConfirmation: string | null;\n}\n\ninterface EmailState {\n  emailAddresses: EmailAddress[];\n  loadingStates: LoadingStates;\n  addEmailError: string;\n}\n\nconst initialState: EmailState = {\n  emailAddresses: [],\n  loadingStates: {\n    add: false,\n    delete: null,\n    makePrimary: null,\n    resendConfirmation: null,\n  },\n  addEmailError: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EmailService {\n  private readonly state = new BehaviorSubject<EmailState>(initialState);\n  readonly resetFormSubject = new Subject();\n  readonly emailAddresses$ = this.state.pipe(\n    map((state) => state.emailAddresses)\n  );\n  readonly loadingStates$ = this.state.pipe(\n    map((state) => state.loadingStates)\n  );\n  readonly addEmailError$ = this.state.pipe(\n    map((state) => state.addEmailError)\n  );\n  /**\n   * A list of the user's email addresses, with primary email on top\n   *\n   * The backend allows multiple emails with isPrimary === true, but the\n   * frontend is not built to accommodate this\n   */\n  readonly emailAddressesSorted$ = this.emailAddresses$.pipe(\n    map((emailAddresses) =>\n      // Sort by boolean https://stackoverflow.com/a/17387454/443457\n      [...emailAddresses].sort((a, b) =>\n        a.isPrimary === b.isPrimary ? 0 : a.isPrimary ? -1 : 1\n      )\n    )\n  );\n\n  private readonly url = baseUrl + \"/users/me/emails/\";\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  retrieveEmailAddresses() {\n    this.getEmailAddresses()\n      .pipe(tap((response: EmailAddress[]) => this.setEmailAddresses(response)))\n      .subscribe();\n  }\n\n  addEmailAddress(email: string) {\n    this.setLoadingAdd();\n    this.postEmailAddress(email)\n      .pipe(\n        tap((response: EmailAddress) => {\n          this.setNewEmailAddress(response);\n          this.resetFormSubject.next();\n          this.resetLoadingAdd();\n          this.setAddEmailError(\"\");\n        }),\n        catchError((error) => {\n          this.resetLoadingAdd();\n          if (error.error?.non_field_errors) {\n            this.setAddEmailError(error.error.non_field_errors.join(\", \"));\n          } else {\n            if (\n              error.status === 500 &&\n              (error.error as string).includes(\n                `'to' parameter is not a valid address`\n              )\n            ) {\n              this.setAddEmailError(\n                \"This is not a valid email address. Please try another one.\"\n              );\n            } else if (error.status === 500) {\n              this\n                .setAddEmailError(`There was a problem. Refresh the page to see if your email is\n                on the list. You may need to try again, or try a different\n                email address.`);\n            } else if (error.status === 400) {\n              this.setAddEmailError(\"There was a problem. Please try again.\");\n            } else {\n              this.setAddEmailError(\"Error: \" + error.statusText);\n            }\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeEmailAddress(email: string) {\n    this.setLoadingDelete(email);\n    this.deleteEmailAddress(email)\n      .pipe(\n        tap((_) => {\n          this.setRemovedEmailAddress(email);\n          this.resetLoadingDelete();\n          this.setSnackbarMessage(\n            `${email} has been removed from your account.`\n          );\n        }),\n        catchError((_) => {\n          this.resetLoadingDelete();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  makeEmailPrimary(email: string) {\n    this.setLoadingMakePrimary(email);\n    this.putEmailAddress(email)\n      .pipe(\n        tap((response) => {\n          this.setNewPrimaryEmail(response);\n          this.resetLoadingMakePrimary();\n          this.setSnackbarMessage(\n            `${email} is now your primary email address.`\n          );\n        }),\n        catchError((error) => {\n          this.resetLoadingMakePrimary();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  resendConfirmation(email: string) {\n    this.setLoadingResend(email);\n    this.sendConfirmation(email)\n      .pipe(\n        tap((_) => {\n          this.resetLoadingResend();\n          this.setSnackbarMessage(\n            `A confirmation email has been sent to ${email}.`\n          );\n        }),\n        catchError((_) => {\n          this.resetLoadingResend();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  setLoadingAdd = () => this.setLoadingState(\"add\");\n  setLoadingDelete = (value: string) => this.setLoadingState(\"delete\", value);\n  setLoadingMakePrimary = (value: string) =>\n    this.setLoadingState(\"makePrimary\", value);\n  setLoadingResend = (value: string) =>\n    this.setLoadingState(\"resendConfirmation\", value);\n\n  resetLoadingAdd = () => this.resetLoadingState(\"add\");\n  resetLoadingDelete = () => this.resetLoadingState(\"delete\");\n  resetLoadingMakePrimary = () => this.resetLoadingState(\"makePrimary\");\n  resetLoadingResend = () => this.resetLoadingState(\"resendConfirmation\");\n\n  private setSnackbarMessage(message: string) {\n    this.snackBar.open(message);\n  }\n\n  private getEmailAddresses() {\n    return this.http.get<EmailAddress[]>(this.url);\n  }\n\n  private postEmailAddress(email: string) {\n    return this.http.post<EmailAddress>(this.url, { email });\n  }\n\n  private deleteEmailAddress(email: string) {\n    // Delete with body, from https://stackoverflow.com/a/40857437/\n    const options = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n      }),\n      body: { email },\n    };\n    return this.http.delete<null>(this.url, options);\n  }\n\n  private putEmailAddress(email: string) {\n    return this.http.put<EmailAddress>(this.url, { email });\n  }\n\n  private sendConfirmation(email: string) {\n    return this.http.post<EmailAddress>(this.url + \"confirm/\", { email });\n  }\n\n  private setEmailAddresses(emailAddresses: EmailAddress[]) {\n    this.state.next({ ...this.state.getValue(), emailAddresses });\n  }\n\n  private setNewEmailAddress(emailAddress: EmailAddress) {\n    const current = this.state.getValue();\n    this.state.next({\n      ...current,\n      emailAddresses: [...current.emailAddresses].concat(emailAddress),\n    });\n  }\n\n  /**\n   * - Make isPrimary false on formerly primary email\n   * - Make isPrimary new on the new primary email, which is done here by\n   *   replacing it with the API response\n   * - Put new primary email up top\n   */\n  private setNewPrimaryEmail(newPrimaryEmail: EmailAddress) {\n    const current = this.state.getValue();\n    const nonPrimaryEmails = [...current.emailAddresses]\n      .filter((email) => email.email !== newPrimaryEmail.email)\n      .map((email) => ({ ...email, isPrimary: false }));\n\n    this.state.next({\n      ...current,\n      emailAddresses: [newPrimaryEmail].concat(nonPrimaryEmails),\n    });\n  }\n\n  private setRemovedEmailAddress(emailToDelete: string) {\n    const current = this.state.getValue();\n    const indexToDelete = current.emailAddresses.findIndex(\n      (email) => email.email === emailToDelete\n    );\n    let emailAddresses = current.emailAddresses;\n    if (indexToDelete > -1) {\n      emailAddresses = current.emailAddresses\n        .slice(0, indexToDelete)\n        .concat(\n          current.emailAddresses.slice(\n            indexToDelete + 1,\n            current.emailAddresses.length\n          )\n        );\n    }\n\n    this.state.next({ ...current, emailAddresses });\n  }\n\n  private setLoadingState(stateToSet: LoadingStateNames, value?: string) {\n    const current = this.state.getValue();\n    const loadingStates = { ...current.loadingStates };\n    if (stateToSet === \"add\") {\n      loadingStates.add = true;\n    } else {\n      if (value) {\n        loadingStates[stateToSet] = value;\n      }\n    }\n\n    this.state.next({ ...current, loadingStates });\n  }\n\n  private resetLoadingState(stateToReset: LoadingStateNames) {\n    const current = this.state.getValue();\n    const loadingStates = { ...current.loadingStates };\n    if (stateToReset === \"add\") {\n      loadingStates.add = false;\n    } else {\n      loadingStates[stateToReset] = null;\n    }\n\n    this.state.next({ ...current, loadingStates });\n  }\n\n  private setAddEmailError = (message: string) => {\n    this.state.next({ ...this.state.getValue(), addEmailError: message });\n  };\n}\n",
            "properties": [
                {
                    "name": "addEmailError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "emailAddresses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EmailAddress[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "loadingStates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoadingStates",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "EndUser",
            "id": "interface-EndUser-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "ip_address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 35
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Entry",
            "id": "interface-Entry-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Data",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Type",
                    "optional": false,
                    "description": "",
                    "line": 99
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Environment",
            "id": "interface-Environment-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Errors",
            "id": "interface-Errors-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Event",
            "id": "interface-Event-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "crashFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "culprit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "event.type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventTypes",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "eventID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "groupID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "platform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "projectID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventTag[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EndUser | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "EventDetail",
            "id": "interface-EventDetail-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "_meta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": true,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "contexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "dateReceived",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "dist",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "entries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EntryUnion[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Errors[] | ",
                    "optional": true,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "fingerprints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "groupingConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GroupingConfig",
                    "optional": true,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "issue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "nextEventID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "packages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "previousEventID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "release",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": true,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "sdk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "sdkUpdates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"error\" | \"csp\" | \"default\"",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "userReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 50
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Event"
        },
        {
            "name": "EventTag",
            "id": "interface-EventTag-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "_meta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | ",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Tag"
        },
        {
            "name": "ExceptionValueData",
            "id": "interface-ExceptionValueData-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "excOmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": true,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "hasSystemFrames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 135
                },
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Values[]",
                    "optional": false,
                    "description": "",
                    "line": 133
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "FirstRelease",
            "id": "interface-FirstRelease-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "authors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 238
                },
                {
                    "name": "commitCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 239
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 240
                },
                {
                    "name": "dataCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 241
                },
                {
                    "name": "dataReleased",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 242
                },
                {
                    "name": "deployCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 243
                },
                {
                    "name": "firstEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 244
                },
                {
                    "name": "lastCommit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 245
                },
                {
                    "name": "lastDeploy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 246
                },
                {
                    "name": "lastEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 247
                },
                {
                    "name": "newGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 248
                },
                {
                    "name": "owner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 249
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectIssueView[]",
                    "optional": false,
                    "description": "",
                    "line": 250
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 251
                },
                {
                    "name": "shortVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 252
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 253
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 254
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "FlatPlatform",
            "id": "interface-FlatPlatform-2d0d9dcf80acc962f97924d2d5a5767e",
            "file": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { platforms, Integration, Platform } from \"./platforms\";\n\ninterface FlatPlatform extends Integration {\n  language: string;\n}\n\nconst otherPlatform: Platform = {\n  integrations: [\n    {\n      link: \"\",\n      type: \"language\",\n      id: \"other\",\n      name: \"Other\",\n    },\n  ],\n  id: \"other\",\n  name: \"Other\",\n};\n\nexport const flattenedPlatforms: FlatPlatform[] = [...platforms, otherPlatform]\n  .map((platform) => {\n    const flatPlatforms: FlatPlatform[] = platform.integrations.map(\n      (integration) => ({ ...integration, language: platform.id })\n    );\n    return flatPlatforms;\n  })\n  // converts array of arrays to a single array\n  // https://stackoverflow.com/a/18307218\n  .reduce((a, b) => a.concat(b));\n",
            "properties": [
                {
                    "name": "language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Integration"
        },
        {
            "name": "Frame",
            "id": "interface-Frame-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "absPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 291
                },
                {
                    "name": "colNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 307
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[][]",
                    "optional": false,
                    "description": "",
                    "line": 303
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 305
                },
                {
                    "name": "filename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 292
                },
                {
                    "name": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 295
                },
                {
                    "name": "inApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 302
                },
                {
                    "name": "instructionAddr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 298
                },
                {
                    "name": "lineNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 306
                },
                {
                    "name": "module",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 294
                },
                {
                    "name": "package",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 297
                },
                {
                    "name": "platform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 293
                },
                {
                    "name": "rawFunction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 296
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 299
                },
                {
                    "name": "symbolAddr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 300
                },
                {
                    "name": "trust",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 301
                },
                {
                    "name": "vars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 304
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "GroupedProjects",
            "id": "interface-GroupedProjects-ffd9b50ee6169eac72bcc74f5235f690",
            "file": "src/app/profile/notifications/notifications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Project } from \"src/app/api/projects/projects-api.interfaces\";\n\nexport interface SubscribeByDefault {\n  subscribeByDefault: boolean;\n}\n\nexport type NotificationStatus = number;\n\nexport interface ProjectWithAlertStatus extends Project {\n  alertStatus: NotificationStatus;\n}\n\nexport interface ProjectAlerts {\n  [key: string]: NotificationStatus;\n}\n\nexport interface GroupedProjects {\n  [key: number]: ProjectWithAlertStatus[];\n}\n\nexport interface ProjectError {\n  error: string;\n  id: string;\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-ffd9b50ee6169eac72bcc74f5235f690",
                    "args": [
                        {
                            "name": "key",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ProjectWithAlertStatus[]",
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 172,
            "methods": []
        },
        {
            "name": "GroupingConfig",
            "id": "interface-GroupingConfig-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "enhancements",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 311
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 312
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Integration",
            "id": "interface-Integration-fcefe1312ba11bdeca06cff395aee908",
            "file": "src/app/settings/projects/platform-picker/platforms.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Integration {\n  link: string;\n  type: \"framework\" | \"language\" | \"library\";\n  id: string;\n  name: string;\n}\n\nexport interface Platform {\n  id: string;\n  name: string;\n  integrations: Integration[];\n}\n\nexport const platforms: Platform[] = [\n  {\n    id: \"csharp\",\n    name: \"C#\",\n    integrations: [\n      {\n        id: \"csharp-aspnetcore\",\n        name: \"ASP.NET Core\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=aspnetcore\",\n      },\n      {\n        id: \"csharp\",\n        name: \"C#\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=csharp\",\n      },\n    ],\n  },\n  {\n    id: \"cordova\",\n    name: \"Cordova\",\n    integrations: [\n      {\n        id: \"cordova\",\n        name: \"Cordova\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=cordova\",\n      },\n    ],\n  },\n  {\n    id: \"electron\",\n    name: \"Electron\",\n    integrations: [\n      {\n        id: \"electron\",\n        name: \"Electron\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=electron\",\n      },\n    ],\n  },\n  {\n    id: \"elixir\",\n    name: \"Elixir\",\n    integrations: [\n      {\n        id: \"elixir\",\n        name: \"Elixir\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/elixir/\",\n      },\n    ],\n  },\n  {\n    id: \"go\",\n    name: \"Go\",\n    integrations: [\n      {\n        id: \"go\",\n        name: \"Go\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=go\",\n      },\n      {\n        id: \"go-http\",\n        name: \"net/http\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/go/http/\",\n      },\n    ],\n  },\n  {\n    id: \"java\",\n    name: \"Java\",\n    integrations: [\n      {\n        id: \"java-android\",\n        name: \"Android\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/android/\",\n      },\n      {\n        id: \"java-appengine\",\n        name: \"Google App Engine\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/appengine/\",\n      },\n      {\n        id: \"java\",\n        name: \"Java\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/java/\",\n      },\n      {\n        id: \"java-logging\",\n        name: \"java.util.logging\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/jul/\",\n      },\n      {\n        id: \"java-log4j\",\n        name: \"Log4j 1.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j/\",\n      },\n      {\n        id: \"java-log4j2\",\n        name: \"Log4j 2.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j2/\",\n      },\n      {\n        id: \"java-logback\",\n        name: \"Logback\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/logback/\",\n      },\n    ],\n  },\n  {\n    id: \"javascript\",\n    name: \"JavaScript\",\n    integrations: [\n      {\n        id: \"javascript-angular\",\n        name: \"Angular\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/angular/\",\n      },\n      {\n        id: \"javascript-angularjs\",\n        name: \"AngularJS\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/angularjs/\",\n      },\n      {\n        id: \"javascript-backbone\",\n        name: \"Backbone\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/#backbone\",\n      },\n      {\n        id: \"javascript-browser\",\n        name: \"Browser JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-ember\",\n        name: \"Ember\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/ember/\",\n      },\n      {\n        id: \"javascript\",\n        name: \"JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-react\",\n        name: \"React\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/react/\",\n      },\n      {\n        id: \"javascript-vue\",\n        name: \"Vue\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/vue/\",\n      },\n    ],\n  },\n  {\n    id: \"minidump\",\n    name: \"Minidump\",\n    integrations: [\n      {\n        id: \"minidump\",\n        name: \"Minidump\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/native/minidump/\",\n      },\n    ],\n  },\n  {\n    id: \"native\",\n    name: \"Native (C/C++)\",\n    integrations: [\n      {\n        id: \"native\",\n        name: \"Native (C/C++)\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=native\",\n      },\n    ],\n  },\n  {\n    id: \"node\",\n    name: \"Node.js\",\n    integrations: [\n      {\n        id: \"node-connect\",\n        name: \"Connect\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/connect/\",\n      },\n      {\n        id: \"node-express\",\n        name: \"Express\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/express/\",\n      },\n      {\n        id: \"node-koa\",\n        name: \"Koa\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/koa/\",\n      },\n      {\n        id: \"node\",\n        name: \"Node.js\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=node\",\n      },\n    ],\n  },\n  {\n    id: \"cocoa\",\n    name: \"Objective-C\",\n    integrations: [\n      {\n        id: \"cocoa-objc\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa-swift\",\n        name: \"Swift\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n    ],\n  },\n  {\n    id: \"php\",\n    name: \"PHP\",\n    integrations: [\n      {\n        id: \"php-laravel\",\n        name: \"Laravel\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/laravel/\",\n      },\n      {\n        id: \"php-monolog\",\n        name: \"Monolog\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/monolog/\",\n      },\n      {\n        id: \"php\",\n        name: \"PHP\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=php\",\n      },\n      {\n        id: \"php-symfony\",\n        name: \"Symfony\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/symfony/\",\n      },\n      {\n        id: \"php-symfony2\",\n        name: \"Symfony2\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/symfony2/\",\n      },\n    ],\n  },\n  {\n    id: \"python\",\n    name: \"Python\",\n    integrations: [\n      {\n        id: \"python-aiohttp\",\n        name: \"AIOHTTP\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aiohttp/\",\n      },\n      {\n        id: \"python-asgi\",\n        name: \"ASGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/asgi/\",\n      },\n      {\n        id: \"python-pythonawslambda\",\n        name: \"AWS Lambda\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aws_lambda/\",\n      },\n      {\n        id: \"python-bottle\",\n        name: \"Bottle\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/bottle/\",\n      },\n      {\n        id: \"python-celery\",\n        name: \"Celery\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/celery/\",\n      },\n      {\n        id: \"python-django\",\n        name: \"Django\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/django/\",\n      },\n      {\n        id: \"python-falcon\",\n        name: \"Falcon\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/falcon/\",\n      },\n      {\n        id: \"python-flask\",\n        name: \"Flask\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/flask/\",\n      },\n      {\n        id: \"python-pylons\",\n        name: \"Pylons\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/python/integrations/pylons/\",\n      },\n      {\n        id: \"python-pyramid\",\n        name: \"Pyramid\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/pyramid/\",\n      },\n      {\n        id: \"python\",\n        name: \"Python\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=python\",\n      },\n      {\n        id: \"python-rq\",\n        name: \"RQ (Redis Queue)\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/rq/\",\n      },\n      {\n        id: \"python-sanic\",\n        name: \"Sanic\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/sanic/\",\n      },\n      {\n        id: \"python-pythonserverless\",\n        name: \"Serverless (Python)\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/serverless/\",\n      },\n      {\n        id: \"python-tornado\",\n        name: \"Tornado\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/tornado/\",\n      },\n      {\n        id: \"python-wsgi\",\n        name: \"WSGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/wsgi/\",\n      },\n    ],\n  },\n  {\n    id: \"react-native\",\n    name: \"React-Native\",\n    integrations: [\n      {\n        id: \"react-native\",\n        name: \"React-Native\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/platforms/react-native/\",\n      },\n    ],\n  },\n  {\n    id: \"ruby\",\n    name: \"Ruby\",\n    integrations: [\n      {\n        id: \"ruby-rack\",\n        name: \"Rack\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rack/\",\n      },\n      {\n        id: \"ruby-rails\",\n        name: \"Rails\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rails/\",\n      },\n      {\n        id: \"ruby\",\n        name: \"Ruby\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/ruby/\",\n      },\n    ],\n  },\n  {\n    id: \"rust\",\n    name: \"Rust\",\n    integrations: [\n      {\n        id: \"rust\",\n        name: \"Rust\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=rust\",\n      },\n    ],\n  },\n];\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"framework\" | \"language\" | \"library\"",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Issue",
            "id": "interface-Issue-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "annotations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "assignedTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 165
                },
                {
                    "name": "culprit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "firstSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 167
                },
                {
                    "name": "hasSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "isBookmarked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 171
                },
                {
                    "name": "isPublic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "isSubscribed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 173
                },
                {
                    "name": "lastSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 175
                },
                {
                    "name": "logger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 176
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueMetadata",
                    "optional": false,
                    "description": "",
                    "line": 177
                },
                {
                    "name": "numComments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "permalink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 179
                },
                {
                    "name": "platform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "project",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectIssueView",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "shareId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 181
                },
                {
                    "name": "shortId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "stats",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Stats",
                    "optional": false,
                    "description": "",
                    "line": 183
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueStatus",
                    "optional": false,
                    "description": "",
                    "line": 184
                },
                {
                    "name": "statusDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 185
                },
                {
                    "name": "subscriptionDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "userCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 189
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IssueDetail",
            "id": "interface-IssueDetail-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Activity[]",
                    "optional": false,
                    "description": "",
                    "line": 207
                },
                {
                    "name": "firstRelease",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirstRelease | null",
                    "optional": false,
                    "description": "",
                    "line": 204
                },
                {
                    "name": "lastRelease",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 206
                },
                {
                    "name": "participants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Json[]",
                    "optional": false,
                    "description": "",
                    "line": 197
                },
                {
                    "name": "pluginActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "pluginContexts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 205
                },
                {
                    "name": "pluginIssues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "seenBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Json[]",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 199
                },
                {
                    "name": "userReportCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 196
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Issue"
        },
        {
            "name": "IssueDetailState",
            "id": "interface-IssueDetailState-ea3d8ddfab257797fdb76c483f71878e",
            "file": "src/app/issues/issue-detail/issue-detail.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport { tap, map, catchError, withLatestFrom } from \"rxjs/operators\";\nimport {\n  IssueDetail,\n  EventDetail,\n  IssueStatus,\n  ExceptionValueData,\n  Request,\n  AnnotatedRequest,\n  CSP,\n  Message,\n  Values,\n  EntryType,\n  AnnotatedContexts,\n  BreadcrumbValueData,\n  IssueTags,\n  IssueTagsAdjusted,\n} from \"../interfaces\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { IssuesService } from \"../issues.service\";\nimport { generateIconPath } from \"../../shared/shared.utils\";\nimport { IssuesAPIService } from \"src/app/api/issues/issues-api.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\ninterface IssueDetailState {\n  issue: IssueDetail | null;\n  issueLoading: boolean;\n  issueInitialLoadComplete: boolean;\n  event: EventDetail | null;\n  eventLoading: boolean;\n  eventInitialLoadComplete: boolean;\n  tags: IssueTags[] | null;\n  isReversed: boolean;\n  showShowMore: boolean;\n}\n\nconst initialState: IssueDetailState = {\n  issue: null,\n  event: null,\n  tags: null,\n  isReversed: true,\n  showShowMore: false,\n  issueLoading: false,\n  issueInitialLoadComplete: false,\n  eventLoading: false,\n  eventInitialLoadComplete: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IssueDetailService extends StatefulService<IssueDetailState> {\n  readonly issue$ = this.getState$.pipe(map((state) => state.issue));\n  readonly issueInitialLoadComplete$ = this.getState$.pipe(\n    map((state) => state.issueInitialLoadComplete)\n  );\n  readonly event$ = this.getState$.pipe(map((state) => state.event));\n  readonly tags$ = this.getState$.pipe(\n    map((state) => state.tags && this.tagsWithPercent(state.tags))\n  );\n  readonly eventInitialLoadComplete$ = this.getState$.pipe(\n    map((state) => state.eventInitialLoadComplete)\n  );\n  readonly isReversed$ = this.getState$.pipe(map((state) => state.isReversed));\n  readonly showShowMore$ = this.getState$.pipe(\n    map((state) => state.showShowMore)\n  );\n  readonly hasNextEvent$ = this.event$.pipe(\n    map((event) => event && event.nextEventID !== null)\n  );\n  readonly hasPreviousEvent$ = this.event$.pipe(\n    map((event) => event && event.previousEventID !== null)\n  );\n  readonly nextEventUrl$ = combineLatest([\n    this.organization.activeOrganizationSlug$,\n    this.issue$,\n    this.event$,\n  ]).pipe(\n    map(([orgSlug, issue, event]) => {\n      if (event && event.nextEventID) {\n        return this.eventUrl(orgSlug, issue, event.nextEventID);\n      }\n      return null;\n    })\n  );\n  readonly previousEventUrl$ = combineLatest([\n    this.organization.activeOrganizationSlug$,\n    this.issue$,\n    this.event$,\n  ]).pipe(\n    map(([orgSlug, issue, event]) => {\n      if (event && event.previousEventID) {\n        return this.eventUrl(orgSlug, issue, event.previousEventID);\n      }\n      return null;\n    })\n  );\n  readonly eventEntryException$ = combineLatest([\n    this.event$,\n    this.isReversed$,\n  ]).pipe(\n    map(([event, isReversed]) =>\n      event ? this.reverseFrames(event, isReversed) : undefined\n    )\n  );\n  readonly rawStacktraceValues$ = this.event$.pipe(\n    map((event) => (event ? this.rawStacktraceValues(event) : undefined))\n  );\n  readonly eventEntryRequest$ = this.event$.pipe(\n    map((event) => (event ? this.entryRequestData(event) : undefined))\n  );\n  readonly eventEntryCSP$ = this.event$.pipe(\n    map((event) => (event ? this.eventEntryCSP(event) : undefined))\n  );\n  readonly eventEntryMessage$ = this.event$.pipe(\n    map((event) => (event ? this.eventEntryMessage(event) : undefined))\n  );\n  readonly specialContexts$ = this.event$.pipe(\n    map((event) => (event ? this.specialContexts(event) : undefined))\n  );\n  readonly breadcrumbs$ = this.event$.pipe(\n    map((event) => (event ? this.eventEntryBreadcrumbs(event) : undefined))\n  );\n\n  constructor(\n    private organization: OrganizationsService,\n    private issueService: IssuesService,\n    private issuesAPIService: IssuesAPIService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n    super(initialState);\n  }\n\n  retrieveIssue(id: number) {\n    this.setState({ issueLoading: true });\n    return this.issuesAPIService.retrieve(id.toString()).pipe(\n      tap((issue) => this.setIssue(issue)),\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 404) {\n          this.clearIssue();\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  getPreviousEvent() {\n    const state = this.state.getValue();\n    if (state.issue && state.event && state.event.previousEventID) {\n      this.retrieveEvent(state.issue.id, state.event.previousEventID);\n    }\n  }\n\n  getNextEvent() {\n    const state = this.state.getValue();\n    if (state.issue && state.event && state.event.nextEventID) {\n      this.retrieveEvent(state.issue.id, state.event.nextEventID);\n    }\n  }\n\n  getLatestEvent() {\n    const issue = this.state.getValue().issue;\n    if (issue) {\n      return this.retrieveLatestEvent(issue.id);\n    }\n    return EMPTY;\n  }\n\n  getEventByID(eventID: string) {\n    const issue = this.state.getValue().issue;\n    if (issue) {\n      return this.retrieveEvent(issue.id, eventID);\n    }\n    return EMPTY;\n  }\n\n  retrieveTags(id: number, query?: string) {\n    return this.issuesAPIService.retrieveTags(id.toString(), query).pipe(\n      tap((resp) => {\n        this.setTags(resp);\n      })\n    );\n  }\n\n  getReversedFrames() {\n    this.toggleIsReversed();\n  }\n\n  setShowShowMore(value: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      showShowMore: value,\n    });\n  }\n\n  setStatus(status: IssueStatus) {\n    const issue = this.state.getValue().issue;\n    if (issue) {\n      return this.issueService\n        .setStatus(issue.id, status)\n        .pipe(tap((resp) => this.setIssueStatus(resp.status)))\n        .toPromise();\n    }\n    return;\n  }\n\n  deleteIssue(id: string) {\n    this.issuesAPIService\n      .destroy(id)\n      .pipe(\n        withLatestFrom(this.organization.activeOrganizationSlug$),\n        tap(([_, activeOrgSlug]) => {\n          this.snackBar.open(`Issue ${id} has been deleted.`);\n          this.router.navigate([activeOrgSlug, \"issues\"]);\n        }),\n        catchError((_) => {\n          this.snackBar.open(\n            `There was an error deleting this issue. Please try again.`\n          );\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  private tagsWithPercent(tags: IssueTags[]): IssueTagsAdjusted[] | undefined {\n    if (tags.length > 0) {\n      const tagsWithExtraData = tags.map((tag) => {\n        const totalValues = tag.totalValues;\n        const limitedTopValues = tag.topValues.slice(0, 10);\n        const tagWithPercent = limitedTopValues.map((topValue) => {\n          const count = topValue.count;\n          const percent = (count / totalValues) * 100;\n          const percentRounded = Math.round(percent);\n          /** percent is to add up for total percent and percentRounded is for display */\n          return {\n            ...topValue,\n            percentRounded,\n            percent,\n          };\n        });\n        const sumOfPercents = tagWithPercent.reduce(\n          (accum, item) => accum + item.percent,\n          0\n        );\n        if (sumOfPercents < 100) {\n          return {\n            ...tag,\n            topValues: tagWithPercent,\n            other: Math.round(100 - sumOfPercents),\n          };\n        } else {\n          return { ...tag, topValues: tagWithPercent };\n        }\n      });\n\n      return [...tagsWithExtraData];\n    }\n    return;\n  }\n\n  /** Set local state issue state */\n  private setIssueStatus(status: IssueStatus) {\n    const state = this.state.getValue();\n    if (state.issue) {\n      const issue = { ...state.issue, status };\n      this.state.next({ ...state, issue });\n    }\n  }\n\n  private retrieveLatestEvent(issueId: number) {\n    this.setState({ eventLoading: true });\n    return this.issuesAPIService.retrieveLatestEvent(issueId).pipe(\n      tap((event) => this.setEvent(event)),\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 404) {\n          this.clearEvent();\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  // private removed for testing\n  retrieveEvent(issueId: number, eventID: string) {\n    this.setState({ eventLoading: true });\n    return this.issuesAPIService.retrieveEvent(issueId, eventID).pipe(\n      tap((event) => this.setEvent(event)),\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 404) {\n          this.clearEvent();\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  // private removed for testing\n  setIssue(issue: IssueDetail) {\n    this.setState({\n      issue,\n      issueLoading: false,\n      issueInitialLoadComplete: true,\n    });\n  }\n\n  private clearIssue() {\n    this.setState({\n      issue: null,\n      issueLoading: false,\n      issueInitialLoadComplete: true,\n      event: null,\n    });\n  }\n\n  // private removed for testing\n  setEvent(event: EventDetail) {\n    this.setState({\n      event,\n      eventLoading: false,\n      eventInitialLoadComplete: true,\n    });\n  }\n\n  clearEvent() {\n    this.setState({\n      event: null,\n      eventLoading: false,\n      eventInitialLoadComplete: true,\n    });\n  }\n\n  setTags(tags: IssueTags[]) {\n    this.setState({ tags });\n  }\n\n  private toggleIsReversed() {\n    const isReversed = this.state.getValue().isReversed;\n    this.setState({ isReversed: !isReversed });\n  }\n\n  /* Return the message entry type for an event */\n  private eventEntryMessage(event: EventDetail): Message | undefined {\n    const eventMessage = this.getMessageEntryData(event);\n\n    if (eventMessage) {\n      return { ...eventMessage };\n    }\n    return;\n  }\n\n  /* Return the CSP entry type for an event */\n  private eventEntryCSP(event: EventDetail): CSP | undefined {\n    const eventCSP = this.getCspEntryData(event);\n\n    if (eventCSP) {\n      return { ...eventCSP };\n    }\n    return;\n  }\n\n  /* Return the breadcrumbs entry type for an event */\n  private eventEntryBreadcrumbs(\n    event: EventDetail\n  ): BreadcrumbValueData | undefined {\n    const breadcrumbs = this.getBreadcrumbs(event);\n    if (breadcrumbs) {\n      return { ...breadcrumbs };\n    }\n    return;\n  }\n\n  /* Return the request entry type for an event with additional fields parsed from url */\n  private entryRequestData(event: EventDetail): AnnotatedRequest | undefined {\n    const eventRequest = this.getRequestEntryData(event);\n    if (eventRequest) {\n      let urlDomainName = \"\";\n      let urlPath = \"\";\n      try {\n        urlDomainName = new URL(eventRequest.url).hostname;\n        const path = new URL(eventRequest.url).pathname;\n        urlPath = path === \"/\" ? eventRequest.url : path;\n      } catch (_) {\n        urlPath = eventRequest.url;\n      }\n      return { ...eventRequest, domainName: urlDomainName, path: urlPath };\n    }\n    return;\n  }\n\n  /* Reverse frame array, nested in the event object */\n  private reverseFrames(\n    event: EventDetail,\n    isReversed: boolean\n  ): ExceptionValueData | undefined {\n    const eventException = this.getExceptionEntryData(event);\n\n    if (eventException) {\n      if (isReversed) {\n        const reversedFrames = eventException.values.map((value) => {\n          if (value.stacktrace && \"frames\" in value.stacktrace) {\n            const frameReverse = [...value.stacktrace.frames].reverse();\n            return {\n              ...value,\n              stacktrace: { ...value.stacktrace, frames: [...frameReverse] },\n            };\n          }\n          return value;\n        });\n        return {\n          ...eventException,\n          values: reversedFrames,\n        };\n      } else {\n        return { ...eventException };\n      }\n    }\n    return;\n  }\n\n  rawStacktraceValues(event: EventDetail): Values[] | undefined {\n    const platform = event.platform;\n    const eventException = this.getExceptionEntryData(event);\n\n    if (eventException) {\n      const values = eventException.values.map((value) => {\n        if (\n          platform !== \"python\" &&\n          value.stacktrace &&\n          \"frames\" in value.stacktrace\n        ) {\n          const reverseFrames = [...value.stacktrace.frames].reverse();\n          return {\n            ...value,\n            stacktrace: { ...value.stacktrace, frames: reverseFrames },\n          };\n        } else {\n          return { ...value };\n        }\n      });\n      return [...values];\n    }\n    return;\n  }\n\n  /**\n   * For the contexts bar in event detail, find specific contexts and\n   * return array of matching objects to loop through in template.\n   * The order they are return in should always be user, browser, runtime\n   * os, device, gpu\n   */\n  specialContexts(event: EventDetail): AnnotatedContexts[] {\n    const user = event.user;\n    const contexts = event.contexts;\n    const contextsArray: AnnotatedContexts[] = [];\n\n    for (const key in contexts) {\n      if (key) {\n        const contextsObject = contexts[key];\n\n        if (key === \"browser\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"tab\",\n            title:\n              contextsObject.name !== \"Other\"\n                ? (contextsObject.name as string)\n                : \"Unknown Browser\",\n            subtitle: contextsObject.version\n              ? (contextsObject.version as string)\n              : \"Unknown\",\n            key: \"Version\",\n          });\n        }\n        if (key === \"runtime\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"tab\",\n            title:\n              contextsObject.name !== \"Other\"\n                ? (contextsObject.name as string)\n                : \"Unknown Runtime\",\n            subtitle: contextsObject.version\n              ? (contextsObject.version as string)\n              : \"Unknown\",\n            key: \"Version\",\n          });\n        }\n        if (key === \"os\" || key === \"client_os\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"computer\",\n            title:\n              contextsObject.name !== \"Other\"\n                ? (contextsObject.name as string)\n                : \"Unknown Operating System\",\n            subtitle: contextsObject.version\n              ? (contextsObject.version as string)\n              : contextsObject.kernel_version\n              ? (contextsObject.kernel_version as string)\n              : \"Unknown\",\n            key: contextsObject.version\n              ? \"Version\"\n              : contextsObject.kernel_version\n              ? \"Kernel\"\n              : \"Version\",\n          });\n        }\n        if (key === \"device\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.model\n              ? generateIconPath(contextsObject.model as string)\n              : null,\n            matIcon: \"devices_other\",\n            title: contextsObject.model\n              ? (contextsObject.model as string)\n              : \"Unknown Device\",\n            subtitle: contextsObject.arch\n              ? (contextsObject.arch as string)\n              : contextsObject.model_id\n              ? (contextsObject.model_id as string)\n              : null,\n            key: contextsObject.arch\n              ? \"Arch\"\n              : contextsObject.model_id\n              ? \"Model\"\n              : null,\n          });\n        }\n        if (key === \"gpu\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"memory\",\n            title: contextsObject.name\n              ? (contextsObject.name as string)\n              : \"Unknown GPU\",\n            subtitle: contextsObject.vendor_name\n              ? (contextsObject.vendor_name as string)\n              : \"Unknown\",\n            key: \"Vendor\",\n          });\n        }\n      }\n    }\n\n    if (user) {\n      let userTitle = user.email\n        ? user.email\n        : user.ip_address || user.id || user.username;\n      if (!userTitle) {\n        userTitle = \"Unknown User\";\n      }\n      let newKey = \"\";\n      let newSubtitle = \"\";\n      if (user.id && user.id !== userTitle) {\n        newKey = \"ID\";\n        newSubtitle = user.id;\n      } else if (user.username && user.username !== userTitle) {\n        newKey = \"Username\";\n        newSubtitle = user.username;\n      }\n      contextsArray.unshift({\n        type: \"user\",\n        icon: null,\n        matIcon: \"account_circle\",\n        title: userTitle,\n        subtitle: newSubtitle,\n        key: newKey,\n      });\n    }\n\n    return contextsArray;\n  }\n\n  /**\n   * We had some methods above that looked a bit daunting; one way to make them\n   * less daunting was to get the ugly-looking typecasting out of the way.\n   *\n   * So here are a few helper functions that funnel into getEntryData and return\n   * data which is typed the way we want.\n   */\n  private getExceptionEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"exception\") as\n      | ExceptionValueData\n      | undefined;\n  }\n\n  private getMessageEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"message\") as Message | undefined;\n  }\n\n  private getCspEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"csp\") as CSP | undefined;\n  }\n\n  private getRequestEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"request\") as Request | undefined;\n  }\n\n  private getBreadcrumbs(event: EventDetail) {\n    return this.getEntryData(event, \"breadcrumbs\") as\n      | BreadcrumbValueData\n      | undefined;\n  }\n\n  /**\n   * Regardless of what kind of entry it is, we want to return the `data`\n   * property or undefined\n   */\n  private getEntryData(event: EventDetail, entryType: EntryType) {\n    const entries = event.entries.find((entry) => entry.type === entryType);\n    if (!entries) {\n      return undefined;\n    }\n    return entries.data;\n  }\n\n  /** Build event detail url string */\n  private eventUrl(\n    orgSlug: string | null,\n    issue: IssueDetail | null,\n    eventID: string\n  ) {\n    if (orgSlug && issue) {\n      return `/${orgSlug}/issues/${issue.id}/events/${eventID}`;\n    }\n    return null;\n  }\n}\n",
            "properties": [
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail | null",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "eventInitialLoadComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "eventLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isReversed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "issue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueDetail | null",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "issueInitialLoadComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "issueLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "showShowMore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueTags[] | null",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IssueMetadata",
            "id": "interface-IssueMetadata-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "directive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 226
                },
                {
                    "name": "filename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 227
                },
                {
                    "name": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 228
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 229
                },
                {
                    "name": "origin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 230
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 231
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 232
                },
                {
                    "name": "uri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 233
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 234
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IssuesState",
            "id": "interface-IssuesState-88a08b7ac3f1d43002f78b6b79b4982d",
            "file": "src/app/issues/issues.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { combineLatest, Observable, EMPTY } from \"rxjs\";\nimport { tap, catchError, map, take } from \"rxjs/operators\";\nimport { Issue, IssueWithSelected, IssueStatus } from \"./interfaces\";\nimport { IssuesAPIService } from \"../api/issues/issues-api.service\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"../shared/stateful-service/pagination-stateful-service\";\nimport { Environment } from \"../api/organizations/organizations.interface\";\nimport { OrganizationAPIService } from \"../api/organizations/organizations-api.service\";\n\nexport interface IssuesState extends PaginationStatefulServiceState {\n  issues: Issue[];\n  selectedIssues: number[];\n  organizationEnvironments: Environment[];\n  selectedProjectInfo: { orgSlug?: string; projectId?: string; query?: string };\n  areIssuesForProjectSelected: boolean;\n  errors: string[];\n}\n\nconst initialState: IssuesState = {\n  issues: [],\n  selectedIssues: [],\n  pagination: initialPaginationState,\n  organizationEnvironments: [],\n  selectedProjectInfo: {},\n  areIssuesForProjectSelected: false,\n  errors: [],\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IssuesService extends PaginationStatefulService<IssuesState> {\n  issues$ = this.getState$.pipe(map((state) => state.issues));\n  selectedIssues$ = this.getState$.pipe(map((state) => state.selectedIssues));\n  issuesWithSelected$: Observable<IssueWithSelected[]> = combineLatest([\n    this.issues$,\n    this.selectedIssues$,\n  ]).pipe(\n    map(([issues, selectedIssues]) =>\n      issues.map((issue) => ({\n        ...issue,\n        isSelected: selectedIssues.includes(issue.id) ? true : false,\n        projectSlug: issue.project?.slug,\n      }))\n    )\n  );\n  areAllSelected$ = combineLatest([this.issues$, this.selectedIssues$]).pipe(\n    map(\n      ([issues, selectedIssues]) =>\n        issues.length === selectedIssues.length && issues.length > 0\n    )\n  );\n  readonly searchHits$ = this.getState$.pipe(\n    map((state) => state.pagination.hits)\n  );\n  readonly thereAreSelectedIssues$ = this.selectedIssues$.pipe(\n    map((selectedIssues) => selectedIssues.length > 0)\n  );\n  readonly organizationEnvironments$ = this.getState$.pipe(\n    map((data) => data.organizationEnvironments)\n  );\n  readonly numberOfSelectedIssues$ = this.getState$.pipe(\n    map((state) => state.selectedIssues.length)\n  );\n  readonly selectedProjectInfo$ = this.getState$.pipe(\n    map((state) => state.selectedProjectInfo)\n  );\n  readonly errors$ = this.getState$.pipe(map((state) => state.errors));\n  /**\n   * Uses reducer to remove duplicate environments, also converts objects to a\n   * list of names since that's all that the component requires\n   */\n  readonly organizationEnvironmentsProcessed$ = this.organizationEnvironments$.pipe(\n    map((environments) =>\n      environments.reduce(\n        (accumulator, environment) => [\n          ...accumulator,\n          ...(!accumulator.includes(environment.name)\n            ? [environment.name]\n            : []),\n        ],\n        [] as string[]\n      )\n    )\n  );\n\n  constructor(\n    private snackbar: MatSnackBar,\n    private issuesAPIService: IssuesAPIService,\n    private organizationsAPIService: OrganizationAPIService\n  ) {\n    super(initialState);\n  }\n\n  /** Refresh issues data. orgSlug is required. */\n  getIssues(\n    orgSlug: string,\n    cursor: string | undefined,\n    query: string = \"is:unresolved\",\n    project: string[] | null,\n    start: string | undefined,\n    end: string | undefined,\n    sort: string | undefined,\n    environment: string | undefined\n  ) {\n    this.retrieveIssues(\n      orgSlug,\n      cursor,\n      query,\n      project,\n      start,\n      end,\n      sort,\n      environment\n    ).toPromise();\n  }\n\n  getOrganizationEnvironments(orgSlug: string) {\n    return this.retrieveOrganizationEnvironments(orgSlug);\n  }\n\n  toggleSelected(issueId: number) {\n    const state = this.state.getValue();\n    let selectedIssues: number[];\n    if (state.selectedIssues.includes(issueId)) {\n      selectedIssues = state.selectedIssues.filter(\n        (issue) => issue !== issueId\n      );\n    } else {\n      selectedIssues = state.selectedIssues.concat([issueId]);\n    }\n    this.state.next({ ...state, selectedIssues });\n  }\n\n  toggleSelectAll() {\n    const state = this.state.getValue();\n    if (state.issues.length === state.selectedIssues.length) {\n      this.state.next({\n        ...state,\n        selectedIssues: [],\n      });\n      this.clearBulkProjectUpdate();\n    } else {\n      this.state.next({\n        ...state,\n        selectedIssues: state.issues.map((issue) => issue.id),\n      });\n    }\n  }\n\n  /** Set one specified issue ID as status */\n  setStatus(id: number, status: IssueStatus) {\n    return this.updateStatus(status, [id]);\n  }\n\n  /** Set all selected issues to this status */\n  bulkSetStatus(status: IssueStatus) {\n    combineLatest([this.selectedIssues$, this.selectedProjectInfo$])\n      .pipe(\n        take(1),\n        map(([selectedIssues, selectedProjectInfo]) => {\n          return this.updateStatus(\n            status,\n            selectedIssues,\n            selectedProjectInfo.orgSlug,\n            selectedProjectInfo.projectId,\n            selectedProjectInfo.query\n          ).toPromise();\n        })\n      )\n      .subscribe();\n  }\n\n  bulkUpdateIssuesForProject(\n    orgSlug: string,\n    projectId: string,\n    query: string\n  ) {\n    this.setBulkUpdateIssuesForProject(orgSlug, projectId, query);\n  }\n\n  clearProjectInfo() {\n    this.clearBulkProjectUpdate();\n  }\n\n  /** Get issues from backend using appropriate endpoint based on organization */\n  private retrieveIssues(\n    organizationSlug?: string,\n    cursor?: string,\n    query?: string,\n    project?: string[] | null,\n    start?: string,\n    end?: string,\n    sort?: string,\n    environment?: string\n  ) {\n    this.setClearErrors();\n    return this.issuesAPIService\n      .list(\n        organizationSlug,\n        cursor,\n        query,\n        project,\n        start,\n        end,\n        sort,\n        environment\n      )\n      .pipe(\n        tap((res) => {\n          this.setStateAndPagination({ issues: res.body! }, res);\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setIssuesError(err);\n          return EMPTY;\n        })\n      );\n  }\n\n  private updateStatus(\n    status: IssueStatus,\n    ids: number[],\n    orgSlug?: string,\n    projectId?: string,\n    query?: string\n  ) {\n    return this.issuesAPIService\n      .update(status, ids, orgSlug, projectId, query)\n      .pipe(\n        tap((resp) => {\n          this.setIssueStatuses(ids, resp.status);\n          this.clearBulkProjectUpdate();\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.snackbar.open(\"Error, unable to update issue\");\n          return EMPTY;\n        })\n      );\n  }\n\n  private clearBulkProjectUpdate() {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      selectedProjectInfo: {},\n    });\n  }\n\n  private setBulkUpdateIssuesForProject(\n    orgSlug?: string,\n    projectId?: string,\n    query?: string\n  ) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      selectedProjectInfo: { orgSlug, projectId, query },\n    });\n  }\n\n  private setClearErrors() {\n    const state = this.state.getValue();\n    this.setState({\n      errors: [],\n      pagination: { ...state.pagination, loading: false },\n    });\n  }\n\n  private setIssueStatuses(issueIds: number[], status: IssueStatus) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      issues: state.issues.map((issue) =>\n        issueIds.includes(issue.id) ? { ...issue, status } : issue\n      ),\n      selectedIssues: [],\n    });\n  }\n\n  private setIssuesError(errors: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: this.updateErrorMessage(errors),\n      pagination: {\n        ...state.pagination,\n        loading: false,\n        initialLoadComplete: true,\n      },\n    });\n  }\n\n  private retrieveOrganizationEnvironments(orgSlug: string) {\n    return this.organizationsAPIService\n      .retrieveOrganizationEnvironments(orgSlug)\n      .pipe(\n        tap((environments) => {\n          this.setState({ organizationEnvironments: environments });\n        })\n      );\n  }\n\n  private updateErrorMessage(err: HttpErrorResponse): string[] {\n    if (err.error) {\n      const errorValues: string[][] = Object.values<string[]>(err.error);\n      return errorValues.reduce((a, v) => a.concat(v), []);\n    } else {\n      return [err.message];\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "areIssuesForProjectSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "issues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Issue[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "organizationEnvironments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Environment[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedIssues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedProjectInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "PaginationStatefulServiceState"
        },
        {
            "name": "IssueTags",
            "id": "interface-IssueTags-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 317
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 316
                },
                {
                    "name": "topValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TopValue[]",
                    "optional": false,
                    "description": "",
                    "line": 319
                },
                {
                    "name": "totalValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 320
                },
                {
                    "name": "uniqueValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 318
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "IssueTagsAdjusted",
            "id": "interface-IssueTagsAdjusted-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "other",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 331
                },
                {
                    "name": "topValues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TopValueAdjusted[]",
                    "optional": false,
                    "description": "",
                    "line": 332
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "IssueTags"
        },
        {
            "name": "IssueWithSelected",
            "id": "interface-IssueWithSelected-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "isSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 217
                },
                {
                    "name": "projectSlug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 218
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Issue"
        },
        {
            "name": "LoadingStates",
            "id": "interface-LoadingStates-8b96fc17935de9c91dc45f33fda80ad5",
            "file": "src/app/api/emails/email.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, Subject, EMPTY } from \"rxjs\";\nimport { EmailAddress } from \"./email.interfaces\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"../../constants\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\ntype LoadingStateNames =\n  | \"add\"\n  | \"delete\"\n  | \"makePrimary\"\n  | \"resendConfirmation\";\n\ninterface LoadingStates {\n  add: boolean;\n  /**\n   * Theoretically you could be deleting two at once and the UI won't\n   * reflect this. Didn't think it was a 1.0 problem\n   */\n  delete: string | null;\n  /**\n   * If you click one \"Make primary\" button and then another quickly, could\n   * cause problems. Again, didn't think it was a 1.0 problem\n   */\n  makePrimary: string | null;\n  resendConfirmation: string | null;\n}\n\ninterface EmailState {\n  emailAddresses: EmailAddress[];\n  loadingStates: LoadingStates;\n  addEmailError: string;\n}\n\nconst initialState: EmailState = {\n  emailAddresses: [],\n  loadingStates: {\n    add: false,\n    delete: null,\n    makePrimary: null,\n    resendConfirmation: null,\n  },\n  addEmailError: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EmailService {\n  private readonly state = new BehaviorSubject<EmailState>(initialState);\n  readonly resetFormSubject = new Subject();\n  readonly emailAddresses$ = this.state.pipe(\n    map((state) => state.emailAddresses)\n  );\n  readonly loadingStates$ = this.state.pipe(\n    map((state) => state.loadingStates)\n  );\n  readonly addEmailError$ = this.state.pipe(\n    map((state) => state.addEmailError)\n  );\n  /**\n   * A list of the user's email addresses, with primary email on top\n   *\n   * The backend allows multiple emails with isPrimary === true, but the\n   * frontend is not built to accommodate this\n   */\n  readonly emailAddressesSorted$ = this.emailAddresses$.pipe(\n    map((emailAddresses) =>\n      // Sort by boolean https://stackoverflow.com/a/17387454/443457\n      [...emailAddresses].sort((a, b) =>\n        a.isPrimary === b.isPrimary ? 0 : a.isPrimary ? -1 : 1\n      )\n    )\n  );\n\n  private readonly url = baseUrl + \"/users/me/emails/\";\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  retrieveEmailAddresses() {\n    this.getEmailAddresses()\n      .pipe(tap((response: EmailAddress[]) => this.setEmailAddresses(response)))\n      .subscribe();\n  }\n\n  addEmailAddress(email: string) {\n    this.setLoadingAdd();\n    this.postEmailAddress(email)\n      .pipe(\n        tap((response: EmailAddress) => {\n          this.setNewEmailAddress(response);\n          this.resetFormSubject.next();\n          this.resetLoadingAdd();\n          this.setAddEmailError(\"\");\n        }),\n        catchError((error) => {\n          this.resetLoadingAdd();\n          if (error.error?.non_field_errors) {\n            this.setAddEmailError(error.error.non_field_errors.join(\", \"));\n          } else {\n            if (\n              error.status === 500 &&\n              (error.error as string).includes(\n                `'to' parameter is not a valid address`\n              )\n            ) {\n              this.setAddEmailError(\n                \"This is not a valid email address. Please try another one.\"\n              );\n            } else if (error.status === 500) {\n              this\n                .setAddEmailError(`There was a problem. Refresh the page to see if your email is\n                on the list. You may need to try again, or try a different\n                email address.`);\n            } else if (error.status === 400) {\n              this.setAddEmailError(\"There was a problem. Please try again.\");\n            } else {\n              this.setAddEmailError(\"Error: \" + error.statusText);\n            }\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeEmailAddress(email: string) {\n    this.setLoadingDelete(email);\n    this.deleteEmailAddress(email)\n      .pipe(\n        tap((_) => {\n          this.setRemovedEmailAddress(email);\n          this.resetLoadingDelete();\n          this.setSnackbarMessage(\n            `${email} has been removed from your account.`\n          );\n        }),\n        catchError((_) => {\n          this.resetLoadingDelete();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  makeEmailPrimary(email: string) {\n    this.setLoadingMakePrimary(email);\n    this.putEmailAddress(email)\n      .pipe(\n        tap((response) => {\n          this.setNewPrimaryEmail(response);\n          this.resetLoadingMakePrimary();\n          this.setSnackbarMessage(\n            `${email} is now your primary email address.`\n          );\n        }),\n        catchError((error) => {\n          this.resetLoadingMakePrimary();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  resendConfirmation(email: string) {\n    this.setLoadingResend(email);\n    this.sendConfirmation(email)\n      .pipe(\n        tap((_) => {\n          this.resetLoadingResend();\n          this.setSnackbarMessage(\n            `A confirmation email has been sent to ${email}.`\n          );\n        }),\n        catchError((_) => {\n          this.resetLoadingResend();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  setLoadingAdd = () => this.setLoadingState(\"add\");\n  setLoadingDelete = (value: string) => this.setLoadingState(\"delete\", value);\n  setLoadingMakePrimary = (value: string) =>\n    this.setLoadingState(\"makePrimary\", value);\n  setLoadingResend = (value: string) =>\n    this.setLoadingState(\"resendConfirmation\", value);\n\n  resetLoadingAdd = () => this.resetLoadingState(\"add\");\n  resetLoadingDelete = () => this.resetLoadingState(\"delete\");\n  resetLoadingMakePrimary = () => this.resetLoadingState(\"makePrimary\");\n  resetLoadingResend = () => this.resetLoadingState(\"resendConfirmation\");\n\n  private setSnackbarMessage(message: string) {\n    this.snackBar.open(message);\n  }\n\n  private getEmailAddresses() {\n    return this.http.get<EmailAddress[]>(this.url);\n  }\n\n  private postEmailAddress(email: string) {\n    return this.http.post<EmailAddress>(this.url, { email });\n  }\n\n  private deleteEmailAddress(email: string) {\n    // Delete with body, from https://stackoverflow.com/a/40857437/\n    const options = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n      }),\n      body: { email },\n    };\n    return this.http.delete<null>(this.url, options);\n  }\n\n  private putEmailAddress(email: string) {\n    return this.http.put<EmailAddress>(this.url, { email });\n  }\n\n  private sendConfirmation(email: string) {\n    return this.http.post<EmailAddress>(this.url + \"confirm/\", { email });\n  }\n\n  private setEmailAddresses(emailAddresses: EmailAddress[]) {\n    this.state.next({ ...this.state.getValue(), emailAddresses });\n  }\n\n  private setNewEmailAddress(emailAddress: EmailAddress) {\n    const current = this.state.getValue();\n    this.state.next({\n      ...current,\n      emailAddresses: [...current.emailAddresses].concat(emailAddress),\n    });\n  }\n\n  /**\n   * - Make isPrimary false on formerly primary email\n   * - Make isPrimary new on the new primary email, which is done here by\n   *   replacing it with the API response\n   * - Put new primary email up top\n   */\n  private setNewPrimaryEmail(newPrimaryEmail: EmailAddress) {\n    const current = this.state.getValue();\n    const nonPrimaryEmails = [...current.emailAddresses]\n      .filter((email) => email.email !== newPrimaryEmail.email)\n      .map((email) => ({ ...email, isPrimary: false }));\n\n    this.state.next({\n      ...current,\n      emailAddresses: [newPrimaryEmail].concat(nonPrimaryEmails),\n    });\n  }\n\n  private setRemovedEmailAddress(emailToDelete: string) {\n    const current = this.state.getValue();\n    const indexToDelete = current.emailAddresses.findIndex(\n      (email) => email.email === emailToDelete\n    );\n    let emailAddresses = current.emailAddresses;\n    if (indexToDelete > -1) {\n      emailAddresses = current.emailAddresses\n        .slice(0, indexToDelete)\n        .concat(\n          current.emailAddresses.slice(\n            indexToDelete + 1,\n            current.emailAddresses.length\n          )\n        );\n    }\n\n    this.state.next({ ...current, emailAddresses });\n  }\n\n  private setLoadingState(stateToSet: LoadingStateNames, value?: string) {\n    const current = this.state.getValue();\n    const loadingStates = { ...current.loadingStates };\n    if (stateToSet === \"add\") {\n      loadingStates.add = true;\n    } else {\n      if (value) {\n        loadingStates[stateToSet] = value;\n      }\n    }\n\n    this.state.next({ ...current, loadingStates });\n  }\n\n  private resetLoadingState(stateToReset: LoadingStateNames) {\n    const current = this.state.getValue();\n    const loadingStates = { ...current.loadingStates };\n    if (stateToReset === \"add\") {\n      loadingStates.add = false;\n    } else {\n      loadingStates[stateToReset] = null;\n    }\n\n    this.state.next({ ...current, loadingStates });\n  }\n\n  private setAddEmailError = (message: string) => {\n    this.state.next({ ...this.state.getValue(), addEmailError: message });\n  };\n}\n",
            "properties": [
                {
                    "name": "add",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "delete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "<p>Theoretically you could be deleting two at once and the UI won&#39;t\nreflect this. Didn&#39;t think it was a 1.0 problem</p>\n",
                    "line": 21,
                    "rawdescription": "\n\nTheoretically you could be deleting two at once and the UI won't\nreflect this. Didn't think it was a 1.0 problem\n"
                },
                {
                    "name": "makePrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "<p>If you click one &quot;Make primary&quot; button and then another quickly, could\ncause problems. Again, didn&#39;t think it was a 1.0 problem</p>\n",
                    "line": 26,
                    "rawdescription": "\n\nIf you click one \"Make primary\" button and then another quickly, could\ncause problems. Again, didn't think it was a 1.0 problem\n"
                },
                {
                    "name": "resendConfirmation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "LoginResponse",
            "id": "interface-LoginResponse-f305683dbdab4e07185b1676c79c70d7",
            "file": "src/app/login/login.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { StatefulService } from \"../shared/stateful-service/stateful-service\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { ServerError } from \"../shared/django.interfaces\";\nimport { EMPTY } from \"rxjs\";\n\nconst baseUrl = \"/rest-auth\";\n\ntype ValidAuth = \"TOTP\" | \"FIDO2\";\n\ninterface LoginResponse {\n  requires_mfa: boolean;\n  valid_auth: ValidAuth[];\n}\n\ninterface LoginState {\n  loading: boolean;\n  error: ServerError | null;\n  validAuth: ValidAuth[] | null;\n}\n\nconst initialState: LoginState = {\n  loading: false,\n  error: null,\n  validAuth: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoginService extends StatefulService<LoginState> {\n  loading$ = this.getState$.pipe(map((state) => state.loading));\n  error$ = this.getState$.pipe(map((state) => state.error));\n  requiresMFA$ = this.getState$.pipe(map((state) => !!state.validAuth));\n  hasFIDO2$ = this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"FIDO2\"))\n  );\n  hasTOTP$ = this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"TOTP\"))\n  );\n  constructor(private http: HttpClient, private authService: AuthService) {\n    super(initialState);\n  }\n\n  login(email: string, password: string) {\n    const url = baseUrl + \"/login/\";\n    const data = {\n      email,\n      password,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post<LoginResponse>(url, data).pipe(\n      tap((resp) => {\n        if (resp.requires_mfa) {\n          this.setState({ validAuth: resp.valid_auth });\n        } else {\n          this.authService.afterLogin();\n        }\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          error = err.error;\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n\n  authenticateTOTP(code: string) {\n    const url = \"/api/mfa/authenticate/totp/\";\n    const data = {\n      otp: code,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post(url, data).pipe(\n      tap(() => {\n        this.clearState();\n        this.authService.afterLogin();\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          error = { non_field_errors: err.error };\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n\n  authenticateBackupCode(code: string) {\n    const url = \"/api/mfa/authenticate/backup_codes/\";\n    const data = {\n      code: code,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post(url, data).pipe(\n      tap(() => {\n        this.clearState();\n        this.authService.afterLogin();\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          if (err.error.code) {\n            error = err.error;\n            console.log(error);\n          } else {\n            error = { non_field_errors: err.error };\n          }\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "requires_mfa",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "valid_auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidAuth[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "LoginState",
            "id": "interface-LoginState-f305683dbdab4e07185b1676c79c70d7",
            "file": "src/app/login/login.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { StatefulService } from \"../shared/stateful-service/stateful-service\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { ServerError } from \"../shared/django.interfaces\";\nimport { EMPTY } from \"rxjs\";\n\nconst baseUrl = \"/rest-auth\";\n\ntype ValidAuth = \"TOTP\" | \"FIDO2\";\n\ninterface LoginResponse {\n  requires_mfa: boolean;\n  valid_auth: ValidAuth[];\n}\n\ninterface LoginState {\n  loading: boolean;\n  error: ServerError | null;\n  validAuth: ValidAuth[] | null;\n}\n\nconst initialState: LoginState = {\n  loading: false,\n  error: null,\n  validAuth: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoginService extends StatefulService<LoginState> {\n  loading$ = this.getState$.pipe(map((state) => state.loading));\n  error$ = this.getState$.pipe(map((state) => state.error));\n  requiresMFA$ = this.getState$.pipe(map((state) => !!state.validAuth));\n  hasFIDO2$ = this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"FIDO2\"))\n  );\n  hasTOTP$ = this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"TOTP\"))\n  );\n  constructor(private http: HttpClient, private authService: AuthService) {\n    super(initialState);\n  }\n\n  login(email: string, password: string) {\n    const url = baseUrl + \"/login/\";\n    const data = {\n      email,\n      password,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post<LoginResponse>(url, data).pipe(\n      tap((resp) => {\n        if (resp.requires_mfa) {\n          this.setState({ validAuth: resp.valid_auth });\n        } else {\n          this.authService.afterLogin();\n        }\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          error = err.error;\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n\n  authenticateTOTP(code: string) {\n    const url = \"/api/mfa/authenticate/totp/\";\n    const data = {\n      otp: code,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post(url, data).pipe(\n      tap(() => {\n        this.clearState();\n        this.authService.afterLogin();\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          error = { non_field_errors: err.error };\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n\n  authenticateBackupCode(code: string) {\n    const url = \"/api/mfa/authenticate/backup_codes/\";\n    const data = {\n      code: code,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post(url, data).pipe(\n      tap(() => {\n        this.clearState();\n        this.authService.afterLogin();\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          if (err.error.code) {\n            error = err.error;\n            console.log(error);\n          } else {\n            error = { non_field_errors: err.error };\n          }\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerError | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "validAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidAuth[] | null",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "MainNavState",
            "id": "interface-MainNavState-f51baa13d926e1dac52946595d61ac1f",
            "file": "src/app/main-nav/main-nav.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, fromEvent } from \"rxjs\";\nimport { debounceTime, map, tap } from \"rxjs/operators\";\n\ninterface MainNavState {\n  navOpen: boolean;\n  mobileNav: boolean | null;\n}\n\nconst initialState: MainNavState = {\n  navOpen: true,\n  mobileNav: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MainNavService {\n  private readonly state = new BehaviorSubject<MainNavState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n\n  readonly navOpen$ = this.getState$.pipe(map((state) => state.navOpen));\n  readonly mobileNav$ = this.getState$.pipe(map((state) => state.mobileNav));\n\n  constructor(private router: Router) {\n    const tabletSize = 768; // same as $tablet for scss\n\n    if (window.innerWidth < tabletSize) {\n      this.mobileNavSettings();\n    } else {\n      this.desktopNavSettings();\n    }\n\n    this.router.events.subscribe((_) => {\n      if (window.innerWidth < tabletSize) {\n        this.setCloseNav();\n      }\n    });\n\n    fromEvent(window, \"resize\")\n      .pipe(\n        debounceTime(100),\n        tap((_) => {\n          if (window.innerWidth < tabletSize) {\n            this.mobileNavSettings();\n          } else {\n            this.desktopNavSettings();\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  mobileNavSettings() {\n    this.setMobileNav(true);\n    this.setCloseNav();\n  }\n\n  desktopNavSettings() {\n    this.setMobileNav(false);\n    this.setOpenNav();\n  }\n\n  getToggleNav() {\n    this.setToggleNav();\n  }\n\n  getClosedNav() {\n    this.setCloseNav();\n  }\n\n  private setMobileNav(isMobile: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      mobileNav: isMobile,\n    });\n  }\n\n  private setCloseNav() {\n    this.state.next({\n      ...this.state.getValue(),\n      navOpen: false,\n    });\n  }\n\n  private setOpenNav() {\n    this.state.next({\n      ...this.state.getValue(),\n      navOpen: true,\n    });\n  }\n\n  private setToggleNav() {\n    const navOpen = this.state.getValue().navOpen;\n    this.state.next({\n      ...this.state.getValue(),\n      navOpen: !navOpen,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "mobileNav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "navOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Mechanism",
            "id": "interface-Mechanism-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 276
                },
                {
                    "name": "handled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 278
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 277
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Member",
            "id": "interface-Member-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "pending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "roleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "teams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "MemberDetailState",
            "id": "interface-MemberDetailState-537bb05612d81bd094c0a4cf3bc76041",
            "file": "src/app/api/organizations/member-detail.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse, HttpClient } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, combineLatest, EMPTY } from \"rxjs\";\nimport { map, take, exhaustMap, tap, catchError } from \"rxjs/operators\";\nimport { Member } from \"./organizations.interface\";\nimport { OrganizationsService } from \"./organizations.service\";\nimport { baseUrl } from \"src/app/constants\";\n\ninterface MemberDetailState {\n  memberDetail: Member | null;\n  updateMemberError: string;\n  updateMemberLoading: boolean;\n}\n\nconst initialState: MemberDetailState = {\n  memberDetail: null,\n  updateMemberError: \"\",\n  updateMemberLoading: false,\n};\n\n@Injectable({ providedIn: \"root\" })\nexport class MemberDetailService {\n  private readonly url = baseUrl + \"/organizations/\";\n  private readonly state = new BehaviorSubject<MemberDetailState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  readonly memberDetail$ = this.getState$.pipe(\n    map((data) => data.memberDetail)\n  );\n  readonly updateMemberError$ = this.getState$.pipe(\n    map((state) => state.updateMemberError)\n  );\n  readonly updateMemberLoading$ = this.getState$.pipe(\n    map((state) => state.updateMemberLoading)\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private http: HttpClient,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /** Update member teams and/or permissions */\n  updateMember(updatedRole: string) {\n    this.setUpdateMemberLoading(true);\n    return combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.memberDetail$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, memberDetail]) => {\n          const data = {\n            ...memberDetail,\n            role: updatedRole,\n          };\n          const url = `${this.url}${orgSlug}/members/${memberDetail?.id}/`;\n          return this.http.put<Member>(url, data).pipe(\n            tap((resp) => {\n              this.setUpdateMemberLoading(false);\n              this.snackBar.open(\n                `Successfully updated ${resp.email}'s role to ${resp.roleName}`\n              );\n              if (memberDetail) {\n                const newMemberDetail = { ...resp, teams: memberDetail.teams };\n                this.updateMemberDetail(newMemberDetail);\n              }\n            }),\n            catchError((error: HttpErrorResponse) => {\n              this.setUpdateMemberLoading(false);\n              this.setUpdateMemberError(`${error.statusText}: ${error.status}`);\n              return EMPTY;\n            })\n          );\n        })\n      )\n      .toPromise();\n  }\n\n  clearState() {\n    this.state.next(initialState);\n  }\n\n  retrieveMemberDetail(orgSlug: string, memberId: string) {\n    const url = `${this.url}${orgSlug}/members/${memberId}/`;\n    return this.http\n      .get<Member>(url)\n      .pipe(tap((memberDetail) => this.setMemberDetail(memberDetail)));\n  }\n\n  updateMemberDetail(member: Member) {\n    this.setMemberDetail(member);\n  }\n\n  private setUpdateMemberError(errorMessage: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      updateMemberError: errorMessage,\n    });\n  }\n\n  private setUpdateMemberLoading(loading: boolean) {\n    this.state.next({ ...this.state.getValue(), updateMemberLoading: loading });\n  }\n\n  private setMemberDetail(member: Member) {\n    this.state.next({\n      ...this.state.getValue(),\n      memberDetail: member,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "memberDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Member | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "updateMemberError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "updateMemberLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "MemberSelector",
            "id": "interface-MemberSelector-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "isMe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "loadingResendInvite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "sentResendInvite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Member"
        },
        {
            "name": "MembersState",
            "id": "interface-MembersState-d10ff4daebb012fa5ef2edb027bfcb7f",
            "file": "src/app/api/organizations/members.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, EMPTY, combineLatest, Observable } from \"rxjs\";\nimport {\n  mergeMap,\n  map,\n  tap,\n  catchError,\n  exhaustMap,\n  take,\n} from \"rxjs/operators\";\nimport { OrganizationsService } from \"./organizations.service\";\nimport { baseUrl } from \"../../constants\";\nimport { Member, MemberSelector } from \"./organizations.interface\";\nimport { UserService } from \"../user/user.service\";\n\ninterface MembersState {\n  loadingResendInvite: number | null;\n  sentResendInvite: number[];\n}\n\nconst initialState: MembersState = {\n  loadingResendInvite: null,\n  sentResendInvite: [],\n};\n\n@Injectable({ providedIn: \"root\" })\nexport class MembersService {\n  private readonly url = baseUrl + \"/organizations/\";\n  private readonly state = new BehaviorSubject<MembersState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  readonly loadingResendInvite$ = this.getState$.pipe(\n    map((state) => state.loadingResendInvite)\n  );\n  readonly sentResendInvite$ = this.getState$.pipe(\n    map((state) => state.sentResendInvite)\n  );\n  /** Organization members with computed loading/success data */\n  readonly members$: Observable<MemberSelector[]> = combineLatest([\n    this.organizationsService.organizationMembers$,\n    this.loadingResendInvite$,\n    this.sentResendInvite$,\n    this.userService.activeUserEmail$,\n  ]).pipe(\n    map(([members, loadingResendInvite, sentResendInvite, activeUserEmail]) => {\n      return members.map((member) => {\n        return {\n          ...member,\n          loadingResendInvite: member.id === loadingResendInvite ? true : false,\n          sentResendInvite: sentResendInvite.includes(member.id) ? true : false,\n          isMe: member.email === activeUserEmail ? true : false,\n        };\n      });\n    })\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private userService: UserService,\n    private http: HttpClient,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /** Send another invite to already invited org member */\n  resendInvite(memberId: number) {\n    const data = { reinvite: 1 };\n    this.setLoadingResendInvite(memberId);\n    return this.organizationsService.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        mergeMap((orgSlug) =>\n          this.http.put(`${this.url}${orgSlug}/members/${memberId}/`, data)\n        ),\n        tap(() => this.setResendInviteSuccess(memberId)),\n        catchError(() => {\n          this.clearLoadingResendInvite();\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  /** Remove member for active organization. */\n  removeMember(member: Member) {\n    return this.organizationsService.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        exhaustMap((orgSlug) => {\n          return this.http\n            .delete(`${this.url}${orgSlug}/members/${member.id}/`)\n            .pipe(\n              exhaustMap(() => {\n                this.snackBar.open(\n                  `Successfully removed ${member.email} from organization`\n                );\n                if (orgSlug) {\n                  return this.organizationsService.retrieveOrganizationMembers(\n                    orgSlug\n                  );\n                }\n                return EMPTY;\n              }),\n              catchError(() => {\n                this.snackBar.open(\n                  `Error attempting to remove ${member.email} from organization`\n                );\n                return EMPTY;\n              })\n            );\n        })\n      )\n      .toPromise();\n  }\n\n  private setLoadingResendInvite(memberId: number) {\n    this.state.next({\n      ...this.state.getValue(),\n      loadingResendInvite: memberId,\n    });\n  }\n\n  private setResendInviteSuccess(memberId: number) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loadingResendInvite: null,\n      sentResendInvite: [...state.sentResendInvite, memberId],\n    });\n  }\n\n  private clearLoadingResendInvite() {\n    this.state.next({ ...this.state.getValue(), loadingResendInvite: null });\n  }\n}\n",
            "properties": [
                {
                    "name": "loadingResendInvite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "sentResendInvite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Message",
            "id": "interface-Message-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "formatted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 125
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "MFAState",
            "id": "interface-MFAState-d51a590163fdf77027e2174596132b50",
            "file": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { EMPTY } from \"rxjs\";\nimport { catchError, exhaustMap, map, tap } from \"rxjs/operators\";\nimport {\n  BackupCodes,\n  TOTPResponse,\n  UserKey,\n  UserKeysService,\n} from \"src/app/api/mfa/user-keys.service\";\nimport { ServerError } from \"src/app/shared/django.interfaces\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\ninterface MFAState {\n  userKeys: UserKey[];\n  initialLoad: boolean;\n  setupTOTPStage: number;\n  TOTPResponse: TOTPResponse | null;\n  serverError: ServerError;\n  backupCodes: BackupCodes | null;\n  copiedCodes: boolean;\n  /** User has successfully entered one of the backup codes, confirming they have them */\n  enteredCode: boolean;\n}\n\nconst initialState: MFAState = {\n  userKeys: [],\n  initialLoad: false,\n  setupTOTPStage: 1,\n  TOTPResponse: null,\n  serverError: {},\n  backupCodes: null,\n  copiedCodes: false,\n  enteredCode: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MultiFactorAuthService extends StatefulService<MFAState> {\n  initialLoad$ = this.getState$.pipe(map((state) => state.initialLoad));\n  userKeys$ = this.getState$.pipe(map((state) => state.userKeys));\n  TOTPKey$ = this.userKeys$.pipe(\n    map((userKeys) => userKeys.find((key) => key.key_type === \"TOTP\"))\n  );\n  FIDO2Keys$ = this.userKeys$.pipe(\n    map((keys) => keys.filter((key) => key.key_type === \"FIDO2\"))\n  );\n  setupTOTPStage$ = this.getState$.pipe(map((state) => state.setupTOTPStage));\n  totp$ = this.getState$.pipe(map((state) => state.TOTPResponse));\n  serverError$ = this.getState$.pipe(map((state) => state.serverError));\n  backupCodes$ = this.getState$.pipe(map((state) => state.backupCodes));\n  copiedCodes$ = this.getState$.pipe(\n    map((state) => state.backupCodes !== null && state.copiedCodes)\n  );\n  enteredCodeSuccess$ = this.getState$.pipe(\n    map((state) => state.copiedCodes && state.enteredCode)\n  );\n\n  constructor(private api: UserKeysService) {\n    super(initialState);\n  }\n\n  getUserKeys() {\n    return this.api\n      .list()\n      .pipe(tap((userKeys) => this.setState({ userKeys, initialLoad: true })));\n  }\n\n  deleteKey(keyId: number) {\n    return this.api\n      .destroy(keyId.toString())\n      .pipe(exhaustMap(() => this.getUserKeys()));\n  }\n\n  incrementTOTPStage() {\n    const setupTOTPStage = this.state.getValue().setupTOTPStage;\n    if (setupTOTPStage === 1) {\n      this.getTOTP().subscribe();\n      this.getBackupCodes().subscribe();\n    }\n    this.setState({ setupTOTPStage: setupTOTPStage + 1 });\n  }\n\n  decrementTOTPStage() {\n    const setupTOTPStage = this.state.getValue().setupTOTPStage;\n    this.setState({ setupTOTPStage: setupTOTPStage - 1 });\n  }\n\n  enableTOTP(code: string) {\n    const state = this.state.getValue();\n    this.setState({ serverError: {} });\n    if (state.TOTPResponse) {\n      return this.api\n        .totpCreate({\n          answer: code,\n          secret_key: state.TOTPResponse.secret_key,\n        })\n        .pipe(\n          tap(() => {\n            this.clearState();\n            this.getUserKeys().subscribe();\n          }),\n          catchError((err) => {\n            if (err instanceof HttpErrorResponse) {\n              if (err.error) {\n                this.setState({ serverError: err.error });\n              }\n            }\n            return EMPTY;\n          })\n        );\n    }\n    return EMPTY;\n  }\n\n  getTOTP() {\n    return this.api\n      .totp()\n      .pipe(tap((resp) => this.setState({ TOTPResponse: resp })));\n  }\n\n  getBackupCodes() {\n    return this.api.backupCodes().pipe(\n      tap((resp) =>\n        this.setState({\n          backupCodes: resp.codes,\n          copiedCodes: false,\n          enteredCode: false,\n        })\n      )\n    );\n  }\n\n  setCopiedCodes() {\n    this.setState({ copiedCodes: true });\n  }\n\n  verifyBackupCode(code: string) {\n    const state = this.state.getValue();\n    if (state.backupCodes !== null && state.backupCodes.includes(code)) {\n      return this.api\n        .backupCodesCreate({\n          name: \"Backup Codes\",\n          codes: state.backupCodes,\n        })\n        .pipe(\n          tap(() =>\n            this.setState({\n              setupTOTPStage: state.setupTOTPStage + 1,\n              backupCodes: null,\n              serverError: {},\n            })\n          )\n        );\n    } else {\n      this.setState({ serverError: { non_field_errors: [\"Invalid code\"] } });\n    }\n    return EMPTY;\n  }\n}\n",
            "properties": [
                {
                    "name": "backupCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BackupCodes | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "copiedCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "enteredCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>User has successfully entered one of the backup codes, confirming they have them</p>\n",
                    "line": 23,
                    "rawdescription": "\nUser has successfully entered one of the backup codes, confirming they have them"
                },
                {
                    "name": "initialLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "serverError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerError",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "setupTOTPStage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "TOTPResponse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TOTPResponse | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "userKeys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserKey[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "NewAlertRecipient",
            "id": "interface-NewAlertRecipient-f98f56566935cf8eb49c122dfa353927",
            "file": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NewProjectAlert {\n  timespan_minutes: number;\n  quantity: number;\n  alertRecipients: NewAlertRecipient[];\n}\n\nexport interface ProjectAlert extends NewProjectAlert {\n  pk: number;\n  alertRecipients: AlertRecipient[];\n}\n\nexport interface NewAlertRecipient {\n  recipientType: RecipientType;\n  url: string;\n}\n\nexport interface AlertRecipient extends NewAlertRecipient {\n  pk: number;\n}\n\nexport type RecipientType = \"email\" | \"webhook\";\n",
            "properties": [
                {
                    "name": "recipientType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RecipientType",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "NewAlertState",
            "id": "interface-NewAlertState-9ff7f269ccc31b6de9b8cfc490dae1c9",
            "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport {\n  tap,\n  map,\n  mergeMap,\n  take,\n  catchError,\n  exhaustMap,\n} from \"rxjs/operators\";\nimport { OrganizationsService } from \"../../../../api/organizations/organizations.service\";\nimport { ProjectAlertsAPIService } from \"../../../../api/projects/project-alerts/project-alerts.service\";\nimport {\n  AlertRecipient,\n  NewAlertRecipient,\n  NewProjectAlert,\n  ProjectAlert,\n} from \"../../../../api/projects/project-alerts/project-alerts.interface\";\nimport { ProjectSettingsService } from \"../../project-settings.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\ninterface NewAlertState {\n  newAlertOpen: boolean;\n  newProjectAlertRecipients: NewAlertRecipient[] | null;\n  newAlertLoading: boolean;\n  newAlertError: string | null;\n}\n\ninterface RecipientDialogState {\n  recipientError: string | null;\n  recipientDialogOpen: ProjectAlert | boolean;\n  activeAlert: ProjectAlert | null;\n}\n\ninterface ProjectAlertState {\n  initialLoad: boolean;\n  initialLoadError: string | null;\n  projectAlerts: ProjectAlert[] | null;\n  newAlertState: NewAlertState;\n  recipientDialogState: RecipientDialogState;\n  // current alerts\n  removeAlertLoading: number | null;\n  removeAlertError: { error: string; pk: number } | null;\n  updateTimespanQuantityLoading: number | null;\n  updateTimespanQuantityError: { error: string; pk: number } | null;\n  deleteRecipientLoading: number | null;\n}\n\nconst initialNewAlertState = {\n  newAlertOpen: false,\n  newProjectAlertRecipients: null,\n  newAlertLoading: false,\n  newAlertError: null,\n};\n\nconst initialRecipientDialogState = {\n  recipientError: null,\n  recipientDialogOpen: false,\n  activeAlert: null,\n};\n\nconst initialState: ProjectAlertState = {\n  initialLoad: false,\n  initialLoadError: null,\n  projectAlerts: null,\n  newAlertState: initialNewAlertState,\n  recipientDialogState: initialRecipientDialogState,\n  // current alerts\n  removeAlertLoading: null,\n  removeAlertError: null,\n  updateTimespanQuantityLoading: null,\n  updateTimespanQuantityError: null,\n  deleteRecipientLoading: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectAlertsService extends StatefulService<ProjectAlertState> {\n  readonly initialLoad$ = this.getState$.pipe(map((data) => data.initialLoad));\n  readonly initialLoadError$ = this.getState$.pipe(\n    map((data) => data.initialLoadError)\n  );\n  readonly projectAlert$ = this.getState$.pipe(\n    map((data) => data.projectAlerts)\n  );\n\n  /** New Alert */\n  readonly newAlertOpen$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertOpen)\n  );\n  readonly newProjectAlertRecipients$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newProjectAlertRecipients)\n  );\n  readonly newAlertLoading$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertLoading)\n  );\n  readonly newAlertError$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertError)\n  );\n\n  /** Recipient Dialog */\n  readonly recipientError$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientError)\n  );\n  readonly recipientDialogOpen$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientDialogOpen)\n  );\n  readonly activeAlert$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.activeAlert)\n  );\n  readonly emailSelected$ = combineLatest([\n    this.newProjectAlertRecipients$,\n    this.activeAlert$,\n  ]).pipe(\n    map(([newRecipients, activeAlert]) => {\n      if (activeAlert?.pk) {\n        return activeAlert.alertRecipients.some(\n          (data) => data.recipientType === \"email\"\n        );\n      } else if (newRecipients !== null) {\n        return newRecipients.some((data) => data.recipientType === \"email\");\n      }\n      return;\n    })\n  );\n\n  /** Current Alerts */\n  readonly removeAlertLoading$ = this.getState$.pipe(\n    map((data) => data.removeAlertLoading)\n  );\n  readonly removeAlertError$ = this.getState$.pipe(\n    map((data) => data.removeAlertError)\n  );\n  readonly updateTimespanQuantityLoading$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityLoading)\n  );\n  readonly updateTimespanQuantityError$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityError)\n  );\n  readonly deleteRecipientLoading$ = this.getState$.pipe(\n    map((data) => data.deleteRecipientLoading)\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService,\n    private projectAlertsAPIService: ProjectAlertsAPIService,\n    private snackBar: MatSnackBar\n  ) {\n    super(initialState);\n  }\n\n  /** Actions */\n  listProjectAlerts() {\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService.list(orgSlug, projectSlug).pipe(\n              tap((projectAlerts) => {\n                this.setProjectAlertsList(projectAlerts);\n              }),\n              catchError((err: HttpErrorResponse) => {\n                this.setProjectAlertsListError(err);\n                return EMPTY;\n              })\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** New Alert Actions */\n  openNewAlert() {\n    this.setOpenNewAlert();\n  }\n\n  closeNewAlert() {\n    this.setCloseNewAlert();\n  }\n\n  addAlertRecipient(event: NewAlertRecipient) {\n    // Force https:// if no protocol exists\n    if (event.url && !event.url.startsWith(\"http\")) {\n      event.url = \"https://\" + event.url;\n    }\n    combineLatest([this.newProjectAlertRecipients$, this.activeAlert$])\n      .pipe(\n        take(1),\n        exhaustMap(([newRecipients, activeAlert]) => {\n          if (newRecipients !== null) {\n            this.setAddNewAlertRecipient(event);\n          } else if (activeAlert?.alertRecipients !== null) {\n            this.updateAlertRecipient(event);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeNewAlertRecipient(url: string) {\n    this.setRemoveNewAlertRecipient(url);\n  }\n\n  createNewAlert(timeQuantity: { timespan_minutes: number; quantity: number }) {\n    this.setNewAlertLoading();\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n      this.newProjectAlertRecipients$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug, recipients]) => {\n          if (orgSlug && projectSlug && timeQuantity && recipients !== null) {\n            const data: NewProjectAlert = {\n              timespan_minutes: timeQuantity.timespan_minutes,\n              quantity: timeQuantity.quantity,\n              alertRecipients: recipients,\n            };\n            return this.projectAlertsAPIService\n              .create(data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setCreateAlert(resp);\n                  this.snackBar.open(`Success! Your new alert has been added.`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setCreateAlertError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** Update Actions */\n  deleteProjectAlert(pk: number) {\n    this.setDeleteAlertLoading(pk);\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .destroy(pk.toString(), orgSlug, projectSlug)\n              .pipe(\n                tap((_) => {\n                  this.setDeleteProjectAlert(pk);\n                  this.snackBar.open(`Success: Your alert has been deleted`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteAlertError(err, pk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateTimespanQuantity(\n    newTimespan: number,\n    newQuantity: number,\n    id: number,\n    recipients: AlertRecipient[]\n  ) {\n    this.setUpdateTimespanQuantityLoading(id);\n    const data: ProjectAlert = {\n      pk: id,\n      timespan_minutes: newTimespan,\n      quantity: newQuantity,\n      alertRecipients: recipients,\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(id.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateTimespanQuantity(resp);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateTimespanQuantityError(err, id);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateAlertRecipient(newRecipient: NewAlertRecipient) {\n    let activeErrorPk = 0;\n    combineLatest([\n      this.activeAlert$,\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([activeAlert, orgSlug, projectSlug]) => {\n          if (activeAlert && orgSlug && projectSlug) {\n            activeErrorPk = activeAlert.pk;\n            const recipientsWithoutPK: NewAlertRecipient[] = activeAlert.alertRecipients\n              .map((recipient) => {\n                return {\n                  recipientType: recipient.recipientType,\n                  url: recipient.url,\n                };\n              })\n              .concat([newRecipient]);\n            const data = {\n              timespan_minutes: activeAlert.timespan_minutes,\n              quantity: activeAlert.quantity,\n              alertRecipients: recipientsWithoutPK,\n            };\n            return this.projectAlertsAPIService\n              .update(activeAlert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateAlertRecipientsError(err, activeErrorPk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  deleteAlertRecipient(recipientToRemove: AlertRecipient, alert: ProjectAlert) {\n    this.setDeleteRecipientLoading(recipientToRemove.pk);\n    const data = {\n      ...alert,\n      alertRecipients: alert.alertRecipients.filter(\n        (currentRecipient) => currentRecipient.pk !== recipientToRemove.pk\n      ),\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(alert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(\n                    `Success: Your recipient has been deleted`\n                  );\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteRecipientError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  openUpdateRecipientDialog(alert: ProjectAlert) {\n    this.setOpenUpdateRecipientDialog(alert);\n  }\n\n  openCreateRecipientDialog() {\n    this.setOpenCreateRecipientDialog();\n  }\n\n  closeRecipientDialog() {\n    this.setCloseRecipientDialog();\n  }\n\n  /** Set state */\n\n  private setProjectAlertsList(alerts: ProjectAlert[]) {\n    this.setState({\n      projectAlerts: alerts,\n      initialLoad: true,\n      initialLoadError: null,\n    });\n  }\n\n  private setProjectAlertsListError(err: HttpErrorResponse) {\n    this.setState({\n      initialLoad: true,\n      initialLoadError: `There was an error loading your alerts. Try refreshing the page.`,\n    });\n  }\n\n  /** New Alert */\n\n  private setOpenNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: true,\n        newProjectAlertRecipients: [{ recipientType: \"email\", url: \"\" }],\n      },\n    });\n  }\n\n  private setCloseNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: false,\n        newAlertError: null,\n        newProjectAlertRecipients: null,\n      },\n    });\n  }\n\n  private setAddNewAlertRecipient(recipient: NewAlertRecipient) {\n    const newAlertState = this.state.getValue().newAlertState;\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.concat([recipient]) ?? null,\n      },\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n      },\n    });\n  }\n\n  private setRemoveNewAlertRecipient(url: string) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.filter(\n            (recipient) => recipient.url !== url\n          ) ?? null,\n      },\n    });\n  }\n\n  private setNewAlertLoading() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertLoading: true,\n      },\n    });\n  }\n\n  private setCreateAlert(alert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: state.projectAlerts?.concat([alert]),\n      newAlertState: initialNewAlertState,\n    });\n  }\n\n  private setCreateAlertError(error: HttpErrorResponse) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertError: `${error.statusText} : ${error.status}`,\n        newAlertLoading: false,\n      },\n    });\n  }\n\n  private setOpenCreateRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  /** Recipient Dialog */\n\n  private setCloseRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setOpenUpdateRecipientDialog(alert: ProjectAlert) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: alert,\n      },\n    });\n  }\n\n  /** Alert Updates */\n\n  private setDeleteAlertLoading(pk: number) {\n    this.setState({\n      removeAlertLoading: pk,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteProjectAlert(pk: number) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts:\n        state.projectAlerts?.filter((alert) => alert.pk !== pk) ?? null,\n      removeAlertLoading: null,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteAlertError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      removeAlertError: {\n        ...state.removeAlertError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n      removeAlertLoading: null,\n    });\n  }\n\n  private setUpdateTimespanQuantity(updatedAlert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: this.findAndReplaceAlert(\n        state.projectAlerts,\n        updatedAlert\n      ),\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityLoading(pk: number) {\n    this.setState({\n      updateTimespanQuantityLoading: pk,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: {\n        ...state.updateTimespanQuantityError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipientsError(err: HttpErrorResponse, id: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipients(recipients: AlertRecipient[], id: number) {\n    const state = this.state.getValue();\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      projectAlerts: state.projectAlerts?.map((alert) =>\n        alert.pk === id ? { ...alert, alertRecipients: recipients } : alert\n      ),\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n      deleteRecipientLoading: null,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientLoading(pk: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n      },\n      deleteRecipientLoading: pk,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientError(err: HttpErrorResponse) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n      },\n      deleteRecipientLoading: null,\n    });\n  }\n\n  /** Utility Functions */\n\n  findAndReplaceAlert(\n    currentAlerts: ProjectAlert[] | null,\n    newAlert: ProjectAlert\n  ): ProjectAlert[] | null {\n    const updatedAlert = currentAlerts?.map((alert) => {\n      if (alert.pk === newAlert.pk) {\n        return {\n          ...alert,\n          timespan_minutes: newAlert.timespan_minutes,\n          quantity: newAlert.quantity,\n        };\n      } else return alert;\n    });\n    return updatedAlert !== undefined ? updatedAlert : null;\n  }\n}\n",
            "properties": [
                {
                    "name": "newAlertError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "newAlertLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "newAlertOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "newProjectAlertRecipients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NewAlertRecipient[] | null",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "NewAPIToken",
            "id": "interface-NewAPIToken-00ac36a6fb722fa0e47d4d8c7b21f5a9",
            "file": "src/app/api/api-tokens/api-tokens.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NewAPIToken {\n  scopes: string[];\n  label: string;\n}\n\nexport interface APIToken extends NewAPIToken {\n  dateCreated: string;\n  token: string;\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "scopes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "NewProjectAlert",
            "id": "interface-NewProjectAlert-f98f56566935cf8eb49c122dfa353927",
            "file": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NewProjectAlert {\n  timespan_minutes: number;\n  quantity: number;\n  alertRecipients: NewAlertRecipient[];\n}\n\nexport interface ProjectAlert extends NewProjectAlert {\n  pk: number;\n  alertRecipients: AlertRecipient[];\n}\n\nexport interface NewAlertRecipient {\n  recipientType: RecipientType;\n  url: string;\n}\n\nexport interface AlertRecipient extends NewAlertRecipient {\n  pk: number;\n}\n\nexport type RecipientType = \"email\" | \"webhook\";\n",
            "properties": [
                {
                    "name": "alertRecipients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NewAlertRecipient[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "timespan_minutes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "NotificationsState",
            "id": "interface-NotificationsState-6e8327a76a8211d0c848ae8efe475405",
            "file": "src/app/profile/notifications/notifications.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, EMPTY, combineLatest } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"src/app/constants\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ProjectsService } from \"src/app/projects/projects.service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport {\n  GroupedProjects,\n  ProjectError,\n  ProjectWithAlertStatus,\n  NotificationStatus,\n  ProjectAlerts,\n  SubscribeByDefault,\n} from \"./notifications.interface\";\n\ninterface NotificationsState {\n  projectViewExpanded: boolean;\n  subscribeByDefault: boolean;\n  subscribeByDefaultLoading: boolean;\n  subscribeByDefaultError: string;\n  groupedProjects: GroupedProjects;\n  projectAlertLoading: string;\n  projectAlertError: ProjectError;\n}\n\nconst initialState: NotificationsState = {\n  projectViewExpanded: false,\n  subscribeByDefault: true,\n  subscribeByDefaultLoading: false,\n  subscribeByDefaultError: \"\",\n  groupedProjects: [],\n  projectAlertLoading: \"\",\n  projectAlertError: { error: \"\", id: \"\" },\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationsService {\n  private readonly notificationsState = new BehaviorSubject<NotificationsState>(\n    initialState\n  );\n  private readonly getState$ = this.notificationsState.asObservable();\n  private readonly url = `${baseUrl}/users/me/notifications/`;\n  readonly subscribeByDefault$ = this.getState$.pipe(\n    map((data) => data.subscribeByDefault)\n  );\n  readonly projectViewExpanded$ = this.getState$.pipe(\n    map((data) => data.projectViewExpanded)\n  );\n  readonly subscribeByDefaultLoading$ = this.getState$.pipe(\n    map((data) => data.subscribeByDefaultLoading)\n  );\n  readonly subscribeByDefaultError$ = this.getState$.pipe(\n    map((data) => data.subscribeByDefaultError)\n  );\n  readonly groupedProjects$ = this.getState$.pipe(\n    map((data) => data.groupedProjects)\n  );\n  readonly projectAlertLoading$ = this.getState$.pipe(\n    map((data) => data.projectAlertLoading)\n  );\n  readonly projectAlertsError$ = this.getState$.pipe(\n    map((data) => data.projectAlertError)\n  );\n\n  constructor(\n    private projectsService: ProjectsService,\n    private http: HttpClient\n  ) {}\n\n  subscribeToEndpoints() {\n    this.notificationsList();\n    this.retrieveUserAlertSettings();\n    this.projectsService.retrieveProjects();\n  }\n\n  notificationsList() {\n    return this.http\n      .get<SubscribeByDefault>(this.url)\n      .pipe(tap((resp) => this.setSubscribeByDefault(resp.subscribeByDefault)))\n      .toPromise();\n  }\n\n  alertsList() {\n    return this.http.get<ProjectAlerts>(`${this.url}alerts/`);\n  }\n\n  retrieveUserAlertSettings() {\n    combineLatest([this.alertsList(), this.projectsService.projects$])\n      .pipe(\n        map(([projectAlerts, projects]) => {\n          if (projects) {\n            const projectsWithAlerts = projects.map((project) => {\n              const matchingId = Object.keys(projectAlerts).find(\n                (element) => element === project.id\n              );\n              return {\n                ...project,\n                alertStatus: matchingId ? projectAlerts[matchingId] : -1,\n              };\n            });\n            this.groupProjectsByOrg(projectsWithAlerts);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  groupProjectsByOrg(projects: ProjectWithAlertStatus[]) {\n    const groupedProjects = projects.reduce(\n      (r: GroupedProjects, a: ProjectWithAlertStatus) => {\n        r[a.organization.id] = [...(r[a.organization.id] || []), a];\n        return r;\n      },\n      {}\n    );\n    this.setGroupedProjects(groupedProjects);\n  }\n\n  alertsUpdate(projectId: string, status: NotificationStatus) {\n    const data: ProjectAlerts = {\n      [projectId]: status,\n    };\n    this.setProjectAlertLoading(projectId);\n    return this.http\n      .put<ProjectAlerts>(`${this.url}alerts/`, data)\n      .pipe(\n        tap((_) => {\n          this.retrieveUserAlertSettings();\n          this.setProjectAlertLoading(\"\");\n        }),\n        catchError((error) => {\n          if (error) {\n            this.setProjectAlertLoading(\"\");\n            this.setProjectAlertError(this.error(error), projectId);\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  notificationsUpdate(subscribe: boolean) {\n    const data = { subscribeByDefault: subscribe };\n    this.setSubscribeByDefaultLoading(true);\n    return this.http\n      .put<SubscribeByDefault>(this.url, data)\n      .pipe(\n        tap((resp) => {\n          this.setSubscribeByDefaultLoading(false);\n          this.setSubscribeByDefault(resp.subscribeByDefault);\n        }),\n        catchError((error) => {\n          if (error) {\n            this.setSubscribeByDefaultLoading(false);\n            this.setSubscribeByDefaultError(this.error(error));\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  error(error: HttpErrorResponse): string {\n    return `${error.name}: ${error.statusText}`;\n  }\n\n  toggleProjectView() {\n    this.setToggleProjectView();\n  }\n\n  private setSubscribeByDefault(subscribe: boolean) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      subscribeByDefault: subscribe,\n    });\n  }\n\n  private setToggleProjectView() {\n    const projectViewExpanded = this.notificationsState.getValue()\n      .projectViewExpanded;\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      projectViewExpanded: !projectViewExpanded,\n    });\n  }\n\n  private setSubscribeByDefaultError(error: string) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      subscribeByDefaultError: error,\n    });\n  }\n\n  private setSubscribeByDefaultLoading(loading: boolean) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      subscribeByDefaultLoading: loading,\n    });\n  }\n\n  private setProjectAlertLoading(projectId: string) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      projectAlertLoading: projectId,\n    });\n  }\n\n  private setProjectAlertError(error: string, id: string) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      projectAlertError: { error, id },\n    });\n  }\n\n  private setGroupedProjects(projects: GroupedProjects) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      groupedProjects: projects,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "groupedProjects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GroupedProjects",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "projectAlertError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectError",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "projectAlertLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "projectViewExpanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subscribeByDefault",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "subscribeByDefaultError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "subscribeByDefaultLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OAuthConfig",
            "id": "interface-OAuthConfig-159ebac818eef31f3e1c4f785df47152",
            "file": "src/app/api/oauth/oauth.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type OAuthProvider = \"google\" | \"gitlab\" | \"github\" | \"microsoft\";\n\nexport interface OAuthConfig {\n  loginURL: string;\n  scope: string;\n  name: OAuthProvider;\n}\n",
            "properties": [
                {
                    "name": "loginURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OAuthProvider",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "scope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Organization",
            "id": "interface-Organization-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Avatar",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isAcceptingEvents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isEarlyAdopter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "require2FA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrgStatus",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "OrganizationNew"
        },
        {
            "name": "OrganizationDetail",
            "id": "interface-OrganizationDetail-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationProject[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "teams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Team[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Organization"
        },
        {
            "name": "OrganizationErrors",
            "id": "interface-OrganizationErrors-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "addOrganizationMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "addTeamMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "removeTeamMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OrganizationLoading",
            "id": "interface-OrganizationLoading-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "addOrganizationMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "addTeamMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "removeTeamMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OrganizationMembersRequest",
            "id": "interface-OrganizationMembersRequest-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MemberRole",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "teams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OrganizationNew",
            "id": "interface-OrganizationNew-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OrganizationProject",
            "id": "interface-OrganizationProject-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "isMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "platform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OrganizationsState",
            "id": "interface-OrganizationsState-edb87359febe29d7da1a1ea9ea767be0",
            "file": "src/app/api/organizations/organizations.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport {\n  Router,\n  RoutesRecognized,\n  ActivatedRoute,\n  NavigationStart,\n} from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, combineLatest, Observable, EMPTY } from \"rxjs\";\nimport {\n  map,\n  withLatestFrom,\n  filter,\n  distinctUntilChanged,\n  catchError,\n  take,\n  mergeMap,\n  takeWhile,\n  distinct,\n  tap,\n  first,\n} from \"rxjs/operators\";\nimport { baseUrl } from \"../../constants\";\nimport {\n  Organization,\n  OrganizationDetail,\n  Member,\n  OrganizationMembersRequest,\n  MemberRole,\n  OrganizationErrors,\n  OrganizationLoading,\n} from \"./organizations.interface\";\nimport { SettingsService } from \"../settings.service\";\nimport { SubscriptionsService } from \"../subscriptions/subscriptions.service\";\nimport { TeamsService } from \"../teams/teams.service\";\nimport { Team } from \"../teams/teams.interfaces\";\nimport { OrganizationAPIService } from \"./organizations-api.service\";\n\ninterface OrganizationsState {\n  organizations: Organization[];\n  activeOrganizationId: number | null;\n  activeOrganization: OrganizationDetail | null;\n  organizationMembers: Member[];\n  organizationTeams: Team[];\n  errors: OrganizationErrors;\n  loading: OrganizationLoading;\n  /** Has organizations loaded the first time? */\n  initialLoad: boolean;\n}\n\nconst initialState: OrganizationsState = {\n  organizations: [],\n  activeOrganizationId: null,\n  activeOrganization: null,\n  organizationMembers: [],\n  organizationTeams: [],\n  errors: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: \"\",\n  },\n  loading: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: false,\n  },\n  initialLoad: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationsService {\n  private readonly organizationsState = new BehaviorSubject<OrganizationsState>(\n    initialState\n  );\n  private readonly getState$ = this.organizationsState.asObservable();\n  private readonly url = baseUrl + \"/organizations/\";\n  private routeParams?: { [key: string]: string };\n  initialLoad$ = this.getState$.pipe(\n    map((data) => data.initialLoad),\n    distinct()\n  );\n\n  readonly organizations$ = this.getState$.pipe(\n    map((data) => data.organizations),\n    distinct()\n  );\n  readonly organizationCount$ = this.organizations$.pipe(\n    map((organizations) => organizations.length)\n  );\n  readonly activeOrganizationId$ = this.getState$.pipe(\n    map((data) => data.activeOrganizationId)\n  );\n  readonly activeOrganization$ = this.getState$.pipe(\n    map((data) => data.activeOrganization)\n  );\n  readonly activeOrganizationLoaded$ = this.getState$.pipe(\n    map((data) => !!data.activeOrganization)\n  );\n  readonly organizationMembers$ = this.getState$.pipe(\n    map((data) => data.organizationMembers)\n  );\n  readonly activeOrganizationProjects$ = this.activeOrganization$.pipe(\n    map((data) => (data ? data.projects : null))\n  );\n  readonly orgHasAProject$ = this.activeOrganizationProjects$.pipe(\n    map((projects) => !!projects && projects.length > 0)\n  );\n  readonly projectsCount$ = this.activeOrganizationProjects$.pipe(\n    map((projects) => {\n      if (!projects) {\n        return 0;\n      }\n      return projects.length;\n    })\n  );\n  readonly activeOrganizationDetail$ = combineLatest([\n    this.organizations$,\n    this.activeOrganizationId$,\n  ]).pipe(\n    map(([organizations, activeOrganization]) =>\n      organizations.find(\n        (organization) => organization.id === activeOrganization\n      )\n    )\n  );\n  readonly activeOrganizationSlug$ = combineLatest([\n    this.organizations$,\n    this.activeOrganizationId$,\n  ]).pipe(\n    map(([orgs, id]) => {\n      const activeOrg = orgs.find((org) => org.id === id);\n      if (activeOrg) {\n        return activeOrg.slug;\n      }\n      return null;\n    }),\n    distinct()\n  );\n\n  readonly filteredAddTeamMembers$ = combineLatest([\n    this.organizationMembers$,\n    this.teamsService.teamMembers$,\n  ]).pipe(\n    map(([organizationMembers, teamMembers]) => {\n      return organizationMembers.filter(\n        (orgMembers) =>\n          !teamMembers.find((teamMems) => orgMembers.id === teamMems.id)\n      );\n    })\n  );\n  readonly organizationTeams$ = this.getState$.pipe(\n    map((data) => data.organizationTeams)\n  );\n  readonly selectedOrganizationTeams$ = this.organizationTeams$.pipe(\n    map((data) => data)\n  );\n\n  readonly filteredOrganizationTeams$ = this.organizationTeams$.pipe(\n    withLatestFrom(this.selectedOrganizationTeams$),\n    filter(([orgTeams, selectedOrgTeams]) => orgTeams === selectedOrgTeams)\n  );\n\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n  readonly loading$ = this.getState$.pipe(map((data) => data.loading));\n  /**\n   * Lots of kinds of router events; this isolates a specific kind in a tidy\n   * and TypeScript-friendly way.\n   */\n  readonly navigationStart$ = this.router.events.pipe(\n    filter((event) => event instanceof NavigationStart)\n  ) as Observable<NavigationStart>;\n\n  /**\n   * Lots of kinds of router events; this isolates a specific kind in a tidy\n   * and TypeScript-friendly way.\n   */\n  readonly routesRecognized$ = this.router.events.pipe(\n    filter((event) => event instanceof RoutesRecognized)\n  ) as Observable<RoutesRecognized>;\n\n  readonly routeParams$ = this.routesRecognized$.pipe(\n    map((event) => event.state.root.firstChild?.params)\n  );\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute,\n    private organizationAPIService: OrganizationAPIService,\n    private snackBar: MatSnackBar,\n    private settingsService: SettingsService,\n    private subscriptionsService: SubscriptionsService,\n    private teamsService: TeamsService\n  ) {\n    this.routeParams$.subscribe((params) => (this.routeParams = params));\n\n    // When billing is enabled, check if active org has subscription\n    combineLatest([\n      this.settingsService.billingEnabled$,\n      this.activeOrganization$,\n    ])\n      .pipe(\n        filter(\n          ([billingEnabled, activeOrganization]) =>\n            billingEnabled && !!activeOrganization\n        ),\n        distinctUntilChanged((a, b) => a[1]?.id === b[1]?.id),\n        tap(([_, activeOrganization]) => {\n          this.subscriptionsService.checkIfUserHasSubscription(\n            activeOrganization!.slug\n          );\n        })\n      )\n      .subscribe();\n\n    this.activeOrganizationId$\n      .pipe(\n        filter((id) => id !== null),\n        distinctUntilChanged(),\n        withLatestFrom(this.organizations$),\n        map(([id, orgs]) => orgs.find((org) => org.id === id)),\n        filter((org) => org !== undefined),\n        map((org) => org!.slug),\n        tap((slug) => this.getOrganizationDetail(slug).toPromise())\n      )\n      .subscribe();\n  }\n\n  createOrganization(name: string) {\n    const data = {\n      name,\n    };\n    return this.organizationAPIService.create(data).pipe(\n      tap((organization) => {\n        this.retrieveOrganizations()\n          .pipe(\n            tap(() => {\n              this.setActiveOrganizationId(organization.id);\n            })\n          )\n          .toPromise();\n      })\n    );\n  }\n\n  retrieveOrganizations() {\n    return this.organizationAPIService.list().pipe(\n      tap((organizations) => this.setOrganizations(organizations)),\n      withLatestFrom(this.activeOrganizationId$),\n      tap(([organizations, activeOrgId]) => {\n        if (activeOrgId === null && organizations.length) {\n          let activeOrg: Organization | undefined;\n          if (this.routeParams) {\n            activeOrg = organizations.find(\n              (org) =>\n                org.slug ===\n                (this.routeParams ? this.routeParams[\"org-slug\"] : null)\n            );\n          }\n          if (activeOrg) {\n            this.changeActiveOrganization(activeOrg.id);\n          } else {\n            // Set default org\n            this.changeActiveOrganization(organizations[0].id);\n          }\n        }\n      })\n    );\n  }\n\n  /**\n   * Change the active organization and if necessary\n   * Update the route to reflect the organization slug update\n   */\n  changeActiveOrganization(activeOrganizationId: number) {\n    this.setActiveOrganizationId(activeOrganizationId);\n    this.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        filter((slug) => slug !== null),\n        tap((slug) => {\n          const firstChild = this.route.snapshot.firstChild;\n          if (\n            this.routeParams &&\n            this.routeParams[\"org-slug\"] &&\n            slug !== this.routeParams[\"org-slug\"] &&\n            firstChild\n          ) {\n            if (\n              firstChild.firstChild?.url &&\n              firstChild.firstChild.url.length >= 1\n            ) {\n              this.router.navigate([slug, firstChild.firstChild.url[0].path]);\n            } else {\n              this.router.navigate([slug]);\n            }\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  /**\n   * Set active organization when a route change is observed\n   * @slug organization slug as seen by the router\n   *\n   * Active organization can be set in state even in pages that don't have the organization slug,\n   * for example the profile page.\n   * However some pages have the organization slug in the route params. When this changes, whether by back button\n   * or client side routing, the active org should change.\n   * This function needs called when any such event happens.\n   */\n  setActiveOrganizationFromRouteChange(slug: string) {\n    combineLatest([this.organizations$, this.initialLoad$])\n      .pipe(\n        takeWhile(([_, initialLoad]) => initialLoad === false, true),\n        filter(([_, initialLoad]) => initialLoad),\n        map(([organizations, _]) =>\n          organizations.find((organization) => organization.slug === slug)\n        ),\n        filter((organization) => organization !== undefined),\n        tap((organization) => {\n          this.setActiveOrganizationId(organization!.id);\n        })\n      )\n      .subscribe();\n  }\n\n  updateOrganization(orgName: string) {\n    const data = { name: orgName };\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    if (orgSlug) {\n      return this.organizationAPIService.update(orgSlug, data).pipe(\n        tap((resp) => {\n          this.setActiveOrganizationId(resp.id);\n          this.updateOrgName(resp);\n        })\n      );\n    }\n    return EMPTY;\n  }\n\n  /** Delete organization: route to home page */\n  deleteOrganization(slug: string) {\n    return this.organizationAPIService.destroy(slug).pipe(\n      tap((_) => this.removeOrganization(slug)),\n      withLatestFrom(this.organizations$),\n      tap(([_, organizations]) => {\n        if (organizations) {\n          if (organizations.length) {\n            this.setActiveOrganizationId(organizations[0].id);\n          }\n          this.router.navigate([\"\"]);\n        }\n      })\n    );\n  }\n\n  /** When you need updated information on the active org */\n  refreshOrganizationDetail() {\n    return this.activeOrganizationSlug$.pipe(\n      first(),\n      filter((orgSlug) => !!orgSlug),\n      mergeMap((orgSlug) => this.getOrganizationDetail(orgSlug!))\n    );\n  }\n\n  retrieveOrganizationMembers(orgSlug: string) {\n    return this.http.get<Member[]>(`${this.url}${orgSlug}/members/`).pipe(\n      tap((members) => {\n        this.setActiveOrganizationMembers(members);\n      })\n    );\n  }\n\n  /** Invite a user via email to join an organization */\n  inviteOrganizationMembers(\n    emailInput: string,\n    teamsInput: string[],\n    roleInput: MemberRole\n  ) {\n    const data: OrganizationMembersRequest = {\n      email: emailInput,\n      role: roleInput,\n      teams: teamsInput,\n    };\n    return this.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        mergeMap((orgSlug) =>\n          this.http\n            .post<Member>(`${this.url}${orgSlug}/members/`, data)\n            .pipe(map((response) => ({ response, orgSlug })))\n        ),\n        tap(({ response, orgSlug }) => {\n          this.setAddMemberLoading(false);\n          this.snackBar.open(\n            `An email invite has been sent to ${response.email}`\n          );\n          this.router.navigate([orgSlug, \"settings\", \"members\"]);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          if (error.error?.detail) {\n            this.setAddMemberError(error.error?.detail);\n          } else {\n            this.setAddMemberError(`${error.statusText}: ${error.status}`);\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  retrieveOrganizationTeams(orgSlug: string) {\n    const url = `${this.url}${orgSlug}/teams/`;\n    return this.http\n      .get<Team[]>(url)\n      .pipe(\n        tap((resp) => {\n          this.getOrganizationTeams(resp);\n        })\n      )\n      .toPromise();\n  }\n\n  createTeam(teamSlug: string, orgSlug: string) {\n    const data = {\n      slug: teamSlug,\n    };\n    return this.http.post<Team>(`${this.url}${orgSlug}/teams/`, data).pipe(\n      tap((team) => {\n        this.refreshOrganizationDetail().subscribe();\n        this.teamsService.addTeam(team);\n      })\n    );\n  }\n\n  addTeamMember(\n    member: Member,\n    orgSlug: string | undefined,\n    teamSlug: string | undefined\n  ) {\n    const url = `${this.url}${orgSlug}/members/${member.id}/teams/${teamSlug}/`;\n    return this.http.post<Team>(url, member).pipe(\n      tap((team: Team) => {\n        if (orgSlug) {\n          this.teamsService.retrieveTeamMembers(orgSlug, team.slug).toPromise();\n          this.retrieveOrganizationMembers(orgSlug).toPromise();\n        }\n      })\n    );\n  }\n\n  removeTeamMember(memberId: number, teamSlug: string) {\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    const url = `${this.url}${orgSlug}/members/${memberId}/teams/${teamSlug}/`;\n    return this.http.delete<Team>(url).pipe(\n      tap(() => {\n        this.teamsService.removeMember(memberId);\n      })\n    );\n  }\n\n  leaveTeam(team: string) {\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    const url = `${this.url}${orgSlug}/members/me/teams/${team}/`;\n    this.setLeaveTeamLoading(team);\n    return this.http.delete<Team>(url).pipe(\n      tap((resp) => {\n        this.snackBar.open(`You have left ${resp.slug}`);\n        this.setTeamsView(resp.slug, resp.isMember, resp.memberCount);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setLeaveTeamError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  joinTeam(team: string) {\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    const url = `${this.url}${orgSlug}/members/me/teams/${team}/`;\n    this.setJoinTeamLoading(team);\n    return this.http.post<Team>(url, null).pipe(\n      tap((resp) => {\n        this.snackBar.open(`You joined ${resp.slug}`);\n        this.setTeamsView(resp.slug, resp.isMember, resp.memberCount);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setJoinTeamError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  deleteTeam(slug: string) {\n    this.updateTeamsView(slug);\n  }\n\n  updateTeam(id: number, newSlug: string) {\n    this.updateTeamSlug(id, newSlug);\n  }\n\n  clearErrorState() {\n    this.setInitialErrorState();\n  }\n\n  private setInitialErrorState() {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: initialState.errors,\n    });\n  }\n\n  private setLeaveTeamLoading(team: string) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        removeTeamMember: team,\n      },\n    });\n  }\n\n  private setJoinTeamLoading(team: string) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        addTeamMember: team,\n      },\n    });\n  }\n\n  private setAddMemberLoading(loading: boolean) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        addOrganizationMember: loading,\n      },\n    });\n  }\n\n  private setAddMemberError(error: string) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        addOrganizationMember: error,\n      },\n      loading: {\n        ...state.loading,\n        addOrganizationMember: false,\n      },\n    });\n  }\n\n  private setLeaveTeamError(error: HttpErrorResponse) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        removeTeamMember: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        removeTeamMember: \"\",\n      },\n    });\n  }\n\n  private setJoinTeamError(error: HttpErrorResponse) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        addTeamMember: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        addTeamMember: \"\",\n      },\n    });\n  }\n\n  private setOrganizations(organizations: Organization[]) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      organizations,\n      initialLoad: true,\n    });\n  }\n\n  private updateOrgName(orgName: Organization) {\n    const state = this.organizationsState.getValue();\n    if (state.organizations) {\n      this.organizationsState.next({\n        ...state,\n        organizations: state.organizations.map((organization) =>\n          orgName.id === organization.id\n            ? { ...organization, name: orgName.name }\n            : organization\n        ),\n      });\n    }\n  }\n\n  private setActiveOrganizationId(activeOrganizationId: number) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      activeOrganizationId,\n    });\n  }\n\n  private setActiveOrganization(organization: OrganizationDetail) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      activeOrganization: organization,\n    });\n  }\n\n  private removeOrganization(orgSlug: string) {\n    const filteredOrgs = this.organizationsState\n      .getValue()\n      .organizations.filter((organization) => organization.slug !== orgSlug);\n    if (filteredOrgs) {\n      this.organizationsState.next({\n        ...this.organizationsState.getValue(),\n        organizations: filteredOrgs,\n      });\n    }\n  }\n\n  private setActiveOrganizationMembers(members: Member[]) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      organizationMembers: members,\n    });\n  }\n\n  private getOrganizationTeams(teams: Team[]) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      organizationTeams: teams,\n    });\n  }\n\n  private setTeamsView(teamSlug: string, member: boolean, members: number) {\n    const state = this.organizationsState.getValue();\n    if (state.activeOrganization?.teams) {\n      this.organizationsState.next({\n        ...state,\n        activeOrganization: {\n          ...state.activeOrganization,\n          teams: state.activeOrganization?.teams.map((team) =>\n            team.slug === teamSlug\n              ? { ...team, isMember: member, memberCount: members }\n              : team\n          ),\n        },\n        loading: {\n          ...state.loading,\n          addTeamMember: \"\",\n          removeTeamMember: \"\",\n        },\n      });\n    }\n  }\n\n  private updateTeamsView(slug: string) {\n    const state = this.organizationsState.getValue();\n    if (state.activeOrganization?.teams) {\n      this.organizationsState.next({\n        ...state,\n        activeOrganization: {\n          ...state.activeOrganization,\n          teams: state.activeOrganization?.teams.filter(\n            (team) => team.slug !== slug\n          ),\n        },\n      });\n    }\n  }\n\n  private updateTeamSlug(id: number, newSlug: string) {\n    const state = this.organizationsState.getValue();\n    if (state.activeOrganization?.teams) {\n      this.organizationsState.next({\n        ...state,\n        activeOrganization: {\n          ...state.activeOrganization,\n          teams: state.activeOrganization?.teams.map((team) =>\n            team.id === id ? { ...team, slug: newSlug } : team\n          ),\n        },\n      });\n    }\n  }\n\n  private getOrganizationDetail(slug: string) {\n    return this.organizationAPIService\n      .retrieve(slug)\n      .pipe(tap((organization) => this.setActiveOrganization(organization)));\n  }\n}\n",
            "properties": [
                {
                    "name": "activeOrganization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationDetail | null",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "activeOrganizationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationErrors",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "initialLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Has organizations loaded the first time?</p>\n",
                    "line": 49,
                    "rawdescription": "\nHas organizations loaded the first time?"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationLoading",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "organizationMembers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Member[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "organizations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "organizationTeams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Team[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "OrganizationUser",
            "id": "interface-OrganizationUser-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "organization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Member"
        },
        {
            "name": "OrgStatus",
            "id": "interface-OrgStatus-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "PaginationState",
            "id": "interface-PaginationState-67fac31785d80a00e02e5700f1b858be",
            "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { urlParamsToObject } from \"src/app/issues/utils\";\nimport { StatefulService } from \"./stateful-service\";\n\n/**\n * Pagination info exists in a header, this parses it out for storing.\n */\nconst processLinkHeader = (linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {});\n\nexport interface PaginationState {\n  hits: number | null;\n  maxHits: number | null;\n  page: number | null;\n  nextPageURL: string | null;\n  previousPageURL: string | null;\n  loading: boolean;\n  initialLoadComplete: boolean;\n}\n\nexport const initialPaginationState: PaginationState = {\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n};\n\nexport interface PaginationStatefulServiceState {\n  pagination: PaginationState;\n}\n\n/**\n * Extends StatefulService to include some basic CRUD pagination state and logic\n * If working with a CRUD view that is paginated, use this as the base class\n */\nexport abstract class PaginationStatefulService<\n  TState extends PaginationStatefulServiceState\n> extends StatefulService<TState> {\n  pagination$ = this.getState$.pipe(map((state) => state.pagination));\n  initialLoadComplete$ = this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  );\n  loading$ = this.pagination$.pipe(map((pagination) => pagination.loading));\n  constructor(initialState: TState) {\n    super(initialState);\n  }\n\n  setStateAndPagination(newState: Partial<TState>, res: HttpResponse<unknown>) {\n    const prevState = this.state.getValue();\n\n    const link = res.headers.get(\"link\");\n    const results = link ? processLinkHeader(link) : {};\n    const pagination = {\n      ...prevState.pagination,\n      nextPageURL: results.next,\n      previousPageURL: results.previous,\n      hits: res.headers.get(\"x-hits\"),\n      maxHits: res.headers.get(\"x-max-hits\"),\n      loading: false,\n      initialLoadComplete: true,\n    };\n    this.state.next({\n      ...prevState,\n      pagination,\n      ...newState,\n    });\n  }\n}\n\n/**\n * Component level interface for paging needs\n */\ninterface Paginator extends PaginationState {\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  nextPageParams: {\n    [key: string]: string;\n  } | null;\n  previousPageParams: {\n    [key: string]: string;\n  } | null;\n  /** Human readable object count string that appends \"+\" to indicate max hits */\n  count: string | undefined;\n}\n\nexport abstract class PaginationBaseComponent<\n  TState extends PaginationStatefulServiceState,\n  TService extends PaginationStatefulService<TState>\n> {\n  paginator$: Observable<Paginator>;\n\n  constructor(protected service: TService) {\n    this.paginator$ = service.pagination$.pipe(\n      map((pagination) => ({\n        ...pagination,\n        hasNextPage: !!pagination.nextPageURL,\n        hasPreviousPage: !!pagination.previousPageURL,\n        nextPageParams: urlParamsToObject(pagination.nextPageURL),\n        previousPageParams: urlParamsToObject(pagination.previousPageURL),\n        count:\n          pagination.hits && pagination.hits === pagination.maxHits\n            ? pagination.hits.toString() + \"+\"\n            : pagination.hits?.toString(),\n      }))\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "hits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "initialLoadComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "maxHits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "nextPageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "previousPageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "PaginationStatefulServiceState",
            "id": "interface-PaginationStatefulServiceState-67fac31785d80a00e02e5700f1b858be",
            "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { urlParamsToObject } from \"src/app/issues/utils\";\nimport { StatefulService } from \"./stateful-service\";\n\n/**\n * Pagination info exists in a header, this parses it out for storing.\n */\nconst processLinkHeader = (linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {});\n\nexport interface PaginationState {\n  hits: number | null;\n  maxHits: number | null;\n  page: number | null;\n  nextPageURL: string | null;\n  previousPageURL: string | null;\n  loading: boolean;\n  initialLoadComplete: boolean;\n}\n\nexport const initialPaginationState: PaginationState = {\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n};\n\nexport interface PaginationStatefulServiceState {\n  pagination: PaginationState;\n}\n\n/**\n * Extends StatefulService to include some basic CRUD pagination state and logic\n * If working with a CRUD view that is paginated, use this as the base class\n */\nexport abstract class PaginationStatefulService<\n  TState extends PaginationStatefulServiceState\n> extends StatefulService<TState> {\n  pagination$ = this.getState$.pipe(map((state) => state.pagination));\n  initialLoadComplete$ = this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  );\n  loading$ = this.pagination$.pipe(map((pagination) => pagination.loading));\n  constructor(initialState: TState) {\n    super(initialState);\n  }\n\n  setStateAndPagination(newState: Partial<TState>, res: HttpResponse<unknown>) {\n    const prevState = this.state.getValue();\n\n    const link = res.headers.get(\"link\");\n    const results = link ? processLinkHeader(link) : {};\n    const pagination = {\n      ...prevState.pagination,\n      nextPageURL: results.next,\n      previousPageURL: results.previous,\n      hits: res.headers.get(\"x-hits\"),\n      maxHits: res.headers.get(\"x-max-hits\"),\n      loading: false,\n      initialLoadComplete: true,\n    };\n    this.state.next({\n      ...prevState,\n      pagination,\n      ...newState,\n    });\n  }\n}\n\n/**\n * Component level interface for paging needs\n */\ninterface Paginator extends PaginationState {\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  nextPageParams: {\n    [key: string]: string;\n  } | null;\n  previousPageParams: {\n    [key: string]: string;\n  } | null;\n  /** Human readable object count string that appends \"+\" to indicate max hits */\n  count: string | undefined;\n}\n\nexport abstract class PaginationBaseComponent<\n  TState extends PaginationStatefulServiceState,\n  TService extends PaginationStatefulService<TState>\n> {\n  paginator$: Observable<Paginator>;\n\n  constructor(protected service: TService) {\n    this.paginator$ = service.pagination$.pipe(\n      map((pagination) => ({\n        ...pagination,\n        hasNextPage: !!pagination.nextPageURL,\n        hasPreviousPage: !!pagination.previousPageURL,\n        nextPageParams: urlParamsToObject(pagination.nextPageURL),\n        previousPageParams: urlParamsToObject(pagination.previousPageURL),\n        count:\n          pagination.hits && pagination.hits === pagination.maxHits\n            ? pagination.hits.toString() + \"+\"\n            : pagination.hits?.toString(),\n      }))\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "pagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaginationState",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Paginator",
            "id": "interface-Paginator-67fac31785d80a00e02e5700f1b858be",
            "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { urlParamsToObject } from \"src/app/issues/utils\";\nimport { StatefulService } from \"./stateful-service\";\n\n/**\n * Pagination info exists in a header, this parses it out for storing.\n */\nconst processLinkHeader = (linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {});\n\nexport interface PaginationState {\n  hits: number | null;\n  maxHits: number | null;\n  page: number | null;\n  nextPageURL: string | null;\n  previousPageURL: string | null;\n  loading: boolean;\n  initialLoadComplete: boolean;\n}\n\nexport const initialPaginationState: PaginationState = {\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n};\n\nexport interface PaginationStatefulServiceState {\n  pagination: PaginationState;\n}\n\n/**\n * Extends StatefulService to include some basic CRUD pagination state and logic\n * If working with a CRUD view that is paginated, use this as the base class\n */\nexport abstract class PaginationStatefulService<\n  TState extends PaginationStatefulServiceState\n> extends StatefulService<TState> {\n  pagination$ = this.getState$.pipe(map((state) => state.pagination));\n  initialLoadComplete$ = this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  );\n  loading$ = this.pagination$.pipe(map((pagination) => pagination.loading));\n  constructor(initialState: TState) {\n    super(initialState);\n  }\n\n  setStateAndPagination(newState: Partial<TState>, res: HttpResponse<unknown>) {\n    const prevState = this.state.getValue();\n\n    const link = res.headers.get(\"link\");\n    const results = link ? processLinkHeader(link) : {};\n    const pagination = {\n      ...prevState.pagination,\n      nextPageURL: results.next,\n      previousPageURL: results.previous,\n      hits: res.headers.get(\"x-hits\"),\n      maxHits: res.headers.get(\"x-max-hits\"),\n      loading: false,\n      initialLoadComplete: true,\n    };\n    this.state.next({\n      ...prevState,\n      pagination,\n      ...newState,\n    });\n  }\n}\n\n/**\n * Component level interface for paging needs\n */\ninterface Paginator extends PaginationState {\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  nextPageParams: {\n    [key: string]: string;\n  } | null;\n  previousPageParams: {\n    [key: string]: string;\n  } | null;\n  /** Human readable object count string that appends \"+\" to indicate max hits */\n  count: string | undefined;\n}\n\nexport abstract class PaginationBaseComponent<\n  TState extends PaginationStatefulServiceState,\n  TService extends PaginationStatefulService<TState>\n> {\n  paginator$: Observable<Paginator>;\n\n  constructor(protected service: TService) {\n    this.paginator$ = service.pagination$.pipe(\n      map((pagination) => ({\n        ...pagination,\n        hasNextPage: !!pagination.nextPageURL,\n        hasPreviousPage: !!pagination.previousPageURL,\n        nextPageParams: urlParamsToObject(pagination.nextPageURL),\n        previousPageParams: urlParamsToObject(pagination.previousPageURL),\n        count:\n          pagination.hits && pagination.hits === pagination.maxHits\n            ? pagination.hits.toString() + \"+\"\n            : pagination.hits?.toString(),\n      }))\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "<p>Human readable object count string that appends &quot;+&quot; to indicate max hits</p>\n",
                    "line": 102,
                    "rawdescription": "\nHuman readable object count string that appends \"+\" to indicate max hits"
                },
                {
                    "name": "hasNextPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "hasPreviousPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "nextPageParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "previousPageParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 98
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "description": "<p>Component level interface for paging needs</p>\n",
            "rawdescription": "\n\nComponent level interface for paging needs\n",
            "methods": [],
            "extends": "PaginationState"
        },
        {
            "name": "PerformanceState",
            "id": "interface-PerformanceState-472b0382897111d23c4bec3477afb0e7",
            "file": "src/app/performance/performance.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { map, tap } from \"rxjs/operators\";\nimport { Transaction } from \"../api/transactions/transactions.interfaces\";\nimport { TransactionsService } from \"../api/transactions/transactions.service\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"../shared/stateful-service/pagination-stateful-service\";\n\nexport interface PerformanceState extends PaginationStatefulServiceState {\n  transactions: Transaction[];\n}\n\nconst initialState: PerformanceState = {\n  transactions: [],\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PerformanceService extends PaginationStatefulService<PerformanceState> {\n  transactions$ = this.getState$.pipe(map((state) => state.transactions));\n  transactionsWithDelta$ = this.transactions$.pipe(\n    map((transactions) =>\n      transactions.map((transaction) => ({\n        ...transaction,\n        delta:\n          new Date(transaction.timestamp).getTime() -\n          new Date(transaction.startTimestamp).getTime(),\n      }))\n    )\n  );\n\n  constructor(private transactionsService: TransactionsService) {\n    super(initialState);\n  }\n\n  getTransactions(orgSlug: string, cursor?: string | undefined) {\n    this.transactionsService\n      .list(orgSlug, cursor)\n      .pipe(\n        tap((res) =>\n          this.setStateAndPagination({ transactions: res.body! }, res)\n        )\n      )\n      .toPromise();\n  }\n}\n",
            "properties": [
                {
                    "name": "transactions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "PaginationStatefulServiceState"
        },
        {
            "name": "Plan",
            "id": "interface-Plan-368fc6d3b78c0c82a085ab80d3e5d024",
            "file": "src/app/api/subscriptions/subscriptions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface BaseProduct {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  metadata: { [key: string]: string };\n}\n\nexport interface Plan {\n  id: string;\n  nickname: string;\n  amount: number | string;\n  metadata: { [key: string]: string };\n  product: BaseProduct;\n}\n\nexport interface Product extends BaseProduct {\n  plans: Plan[];\n}\n\nexport interface Subscription {\n  id: string;\n  created: string;\n  collection_method: string;\n  billing_cycle_anchor: string;\n  current_period_end: string;\n  current_period_start: string;\n  start_date: string;\n  status:\n    | \"active\"\n    | \"canceled\"\n    | \"incomplete\"\n    | \"incomplete_expired\"\n    | \"past_due\"\n    | \"trialing\"\n    | \"unpaid\";\n  plan: Plan;\n}\n\nexport interface CreateSubscriptionResp {\n  organization: number;\n  plan: string;\n  subscription: Subscription;\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "nickname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseProduct",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Platform",
            "id": "interface-Platform-fcefe1312ba11bdeca06cff395aee908",
            "file": "src/app/settings/projects/platform-picker/platforms.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Integration {\n  link: string;\n  type: \"framework\" | \"language\" | \"library\";\n  id: string;\n  name: string;\n}\n\nexport interface Platform {\n  id: string;\n  name: string;\n  integrations: Integration[];\n}\n\nexport const platforms: Platform[] = [\n  {\n    id: \"csharp\",\n    name: \"C#\",\n    integrations: [\n      {\n        id: \"csharp-aspnetcore\",\n        name: \"ASP.NET Core\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=aspnetcore\",\n      },\n      {\n        id: \"csharp\",\n        name: \"C#\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=csharp\",\n      },\n    ],\n  },\n  {\n    id: \"cordova\",\n    name: \"Cordova\",\n    integrations: [\n      {\n        id: \"cordova\",\n        name: \"Cordova\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=cordova\",\n      },\n    ],\n  },\n  {\n    id: \"electron\",\n    name: \"Electron\",\n    integrations: [\n      {\n        id: \"electron\",\n        name: \"Electron\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=electron\",\n      },\n    ],\n  },\n  {\n    id: \"elixir\",\n    name: \"Elixir\",\n    integrations: [\n      {\n        id: \"elixir\",\n        name: \"Elixir\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/elixir/\",\n      },\n    ],\n  },\n  {\n    id: \"go\",\n    name: \"Go\",\n    integrations: [\n      {\n        id: \"go\",\n        name: \"Go\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=go\",\n      },\n      {\n        id: \"go-http\",\n        name: \"net/http\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/go/http/\",\n      },\n    ],\n  },\n  {\n    id: \"java\",\n    name: \"Java\",\n    integrations: [\n      {\n        id: \"java-android\",\n        name: \"Android\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/android/\",\n      },\n      {\n        id: \"java-appengine\",\n        name: \"Google App Engine\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/appengine/\",\n      },\n      {\n        id: \"java\",\n        name: \"Java\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/java/\",\n      },\n      {\n        id: \"java-logging\",\n        name: \"java.util.logging\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/jul/\",\n      },\n      {\n        id: \"java-log4j\",\n        name: \"Log4j 1.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j/\",\n      },\n      {\n        id: \"java-log4j2\",\n        name: \"Log4j 2.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j2/\",\n      },\n      {\n        id: \"java-logback\",\n        name: \"Logback\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/logback/\",\n      },\n    ],\n  },\n  {\n    id: \"javascript\",\n    name: \"JavaScript\",\n    integrations: [\n      {\n        id: \"javascript-angular\",\n        name: \"Angular\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/angular/\",\n      },\n      {\n        id: \"javascript-angularjs\",\n        name: \"AngularJS\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/angularjs/\",\n      },\n      {\n        id: \"javascript-backbone\",\n        name: \"Backbone\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/#backbone\",\n      },\n      {\n        id: \"javascript-browser\",\n        name: \"Browser JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-ember\",\n        name: \"Ember\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/ember/\",\n      },\n      {\n        id: \"javascript\",\n        name: \"JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-react\",\n        name: \"React\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/react/\",\n      },\n      {\n        id: \"javascript-vue\",\n        name: \"Vue\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/vue/\",\n      },\n    ],\n  },\n  {\n    id: \"minidump\",\n    name: \"Minidump\",\n    integrations: [\n      {\n        id: \"minidump\",\n        name: \"Minidump\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/native/minidump/\",\n      },\n    ],\n  },\n  {\n    id: \"native\",\n    name: \"Native (C/C++)\",\n    integrations: [\n      {\n        id: \"native\",\n        name: \"Native (C/C++)\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=native\",\n      },\n    ],\n  },\n  {\n    id: \"node\",\n    name: \"Node.js\",\n    integrations: [\n      {\n        id: \"node-connect\",\n        name: \"Connect\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/connect/\",\n      },\n      {\n        id: \"node-express\",\n        name: \"Express\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/express/\",\n      },\n      {\n        id: \"node-koa\",\n        name: \"Koa\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/koa/\",\n      },\n      {\n        id: \"node\",\n        name: \"Node.js\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=node\",\n      },\n    ],\n  },\n  {\n    id: \"cocoa\",\n    name: \"Objective-C\",\n    integrations: [\n      {\n        id: \"cocoa-objc\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa-swift\",\n        name: \"Swift\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n    ],\n  },\n  {\n    id: \"php\",\n    name: \"PHP\",\n    integrations: [\n      {\n        id: \"php-laravel\",\n        name: \"Laravel\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/laravel/\",\n      },\n      {\n        id: \"php-monolog\",\n        name: \"Monolog\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/monolog/\",\n      },\n      {\n        id: \"php\",\n        name: \"PHP\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=php\",\n      },\n      {\n        id: \"php-symfony\",\n        name: \"Symfony\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/symfony/\",\n      },\n      {\n        id: \"php-symfony2\",\n        name: \"Symfony2\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/symfony2/\",\n      },\n    ],\n  },\n  {\n    id: \"python\",\n    name: \"Python\",\n    integrations: [\n      {\n        id: \"python-aiohttp\",\n        name: \"AIOHTTP\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aiohttp/\",\n      },\n      {\n        id: \"python-asgi\",\n        name: \"ASGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/asgi/\",\n      },\n      {\n        id: \"python-pythonawslambda\",\n        name: \"AWS Lambda\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aws_lambda/\",\n      },\n      {\n        id: \"python-bottle\",\n        name: \"Bottle\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/bottle/\",\n      },\n      {\n        id: \"python-celery\",\n        name: \"Celery\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/celery/\",\n      },\n      {\n        id: \"python-django\",\n        name: \"Django\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/django/\",\n      },\n      {\n        id: \"python-falcon\",\n        name: \"Falcon\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/falcon/\",\n      },\n      {\n        id: \"python-flask\",\n        name: \"Flask\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/flask/\",\n      },\n      {\n        id: \"python-pylons\",\n        name: \"Pylons\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/python/integrations/pylons/\",\n      },\n      {\n        id: \"python-pyramid\",\n        name: \"Pyramid\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/pyramid/\",\n      },\n      {\n        id: \"python\",\n        name: \"Python\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=python\",\n      },\n      {\n        id: \"python-rq\",\n        name: \"RQ (Redis Queue)\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/rq/\",\n      },\n      {\n        id: \"python-sanic\",\n        name: \"Sanic\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/sanic/\",\n      },\n      {\n        id: \"python-pythonserverless\",\n        name: \"Serverless (Python)\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/serverless/\",\n      },\n      {\n        id: \"python-tornado\",\n        name: \"Tornado\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/tornado/\",\n      },\n      {\n        id: \"python-wsgi\",\n        name: \"WSGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/wsgi/\",\n      },\n    ],\n  },\n  {\n    id: \"react-native\",\n    name: \"React-Native\",\n    integrations: [\n      {\n        id: \"react-native\",\n        name: \"React-Native\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/platforms/react-native/\",\n      },\n    ],\n  },\n  {\n    id: \"ruby\",\n    name: \"Ruby\",\n    integrations: [\n      {\n        id: \"ruby-rack\",\n        name: \"Rack\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rack/\",\n      },\n      {\n        id: \"ruby-rails\",\n        name: \"Rails\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rails/\",\n      },\n      {\n        id: \"ruby\",\n        name: \"Ruby\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/ruby/\",\n      },\n    ],\n  },\n  {\n    id: \"rust\",\n    name: \"Rust\",\n    integrations: [\n      {\n        id: \"rust\",\n        name: \"Rust\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=rust\",\n      },\n    ],\n  },\n];\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "integrations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Integration[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-368fc6d3b78c0c82a085ab80d3e5d024",
            "file": "src/app/api/subscriptions/subscriptions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface BaseProduct {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  metadata: { [key: string]: string };\n}\n\nexport interface Plan {\n  id: string;\n  nickname: string;\n  amount: number | string;\n  metadata: { [key: string]: string };\n  product: BaseProduct;\n}\n\nexport interface Product extends BaseProduct {\n  plans: Plan[];\n}\n\nexport interface Subscription {\n  id: string;\n  created: string;\n  collection_method: string;\n  billing_cycle_anchor: string;\n  current_period_end: string;\n  current_period_start: string;\n  start_date: string;\n  status:\n    | \"active\"\n    | \"canceled\"\n    | \"incomplete\"\n    | \"incomplete_expired\"\n    | \"past_due\"\n    | \"trialing\"\n    | \"unpaid\";\n  plan: Plan;\n}\n\nexport interface CreateSubscriptionResp {\n  organization: number;\n  plan: string;\n  subscription: Subscription;\n}\n",
            "properties": [
                {
                    "name": "plans",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Plan[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "BaseProduct"
        },
        {
            "name": "Project",
            "id": "interface-Project-11da721fe3246d88fc632914b098238e",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "firstEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "organization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "ProjectIssueView"
        },
        {
            "name": "ProjectAlert",
            "id": "interface-ProjectAlert-f98f56566935cf8eb49c122dfa353927",
            "file": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface NewProjectAlert {\n  timespan_minutes: number;\n  quantity: number;\n  alertRecipients: NewAlertRecipient[];\n}\n\nexport interface ProjectAlert extends NewProjectAlert {\n  pk: number;\n  alertRecipients: AlertRecipient[];\n}\n\nexport interface NewAlertRecipient {\n  recipientType: RecipientType;\n  url: string;\n}\n\nexport interface AlertRecipient extends NewAlertRecipient {\n  pk: number;\n}\n\nexport type RecipientType = \"email\" | \"webhook\";\n",
            "properties": [
                {
                    "name": "alertRecipients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertRecipient[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "pk",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "NewProjectAlert"
        },
        {
            "name": "ProjectAlerts",
            "id": "interface-ProjectAlerts-ffd9b50ee6169eac72bcc74f5235f690",
            "file": "src/app/profile/notifications/notifications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Project } from \"src/app/api/projects/projects-api.interfaces\";\n\nexport interface SubscribeByDefault {\n  subscribeByDefault: boolean;\n}\n\nexport type NotificationStatus = number;\n\nexport interface ProjectWithAlertStatus extends Project {\n  alertStatus: NotificationStatus;\n}\n\nexport interface ProjectAlerts {\n  [key: string]: NotificationStatus;\n}\n\nexport interface GroupedProjects {\n  [key: number]: ProjectWithAlertStatus[];\n}\n\nexport interface ProjectError {\n  error: string;\n  id: string;\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-ffd9b50ee6169eac72bcc74f5235f690",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "NotificationStatus",
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 172,
            "methods": []
        },
        {
            "name": "ProjectAlertState",
            "id": "interface-ProjectAlertState-9ff7f269ccc31b6de9b8cfc490dae1c9",
            "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport {\n  tap,\n  map,\n  mergeMap,\n  take,\n  catchError,\n  exhaustMap,\n} from \"rxjs/operators\";\nimport { OrganizationsService } from \"../../../../api/organizations/organizations.service\";\nimport { ProjectAlertsAPIService } from \"../../../../api/projects/project-alerts/project-alerts.service\";\nimport {\n  AlertRecipient,\n  NewAlertRecipient,\n  NewProjectAlert,\n  ProjectAlert,\n} from \"../../../../api/projects/project-alerts/project-alerts.interface\";\nimport { ProjectSettingsService } from \"../../project-settings.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\ninterface NewAlertState {\n  newAlertOpen: boolean;\n  newProjectAlertRecipients: NewAlertRecipient[] | null;\n  newAlertLoading: boolean;\n  newAlertError: string | null;\n}\n\ninterface RecipientDialogState {\n  recipientError: string | null;\n  recipientDialogOpen: ProjectAlert | boolean;\n  activeAlert: ProjectAlert | null;\n}\n\ninterface ProjectAlertState {\n  initialLoad: boolean;\n  initialLoadError: string | null;\n  projectAlerts: ProjectAlert[] | null;\n  newAlertState: NewAlertState;\n  recipientDialogState: RecipientDialogState;\n  // current alerts\n  removeAlertLoading: number | null;\n  removeAlertError: { error: string; pk: number } | null;\n  updateTimespanQuantityLoading: number | null;\n  updateTimespanQuantityError: { error: string; pk: number } | null;\n  deleteRecipientLoading: number | null;\n}\n\nconst initialNewAlertState = {\n  newAlertOpen: false,\n  newProjectAlertRecipients: null,\n  newAlertLoading: false,\n  newAlertError: null,\n};\n\nconst initialRecipientDialogState = {\n  recipientError: null,\n  recipientDialogOpen: false,\n  activeAlert: null,\n};\n\nconst initialState: ProjectAlertState = {\n  initialLoad: false,\n  initialLoadError: null,\n  projectAlerts: null,\n  newAlertState: initialNewAlertState,\n  recipientDialogState: initialRecipientDialogState,\n  // current alerts\n  removeAlertLoading: null,\n  removeAlertError: null,\n  updateTimespanQuantityLoading: null,\n  updateTimespanQuantityError: null,\n  deleteRecipientLoading: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectAlertsService extends StatefulService<ProjectAlertState> {\n  readonly initialLoad$ = this.getState$.pipe(map((data) => data.initialLoad));\n  readonly initialLoadError$ = this.getState$.pipe(\n    map((data) => data.initialLoadError)\n  );\n  readonly projectAlert$ = this.getState$.pipe(\n    map((data) => data.projectAlerts)\n  );\n\n  /** New Alert */\n  readonly newAlertOpen$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertOpen)\n  );\n  readonly newProjectAlertRecipients$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newProjectAlertRecipients)\n  );\n  readonly newAlertLoading$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertLoading)\n  );\n  readonly newAlertError$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertError)\n  );\n\n  /** Recipient Dialog */\n  readonly recipientError$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientError)\n  );\n  readonly recipientDialogOpen$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientDialogOpen)\n  );\n  readonly activeAlert$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.activeAlert)\n  );\n  readonly emailSelected$ = combineLatest([\n    this.newProjectAlertRecipients$,\n    this.activeAlert$,\n  ]).pipe(\n    map(([newRecipients, activeAlert]) => {\n      if (activeAlert?.pk) {\n        return activeAlert.alertRecipients.some(\n          (data) => data.recipientType === \"email\"\n        );\n      } else if (newRecipients !== null) {\n        return newRecipients.some((data) => data.recipientType === \"email\");\n      }\n      return;\n    })\n  );\n\n  /** Current Alerts */\n  readonly removeAlertLoading$ = this.getState$.pipe(\n    map((data) => data.removeAlertLoading)\n  );\n  readonly removeAlertError$ = this.getState$.pipe(\n    map((data) => data.removeAlertError)\n  );\n  readonly updateTimespanQuantityLoading$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityLoading)\n  );\n  readonly updateTimespanQuantityError$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityError)\n  );\n  readonly deleteRecipientLoading$ = this.getState$.pipe(\n    map((data) => data.deleteRecipientLoading)\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService,\n    private projectAlertsAPIService: ProjectAlertsAPIService,\n    private snackBar: MatSnackBar\n  ) {\n    super(initialState);\n  }\n\n  /** Actions */\n  listProjectAlerts() {\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService.list(orgSlug, projectSlug).pipe(\n              tap((projectAlerts) => {\n                this.setProjectAlertsList(projectAlerts);\n              }),\n              catchError((err: HttpErrorResponse) => {\n                this.setProjectAlertsListError(err);\n                return EMPTY;\n              })\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** New Alert Actions */\n  openNewAlert() {\n    this.setOpenNewAlert();\n  }\n\n  closeNewAlert() {\n    this.setCloseNewAlert();\n  }\n\n  addAlertRecipient(event: NewAlertRecipient) {\n    // Force https:// if no protocol exists\n    if (event.url && !event.url.startsWith(\"http\")) {\n      event.url = \"https://\" + event.url;\n    }\n    combineLatest([this.newProjectAlertRecipients$, this.activeAlert$])\n      .pipe(\n        take(1),\n        exhaustMap(([newRecipients, activeAlert]) => {\n          if (newRecipients !== null) {\n            this.setAddNewAlertRecipient(event);\n          } else if (activeAlert?.alertRecipients !== null) {\n            this.updateAlertRecipient(event);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeNewAlertRecipient(url: string) {\n    this.setRemoveNewAlertRecipient(url);\n  }\n\n  createNewAlert(timeQuantity: { timespan_minutes: number; quantity: number }) {\n    this.setNewAlertLoading();\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n      this.newProjectAlertRecipients$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug, recipients]) => {\n          if (orgSlug && projectSlug && timeQuantity && recipients !== null) {\n            const data: NewProjectAlert = {\n              timespan_minutes: timeQuantity.timespan_minutes,\n              quantity: timeQuantity.quantity,\n              alertRecipients: recipients,\n            };\n            return this.projectAlertsAPIService\n              .create(data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setCreateAlert(resp);\n                  this.snackBar.open(`Success! Your new alert has been added.`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setCreateAlertError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** Update Actions */\n  deleteProjectAlert(pk: number) {\n    this.setDeleteAlertLoading(pk);\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .destroy(pk.toString(), orgSlug, projectSlug)\n              .pipe(\n                tap((_) => {\n                  this.setDeleteProjectAlert(pk);\n                  this.snackBar.open(`Success: Your alert has been deleted`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteAlertError(err, pk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateTimespanQuantity(\n    newTimespan: number,\n    newQuantity: number,\n    id: number,\n    recipients: AlertRecipient[]\n  ) {\n    this.setUpdateTimespanQuantityLoading(id);\n    const data: ProjectAlert = {\n      pk: id,\n      timespan_minutes: newTimespan,\n      quantity: newQuantity,\n      alertRecipients: recipients,\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(id.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateTimespanQuantity(resp);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateTimespanQuantityError(err, id);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateAlertRecipient(newRecipient: NewAlertRecipient) {\n    let activeErrorPk = 0;\n    combineLatest([\n      this.activeAlert$,\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([activeAlert, orgSlug, projectSlug]) => {\n          if (activeAlert && orgSlug && projectSlug) {\n            activeErrorPk = activeAlert.pk;\n            const recipientsWithoutPK: NewAlertRecipient[] = activeAlert.alertRecipients\n              .map((recipient) => {\n                return {\n                  recipientType: recipient.recipientType,\n                  url: recipient.url,\n                };\n              })\n              .concat([newRecipient]);\n            const data = {\n              timespan_minutes: activeAlert.timespan_minutes,\n              quantity: activeAlert.quantity,\n              alertRecipients: recipientsWithoutPK,\n            };\n            return this.projectAlertsAPIService\n              .update(activeAlert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateAlertRecipientsError(err, activeErrorPk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  deleteAlertRecipient(recipientToRemove: AlertRecipient, alert: ProjectAlert) {\n    this.setDeleteRecipientLoading(recipientToRemove.pk);\n    const data = {\n      ...alert,\n      alertRecipients: alert.alertRecipients.filter(\n        (currentRecipient) => currentRecipient.pk !== recipientToRemove.pk\n      ),\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(alert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(\n                    `Success: Your recipient has been deleted`\n                  );\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteRecipientError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  openUpdateRecipientDialog(alert: ProjectAlert) {\n    this.setOpenUpdateRecipientDialog(alert);\n  }\n\n  openCreateRecipientDialog() {\n    this.setOpenCreateRecipientDialog();\n  }\n\n  closeRecipientDialog() {\n    this.setCloseRecipientDialog();\n  }\n\n  /** Set state */\n\n  private setProjectAlertsList(alerts: ProjectAlert[]) {\n    this.setState({\n      projectAlerts: alerts,\n      initialLoad: true,\n      initialLoadError: null,\n    });\n  }\n\n  private setProjectAlertsListError(err: HttpErrorResponse) {\n    this.setState({\n      initialLoad: true,\n      initialLoadError: `There was an error loading your alerts. Try refreshing the page.`,\n    });\n  }\n\n  /** New Alert */\n\n  private setOpenNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: true,\n        newProjectAlertRecipients: [{ recipientType: \"email\", url: \"\" }],\n      },\n    });\n  }\n\n  private setCloseNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: false,\n        newAlertError: null,\n        newProjectAlertRecipients: null,\n      },\n    });\n  }\n\n  private setAddNewAlertRecipient(recipient: NewAlertRecipient) {\n    const newAlertState = this.state.getValue().newAlertState;\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.concat([recipient]) ?? null,\n      },\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n      },\n    });\n  }\n\n  private setRemoveNewAlertRecipient(url: string) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.filter(\n            (recipient) => recipient.url !== url\n          ) ?? null,\n      },\n    });\n  }\n\n  private setNewAlertLoading() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertLoading: true,\n      },\n    });\n  }\n\n  private setCreateAlert(alert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: state.projectAlerts?.concat([alert]),\n      newAlertState: initialNewAlertState,\n    });\n  }\n\n  private setCreateAlertError(error: HttpErrorResponse) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertError: `${error.statusText} : ${error.status}`,\n        newAlertLoading: false,\n      },\n    });\n  }\n\n  private setOpenCreateRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  /** Recipient Dialog */\n\n  private setCloseRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setOpenUpdateRecipientDialog(alert: ProjectAlert) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: alert,\n      },\n    });\n  }\n\n  /** Alert Updates */\n\n  private setDeleteAlertLoading(pk: number) {\n    this.setState({\n      removeAlertLoading: pk,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteProjectAlert(pk: number) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts:\n        state.projectAlerts?.filter((alert) => alert.pk !== pk) ?? null,\n      removeAlertLoading: null,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteAlertError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      removeAlertError: {\n        ...state.removeAlertError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n      removeAlertLoading: null,\n    });\n  }\n\n  private setUpdateTimespanQuantity(updatedAlert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: this.findAndReplaceAlert(\n        state.projectAlerts,\n        updatedAlert\n      ),\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityLoading(pk: number) {\n    this.setState({\n      updateTimespanQuantityLoading: pk,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: {\n        ...state.updateTimespanQuantityError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipientsError(err: HttpErrorResponse, id: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipients(recipients: AlertRecipient[], id: number) {\n    const state = this.state.getValue();\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      projectAlerts: state.projectAlerts?.map((alert) =>\n        alert.pk === id ? { ...alert, alertRecipients: recipients } : alert\n      ),\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n      deleteRecipientLoading: null,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientLoading(pk: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n      },\n      deleteRecipientLoading: pk,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientError(err: HttpErrorResponse) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n      },\n      deleteRecipientLoading: null,\n    });\n  }\n\n  /** Utility Functions */\n\n  findAndReplaceAlert(\n    currentAlerts: ProjectAlert[] | null,\n    newAlert: ProjectAlert\n  ): ProjectAlert[] | null {\n    const updatedAlert = currentAlerts?.map((alert) => {\n      if (alert.pk === newAlert.pk) {\n        return {\n          ...alert,\n          timespan_minutes: newAlert.timespan_minutes,\n          quantity: newAlert.quantity,\n        };\n      } else return alert;\n    });\n    return updatedAlert !== undefined ? updatedAlert : null;\n  }\n}\n",
            "properties": [
                {
                    "name": "deleteRecipientLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "initialLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "initialLoadError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "newAlertState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NewAlertState",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "projectAlerts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectAlert[] | null",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "recipientDialogState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RecipientDialogState",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "removeAlertError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "removeAlertLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "updateTimespanQuantityError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "updateTimespanQuantityLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectCardButton",
            "id": "interface-ProjectCardButton-06ce4035e37841a3471fb6352dd2c66f",
            "file": "src/app/shared/shared.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProjectCardButton {\n  link: string | unknown[];\n  icon?: string;\n  text: string;\n}\n\nexport interface ProjectCardButtonWithQuery extends ProjectCardButton {\n  query?: { [k: string]: unknown };\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | []",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectCardButtonWithQuery",
            "id": "interface-ProjectCardButtonWithQuery-06ce4035e37841a3471fb6352dd2c66f",
            "file": "src/app/shared/shared.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ProjectCardButton {\n  link: string | unknown[];\n  icon?: string;\n  text: string;\n}\n\nexport interface ProjectCardButtonWithQuery extends ProjectCardButton {\n  query?: { [k: string]: unknown };\n}\n",
            "properties": [
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "ProjectCardButton"
        },
        {
            "name": "ProjectDetail",
            "id": "interface-ProjectDetail-11da721fe3246d88fc632914b098238e",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Avatar",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "hasAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isBookmarked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isInternal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isPublic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Project"
        },
        {
            "name": "ProjectEnvironment",
            "id": "interface-ProjectEnvironment-4f465824be399f36af87154199cdd803",
            "file": "src/app/api/organizations/organizations.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from \"../user/user.interfaces\";\nimport { Team } from \"../teams/teams.interfaces\";\n\nexport interface OrganizationNew {\n  name: string;\n  slug?: string;\n}\n\nexport interface Organization extends OrganizationNew {\n  id: number;\n  dateCreated: string;\n  status: OrgStatus;\n  avatar: Avatar;\n  isEarlyAdopter: boolean;\n  require2FA: boolean;\n  isAcceptingEvents: boolean;\n  slug: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface OrganizationDetail extends Organization {\n  projects: OrganizationProject[];\n  teams: Team[];\n}\n\ninterface OrgStatus {\n  id: string;\n  name: string;\n}\n\nexport interface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n\nexport interface OrganizationProject {\n  name: string;\n  slug: string;\n  platform: string | null;\n  id: number;\n  isMember: boolean;\n}\n\nexport interface Member {\n  role: string;\n  id: number;\n  user: User | null;\n  roleName: string;\n  dateCreated: string;\n  email: string;\n  pending: boolean;\n  teams: string[];\n}\n\nexport interface MemberSelector extends Member {\n  loadingResendInvite: boolean;\n  sentResendInvite: boolean;\n  isMe: boolean;\n}\n\nexport interface OrganizationUser extends Member {\n  organization: Organization;\n}\n\nexport type MemberRole = \"member\" | \"admin\" | \"manager\" | \"owner\";\n\nexport interface OrganizationMembersRequest {\n  email: string;\n  role: MemberRole;\n  teams: string[];\n}\n\nexport interface OrganizationLoading {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: boolean;\n}\n\nexport interface OrganizationErrors {\n  addTeamMember: string;\n  removeTeamMember: string;\n  addOrganizationMember: string;\n}\n\nexport interface Environment {\n  id: number;\n  name: string;\n}\n\nexport interface ProjectEnvironment extends Environment {\n  isHidden: boolean;\n}\n",
            "properties": [
                {
                    "name": "isHidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 91
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Environment"
        },
        {
            "name": "ProjectError",
            "id": "interface-ProjectError-ffd9b50ee6169eac72bcc74f5235f690",
            "file": "src/app/profile/notifications/notifications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Project } from \"src/app/api/projects/projects-api.interfaces\";\n\nexport interface SubscribeByDefault {\n  subscribeByDefault: boolean;\n}\n\nexport type NotificationStatus = number;\n\nexport interface ProjectWithAlertStatus extends Project {\n  alertStatus: NotificationStatus;\n}\n\nexport interface ProjectAlerts {\n  [key: string]: NotificationStatus;\n}\n\nexport interface GroupedProjects {\n  [key: number]: ProjectWithAlertStatus[];\n}\n\nexport interface ProjectError {\n  error: string;\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectError",
            "id": "interface-ProjectError-afa7db4b8b5dfb6cbf0efdb300653ac7-1",
            "file": "src/app/settings/projects/project-settings.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { EMPTY } from \"rxjs\";\nimport { tap, map, catchError, filter, first } from \"rxjs/operators\";\nimport { OrganizationProject } from \"../../api/organizations/organizations.interface\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"src/app/shared/stateful-service/pagination-stateful-service\";\nimport {\n  Project,\n  ProjectDetail,\n  ProjectKey,\n  ProjectNew,\n} from \"../../api/projects/projects-api.interfaces\";\nimport { ProjectsAPIService } from \"../../api/projects/projects-api.service\";\nimport { ProjectKeysAPIService } from \"../../api/projects/project-keys-api.service\";\n\ninterface ProjectLoading {\n  addProjectToTeam: boolean;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectError {\n  addProjectToTeam: string;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectSettingsState extends PaginationStatefulServiceState {\n  projects: Project[] | null;\n  projectsOnTeam: Project[];\n  projectsNotOnTeam: Project[];\n  projectDetail: ProjectDetail | null;\n  projectKeys: ProjectKey[] | null;\n  loading: ProjectLoading;\n  errors: ProjectError;\n}\n\nconst initialState: ProjectSettingsState = {\n  projects: null,\n  projectsOnTeam: [],\n  projectsNotOnTeam: [],\n  projectDetail: null,\n  projectKeys: null,\n  loading: { addProjectToTeam: false, removeProjectFromTeam: \"\" },\n  errors: { addProjectToTeam: \"\", removeProjectFromTeam: \"\" },\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectSettingsService extends PaginationStatefulService<ProjectSettingsState> {\n  readonly projects$ = this.getState$.pipe(map((data) => data.projects));\n\n  readonly activeProject$ = this.getState$.pipe(\n    map((data) => data.projectDetail)\n  );\n  readonly activeProjectSlug$ = this.activeProject$.pipe(\n    map((data) => data?.slug)\n  );\n  readonly projectKeys$ = this.getState$.pipe(map((data) => data.projectKeys));\n\n  readonly projectsOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsOnTeam)\n  );\n  readonly projectsNotOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsNotOnTeam)\n  );\n  readonly addRemoveLoading$ = this.getState$.pipe(map((data) => data.loading));\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private projectsAPIService: ProjectsAPIService,\n    private projectKeysAPIService: ProjectKeysAPIService\n  ) {\n    super(initialState);\n  }\n\n  createProject(project: ProjectNew, teamSlug: string, orgSlug: string) {\n    return this.projectsAPIService\n      .create(project, teamSlug, orgSlug)\n      .pipe(tap((newProject) => this.addOneProject(newProject)));\n  }\n\n  retrieveProjects(organizationSlug: string) {\n    this.projectsAPIService\n      .list(organizationSlug)\n      .pipe(tap((projects) => this.setProjects(projects)))\n      .subscribe();\n  }\n\n  /**\n   * Calls retrieveProjectDetail with the active org slug and the slug of a\n   * single project. Project comes from either the URL or the active org list\n   *\n   * @param project An array of project IDs that come from the URL\n   * @param activeOrgProjects All projects associated with the active organization\n   * @param orgSlug Active organization slug\n   */\n  getProjectDetails(\n    project: string[] | null,\n    activeOrgProjects: OrganizationProject[] | null,\n    orgSlug: string\n  ) {\n    if (activeOrgProjects) {\n      let matchingProject: OrganizationProject | null = null;\n      if (project && project.length === 1) {\n        const match = activeOrgProjects.find(\n          (activeOrgProject) => activeOrgProject.id === parseInt(project[0], 10)\n        );\n        if (match) matchingProject = match;\n      } else if (activeOrgProjects.length === 1) {\n        matchingProject = activeOrgProjects[0];\n      }\n\n      if (matchingProject) {\n        this.retrieveProjectDetail(orgSlug, matchingProject.slug);\n      }\n    }\n  }\n\n  addProjectToTeam(orgSlug: string, teamSlug: string, projectSlug: string) {\n    this.setAddProjectToTeamLoading(true);\n    this.projectsAPIService\n      .addProjectToTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been added to #${teamSlug}`);\n          this.setAddProjectToTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setAddProjectToTeamError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeProjectFromTeam(\n    orgSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    this.setRemoveProjectFromTeamLoading(projectSlug);\n    return this.projectsAPIService\n      .removeProjectFromTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been removed from #${teamSlug}`);\n          this.setRemoveProjectFromTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setRemoveProjectFromTeamLoadingError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  retrieveProjectsOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `team:${teamSlug}`;\n    this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsPerTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectsNotOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `!team:${teamSlug}`;\n    return this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsNotOnTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectDetail(organizationSlug: string, projectSlug: string) {\n    this.projectsAPIService\n      .retrieve(organizationSlug, projectSlug)\n      .pipe(tap((activeProject) => this.setActiveProject(activeProject)))\n      .subscribe();\n  }\n\n  retrieveCurrentProjectClientKeys(organizationSlug: string) {\n    this.activeProject$\n      .pipe(\n        filter((project) => !!project),\n        first(),\n        tap((project) => {\n          return this.projectKeysAPIService\n            .list(organizationSlug, project!.slug)\n            .pipe(tap((projectKeys) => this.setKeys(projectKeys)))\n            .subscribe();\n        })\n      )\n      .subscribe();\n  }\n\n  updateProjectName(orgSlug: string, projectSlug: string, projectName: string) {\n    const data = { name: projectName };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  updateProjectPlatform(\n    orgSlug: string,\n    projectSlug: string,\n    projectPlatform: string,\n    projectName: string\n  ) {\n    const data = { name: projectName, platform: projectPlatform };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  deleteProject(organizationSlug: string, projectSlug: string) {\n    return this.projectsAPIService.destroy(organizationSlug, projectSlug);\n  }\n\n  private setAddProjectToTeamError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        addProjectToTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setAddProjectToTeamLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        addProjectToTeam: loading,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoading(projectSlug: string) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: projectSlug,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoadingError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        removeProjectFromTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setProjects(projects: Project[]) {\n    this.setState({ projects });\n  }\n\n  private setProjectsPerTeam(projectsOnTeam: Project[]) {\n    this.setState({\n      projectsOnTeam,\n    });\n  }\n\n  private setProjectsNotOnTeam(projectsNotOnTeam: Project[]) {\n    this.setState({\n      projectsNotOnTeam,\n    });\n  }\n\n  private setActiveProject(projectDetail: ProjectDetail) {\n    this.setState({\n      projectDetail,\n    });\n  }\n\n  private addOneProject(project: Project) {\n    const newProjects = this.state.getValue().projects?.concat([project]);\n    if (newProjects) {\n      this.setState({\n        projects: newProjects,\n      });\n    }\n  }\n\n  private setRemoveProjectFromTeam(project: Project) {\n    const filteredTeams = this.state\n      .getValue()\n      .projectsOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: filteredTeams,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setAddProjectToTeam(project: Project) {\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const onTeam = this.state.getValue().projectsOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: onTeam,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setKeys(projectKeys: ProjectKey[]) {\n    this.setState({ projectKeys });\n  }\n\n  clearActiveProject() {\n    this.setState({ projectDetail: null, projectKeys: null });\n  }\n}\n",
            "properties": [
                {
                    "name": "addProjectToTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "removeProjectFromTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProjectError-1"
        },
        {
            "name": "ProjectIssueView",
            "id": "interface-ProjectIssueView-11da721fe3246d88fc632914b098238e",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "ProjectNew"
        },
        {
            "name": "ProjectKey",
            "id": "interface-ProjectKey-11da721fe3246d88fc632914b098238e",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "dsn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DSN",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "projectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "public",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectLoading",
            "id": "interface-ProjectLoading-afa7db4b8b5dfb6cbf0efdb300653ac7",
            "file": "src/app/settings/projects/project-settings.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { EMPTY } from \"rxjs\";\nimport { tap, map, catchError, filter, first } from \"rxjs/operators\";\nimport { OrganizationProject } from \"../../api/organizations/organizations.interface\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"src/app/shared/stateful-service/pagination-stateful-service\";\nimport {\n  Project,\n  ProjectDetail,\n  ProjectKey,\n  ProjectNew,\n} from \"../../api/projects/projects-api.interfaces\";\nimport { ProjectsAPIService } from \"../../api/projects/projects-api.service\";\nimport { ProjectKeysAPIService } from \"../../api/projects/project-keys-api.service\";\n\ninterface ProjectLoading {\n  addProjectToTeam: boolean;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectError {\n  addProjectToTeam: string;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectSettingsState extends PaginationStatefulServiceState {\n  projects: Project[] | null;\n  projectsOnTeam: Project[];\n  projectsNotOnTeam: Project[];\n  projectDetail: ProjectDetail | null;\n  projectKeys: ProjectKey[] | null;\n  loading: ProjectLoading;\n  errors: ProjectError;\n}\n\nconst initialState: ProjectSettingsState = {\n  projects: null,\n  projectsOnTeam: [],\n  projectsNotOnTeam: [],\n  projectDetail: null,\n  projectKeys: null,\n  loading: { addProjectToTeam: false, removeProjectFromTeam: \"\" },\n  errors: { addProjectToTeam: \"\", removeProjectFromTeam: \"\" },\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectSettingsService extends PaginationStatefulService<ProjectSettingsState> {\n  readonly projects$ = this.getState$.pipe(map((data) => data.projects));\n\n  readonly activeProject$ = this.getState$.pipe(\n    map((data) => data.projectDetail)\n  );\n  readonly activeProjectSlug$ = this.activeProject$.pipe(\n    map((data) => data?.slug)\n  );\n  readonly projectKeys$ = this.getState$.pipe(map((data) => data.projectKeys));\n\n  readonly projectsOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsOnTeam)\n  );\n  readonly projectsNotOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsNotOnTeam)\n  );\n  readonly addRemoveLoading$ = this.getState$.pipe(map((data) => data.loading));\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private projectsAPIService: ProjectsAPIService,\n    private projectKeysAPIService: ProjectKeysAPIService\n  ) {\n    super(initialState);\n  }\n\n  createProject(project: ProjectNew, teamSlug: string, orgSlug: string) {\n    return this.projectsAPIService\n      .create(project, teamSlug, orgSlug)\n      .pipe(tap((newProject) => this.addOneProject(newProject)));\n  }\n\n  retrieveProjects(organizationSlug: string) {\n    this.projectsAPIService\n      .list(organizationSlug)\n      .pipe(tap((projects) => this.setProjects(projects)))\n      .subscribe();\n  }\n\n  /**\n   * Calls retrieveProjectDetail with the active org slug and the slug of a\n   * single project. Project comes from either the URL or the active org list\n   *\n   * @param project An array of project IDs that come from the URL\n   * @param activeOrgProjects All projects associated with the active organization\n   * @param orgSlug Active organization slug\n   */\n  getProjectDetails(\n    project: string[] | null,\n    activeOrgProjects: OrganizationProject[] | null,\n    orgSlug: string\n  ) {\n    if (activeOrgProjects) {\n      let matchingProject: OrganizationProject | null = null;\n      if (project && project.length === 1) {\n        const match = activeOrgProjects.find(\n          (activeOrgProject) => activeOrgProject.id === parseInt(project[0], 10)\n        );\n        if (match) matchingProject = match;\n      } else if (activeOrgProjects.length === 1) {\n        matchingProject = activeOrgProjects[0];\n      }\n\n      if (matchingProject) {\n        this.retrieveProjectDetail(orgSlug, matchingProject.slug);\n      }\n    }\n  }\n\n  addProjectToTeam(orgSlug: string, teamSlug: string, projectSlug: string) {\n    this.setAddProjectToTeamLoading(true);\n    this.projectsAPIService\n      .addProjectToTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been added to #${teamSlug}`);\n          this.setAddProjectToTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setAddProjectToTeamError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeProjectFromTeam(\n    orgSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    this.setRemoveProjectFromTeamLoading(projectSlug);\n    return this.projectsAPIService\n      .removeProjectFromTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been removed from #${teamSlug}`);\n          this.setRemoveProjectFromTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setRemoveProjectFromTeamLoadingError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  retrieveProjectsOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `team:${teamSlug}`;\n    this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsPerTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectsNotOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `!team:${teamSlug}`;\n    return this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsNotOnTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectDetail(organizationSlug: string, projectSlug: string) {\n    this.projectsAPIService\n      .retrieve(organizationSlug, projectSlug)\n      .pipe(tap((activeProject) => this.setActiveProject(activeProject)))\n      .subscribe();\n  }\n\n  retrieveCurrentProjectClientKeys(organizationSlug: string) {\n    this.activeProject$\n      .pipe(\n        filter((project) => !!project),\n        first(),\n        tap((project) => {\n          return this.projectKeysAPIService\n            .list(organizationSlug, project!.slug)\n            .pipe(tap((projectKeys) => this.setKeys(projectKeys)))\n            .subscribe();\n        })\n      )\n      .subscribe();\n  }\n\n  updateProjectName(orgSlug: string, projectSlug: string, projectName: string) {\n    const data = { name: projectName };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  updateProjectPlatform(\n    orgSlug: string,\n    projectSlug: string,\n    projectPlatform: string,\n    projectName: string\n  ) {\n    const data = { name: projectName, platform: projectPlatform };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  deleteProject(organizationSlug: string, projectSlug: string) {\n    return this.projectsAPIService.destroy(organizationSlug, projectSlug);\n  }\n\n  private setAddProjectToTeamError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        addProjectToTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setAddProjectToTeamLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        addProjectToTeam: loading,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoading(projectSlug: string) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: projectSlug,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoadingError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        removeProjectFromTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setProjects(projects: Project[]) {\n    this.setState({ projects });\n  }\n\n  private setProjectsPerTeam(projectsOnTeam: Project[]) {\n    this.setState({\n      projectsOnTeam,\n    });\n  }\n\n  private setProjectsNotOnTeam(projectsNotOnTeam: Project[]) {\n    this.setState({\n      projectsNotOnTeam,\n    });\n  }\n\n  private setActiveProject(projectDetail: ProjectDetail) {\n    this.setState({\n      projectDetail,\n    });\n  }\n\n  private addOneProject(project: Project) {\n    const newProjects = this.state.getValue().projects?.concat([project]);\n    if (newProjects) {\n      this.setState({\n        projects: newProjects,\n      });\n    }\n  }\n\n  private setRemoveProjectFromTeam(project: Project) {\n    const filteredTeams = this.state\n      .getValue()\n      .projectsOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: filteredTeams,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setAddProjectToTeam(project: Project) {\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const onTeam = this.state.getValue().projectsOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: onTeam,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setKeys(projectKeys: ProjectKey[]) {\n    this.setState({ projectKeys });\n  }\n\n  clearActiveProject() {\n    this.setState({ projectDetail: null, projectKeys: null });\n  }\n}\n",
            "properties": [
                {
                    "name": "addProjectToTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "removeProjectFromTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectNew",
            "id": "interface-ProjectNew-11da721fe3246d88fc632914b098238e",
            "file": "src/app/api/projects/projects-api.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from \"../organizations/organizations.interface\";\n\nexport interface ProjectNew {\n  name: string;\n  platform: string;\n}\n\nexport interface ProjectIssueView extends ProjectNew {\n  id: string;\n  slug: string;\n  isMember?: boolean;\n}\n\nexport interface Project extends ProjectIssueView {\n  firstEvent: string | null;\n  dateCreated: string;\n  organization: Organization;\n}\n\nexport interface ProjectDetail extends Project {\n  avatar: Avatar;\n  color: string;\n  features: [];\n  hasAccess: boolean;\n  isBookmarked: boolean;\n  isInternal: boolean;\n  isMember: boolean;\n  isPublic: boolean;\n}\n\nexport interface DSN {\n  public: string;\n  security: string;\n}\n\nexport interface ProjectKey {\n  dateCreated: Date;\n  dsn: DSN;\n  id: string;\n  label: string;\n  public: string;\n  projectId: string;\n}\n\ninterface Avatar {\n  avatarType: string;\n  avatarUuid: string | null;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "platform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectSettingsState",
            "id": "interface-ProjectSettingsState-afa7db4b8b5dfb6cbf0efdb300653ac7",
            "file": "src/app/settings/projects/project-settings.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { EMPTY } from \"rxjs\";\nimport { tap, map, catchError, filter, first } from \"rxjs/operators\";\nimport { OrganizationProject } from \"../../api/organizations/organizations.interface\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"src/app/shared/stateful-service/pagination-stateful-service\";\nimport {\n  Project,\n  ProjectDetail,\n  ProjectKey,\n  ProjectNew,\n} from \"../../api/projects/projects-api.interfaces\";\nimport { ProjectsAPIService } from \"../../api/projects/projects-api.service\";\nimport { ProjectKeysAPIService } from \"../../api/projects/project-keys-api.service\";\n\ninterface ProjectLoading {\n  addProjectToTeam: boolean;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectError {\n  addProjectToTeam: string;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectSettingsState extends PaginationStatefulServiceState {\n  projects: Project[] | null;\n  projectsOnTeam: Project[];\n  projectsNotOnTeam: Project[];\n  projectDetail: ProjectDetail | null;\n  projectKeys: ProjectKey[] | null;\n  loading: ProjectLoading;\n  errors: ProjectError;\n}\n\nconst initialState: ProjectSettingsState = {\n  projects: null,\n  projectsOnTeam: [],\n  projectsNotOnTeam: [],\n  projectDetail: null,\n  projectKeys: null,\n  loading: { addProjectToTeam: false, removeProjectFromTeam: \"\" },\n  errors: { addProjectToTeam: \"\", removeProjectFromTeam: \"\" },\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectSettingsService extends PaginationStatefulService<ProjectSettingsState> {\n  readonly projects$ = this.getState$.pipe(map((data) => data.projects));\n\n  readonly activeProject$ = this.getState$.pipe(\n    map((data) => data.projectDetail)\n  );\n  readonly activeProjectSlug$ = this.activeProject$.pipe(\n    map((data) => data?.slug)\n  );\n  readonly projectKeys$ = this.getState$.pipe(map((data) => data.projectKeys));\n\n  readonly projectsOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsOnTeam)\n  );\n  readonly projectsNotOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsNotOnTeam)\n  );\n  readonly addRemoveLoading$ = this.getState$.pipe(map((data) => data.loading));\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private projectsAPIService: ProjectsAPIService,\n    private projectKeysAPIService: ProjectKeysAPIService\n  ) {\n    super(initialState);\n  }\n\n  createProject(project: ProjectNew, teamSlug: string, orgSlug: string) {\n    return this.projectsAPIService\n      .create(project, teamSlug, orgSlug)\n      .pipe(tap((newProject) => this.addOneProject(newProject)));\n  }\n\n  retrieveProjects(organizationSlug: string) {\n    this.projectsAPIService\n      .list(organizationSlug)\n      .pipe(tap((projects) => this.setProjects(projects)))\n      .subscribe();\n  }\n\n  /**\n   * Calls retrieveProjectDetail with the active org slug and the slug of a\n   * single project. Project comes from either the URL or the active org list\n   *\n   * @param project An array of project IDs that come from the URL\n   * @param activeOrgProjects All projects associated with the active organization\n   * @param orgSlug Active organization slug\n   */\n  getProjectDetails(\n    project: string[] | null,\n    activeOrgProjects: OrganizationProject[] | null,\n    orgSlug: string\n  ) {\n    if (activeOrgProjects) {\n      let matchingProject: OrganizationProject | null = null;\n      if (project && project.length === 1) {\n        const match = activeOrgProjects.find(\n          (activeOrgProject) => activeOrgProject.id === parseInt(project[0], 10)\n        );\n        if (match) matchingProject = match;\n      } else if (activeOrgProjects.length === 1) {\n        matchingProject = activeOrgProjects[0];\n      }\n\n      if (matchingProject) {\n        this.retrieveProjectDetail(orgSlug, matchingProject.slug);\n      }\n    }\n  }\n\n  addProjectToTeam(orgSlug: string, teamSlug: string, projectSlug: string) {\n    this.setAddProjectToTeamLoading(true);\n    this.projectsAPIService\n      .addProjectToTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been added to #${teamSlug}`);\n          this.setAddProjectToTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setAddProjectToTeamError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeProjectFromTeam(\n    orgSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    this.setRemoveProjectFromTeamLoading(projectSlug);\n    return this.projectsAPIService\n      .removeProjectFromTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been removed from #${teamSlug}`);\n          this.setRemoveProjectFromTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setRemoveProjectFromTeamLoadingError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  retrieveProjectsOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `team:${teamSlug}`;\n    this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsPerTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectsNotOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `!team:${teamSlug}`;\n    return this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsNotOnTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectDetail(organizationSlug: string, projectSlug: string) {\n    this.projectsAPIService\n      .retrieve(organizationSlug, projectSlug)\n      .pipe(tap((activeProject) => this.setActiveProject(activeProject)))\n      .subscribe();\n  }\n\n  retrieveCurrentProjectClientKeys(organizationSlug: string) {\n    this.activeProject$\n      .pipe(\n        filter((project) => !!project),\n        first(),\n        tap((project) => {\n          return this.projectKeysAPIService\n            .list(organizationSlug, project!.slug)\n            .pipe(tap((projectKeys) => this.setKeys(projectKeys)))\n            .subscribe();\n        })\n      )\n      .subscribe();\n  }\n\n  updateProjectName(orgSlug: string, projectSlug: string, projectName: string) {\n    const data = { name: projectName };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  updateProjectPlatform(\n    orgSlug: string,\n    projectSlug: string,\n    projectPlatform: string,\n    projectName: string\n  ) {\n    const data = { name: projectName, platform: projectPlatform };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  deleteProject(organizationSlug: string, projectSlug: string) {\n    return this.projectsAPIService.destroy(organizationSlug, projectSlug);\n  }\n\n  private setAddProjectToTeamError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        addProjectToTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setAddProjectToTeamLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        addProjectToTeam: loading,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoading(projectSlug: string) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: projectSlug,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoadingError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        removeProjectFromTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setProjects(projects: Project[]) {\n    this.setState({ projects });\n  }\n\n  private setProjectsPerTeam(projectsOnTeam: Project[]) {\n    this.setState({\n      projectsOnTeam,\n    });\n  }\n\n  private setProjectsNotOnTeam(projectsNotOnTeam: Project[]) {\n    this.setState({\n      projectsNotOnTeam,\n    });\n  }\n\n  private setActiveProject(projectDetail: ProjectDetail) {\n    this.setState({\n      projectDetail,\n    });\n  }\n\n  private addOneProject(project: Project) {\n    const newProjects = this.state.getValue().projects?.concat([project]);\n    if (newProjects) {\n      this.setState({\n        projects: newProjects,\n      });\n    }\n  }\n\n  private setRemoveProjectFromTeam(project: Project) {\n    const filteredTeams = this.state\n      .getValue()\n      .projectsOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: filteredTeams,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setAddProjectToTeam(project: Project) {\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const onTeam = this.state.getValue().projectsOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: onTeam,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setKeys(projectKeys: ProjectKey[]) {\n    this.setState({ projectKeys });\n  }\n\n  clearActiveProject() {\n    this.setState({ projectDetail: null, projectKeys: null });\n  }\n}\n",
            "properties": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectError",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectLoading",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "projectDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectDetail | null",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "projectKeys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectKey[] | null",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[] | null",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "projectsNotOnTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "projectsOnTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "PaginationStatefulServiceState"
        },
        {
            "name": "ProjectsState",
            "id": "interface-ProjectsState-515134fecb35529a2a13b1d7d5a34a0a",
            "file": "src/app/projects/projects.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { map, tap } from \"rxjs/operators\";\nimport { Project } from \"../api/projects/projects-api.interfaces\";\nimport { ProjectsAPIService } from \"../api/projects/projects-api.service\";\nimport { StatefulService } from \"../shared/stateful-service/stateful-service\";\n\ninterface ProjectsState {\n  projects: Project[] | null;\n  initialLoadComplete: boolean;\n  loading: boolean;\n}\n\nconst initialState: ProjectsState = {\n  projects: null,\n  initialLoadComplete: false,\n  loading: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectsService extends StatefulService<ProjectsState> {\n  readonly projects$ = this.getState$.pipe(map((data) => data.projects));\n  readonly initialLoadComplete$ = this.getState$.pipe(\n    map((state) => state.initialLoadComplete)\n  );\n  readonly loading$ = this.getState$.pipe(map((state) => state.loading));\n\n  constructor(private projectsAPIService: ProjectsAPIService) {\n    super(initialState);\n  }\n\n  retrieveProjects() {\n    this.setState({ loading: true });\n    this.projectsAPIService\n      .list()\n      .pipe(tap((projects) => this.setProjects(projects)))\n      .subscribe();\n  }\n\n  private setProjects(projects: Project[]) {\n    this.setState({ projects, initialLoadComplete: true, loading: false });\n  }\n}\n",
            "properties": [
                {
                    "name": "initialLoadComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[] | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ProjectsState",
            "id": "interface-ProjectsState-21bd8a56e0e87ffbad064bab18740844-1",
            "file": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport { filter, map, mergeMap, takeWhile, tap } from \"rxjs/operators\";\nimport { ProjectEnvironment } from \"src/app/api/organizations/organizations.interface\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { ProjectsAPIService } from \"src/app/api/projects/projects-api.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\nimport { ProjectSettingsService } from \"../../project-settings.service\";\n\ninterface ProjectsState {\n  initialLoad: boolean;\n  toggleHiddenLoading: number | null;\n  error: string;\n  environments: ProjectEnvironment[];\n}\n\nconst initialState: ProjectsState = {\n  initialLoad: false,\n  toggleHiddenLoading: null,\n  error: \"\",\n  environments: [],\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectEnvironmentsService extends StatefulService<ProjectsState> {\n  readonly initialLoad$ = this.getState$.pipe(map((data) => data.initialLoad));\n  readonly toggleHiddenLoading$ = this.getState$.pipe(\n    map((data) => data.toggleHiddenLoading)\n  );\n  readonly error$ = this.getState$.pipe(map((data) => data.error));\n  readonly environments$ = this.getState$.pipe(\n    map((data) => data.environments)\n  );\n  readonly sortedEnvironments$ = this.environments$.pipe(\n    map((environments) => {\n      if (environments.length === 0) return null;\n      const visible = {\n        heading: \"Visible\",\n        environments: environments.filter(\n          (environment) => environment.isHidden === false\n        ),\n      };\n      const hidden = {\n        heading: \"Hidden\",\n        environments: environments.filter(\n          (environment) => environment.isHidden === true\n        ),\n      };\n      const sorted = [];\n      if (visible.environments.length > 0) sorted.push(visible);\n      if (hidden.environments.length > 0) sorted.push(hidden);\n      return sorted;\n    })\n  );\n  readonly visibleEnvironments$ = this.environments$.pipe(\n    map((environments) =>\n      environments\n        .filter((environment) => environment.isHidden === false)\n        .map((environment) => environment.name)\n    )\n  );\n  readonly visibleEnvironmentsLoaded$ = this.getState$.pipe(\n    filter(({ initialLoad }) => initialLoad === true),\n    map((state) =>\n      state.environments\n        .filter((environment) => environment.isHidden === false)\n        .map((environment) => environment.name)\n    )\n  );\n\n  constructor(\n    private projectsAPIService: ProjectsAPIService,\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService\n  ) {\n    super(initialState);\n  }\n\n  retrieveEnvironments() {\n    return combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ]).pipe(\n      takeWhile(([orgSlug, projectSlug]) => !orgSlug || !projectSlug, true),\n      mergeMap(([orgSlug, projectSlug]) => {\n        if (orgSlug && projectSlug) {\n          return this.projectsAPIService\n            .listEnvironments(orgSlug, projectSlug)\n            .pipe(\n              tap((environments) =>\n                this.setState({\n                  environments: this.sortEnvironments(environments),\n                  initialLoad: true,\n                })\n              )\n            );\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  retrieveEnvironmentsWithProperties(orgSlug: string, projectSlug: string) {\n    return this.projectsAPIService.listEnvironments(orgSlug, projectSlug).pipe(\n      tap((environments) =>\n        this.setState({\n          environments: this.sortEnvironments(environments),\n          initialLoad: true,\n        })\n      )\n    );\n  }\n\n  updateEnvironment(environment: ProjectEnvironment) {\n    return combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ]).pipe(\n      takeWhile(([orgSlug, projectSlug]) => !orgSlug || !projectSlug, true),\n      mergeMap(([orgSlug, projectSlug]) => {\n        if (orgSlug && projectSlug) {\n          this.setState({ toggleHiddenLoading: environment.id });\n\n          return this.projectsAPIService\n            .updateEnvironment(orgSlug, projectSlug, environment)\n            .pipe(\n              tap((updatedEnvironment) =>\n                this.setState({\n                  environments: this.updatedEnvironments(updatedEnvironment),\n                  toggleHiddenLoading: null,\n                })\n              )\n            );\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  private sortEnvironments(environments: ProjectEnvironment[]) {\n    // https://stackoverflow.com/a/17387454/\n    return environments.sort((a, b) =>\n      a.isHidden === b.isHidden ? 0 : a.isHidden ? 1 : -1\n    );\n  }\n\n  private updatedEnvironments(newEnvironment: ProjectEnvironment) {\n    const currentEnvironments = this.state.getValue().environments;\n    const environmentToReplace = currentEnvironments.findIndex(\n      (currentEnvironment) => currentEnvironment.name === newEnvironment.name\n    );\n    currentEnvironments[environmentToReplace] = newEnvironment;\n    return this.sortEnvironments(currentEnvironments);\n  }\n}\n",
            "properties": [
                {
                    "name": "environments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectEnvironment[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "initialLoad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "toggleHiddenLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProjectsState-1"
        },
        {
            "name": "ProjectWithAlertStatus",
            "id": "interface-ProjectWithAlertStatus-ffd9b50ee6169eac72bcc74f5235f690",
            "file": "src/app/profile/notifications/notifications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Project } from \"src/app/api/projects/projects-api.interfaces\";\n\nexport interface SubscribeByDefault {\n  subscribeByDefault: boolean;\n}\n\nexport type NotificationStatus = number;\n\nexport interface ProjectWithAlertStatus extends Project {\n  alertStatus: NotificationStatus;\n}\n\nexport interface ProjectAlerts {\n  [key: string]: NotificationStatus;\n}\n\nexport interface GroupedProjects {\n  [key: number]: ProjectWithAlertStatus[];\n}\n\nexport interface ProjectError {\n  error: string;\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "alertStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationStatus",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Project"
        },
        {
            "name": "RecipientDialogState",
            "id": "interface-RecipientDialogState-9ff7f269ccc31b6de9b8cfc490dae1c9",
            "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport {\n  tap,\n  map,\n  mergeMap,\n  take,\n  catchError,\n  exhaustMap,\n} from \"rxjs/operators\";\nimport { OrganizationsService } from \"../../../../api/organizations/organizations.service\";\nimport { ProjectAlertsAPIService } from \"../../../../api/projects/project-alerts/project-alerts.service\";\nimport {\n  AlertRecipient,\n  NewAlertRecipient,\n  NewProjectAlert,\n  ProjectAlert,\n} from \"../../../../api/projects/project-alerts/project-alerts.interface\";\nimport { ProjectSettingsService } from \"../../project-settings.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\ninterface NewAlertState {\n  newAlertOpen: boolean;\n  newProjectAlertRecipients: NewAlertRecipient[] | null;\n  newAlertLoading: boolean;\n  newAlertError: string | null;\n}\n\ninterface RecipientDialogState {\n  recipientError: string | null;\n  recipientDialogOpen: ProjectAlert | boolean;\n  activeAlert: ProjectAlert | null;\n}\n\ninterface ProjectAlertState {\n  initialLoad: boolean;\n  initialLoadError: string | null;\n  projectAlerts: ProjectAlert[] | null;\n  newAlertState: NewAlertState;\n  recipientDialogState: RecipientDialogState;\n  // current alerts\n  removeAlertLoading: number | null;\n  removeAlertError: { error: string; pk: number } | null;\n  updateTimespanQuantityLoading: number | null;\n  updateTimespanQuantityError: { error: string; pk: number } | null;\n  deleteRecipientLoading: number | null;\n}\n\nconst initialNewAlertState = {\n  newAlertOpen: false,\n  newProjectAlertRecipients: null,\n  newAlertLoading: false,\n  newAlertError: null,\n};\n\nconst initialRecipientDialogState = {\n  recipientError: null,\n  recipientDialogOpen: false,\n  activeAlert: null,\n};\n\nconst initialState: ProjectAlertState = {\n  initialLoad: false,\n  initialLoadError: null,\n  projectAlerts: null,\n  newAlertState: initialNewAlertState,\n  recipientDialogState: initialRecipientDialogState,\n  // current alerts\n  removeAlertLoading: null,\n  removeAlertError: null,\n  updateTimespanQuantityLoading: null,\n  updateTimespanQuantityError: null,\n  deleteRecipientLoading: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectAlertsService extends StatefulService<ProjectAlertState> {\n  readonly initialLoad$ = this.getState$.pipe(map((data) => data.initialLoad));\n  readonly initialLoadError$ = this.getState$.pipe(\n    map((data) => data.initialLoadError)\n  );\n  readonly projectAlert$ = this.getState$.pipe(\n    map((data) => data.projectAlerts)\n  );\n\n  /** New Alert */\n  readonly newAlertOpen$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertOpen)\n  );\n  readonly newProjectAlertRecipients$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newProjectAlertRecipients)\n  );\n  readonly newAlertLoading$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertLoading)\n  );\n  readonly newAlertError$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertError)\n  );\n\n  /** Recipient Dialog */\n  readonly recipientError$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientError)\n  );\n  readonly recipientDialogOpen$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientDialogOpen)\n  );\n  readonly activeAlert$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.activeAlert)\n  );\n  readonly emailSelected$ = combineLatest([\n    this.newProjectAlertRecipients$,\n    this.activeAlert$,\n  ]).pipe(\n    map(([newRecipients, activeAlert]) => {\n      if (activeAlert?.pk) {\n        return activeAlert.alertRecipients.some(\n          (data) => data.recipientType === \"email\"\n        );\n      } else if (newRecipients !== null) {\n        return newRecipients.some((data) => data.recipientType === \"email\");\n      }\n      return;\n    })\n  );\n\n  /** Current Alerts */\n  readonly removeAlertLoading$ = this.getState$.pipe(\n    map((data) => data.removeAlertLoading)\n  );\n  readonly removeAlertError$ = this.getState$.pipe(\n    map((data) => data.removeAlertError)\n  );\n  readonly updateTimespanQuantityLoading$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityLoading)\n  );\n  readonly updateTimespanQuantityError$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityError)\n  );\n  readonly deleteRecipientLoading$ = this.getState$.pipe(\n    map((data) => data.deleteRecipientLoading)\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService,\n    private projectAlertsAPIService: ProjectAlertsAPIService,\n    private snackBar: MatSnackBar\n  ) {\n    super(initialState);\n  }\n\n  /** Actions */\n  listProjectAlerts() {\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService.list(orgSlug, projectSlug).pipe(\n              tap((projectAlerts) => {\n                this.setProjectAlertsList(projectAlerts);\n              }),\n              catchError((err: HttpErrorResponse) => {\n                this.setProjectAlertsListError(err);\n                return EMPTY;\n              })\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** New Alert Actions */\n  openNewAlert() {\n    this.setOpenNewAlert();\n  }\n\n  closeNewAlert() {\n    this.setCloseNewAlert();\n  }\n\n  addAlertRecipient(event: NewAlertRecipient) {\n    // Force https:// if no protocol exists\n    if (event.url && !event.url.startsWith(\"http\")) {\n      event.url = \"https://\" + event.url;\n    }\n    combineLatest([this.newProjectAlertRecipients$, this.activeAlert$])\n      .pipe(\n        take(1),\n        exhaustMap(([newRecipients, activeAlert]) => {\n          if (newRecipients !== null) {\n            this.setAddNewAlertRecipient(event);\n          } else if (activeAlert?.alertRecipients !== null) {\n            this.updateAlertRecipient(event);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeNewAlertRecipient(url: string) {\n    this.setRemoveNewAlertRecipient(url);\n  }\n\n  createNewAlert(timeQuantity: { timespan_minutes: number; quantity: number }) {\n    this.setNewAlertLoading();\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n      this.newProjectAlertRecipients$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug, recipients]) => {\n          if (orgSlug && projectSlug && timeQuantity && recipients !== null) {\n            const data: NewProjectAlert = {\n              timespan_minutes: timeQuantity.timespan_minutes,\n              quantity: timeQuantity.quantity,\n              alertRecipients: recipients,\n            };\n            return this.projectAlertsAPIService\n              .create(data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setCreateAlert(resp);\n                  this.snackBar.open(`Success! Your new alert has been added.`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setCreateAlertError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** Update Actions */\n  deleteProjectAlert(pk: number) {\n    this.setDeleteAlertLoading(pk);\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .destroy(pk.toString(), orgSlug, projectSlug)\n              .pipe(\n                tap((_) => {\n                  this.setDeleteProjectAlert(pk);\n                  this.snackBar.open(`Success: Your alert has been deleted`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteAlertError(err, pk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateTimespanQuantity(\n    newTimespan: number,\n    newQuantity: number,\n    id: number,\n    recipients: AlertRecipient[]\n  ) {\n    this.setUpdateTimespanQuantityLoading(id);\n    const data: ProjectAlert = {\n      pk: id,\n      timespan_minutes: newTimespan,\n      quantity: newQuantity,\n      alertRecipients: recipients,\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(id.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateTimespanQuantity(resp);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateTimespanQuantityError(err, id);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateAlertRecipient(newRecipient: NewAlertRecipient) {\n    let activeErrorPk = 0;\n    combineLatest([\n      this.activeAlert$,\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([activeAlert, orgSlug, projectSlug]) => {\n          if (activeAlert && orgSlug && projectSlug) {\n            activeErrorPk = activeAlert.pk;\n            const recipientsWithoutPK: NewAlertRecipient[] = activeAlert.alertRecipients\n              .map((recipient) => {\n                return {\n                  recipientType: recipient.recipientType,\n                  url: recipient.url,\n                };\n              })\n              .concat([newRecipient]);\n            const data = {\n              timespan_minutes: activeAlert.timespan_minutes,\n              quantity: activeAlert.quantity,\n              alertRecipients: recipientsWithoutPK,\n            };\n            return this.projectAlertsAPIService\n              .update(activeAlert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateAlertRecipientsError(err, activeErrorPk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  deleteAlertRecipient(recipientToRemove: AlertRecipient, alert: ProjectAlert) {\n    this.setDeleteRecipientLoading(recipientToRemove.pk);\n    const data = {\n      ...alert,\n      alertRecipients: alert.alertRecipients.filter(\n        (currentRecipient) => currentRecipient.pk !== recipientToRemove.pk\n      ),\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(alert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(\n                    `Success: Your recipient has been deleted`\n                  );\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteRecipientError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  openUpdateRecipientDialog(alert: ProjectAlert) {\n    this.setOpenUpdateRecipientDialog(alert);\n  }\n\n  openCreateRecipientDialog() {\n    this.setOpenCreateRecipientDialog();\n  }\n\n  closeRecipientDialog() {\n    this.setCloseRecipientDialog();\n  }\n\n  /** Set state */\n\n  private setProjectAlertsList(alerts: ProjectAlert[]) {\n    this.setState({\n      projectAlerts: alerts,\n      initialLoad: true,\n      initialLoadError: null,\n    });\n  }\n\n  private setProjectAlertsListError(err: HttpErrorResponse) {\n    this.setState({\n      initialLoad: true,\n      initialLoadError: `There was an error loading your alerts. Try refreshing the page.`,\n    });\n  }\n\n  /** New Alert */\n\n  private setOpenNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: true,\n        newProjectAlertRecipients: [{ recipientType: \"email\", url: \"\" }],\n      },\n    });\n  }\n\n  private setCloseNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: false,\n        newAlertError: null,\n        newProjectAlertRecipients: null,\n      },\n    });\n  }\n\n  private setAddNewAlertRecipient(recipient: NewAlertRecipient) {\n    const newAlertState = this.state.getValue().newAlertState;\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.concat([recipient]) ?? null,\n      },\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n      },\n    });\n  }\n\n  private setRemoveNewAlertRecipient(url: string) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.filter(\n            (recipient) => recipient.url !== url\n          ) ?? null,\n      },\n    });\n  }\n\n  private setNewAlertLoading() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertLoading: true,\n      },\n    });\n  }\n\n  private setCreateAlert(alert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: state.projectAlerts?.concat([alert]),\n      newAlertState: initialNewAlertState,\n    });\n  }\n\n  private setCreateAlertError(error: HttpErrorResponse) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertError: `${error.statusText} : ${error.status}`,\n        newAlertLoading: false,\n      },\n    });\n  }\n\n  private setOpenCreateRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  /** Recipient Dialog */\n\n  private setCloseRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setOpenUpdateRecipientDialog(alert: ProjectAlert) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: alert,\n      },\n    });\n  }\n\n  /** Alert Updates */\n\n  private setDeleteAlertLoading(pk: number) {\n    this.setState({\n      removeAlertLoading: pk,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteProjectAlert(pk: number) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts:\n        state.projectAlerts?.filter((alert) => alert.pk !== pk) ?? null,\n      removeAlertLoading: null,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteAlertError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      removeAlertError: {\n        ...state.removeAlertError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n      removeAlertLoading: null,\n    });\n  }\n\n  private setUpdateTimespanQuantity(updatedAlert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: this.findAndReplaceAlert(\n        state.projectAlerts,\n        updatedAlert\n      ),\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityLoading(pk: number) {\n    this.setState({\n      updateTimespanQuantityLoading: pk,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: {\n        ...state.updateTimespanQuantityError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipientsError(err: HttpErrorResponse, id: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipients(recipients: AlertRecipient[], id: number) {\n    const state = this.state.getValue();\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      projectAlerts: state.projectAlerts?.map((alert) =>\n        alert.pk === id ? { ...alert, alertRecipients: recipients } : alert\n      ),\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n      deleteRecipientLoading: null,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientLoading(pk: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n      },\n      deleteRecipientLoading: pk,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientError(err: HttpErrorResponse) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n      },\n      deleteRecipientLoading: null,\n    });\n  }\n\n  /** Utility Functions */\n\n  findAndReplaceAlert(\n    currentAlerts: ProjectAlert[] | null,\n    newAlert: ProjectAlert\n  ): ProjectAlert[] | null {\n    const updatedAlert = currentAlerts?.map((alert) => {\n      if (alert.pk === newAlert.pk) {\n        return {\n          ...alert,\n          timespan_minutes: newAlert.timespan_minutes,\n          quantity: newAlert.quantity,\n        };\n      } else return alert;\n    });\n    return updatedAlert !== undefined ? updatedAlert : null;\n  }\n}\n",
            "properties": [
                {
                    "name": "activeAlert",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectAlert | null",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "recipientDialogOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectAlert | boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "recipientError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Request",
            "id": "interface-Request-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "cookies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": true,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "env",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": true,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "fragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[][]",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "inferredContentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 141
                },
                {
                    "name": "method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "query_string",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 148
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ResetPasswordState",
            "id": "interface-ResetPasswordState-7acd8e66931ea675a887fe31a63a038f",
            "file": "src/app/api/reset-password/reset-password.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap, catchError, map } from \"rxjs/operators\";\nimport { EMPTY, BehaviorSubject } from \"rxjs\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\n\ninterface ResetPasswordState {\n  setNewPasswordError: string;\n  setNewPasswordLoading: boolean;\n  sendResetEmailError: string;\n  sendResetEmailLoading: boolean;\n  sendResetEmailSuccess: string;\n}\n\nconst initialState: ResetPasswordState = {\n  setNewPasswordError: \"\",\n  setNewPasswordLoading: false,\n  sendResetEmailError: \"\",\n  sendResetEmailLoading: false,\n  sendResetEmailSuccess: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ResetPasswordService {\n  private readonly resetUrl = \"/rest-auth/password/reset/\";\n  private readonly confirmUrl = \"/rest-auth/password/reset/confirm/\";\n  private readonly state = new BehaviorSubject<ResetPasswordState>(\n    initialState\n  );\n  private readonly getState$ = this.state.asObservable();\n  readonly setNewPasswordError$ = this.getState$.pipe(\n    map((data) => data.setNewPasswordError)\n  );\n  readonly setNewPasswordLoading$ = this.getState$.pipe(\n    map((data) => data.setNewPasswordLoading)\n  );\n  readonly sendResetEmailError$ = this.getState$.pipe(\n    map((data) => data.sendResetEmailError)\n  );\n  readonly sendResetEmailLoading$ = this.getState$.pipe(\n    map((data) => data.sendResetEmailLoading)\n  );\n  readonly sendResetEmailSuccess$ = this.getState$.pipe(\n    map((data) => data.sendResetEmailSuccess)\n  );\n\n  constructor(\n    private http: HttpClient,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  sendResetEmail(email: string) {\n    this.setSendResetEmailLoading(true);\n    this.postEmailToReset(email)\n      .pipe(\n        tap((_) => {\n          console.log(_);\n          this.setSendResetEmailLoading(false),\n            this.setSendResetEmailSuccess(\n              `If you have an account with GlitchTip, an email has been sent to ${email}`\n            );\n        }),\n        catchError((error) => {\n          this.setSendResetEmailLoading(false);\n          if (error.status === 500) {\n            this.setSendResetEmailError(\n              \"There was a problem on our end. Try again later.\"\n            );\n          } else if (error.error?.detail) {\n            this.setSendResetEmailError(error.error.detail);\n          } else {\n            this.setSendResetEmailError(\n              \"There was a problem. Try again later.\"\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  setNewPassword(\n    newPassword1: string,\n    newPassword2: string,\n    uid: string,\n    token: string\n  ) {\n    this.setNewPasswordLoading(true);\n    this.postNewPassword(newPassword1, newPassword2, uid, token)\n      .pipe(\n        tap((_) => {\n          this.setNewPasswordLoading(false);\n          this.snackBar.open(\"Your password has been changed.\");\n          this.router.navigate([\"/login\"]);\n        }),\n        catchError((error) => {\n          this.setNewPasswordLoading(false);\n          if (error.status === 500) {\n            this.setNewPasswordError(\n              \"There was a problem on our end. Try again later.\"\n            );\n          } else if (error.error?.detail) {\n            this.setNewPasswordError(error.error.detail);\n          } else {\n            this.setNewPasswordError(\"There was a problem. Try again later.\");\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  private postEmailToReset(email: string) {\n    return this.http.post<string>(this.resetUrl, { email });\n  }\n\n  private postNewPassword(\n    newPassword1: string,\n    newPassword2: string,\n    uid: string,\n    token: string\n  ) {\n    return this.http.post<string>(this.confirmUrl, {\n      new_password1: newPassword1,\n      new_password2: newPassword2,\n      uid,\n      token,\n    });\n  }\n\n  clearState() {\n    this.state.next(initialState);\n  }\n\n  private setNewPasswordError(errorMessage: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      setNewPasswordError: errorMessage,\n    });\n  }\n\n  private setNewPasswordLoading(loading: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      setNewPasswordLoading: loading,\n    });\n  }\n\n  private setSendResetEmailError(errorMessage: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      sendResetEmailError: errorMessage,\n    });\n  }\n\n  private setSendResetEmailLoading(loading: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      sendResetEmailLoading: loading,\n    });\n  }\n\n  private setSendResetEmailSuccess(message: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      sendResetEmailSuccess: message,\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "sendResetEmailError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "sendResetEmailLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sendResetEmailSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "setNewPasswordError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "setNewPasswordLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "RestAuthConnectData",
            "id": "interface-RestAuthConnectData-b593edc12d7b600245a899585c36f015",
            "file": "src/app/api/oauth/oauth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { getOAuthConfig } from \"./social\";\nimport { OAuthProvider } from \"./oauth.interfaces\";\n\ninterface RestAuthConnectData {\n  access_token?: string;\n  code?: string;\n}\n\ninterface RestAuthLoginResp {\n  key: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlitchTipOAuthService {\n  private readonly baseUrl = \"rest-auth\";\n\n  constructor(private http: HttpClient) {}\n\n  githubLogin(code: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      code,\n    };\n    let url = this.baseUrl + \"/github/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  microsoftLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/microsoft/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  googleLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/google/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  gitlabLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/gitlab/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  initGitlabLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"gitlab\");\n  }\n\n  initGithubLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"github\");\n  }\n\n  initGoogleLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"google\");\n  }\n\n  initMicrosoftLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"microsoft\");\n  }\n\n  /** Redirect user to OAuth provider auth URL */\n  private initOAuthLogin(clientId: string, provider: OAuthProvider) {\n    const config = getOAuthConfig(provider);\n    if (config) {\n      const params = new URLSearchParams({\n        response_type: \"token\",\n        client_id: clientId,\n        redirect_uri: window.location.origin + \"/auth/\" + provider,\n        scope: config.scope,\n      });\n      const url = `${config.loginURL}?${params.toString()}`;\n      window.location.href = url;\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "access_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "RestAuthLoginResp",
            "id": "interface-RestAuthLoginResp-b593edc12d7b600245a899585c36f015",
            "file": "src/app/api/oauth/oauth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { getOAuthConfig } from \"./social\";\nimport { OAuthProvider } from \"./oauth.interfaces\";\n\ninterface RestAuthConnectData {\n  access_token?: string;\n  code?: string;\n}\n\ninterface RestAuthLoginResp {\n  key: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlitchTipOAuthService {\n  private readonly baseUrl = \"rest-auth\";\n\n  constructor(private http: HttpClient) {}\n\n  githubLogin(code: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      code,\n    };\n    let url = this.baseUrl + \"/github/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  microsoftLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/microsoft/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  googleLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/google/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  gitlabLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/gitlab/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  initGitlabLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"gitlab\");\n  }\n\n  initGithubLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"github\");\n  }\n\n  initGoogleLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"google\");\n  }\n\n  initMicrosoftLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"microsoft\");\n  }\n\n  /** Redirect user to OAuth provider auth URL */\n  private initOAuthLogin(clientId: string, provider: OAuthProvider) {\n    const config = getOAuthConfig(provider);\n    if (config) {\n      const params = new URLSearchParams({\n        response_type: \"token\",\n        client_id: clientId,\n        redirect_uri: window.location.origin + \"/auth/\" + provider,\n        scope: config.scope,\n      });\n      const url = `${config.loginURL}?${params.toString()}`;\n      window.location.href = url;\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "SettingsState",
            "id": "interface-SettingsState-2eb9df44f256c04efe056f37f63bb502",
            "file": "src/app/api/settings.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as Sentry from \"@sentry/angular\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { SocialApp } from \"./user/user.interfaces\";\n\ninterface SettingsState {\n  socialApps: SocialApp[];\n  billingEnabled: boolean;\n  iPaidForGlitchTip: boolean | null;\n  enableUserRegistration: boolean;\n  matomoURL: string | null;\n  matomoSiteId: string | null;\n  chatwootWebsiteToken: string | null;\n  stripePublicKey: string | null;\n  sentryDSN: string | null;\n  sentryTracesSampleRate: number | null;\n  environment: string | null;\n  version: string | null;\n}\n\nconst initialState: SettingsState = {\n  socialApps: [],\n  billingEnabled: false,\n  iPaidForGlitchTip: null,\n  enableUserRegistration: false,\n  matomoURL: null,\n  matomoSiteId: null,\n  chatwootWebsiteToken: null,\n  stripePublicKey: null,\n  sentryDSN: null,\n  sentryTracesSampleRate: null,\n  environment: null,\n  version: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SettingsService {\n  private readonly state = new BehaviorSubject<SettingsState>(initialState);\n  socialApps$ = this.state.pipe(map((settings) => settings.socialApps));\n  billingEnabled$ = this.state.pipe(map((settings) => settings.billingEnabled));\n  paidForGlitchTip$ = this.state.pipe(\n    map((settings) => settings.iPaidForGlitchTip)\n  );\n  stripePublicKey$ = this.state.pipe(\n    map((settings) => settings.stripePublicKey)\n  );\n  enableUserRegistration$ = this.state.pipe(\n    map((settings) => settings.enableUserRegistration)\n  );\n  private readonly url = \"/api/settings/\";\n\n  constructor(private http: HttpClient) {}\n\n  /** Get and set conf settings from backend. Typically run on application start */\n  getSettings() {\n    return this.retrieveSettings().pipe(\n      tap((settings) => this.setSettings(settings)),\n      tap((settings) => {\n        if (settings.matomoSiteId && settings.matomoURL) {\n          // tslint:disable:no-any\n          const _PAQ = ((window as any)._paq = (window as any)._paq || []);\n          /* tracker methods like \"setCustomDimension\" should be called before \"trackPageView\" */\n          _PAQ.push([\"trackPageView\"]);\n          _PAQ.push([\"enableLinkTracking\"]);\n          const u = settings.matomoURL;\n          _PAQ.push([\"setTrackerUrl\", u + \"matomo.php\"]);\n          _PAQ.push([\"setSiteId\", settings.matomoSiteId]);\n          _PAQ.push([\"setDomains\", [\"glitchtip.com\", \"app.glitchtip.com\"]]);\n          _PAQ.push([\"enableCrossDomainLinking\"]);\n          const d = document;\n          const g = d.createElement(\"script\");\n          const s = d.getElementsByTagName(\"script\")[0];\n          g.type = \"text/javascript\";\n          g.async = true;\n          g.defer = true;\n          g.src = u + \"matomo.js\";\n          s.parentNode!.insertBefore(g, s);\n        }\n      }),\n      tap((settings) => {\n        if (settings.sentryDSN) {\n          Sentry.init({\n            dsn: settings.sentryDSN,\n            environment: settings.environment\n              ? settings.environment\n              : undefined,\n            release: settings.version\n              ? \"glitchtip@\" + settings.version\n              : undefined,\n            autoSessionTracking: false,\n            tracesSampleRate: settings.sentryTracesSampleRate\n              ? settings.sentryTracesSampleRate\n              : undefined,\n          });\n        }\n      }),\n      tap((settings) => {\n        if (settings.chatwootWebsiteToken) {\n          // tslint:disable:only-arrow-functions\n          // tslint:disable:space-before-function-paren\n          // tslint:disable:one-variable-per-declaration\n          (function (d, t) {\n            const BASE_URL = \"https://app.chatwoot.com\";\n            const g: any = d.createElement(t),\n              s: any = d.getElementsByTagName(t)[0];\n            g.src = BASE_URL + \"/packs/js/sdk.js\";\n            s.parentNode.insertBefore(g, s);\n            g.onload = function () {\n              (window as any).chatwootSDK.run({\n                websiteToken: settings.chatwootWebsiteToken,\n                baseUrl: BASE_URL,\n              });\n            };\n          })(document, \"script\");\n        }\n      })\n    );\n  }\n\n  private retrieveSettings() {\n    return this.http.get<SettingsState>(this.url);\n  }\n\n  private setSettings(settings: SettingsState) {\n    this.state.next(settings);\n  }\n}\n",
            "properties": [
                {
                    "name": "billingEnabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "chatwootWebsiteToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "enableUserRegistration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "iPaidForGlitchTip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "matomoSiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "matomoURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sentryDSN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "sentryTracesSampleRate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "socialApps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialApp[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "stripePublicKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "SocialAccount",
            "id": "interface-SocialAccount-1ba0165fb70f1e3206a6a41046d99e6c",
            "file": "src/app/api/user/user.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OAuthProvider } from \"../oauth/oauth.interfaces\";\nimport { Avatar } from \"../organizations/organizations.interface\";\n\nexport interface SocialAccount {\n  id: number;\n  provider: OAuthProvider;\n  uid: string;\n  last_login: string;\n  date_joined: string;\n  email: string;\n  username: string | null;\n}\n\nexport interface SocialApp {\n  provider: OAuthProvider;\n  name: string;\n  client_id: string;\n}\n\nexport interface User {\n  username: string;\n  lastLogin: string;\n  isSuperuser: boolean;\n  emails: Email[];\n  isManaged: boolean;\n  lastActive: string;\n  identities: SocialAccount[];\n  id: string;\n  isActive: boolean;\n  has2fa: boolean;\n  canReset2fa: boolean;\n  name: string;\n  avatarUrl: string;\n  authenticators: [];\n  dateJoined: string;\n  options: UserOptions;\n  flags: object;\n  avatar: Avatar;\n  hasPasswordAuth: boolean;\n  permissions: [];\n  email: string;\n}\n\ninterface Email {\n  is_verified: boolean;\n  id: string;\n  email: string;\n}\n\ninterface UserOptions {\n  timezone: string;\n  stacktraceOrder: number;\n  language: string;\n  clock24Hours: boolean;\n}\n",
            "properties": [
                {
                    "name": "date_joined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "last_login",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "provider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OAuthProvider",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "SocialApp",
            "id": "interface-SocialApp-1ba0165fb70f1e3206a6a41046d99e6c",
            "file": "src/app/api/user/user.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OAuthProvider } from \"../oauth/oauth.interfaces\";\nimport { Avatar } from \"../organizations/organizations.interface\";\n\nexport interface SocialAccount {\n  id: number;\n  provider: OAuthProvider;\n  uid: string;\n  last_login: string;\n  date_joined: string;\n  email: string;\n  username: string | null;\n}\n\nexport interface SocialApp {\n  provider: OAuthProvider;\n  name: string;\n  client_id: string;\n}\n\nexport interface User {\n  username: string;\n  lastLogin: string;\n  isSuperuser: boolean;\n  emails: Email[];\n  isManaged: boolean;\n  lastActive: string;\n  identities: SocialAccount[];\n  id: string;\n  isActive: boolean;\n  has2fa: boolean;\n  canReset2fa: boolean;\n  name: string;\n  avatarUrl: string;\n  authenticators: [];\n  dateJoined: string;\n  options: UserOptions;\n  flags: object;\n  avatar: Avatar;\n  hasPasswordAuth: boolean;\n  permissions: [];\n  email: string;\n}\n\ninterface Email {\n  is_verified: boolean;\n  id: string;\n  email: string;\n}\n\ninterface UserOptions {\n  timezone: string;\n  stacktraceOrder: number;\n  language: string;\n  clock24Hours: boolean;\n}\n",
            "properties": [
                {
                    "name": "client_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "provider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OAuthProvider",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Stacktrace",
            "id": "interface-Stacktrace-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "frames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Frame[]",
                    "optional": false,
                    "description": "",
                    "line": 282
                },
                {
                    "name": "framesOmitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 283
                },
                {
                    "name": "hasSystemFrames",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 285
                },
                {
                    "name": "registers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 284
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "StripeBillingPortalSession",
            "id": "interface-StripeBillingPortalSession-97e32b8134a9df66aba4b108b58b4124",
            "file": "src/app/settings/subscription/stripe.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface StripeSession {\n  id: string;\n  object: string;\n  livemode: boolean;\n}\n\nexport interface StripeBillingPortalSession extends StripeSession {\n  created: number;\n  customer: string;\n  return_url: string;\n  url: string;\n}\n\nexport interface StripeCheckoutSession extends StripeSession {\n  cancel_url: string;\n  success_url: string;\n}\n",
            "properties": [
                {
                    "name": "created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "customer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "return_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "StripeSession"
        },
        {
            "name": "StripeCheckoutSession",
            "id": "interface-StripeCheckoutSession-97e32b8134a9df66aba4b108b58b4124",
            "file": "src/app/settings/subscription/stripe.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface StripeSession {\n  id: string;\n  object: string;\n  livemode: boolean;\n}\n\nexport interface StripeBillingPortalSession extends StripeSession {\n  created: number;\n  customer: string;\n  return_url: string;\n  url: string;\n}\n\nexport interface StripeCheckoutSession extends StripeSession {\n  cancel_url: string;\n  success_url: string;\n}\n",
            "properties": [
                {
                    "name": "cancel_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "success_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "StripeSession"
        },
        {
            "name": "StripeSession",
            "id": "interface-StripeSession-97e32b8134a9df66aba4b108b58b4124",
            "file": "src/app/settings/subscription/stripe.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface StripeSession {\n  id: string;\n  object: string;\n  livemode: boolean;\n}\n\nexport interface StripeBillingPortalSession extends StripeSession {\n  created: number;\n  customer: string;\n  return_url: string;\n  url: string;\n}\n\nexport interface StripeCheckoutSession extends StripeSession {\n  cancel_url: string;\n  success_url: string;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "livemode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "object",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "SubscribeByDefault",
            "id": "interface-SubscribeByDefault-ffd9b50ee6169eac72bcc74f5235f690",
            "file": "src/app/profile/notifications/notifications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Project } from \"src/app/api/projects/projects-api.interfaces\";\n\nexport interface SubscribeByDefault {\n  subscribeByDefault: boolean;\n}\n\nexport type NotificationStatus = number;\n\nexport interface ProjectWithAlertStatus extends Project {\n  alertStatus: NotificationStatus;\n}\n\nexport interface ProjectAlerts {\n  [key: string]: NotificationStatus;\n}\n\nexport interface GroupedProjects {\n  [key: number]: ProjectWithAlertStatus[];\n}\n\nexport interface ProjectError {\n  error: string;\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "subscribeByDefault",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Subscription",
            "id": "interface-Subscription-368fc6d3b78c0c82a085ab80d3e5d024",
            "file": "src/app/api/subscriptions/subscriptions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface BaseProduct {\n  id: string;\n  name: string;\n  description: string;\n  type: string;\n  metadata: { [key: string]: string };\n}\n\nexport interface Plan {\n  id: string;\n  nickname: string;\n  amount: number | string;\n  metadata: { [key: string]: string };\n  product: BaseProduct;\n}\n\nexport interface Product extends BaseProduct {\n  plans: Plan[];\n}\n\nexport interface Subscription {\n  id: string;\n  created: string;\n  collection_method: string;\n  billing_cycle_anchor: string;\n  current_period_end: string;\n  current_period_start: string;\n  start_date: string;\n  status:\n    | \"active\"\n    | \"canceled\"\n    | \"incomplete\"\n    | \"incomplete_expired\"\n    | \"past_due\"\n    | \"trialing\"\n    | \"unpaid\";\n  plan: Plan;\n}\n\nexport interface CreateSubscriptionResp {\n  organization: number;\n  plan: string;\n  subscription: Subscription;\n}\n",
            "properties": [
                {
                    "name": "billing_cycle_anchor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "collection_method",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "current_period_end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "current_period_start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "plan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Plan",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "start_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"active\" | \"canceled\" | \"incomplete\" | \"incomplete_expired\" | \"past_due\" | \"trialing\" | \"unpaid\"",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "SubscriptionsState",
            "id": "interface-SubscriptionsState-1c5040cc2d361c19d3d41e991fc1681c",
            "file": "src/app/api/subscriptions/subscriptions.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, EMPTY } from \"rxjs\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport {\n  Subscription,\n  Product,\n  CreateSubscriptionResp,\n} from \"./subscriptions.interfaces\";\nimport { baseUrl } from \"src/app/constants\";\n\ninterface SubscriptionsState {\n  subscription: Subscription | null;\n  eventsCount: number | null;\n  products: Product[] | null;\n}\n\nconst initialState: SubscriptionsState = {\n  subscription: null,\n  eventsCount: null,\n  products: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SubscriptionsService {\n  private readonly state = new BehaviorSubject<SubscriptionsState>(\n    initialState\n  );\n  private readonly getState$ = this.state.asObservable();\n  private readonly url = baseUrl + \"/subscriptions/\";\n\n  readonly subscription$ = this.getState$.pipe(\n    map((state) => state.subscription)\n  );\n  readonly eventsCount$ = this.getState$.pipe(\n    map((state) => state.eventsCount)\n  );\n  readonly planOptions$ = this.getState$.pipe(map((state) => state.products));\n  readonly planOptionsWithShortNames$ = this.planOptions$.pipe(\n    map((plans) => {\n      return plans?.map((plan) => ({\n        ...plan,\n        name: plan.name.startsWith(\"GlitchTip \")\n          ? plan.name.substring(10)\n          : plan.name,\n      }));\n    })\n  );\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Retrieve subscription for this organization\n   * @param slug Organization Slug for requested subscription\n   */\n  retrieveSubscription(slug: string) {\n    return this.http.get<Subscription>(`${this.url}${slug}/`).pipe(\n      tap((subscription) => this.setSubscription(subscription)),\n      catchError((error) => {\n        this.clearState();\n        return EMPTY;\n      })\n    );\n  }\n\n  /**\n   * Retrieve event count for current active subscription for this organization\n   * @param slug Organization Slug for requested subscription event count\n   */\n  retrieveSubscriptionCount(slug: string) {\n    return this.http.get<number>(`${this.url}${slug}/events_count/`).pipe(\n      tap((count) => this.setSubscriptionCount(count)),\n      catchError((error) => {\n        return EMPTY;\n      })\n    );\n  }\n\n  /**\n   * Retrieve subscription plans\n   * productAmountSorted converts product prices to ints and sorts from low to high\n   */\n  retrieveSubscriptionPlans() {\n    return this.http.get<Product[]>(\"/api/0/products/\").pipe(\n      tap((products) => {\n        const productAmountSorted = products\n          .map((product) => ({\n            ...product,\n            plans: product.plans.map((plans) => ({\n              ...plans,\n              amount: +plans.amount,\n            })),\n          }))\n          .sort((a, b) => a.plans[0].amount - b.plans[0].amount);\n        this.setProducts(productAmountSorted);\n      })\n    );\n  }\n\n  createFreeSubscription(organizationId: number, planId: string) {\n    const data = {\n      organization: organizationId,\n      plan: planId,\n    };\n    return this.http\n      .post<CreateSubscriptionResp>(\"/api/0/subscriptions/\", data)\n      .pipe(\n        tap((resp) => {\n          this.setSubscription(resp.subscription);\n        })\n      );\n  }\n\n  /**\n   * Retrieve Subscription and navigate to subscription page if no subscription exists\n   */\n  checkIfUserHasSubscription(orgSlug: string) {\n    this.retrieveSubscription(orgSlug)\n      .pipe(\n        tap((subscription) => {\n          if (subscription.status === null) {\n            this.router.navigate([orgSlug, \"settings\", \"subscription\"]);\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  clearState() {\n    this.state.next(initialState);\n  }\n\n  private setProducts(products: Product[]) {\n    this.state.next({ ...this.state.getValue(), products });\n  }\n\n  private setSubscription(subscription: Subscription) {\n    this.state.next({ ...this.state.getValue(), subscription });\n  }\n\n  private setSubscriptionCount(eventsCount: number) {\n    this.state.next({ ...this.state.getValue(), eventsCount });\n  }\n}\n",
            "properties": [
                {
                    "name": "eventsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[] | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Tag",
            "id": "interface-Tag-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Team",
            "id": "interface-Team-57586766be5883346bec11211f8a63a8",
            "file": "src/app/api/teams/teams.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Team {\n  dateCreated: string;\n  id: number;\n  isMember: boolean;\n  memberCount: number;\n  slug: string;\n}\n\nexport interface TeamErrors {\n  updateName: string;\n  deleteTeam: string;\n}\n\nexport interface TeamLoading {\n  updateName: boolean;\n  deleteTeam: boolean;\n}\n",
            "properties": [
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "memberCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "slug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TeamErrors",
            "id": "interface-TeamErrors-57586766be5883346bec11211f8a63a8",
            "file": "src/app/api/teams/teams.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Team {\n  dateCreated: string;\n  id: number;\n  isMember: boolean;\n  memberCount: number;\n  slug: string;\n}\n\nexport interface TeamErrors {\n  updateName: string;\n  deleteTeam: string;\n}\n\nexport interface TeamLoading {\n  updateName: boolean;\n  deleteTeam: boolean;\n}\n",
            "properties": [
                {
                    "name": "deleteTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "updateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TeamLoading",
            "id": "interface-TeamLoading-57586766be5883346bec11211f8a63a8",
            "file": "src/app/api/teams/teams.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Team {\n  dateCreated: string;\n  id: number;\n  isMember: boolean;\n  memberCount: number;\n  slug: string;\n}\n\nexport interface TeamErrors {\n  updateName: string;\n  deleteTeam: string;\n}\n\nexport interface TeamLoading {\n  updateName: boolean;\n  deleteTeam: boolean;\n}\n",
            "properties": [
                {
                    "name": "deleteTeam",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "updateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TeamsState",
            "id": "interface-TeamsState-74c45540dd39fd5777be6ba6793e10dc",
            "file": "src/app/api/teams/teams.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Team, TeamErrors, TeamLoading } from \"./teams.interfaces\";\nimport { BehaviorSubject, combineLatest, EMPTY } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"src/app/constants\";\nimport { Member } from \"../organizations/organizations.interface\";\nimport { UserService } from \"../user/user.service\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\ninterface TeamsState {\n  teams: Team[] | null;\n  team: Team | null;\n  teamMembers: Member[];\n  errors: TeamErrors;\n  loading: TeamLoading;\n}\n\nconst initialState: TeamsState = {\n  teams: null,\n  team: null,\n  teamMembers: [],\n  errors: { updateName: \"\", deleteTeam: \"\" },\n  loading: { updateName: false, deleteTeam: false },\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TeamsService {\n  private readonly state = new BehaviorSubject<TeamsState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  private readonly url = baseUrl;\n\n  readonly teams$ = this.getState$.pipe(map((state) => state.teams));\n  readonly team$ = this.getState$.pipe(map((data) => data.team));\n  readonly teamMembers$ = this.getState$.pipe(\n    map((state) => state.teamMembers)\n  );\n  readonly loading$ = this.getState$.pipe(map((data) => data.loading));\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n\n  readonly userTeamRole$ = combineLatest([\n    this.teamMembers$,\n    this.userService.activeUserEmail$,\n  ]).pipe(\n    map(([teamMembers, userEmail]) => {\n      const activeTeamMember = teamMembers.find(\n        (teamMember) => teamMember.email === userEmail\n      );\n      return activeTeamMember?.role;\n    })\n  );\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n\n  retrieveTeamsByOrg(orgSlug: string) {\n    return this.http\n      .get<Team[]>(`${this.url}/organizations/${orgSlug}/teams/`)\n      .pipe(tap((teams) => this.setTeams(teams)));\n  }\n\n  retrieveSingleTeam(orgSlug: string, teamSlug: string) {\n    return this.http\n      .get<Team>(`${this.url}/teams/${orgSlug}/${teamSlug}/`)\n      .pipe(tap((resp) => this.setSingleTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveTeamMembers(orgSlug: string, teamSlug: string) {\n    return this.http\n      .get<Member[]>(`${this.url}/teams/${orgSlug}/${teamSlug}/members/`)\n      .pipe(tap((teamMembers) => this.setTeamMembers(teamMembers)));\n  }\n\n  updateTeamSlug(orgSlug: string, teamSlug: string, newTeamSlug: string) {\n    const url = `${this.url}/teams/${orgSlug}/${teamSlug}/`;\n    const data = { slug: newTeamSlug };\n    this.setUpdateTeamSlugLoading(true);\n    return this.http.put<Team>(url, data).pipe(\n      tap((resp) => {\n        this.router.navigate([\n          orgSlug,\n          \"settings\",\n          \"teams\",\n          resp.slug,\n          \"settings\",\n        ]);\n        this.setUpdateTeamSlugLoading(false);\n        this.snackBar.open(`Your team slug has been changed to #${resp.slug}`);\n        this.setSingleTeam(resp);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setUpdateTeamSlugError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  deleteTeam(orgSlug: string, teamSlug: string) {\n    const url = `${this.url}/teams/${orgSlug}/${teamSlug}/`;\n    this.setDeleteTeamLoading(true);\n    return this.http.delete(url).pipe(\n      tap(() => {\n        this.setDeleteTeamLoading(false);\n        this.snackBar.open(`You have successfully deleted #${teamSlug}`);\n        this.router.navigate([orgSlug, \"settings\", \"teams\"]);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setDeleteTeamError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  private setDeleteTeamLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        deleteTeam: loading,\n      },\n    });\n  }\n\n  private setDeleteTeamError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        deleteTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        deleteTeam: false,\n      },\n    });\n  }\n\n  addTeam(team: Team) {\n    this.addOneTeam(team);\n  }\n\n  removeMember(memberId: number) {\n    this.removeTeamMember(memberId);\n  }\n\n  private setTeams(teams: Team[]) {\n    this.state.next({ ...this.state.getValue(), teams });\n  }\n\n  private setSingleTeam(team: Team) {\n    this.state.next({ ...this.state.getValue(), team });\n  }\n\n  private setTeamMembers(teamMembers: Member[]) {\n    this.state.next({ ...this.state.getValue(), teamMembers });\n  }\n\n  private removeTeamMember(memberId: number) {\n    const filteredMembers = this.state\n      .getValue()\n      .teamMembers.filter((teamMember) => teamMember.id !== memberId);\n    if (filteredMembers) {\n      this.state.next({\n        ...this.state.getValue(),\n        teamMembers: filteredMembers,\n      });\n    }\n  }\n\n  private setUpdateTeamSlugLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        updateName: loading,\n      },\n    });\n  }\n\n  private setUpdateTeamSlugError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        updateName: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        updateName: false,\n      },\n    });\n  }\n\n  /**\n   * Add new team to state\n   * The new team needs to be added to the beginning of the Teams array\n   */\n  private addOneTeam(team: Team) {\n    const getTeamsState = this.state.getValue().teams;\n    const teams = getTeamsState ? getTeamsState : [];\n\n    const newTeams = [team].concat(teams);\n    if (newTeams) {\n      this.state.next({\n        ...this.state.getValue(),\n        teams: newTeams,\n      });\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TeamErrors",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TeamLoading",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "team",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Team | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "teamMembers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Member[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "teams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Team[] | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TopValue",
            "id": "interface-TopValue-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 324
                },
                {
                    "name": "firstSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 327
                },
                {
                    "name": "lastSeen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 326
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 325
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Tag"
        },
        {
            "name": "TopValueAdjusted",
            "id": "interface-TopValueAdjusted-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 337
                },
                {
                    "name": "percentRounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 336
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "TopValue"
        },
        {
            "name": "TOTPRequest",
            "id": "interface-TOTPRequest-95eb60cb3a3ebc9c52f10211bc3fdcfd",
            "file": "src/app/api/mfa/user-keys.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\n\ntype UserKeyType = \"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\";\n\nexport interface UserKey {\n  id: number;\n  user: number;\n  name: string;\n  created: string;\n  key_type: UserKeyType;\n  last_used: string;\n}\n\nexport interface TOTPResponse {\n  provisioning_uri: string;\n  secret_key: string;\n}\n\nexport type BackupCodes = string[];\n\ninterface BackUpGenerateResponse {\n  codes: BackupCodes;\n}\n\ninterface BackUpCodesRequest {\n  name: string;\n  codes: BackupCodes;\n}\n\ninterface TOTPRequest {\n  answer: string;\n  secret_key: string;\n}\n\n/**\n * MFA User Keys\n * Create requires a specific mfa type and sometimes requires a GET to fetch\n * relevant data before submitting a POST to actually create the key\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserKeysService extends APIBaseService {\n  readonly url = \"/api/mfa/user_keys/\";\n  readonly fido2Url = this.url + \"fido2/\";\n  readonly totpUrl = this.url + \"totp/\";\n  readonly backupCodesUrl = this.url + \"backup_codes/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n  list() {\n    return this.http.get<UserKey[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<UserKey>(this.detailURL(id));\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  fido2() {\n    // Should use cbor\n    return this.http.get<unknown>(this.fido2Url);\n  }\n\n  fido2Create(data: unknown) {\n    return this.http.post<unknown>(this.fido2Url, data);\n  }\n\n  totp() {\n    return this.http.get<TOTPResponse>(this.totpUrl);\n  }\n\n  totpCreate(data: TOTPRequest) {\n    return this.http.post<unknown>(this.totpUrl, data);\n  }\n\n  backupCodes() {\n    return this.http.get<BackUpGenerateResponse>(this.backupCodesUrl);\n  }\n\n  backupCodesCreate(data: BackUpCodesRequest) {\n    return this.http.post<UserKey>(this.backupCodesUrl, data);\n  }\n}\n",
            "properties": [
                {
                    "name": "answer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "secret_key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TOTPResponse",
            "id": "interface-TOTPResponse-95eb60cb3a3ebc9c52f10211bc3fdcfd",
            "file": "src/app/api/mfa/user-keys.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\n\ntype UserKeyType = \"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\";\n\nexport interface UserKey {\n  id: number;\n  user: number;\n  name: string;\n  created: string;\n  key_type: UserKeyType;\n  last_used: string;\n}\n\nexport interface TOTPResponse {\n  provisioning_uri: string;\n  secret_key: string;\n}\n\nexport type BackupCodes = string[];\n\ninterface BackUpGenerateResponse {\n  codes: BackupCodes;\n}\n\ninterface BackUpCodesRequest {\n  name: string;\n  codes: BackupCodes;\n}\n\ninterface TOTPRequest {\n  answer: string;\n  secret_key: string;\n}\n\n/**\n * MFA User Keys\n * Create requires a specific mfa type and sometimes requires a GET to fetch\n * relevant data before submitting a POST to actually create the key\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserKeysService extends APIBaseService {\n  readonly url = \"/api/mfa/user_keys/\";\n  readonly fido2Url = this.url + \"fido2/\";\n  readonly totpUrl = this.url + \"totp/\";\n  readonly backupCodesUrl = this.url + \"backup_codes/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n  list() {\n    return this.http.get<UserKey[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<UserKey>(this.detailURL(id));\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  fido2() {\n    // Should use cbor\n    return this.http.get<unknown>(this.fido2Url);\n  }\n\n  fido2Create(data: unknown) {\n    return this.http.post<unknown>(this.fido2Url, data);\n  }\n\n  totp() {\n    return this.http.get<TOTPResponse>(this.totpUrl);\n  }\n\n  totpCreate(data: TOTPRequest) {\n    return this.http.post<unknown>(this.totpUrl, data);\n  }\n\n  backupCodes() {\n    return this.http.get<BackUpGenerateResponse>(this.backupCodesUrl);\n  }\n\n  backupCodesCreate(data: BackUpCodesRequest) {\n    return this.http.post<UserKey>(this.backupCodesUrl, data);\n  }\n}\n",
            "properties": [
                {
                    "name": "provisioning_uri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "secret_key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Transaction",
            "id": "interface-Transaction-7a044d18f6c67f0e22a2af57f85f65ce",
            "file": "src/app/api/transactions/transactions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Transaction {\n  eventId: string;\n  transaction: string;\n  timestamp: string;\n  startTimestamp: string;\n}\n\nexport interface TransactionWithDelta extends Transaction {\n  delta: number;\n}\n",
            "properties": [
                {
                    "name": "eventId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "startTimestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "timestamp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "transaction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "TransactionWithDelta",
            "id": "interface-TransactionWithDelta-7a044d18f6c67f0e22a2af57f85f65ce",
            "file": "src/app/api/transactions/transactions.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Transaction {\n  eventId: string;\n  transaction: string;\n  timestamp: string;\n  startTimestamp: string;\n}\n\nexport interface TransactionWithDelta extends Transaction {\n  delta: number;\n}\n",
            "properties": [
                {
                    "name": "delta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "Transaction"
        },
        {
            "name": "UpdateStatusResponse",
            "id": "interface-UpdateStatusResponse-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueStatus",
                    "optional": false,
                    "description": "",
                    "line": 211
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-1ba0165fb70f1e3206a6a41046d99e6c",
            "file": "src/app/api/user/user.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OAuthProvider } from \"../oauth/oauth.interfaces\";\nimport { Avatar } from \"../organizations/organizations.interface\";\n\nexport interface SocialAccount {\n  id: number;\n  provider: OAuthProvider;\n  uid: string;\n  last_login: string;\n  date_joined: string;\n  email: string;\n  username: string | null;\n}\n\nexport interface SocialApp {\n  provider: OAuthProvider;\n  name: string;\n  client_id: string;\n}\n\nexport interface User {\n  username: string;\n  lastLogin: string;\n  isSuperuser: boolean;\n  emails: Email[];\n  isManaged: boolean;\n  lastActive: string;\n  identities: SocialAccount[];\n  id: string;\n  isActive: boolean;\n  has2fa: boolean;\n  canReset2fa: boolean;\n  name: string;\n  avatarUrl: string;\n  authenticators: [];\n  dateJoined: string;\n  options: UserOptions;\n  flags: object;\n  avatar: Avatar;\n  hasPasswordAuth: boolean;\n  permissions: [];\n  email: string;\n}\n\ninterface Email {\n  is_verified: boolean;\n  id: string;\n  email: string;\n}\n\ninterface UserOptions {\n  timezone: string;\n  stacktraceOrder: number;\n  language: string;\n  clock24Hours: boolean;\n}\n",
            "properties": [
                {
                    "name": "authenticators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Avatar",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "avatarUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "canReset2fa",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dateJoined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "emails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Email[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "flags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "has2fa",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "hasPasswordAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "identities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialAccount[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isManaged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isSuperuser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "lastActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "lastLogin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserOptions",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "permissions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "UserKey",
            "id": "interface-UserKey-95eb60cb3a3ebc9c52f10211bc3fdcfd",
            "file": "src/app/api/mfa/user-keys.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\n\ntype UserKeyType = \"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\";\n\nexport interface UserKey {\n  id: number;\n  user: number;\n  name: string;\n  created: string;\n  key_type: UserKeyType;\n  last_used: string;\n}\n\nexport interface TOTPResponse {\n  provisioning_uri: string;\n  secret_key: string;\n}\n\nexport type BackupCodes = string[];\n\ninterface BackUpGenerateResponse {\n  codes: BackupCodes;\n}\n\ninterface BackUpCodesRequest {\n  name: string;\n  codes: BackupCodes;\n}\n\ninterface TOTPRequest {\n  answer: string;\n  secret_key: string;\n}\n\n/**\n * MFA User Keys\n * Create requires a specific mfa type and sometimes requires a GET to fetch\n * relevant data before submitting a POST to actually create the key\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserKeysService extends APIBaseService {\n  readonly url = \"/api/mfa/user_keys/\";\n  readonly fido2Url = this.url + \"fido2/\";\n  readonly totpUrl = this.url + \"totp/\";\n  readonly backupCodesUrl = this.url + \"backup_codes/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n  list() {\n    return this.http.get<UserKey[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<UserKey>(this.detailURL(id));\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  fido2() {\n    // Should use cbor\n    return this.http.get<unknown>(this.fido2Url);\n  }\n\n  fido2Create(data: unknown) {\n    return this.http.post<unknown>(this.fido2Url, data);\n  }\n\n  totp() {\n    return this.http.get<TOTPResponse>(this.totpUrl);\n  }\n\n  totpCreate(data: TOTPRequest) {\n    return this.http.post<unknown>(this.totpUrl, data);\n  }\n\n  backupCodes() {\n    return this.http.get<BackUpGenerateResponse>(this.backupCodesUrl);\n  }\n\n  backupCodesCreate(data: BackUpCodesRequest) {\n    return this.http.post<UserKey>(this.backupCodesUrl, data);\n  }\n}\n",
            "properties": [
                {
                    "name": "created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "key_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserKeyType",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "last_used",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "UserOptions",
            "id": "interface-UserOptions-1ba0165fb70f1e3206a6a41046d99e6c",
            "file": "src/app/api/user/user.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OAuthProvider } from \"../oauth/oauth.interfaces\";\nimport { Avatar } from \"../organizations/organizations.interface\";\n\nexport interface SocialAccount {\n  id: number;\n  provider: OAuthProvider;\n  uid: string;\n  last_login: string;\n  date_joined: string;\n  email: string;\n  username: string | null;\n}\n\nexport interface SocialApp {\n  provider: OAuthProvider;\n  name: string;\n  client_id: string;\n}\n\nexport interface User {\n  username: string;\n  lastLogin: string;\n  isSuperuser: boolean;\n  emails: Email[];\n  isManaged: boolean;\n  lastActive: string;\n  identities: SocialAccount[];\n  id: string;\n  isActive: boolean;\n  has2fa: boolean;\n  canReset2fa: boolean;\n  name: string;\n  avatarUrl: string;\n  authenticators: [];\n  dateJoined: string;\n  options: UserOptions;\n  flags: object;\n  avatar: Avatar;\n  hasPasswordAuth: boolean;\n  permissions: [];\n  email: string;\n}\n\ninterface Email {\n  is_verified: boolean;\n  id: string;\n  email: string;\n}\n\ninterface UserOptions {\n  timezone: string;\n  stacktraceOrder: number;\n  language: string;\n  clock24Hours: boolean;\n}\n",
            "properties": [
                {
                    "name": "clock24Hours",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "language",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "stacktraceOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "timezone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "UserReport",
            "id": "interface-UserReport-4c6b74bbf60379f92fa2993eb112c4e0",
            "file": "src/app/api/user-reports/user-reports.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserReport {\n  eventId: string;\n  name: string;\n  event: {\n    eventId: string;\n  };\n  user: unknown;\n  dateCreated: string;\n  id: number;\n  comments: string;\n  email: string;\n}\n",
            "properties": [
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "dateCreated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "eventId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "UserReportsState",
            "id": "interface-UserReportsState-ae7232f26a18f2387d68dc547ef0afdc",
            "file": "src/app/api/user-reports/user-reports.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { tap, catchError, map } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\nimport { baseUrl } from \"../../constants\";\nimport { UserReport } from \"./user-reports.interfaces\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"src/app/shared/stateful-service/pagination-stateful-service\";\n\nexport interface UserReportsState extends PaginationStatefulServiceState {\n  reports: UserReport[] | null;\n  errors: string | null;\n}\n\nconst initialState: UserReportsState = {\n  reports: null,\n  errors: null,\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserReportsService extends PaginationStatefulService<UserReportsState> {\n  private readonly issuePageUrl = baseUrl + \"/issues/\";\n\n  reports$ = this.getState$.pipe(map((state) => state.reports));\n  errors$ = this.getState$.pipe(map((state) => state.errors));\n\n  constructor(private http: HttpClient) {\n    super(initialState);\n  }\n\n  getReportsForIssue(issue: number, cursor: string | undefined) {\n    this.setLoadingReports(true);\n    this.resetUserReports();\n    this.getIssueReports(issue, cursor)\n      .pipe(\n        tap((response) => {\n          this.setLoadingReports(false);\n          this.resetErrorsReports();\n          if (response.body) {\n            this.setStateAndPagination({ reports: response.body }, response);\n          }\n        }),\n        catchError((error) => {\n          this.setLoadingReports(false);\n          this.setErrorsReports(\n            \"Something went wrong. Try reloading the page.\"\n          );\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  private getIssueReports(issueId: number, cursor: string | undefined) {\n    let httpParams = new HttpParams();\n    if (cursor) {\n      httpParams = httpParams.set(\"cursor\", cursor);\n    }\n    return this.http.get<UserReport[]>(\n      `${this.issuePageUrl}${issueId}/user-reports/`,\n      { observe: \"response\", params: httpParams }\n    );\n  }\n\n  private setLoadingReports(loading: boolean) {\n    const state = this.state.getValue();\n    this.setState({\n      pagination: {\n        ...state.pagination,\n        loading,\n      },\n    });\n  }\n\n  private setErrorsReports(message: string) {\n    this.setState({ errors: message });\n  }\n\n  private resetUserReports() {\n    this.setState({ reports: initialState.reports });\n  }\n\n  private resetErrorsReports() {\n    this.setState({ errors: initialState.errors });\n  }\n}\n",
            "properties": [
                {
                    "name": "errors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "reports",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserReport[] | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": [],
            "extends": "PaginationStatefulServiceState"
        },
        {
            "name": "UserState",
            "id": "interface-UserState-f40e0840f98cab8456960c498ca85c89",
            "file": "src/app/api/user/user.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, EMPTY, Subject } from \"rxjs\";\nimport { tap, map, catchError, exhaustMap } from \"rxjs/operators\";\nimport { User } from \"./user.interfaces\";\n\ninterface UserState {\n  user: User | null;\n  disconnectLoading: number | null;\n}\n\nconst initialState: UserState = {\n  user: null,\n  disconnectLoading: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private readonly state = new BehaviorSubject<UserState>(initialState);\n  readonly userDetails$ = this.state.pipe(map((state) => state.user));\n  readonly disconnectLoading$ = this.state.pipe(\n    map((state) => state.disconnectLoading)\n  );\n  private readonly getUserDetailsAction = new Subject();\n\n  readonly activeUserEmail$ = this.userDetails$.pipe(\n    map((userDetails) => userDetails?.email)\n  );\n  private readonly url = \"/api/0/users/me/\";\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {\n    this.getUserDetailsAction\n      .pipe(\n        exhaustMap(() =>\n          this.retrieveUserDetails().pipe(\n            tap((resp: User) => this.setUserDetails(resp)),\n            tap((resp: User) => this.matomoSetUserId(resp.id)),\n            catchError(() => EMPTY)\n          )\n        )\n      )\n      .subscribe();\n  }\n\n  /**\n   * If Matomo is present, set user ID.\n   * app.glitchtip.com will further anonymize this and respects Do Not Track\n   */\n  matomoSetUserId(id: string) {\n    // tslint:disable:no-any\n    const _paq: any = (window as any)._paq;\n    _paq.push([\"setUserId\", id]);\n  }\n\n  /** Get and set current logged in user details from backend */\n  getUserDetails() {\n    this.getUserDetailsAction.next();\n  }\n\n  private retrieveUserDetails() {\n    return this.http.get<User>(this.url);\n  }\n\n  disconnectSocialAccount(accountId: number) {\n    this.setDisconnectLoading(accountId);\n    this.http\n      .post(\"/api/socialaccounts/\" + accountId + \"/disconnect/\", {})\n      .pipe(\n        tap(() => {\n          this.setDisconnectLoading(null);\n          this.getUserDetails();\n          this.snackBar.open(\n            \"You have successfully disconnected your social auth account\"\n          );\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDisconnectLoading(null);\n          if (Array.isArray(err.error) && err.error.length) {\n            this.snackBar.open(err.error[0]);\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  private setDisconnectLoading(loading: number | null) {\n    this.state.next({ ...this.state.getValue(), disconnectLoading: loading });\n  }\n\n  private setUserDetails(userDetails: User) {\n    this.state.next({ ...this.state.getValue(), user: userDetails });\n  }\n}\n",
            "properties": [
                {
                    "name": "disconnectLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Values",
            "id": "interface-Values-957d706c54eea51f744c80eeb987a356",
            "file": "src/app/issues/interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectIssueView } from \"../api/projects/projects-api.interfaces\";\nimport { Json } from \"../interface-primitives\";\n\ninterface Tag {\n  key: string;\n  value: string;\n}\n\nexport interface EventTag extends Tag {\n  _meta?: null | unknown;\n  query?: string;\n}\n\nexport interface Event {\n  eventID: string;\n  id: string;\n  tags: EventTag[];\n  projectID?: string | number;\n  dateCreated: string | null;\n  user: EndUser | null;\n  message?: string;\n  culprit: string;\n  title: string;\n  location?: string;\n  crashFile?: string | null;\n  groupID?: string;\n  // made undefined because EventDetail extends this and didn't need it\n  \"event.type\"?: EventTypes;\n  platform: string;\n}\n\nexport interface EndUser {\n  id: string | null;\n  name: string | null;\n  username?: string | null;\n  email?: string | null;\n  ip_address: string | null;\n  data?: { [key: string]: string | null } | null;\n}\n\nexport type EventTypes = \"error\" | \"default\";\n\nexport interface EventDetail extends Event {\n  nextEventID: string | null;\n  previousEventID: string | null;\n  contexts: { [key: string]: { [key: string]: Json } } | null;\n  entries: EntryUnion[];\n  metadata: { [key: string]: string };\n  dist?: unknown;\n  userReport?: unknown;\n  size?: number;\n  errors?: Errors[] | [];\n  type: \"error\" | \"csp\" | \"default\";\n  groupingConfig?: GroupingConfig;\n  dateReceived: string;\n  packages: { [key: string]: string } | {} | null;\n  sdk: { [key: string]: Json } | null;\n  _meta?: { [key: string]: Json };\n  fingerprints?: string[];\n  context?: { [key: string]: Json } | null;\n  release?: { [key: string]: Json[] } | null;\n  issue?: number;\n  sdkUpdates?: [];\n}\n\nexport interface AnnotatedContexts {\n  type: ContextsType;\n  icon: string | null;\n  matIcon: string | null;\n  title: string;\n  subtitle: string | null;\n  key: string | null;\n}\n\ntype ContextsType =\n  | \"user\"\n  | \"browser\"\n  | \"runtime\"\n  | \"os\"\n  | \"client_os\"\n  | \"device\"\n  | \"gpu\";\n\ninterface Errors {\n  data: { [key: string]: string };\n  message: string;\n  type: string;\n}\n\nexport type EntryType =\n  | \"exception\"\n  | \"breadcrumbs\"\n  | \"request\"\n  | \"message\"\n  | \"csp\";\n\nexport interface Entry<Type extends EntryType, Data extends {}> {\n  data: Data;\n  type: Type;\n}\n\nexport type EntryUnion =\n  | Entry<\"exception\", ExceptionValueData>\n  | Entry<\"breadcrumbs\", BreadcrumbValueData>\n  | Entry<\"request\", Request>\n  | Entry<\"message\", Message>\n  | Entry<\"csp\", CSP>;\n\nexport interface BreadcrumbValueData {\n  values: Breadcrumb[];\n}\n\n// https://docs.sentry.io/enriching-error-data/breadcrumbs/?platform=javascript\nexport interface Breadcrumb {\n  message: string | null;\n  category: string;\n  data: { [key: string]: Json } | null;\n  level: \"fatal\" | \"error\" | \"warning\" | \"info\" | \"debug\" | \"sample\";\n  type: \"default\" | \"http\" | \"error\";\n  event_id: string | null;\n  timestamp: string; // technically a string, functionally a Date\n}\n\nexport interface Message {\n  formatted: string;\n}\n\nexport interface CSP {\n  [key: string]: string | number;\n}\n\nexport interface ExceptionValueData {\n  values: Values[];\n  excOmitted?: boolean | null;\n  hasSystemFrames?: boolean;\n}\n\nexport interface Request {\n  fragment?: string | null;\n  cookies?: { [key: string]: Json }[];\n  inferredContentType: string | null;\n  env?: {\n    SERVER_NAME: string;\n    SERVER_PORT: string;\n    DOCUMENT_ROOT?: string;\n  } | null;\n  headers: string[][];\n  url: string;\n  query?: { [key: string]: Json }[];\n  data?: { [key: string]: string } | null;\n  method?: string | null;\n  query_string?: string;\n}\n\nexport interface AnnotatedRequest extends Request {\n  domainName: string;\n  path: string;\n}\n\nexport type IssueStatus = \"resolved\" | \"unresolved\" | \"ignored\";\n\nexport interface Issue {\n  annotations: string[];\n  assignedTo: string | null;\n  count: string;\n  culprit: string | null;\n  firstSeen: string;\n  hasSeen: boolean;\n  // id is a string in Sentry, but we would prefer a number if possible\n  id: number;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  lastSeen: string;\n  level: string;\n  logger: string | null;\n  metadata: IssueMetadata;\n  numComments: number;\n  permalink: string;\n  project: ProjectIssueView;\n  shareId: string | null;\n  shortId: string;\n  stats: Stats;\n  status: IssueStatus;\n  statusDetails: { [key: string]: Json };\n  subscriptionDetails: { [key: string]: Json } | null;\n  title: string;\n  type: string;\n  userCount: number;\n  platform?: string;\n}\n\nexport interface IssueDetail extends Issue {\n  seenBy: Json[];\n  pluginIssues: string[];\n  userReportCount: number;\n  participants: Json[];\n  pluginActions: string[];\n  tags?: {\n    name: string;\n    key: string;\n    uniqueValues: number;\n  }[];\n  firstRelease: FirstRelease | null;\n  pluginContexts: string[];\n  lastRelease: string | null;\n  activity: Activity[];\n}\n\nexport interface UpdateStatusResponse {\n  status: IssueStatus;\n}\n\n// not in issues api reference, but is in issue list data\n\nexport interface IssueWithSelected extends Issue {\n  isSelected: boolean;\n  projectSlug: string;\n}\n\ntype StatsPeriod = \"24h\" | \"14d\" | \"30d\" | \"\";\n\ntype Stats = { [StatPeriod in StatsPeriod]?: number[][] };\n\nexport interface IssueMetadata {\n  directive?: string;\n  filename?: string;\n  function?: string;\n  message?: string;\n  origin?: string;\n  title?: string;\n  type?: string;\n  uri?: string;\n  value?: string;\n}\n\ninterface FirstRelease {\n  authors: string[];\n  commitCount: number;\n  data: { [key: string]: Json };\n  dataCreated: string;\n  dataReleased: string;\n  deployCount: number;\n  firstEvent: string;\n  lastCommit: string | null;\n  lastDeploy: string | null;\n  lastEvent: string;\n  newGroups: number;\n  owner: string | null;\n  projects: ProjectIssueView[];\n  ref: string | null;\n  shortVersion: string;\n  url: string | null;\n  version: string;\n}\n\ninterface Activity {\n  data: { [key: string]: Json };\n  dateCreated: string;\n  id: string;\n  type: string;\n  user: Json | null;\n}\n\nexport interface Values {\n  stacktrace?: {} | Stacktrace | null;\n  module?: string | null;\n  rawStacktrace?: string | null;\n  mechanism?: Mechanism | null;\n  threadId?: number | null;\n  value: string;\n  type: string;\n}\n\ninterface Mechanism {\n  data?: { function: string };\n  type: string;\n  handled: boolean;\n}\n\nexport interface Stacktrace {\n  frames: Frame[];\n  framesOmitted: unknown;\n  registers: unknown;\n  hasSystemFrames: boolean;\n}\n\n// tslint:disable-next-line:max-line-length\n// https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md#frame-attributes\nexport interface Frame {\n  absPath: string | null;\n  filename: string | null;\n  platform: string | null;\n  module: string | null;\n  function: string | null;\n  rawFunction?: string | null;\n  package: string | null;\n  instructionAddr: string | null;\n  symbol: string | null;\n  symbolAddr: string | null;\n  trust: string | null;\n  inApp: boolean;\n  context: (string | number)[][];\n  vars: { [key: string]: Json } | null;\n  errors?: string | null;\n  lineNo: number | null;\n  colNo: number | null;\n}\n\ninterface GroupingConfig {\n  enhancements?: string;\n  id: string;\n}\n\nexport interface IssueTags {\n  name: string;\n  key: string;\n  uniqueValues: number;\n  topValues: TopValue[];\n  totalValues: number;\n}\n\ninterface TopValue extends Tag {\n  count: number;\n  name: string;\n  lastSeen: string;\n  firstSeen: string;\n}\n\nexport interface IssueTagsAdjusted extends IssueTags {\n  other?: number;\n  topValues: TopValueAdjusted[];\n}\n\ninterface TopValueAdjusted extends TopValue {\n  percentRounded: number;\n  percent: number;\n}\n",
            "properties": [
                {
                    "name": "mechanism",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Mechanism | null",
                    "optional": true,
                    "description": "",
                    "line": 269
                },
                {
                    "name": "module",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 267
                },
                {
                    "name": "rawStacktrace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 268
                },
                {
                    "name": "stacktrace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | Stacktrace | null",
                    "optional": true,
                    "description": "",
                    "line": 266
                },
                {
                    "name": "threadId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": true,
                    "description": "",
                    "line": 270
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 272
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 271
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AcceptInviteService",
            "id": "injectable-AcceptInviteService-6bd548de320a67ad1da9c7e075ae9339",
            "file": "src/app/api/accept/accept-invite.service.ts",
            "properties": [
                {
                    "name": "acceptInfo$",
                    "defaultValue": "this.state.pipe(map((state) => state.acceptInfo))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "alreadyInOrg$",
                    "defaultValue": "combineLatest([\n    this.orgSlug$,\n    this.orgService.organizations$,\n  ]).pipe(\n    map(([orgSlugToMatch, organizations]) => {\n      if (orgSlugToMatch) {\n        const match = organizations.find(\n          (organization) => organization.slug === orgSlugToMatch\n        );\n        if (match) {\n          return true;\n        }\n        return false;\n      } else {\n        return false;\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "orgSlug$",
                    "defaultValue": "this.acceptInfo$.pipe(\n    map((acceptInfo) => acceptInfo?.org_user.organization.slug)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<AcceptState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/accept/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "acceptInvite",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAcceptInvite",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAcceptInviteDetails",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postAcceptInvite",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAcceptInfo",
                    "args": [
                        {
                            "name": "acceptInfo",
                            "type": "AcceptAPIResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "acceptInfo",
                            "type": "AcceptAPIResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap, catchError, map } from \"rxjs/operators\";\nimport { EMPTY, BehaviorSubject, combineLatest } from \"rxjs\";\nimport { baseUrl } from \"../../constants\";\nimport { AcceptAPIResponse } from \"./accept-invite.interfaces\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { OrganizationsService } from \"../organizations/organizations.service\";\n\ninterface AcceptState {\n  acceptInfo: AcceptAPIResponse | null;\n}\n\nconst initialState: AcceptState = {\n  acceptInfo: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AcceptInviteService {\n  private readonly state = new BehaviorSubject<AcceptState>(initialState);\n  readonly acceptInfo$ = this.state.pipe(map((state) => state.acceptInfo));\n  readonly orgSlug$ = this.acceptInfo$.pipe(\n    map((acceptInfo) => acceptInfo?.org_user.organization.slug)\n  );\n  readonly alreadyInOrg$ = combineLatest([\n    this.orgSlug$,\n    this.orgService.organizations$,\n  ]).pipe(\n    map(([orgSlugToMatch, organizations]) => {\n      if (orgSlugToMatch) {\n        const match = organizations.find(\n          (organization) => organization.slug === orgSlugToMatch\n        );\n        if (match) {\n          return true;\n        }\n        return false;\n      } else {\n        return false;\n      }\n    })\n  );\n  private readonly url = baseUrl + \"/accept/\";\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private orgService: OrganizationsService\n  ) {}\n\n  getAcceptInviteDetails(memberId: string, token: string) {\n    this.getAcceptInvite(memberId, token)\n      .pipe(\n        tap((response) => {\n          this.setAcceptInfo(response);\n        }),\n        catchError((error) => {\n          if (error.error?.detail === \"Not found.\") {\n            this.snackBar.open(`\n              This invitation link expired or is invalid. Please\n              issue a new invitation request.\n            `);\n          } else {\n            this.snackBar.open(error.error?.detail);\n          }\n          this.router.navigate([\"/\"]);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  acceptInvite(memberId: string, token: string) {\n    this.postAcceptInvite(memberId, token)\n      .pipe(\n        tap((response: AcceptAPIResponse) => {\n          this.orgService.retrieveOrganizations().subscribe();\n          this.snackBar.open(\n            `You have been added to ${response.org_user.organization.name}.`\n          );\n          this.router.navigate([\"/\"]);\n        }),\n        catchError((error) => {\n          if (error.status === 500) {\n            if ((error.error as string).includes(\"already exists\")) {\n              this.snackBar.open(`\n                There was an error, probably because you tried to join an organization\n                that you're already a part of.\n              `);\n            } else {\n              this.snackBar.open(`\n                There was an error. Try again later.\n              `);\n            }\n          } else if (error.error?.detail === \"Not found.\") {\n            this.snackBar.open(`\n              This invitation link expired or is invalid. Please\n              issue a new invitation request.\n            `);\n          } else {\n            this.snackBar.open(error.error?.detail);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  private getAcceptInvite(memberId: string, token: string) {\n    return this.http.get<AcceptAPIResponse>(`${this.url}${memberId}/${token}/`);\n  }\n\n  private postAcceptInvite(memberId: string, token: string) {\n    return this.http.post<AcceptAPIResponse>(\n      `${this.url}${memberId}/${token}/`,\n      {\n        accept_invite: true,\n      }\n    );\n  }\n\n  private setAcceptInfo(acceptInfo: AcceptAPIResponse) {\n    this.state.next({ ...this.state.getValue(), acceptInfo });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "APITokenService",
            "id": "injectable-APITokenService-aa83cd91282ffa6d64dfd9a0104feabc",
            "file": "src/app/api/api-tokens/api-tokens.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/api-tokens/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "newToken",
                            "type": "NewAPIToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newToken",
                            "type": "NewAPIToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { baseUrl } from \"../../constants\";\nimport { APIToken, NewAPIToken } from \"./api-tokens.interfaces\";\nimport { APIBaseService } from \"../api-base.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class APITokenService extends APIBaseService {\n  readonly url = baseUrl + \"/api-tokens/\";\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  list() {\n    return this.http.get<APIToken[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<APIToken>(this.detailURL(id));\n  }\n\n  create(newToken: NewAPIToken) {\n    return this.http.post<APIToken>(this.url, newToken);\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-5da2a89fe2b5491bd1cb353624db68a7",
            "file": "src/app/api/auth/auth.service.ts",
            "properties": [
                {
                    "name": "isLoggedIn",
                    "defaultValue": "this.getState$.pipe(map((data) => data.isLoggedIn))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "url",
                    "defaultValue": "\"/rest-auth/logout/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "afterLogin",
                    "args": [
                        {
                            "name": "redirect",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "redirect",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "expireAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nRun if server thinks user is logged out.",
                    "description": "<p>Run if server thinks user is logged out.</p>\n"
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nLog out user from the backend",
                    "description": "<p>Log out user from the backend</p>\n"
                },
                {
                    "name": "passwordReset",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nExplicitly log out",
                    "description": "<p>Explicitly log out</p>\n"
                },
                {
                    "name": "setAuth",
                    "args": [
                        {
                            "name": "data",
                            "type": "AuthState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AuthState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRedirectUrl",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { map, tap } from \"rxjs/operators\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\nexport interface AuthState {\n  isLoggedIn: boolean;\n  redirectUrl: string;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  redirectUrl: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService extends StatefulService<AuthState> {\n  isLoggedIn = this.getState$.pipe(map((data) => data.isLoggedIn));\n  private readonly url = \"/rest-auth/logout/\";\n\n  constructor(private http: HttpClient, private router: Router) {\n    super(initialState);\n    const authData = localStorage.getItem(\"auth\");\n    if (authData) {\n      const auth = JSON.parse(authData);\n      this.setState({\n        isLoggedIn: auth.isLoggedIn,\n        redirectUrl: auth.redirectUrl,\n      });\n    }\n  }\n\n  setAuth(data: AuthState) {\n    this.state.next(data);\n    localStorage.setItem(\"auth\", JSON.stringify(data));\n  }\n\n  setRedirectUrl(url: string) {\n    this.setAuth({\n      isLoggedIn: false,\n      redirectUrl: url,\n    });\n  }\n\n  afterLogin(redirect = true) {\n    const redirectUrl = this.state.getValue().redirectUrl;\n    this.setAuth({ isLoggedIn: true, redirectUrl: \"\" });\n    if (redirect) {\n      this.router.navigateByUrl(redirectUrl);\n    }\n  }\n\n  /** Log out user from the backend  */\n  logout() {\n    this.http\n      .post(this.url, null)\n      .pipe(\n        tap(() => this.removeAuth()),\n        tap(() => {\n          // tslint:disable:no-any\n          const _paq = (window as any)._paq;\n          _paq.push([\"resetUserId\"]);\n        })\n      )\n      .toPromise();\n  }\n\n  passwordReset(email: string) {\n    const data = { email };\n    const url = \"/rest-auth/password/reset/\";\n    return this.http.post(url, data);\n  }\n\n  /** Explicitly log out */\n  removeAuth() {\n    this.clearAuth();\n    window.location.href = \"/login\";\n  }\n\n  /** Run if server thinks user is logged out. */\n  expireAuth() {\n    this.clearAuth();\n    this.setRedirectUrl(window.location.pathname);\n    window.location.href = \"/login\";\n  }\n\n  private clearAuth() {\n    this.clearState();\n    localStorage.clear();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "AuthTokensService",
            "id": "injectable-AuthTokensService-a3f65109ef9543d6844984dac342c7ec",
            "file": "src/app/profile/auth-tokens/auth-tokens.service.ts",
            "properties": [
                {
                    "name": "apiTokens$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.apiTokens))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "createError$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.createError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "createErrorLabel$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.createErrorLabel)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "createErrorScopes$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.createErrorScopes)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "createLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.loading.create)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "deleteLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.loading.delete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.loading.apiTokens)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<AuthTokensState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createAuthToken",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "scopes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "scopes",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAuthToken",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadAuthTokens",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetCreateErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAPITokens",
                    "args": [
                        {
                            "name": "apiTokens",
                            "type": "APIToken[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "apiTokens",
                            "type": "APIToken[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAPITokensLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setCreateError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCreateLabelError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCreateLoading",
                    "args": [
                        {
                            "name": "isLoading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "isLoading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCreateScopesError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteLoading",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, EMPTY } from \"rxjs\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport { APIToken } from \"src/app/api/api-tokens/api-tokens.interfaces\";\nimport { APITokenService } from \"src/app/api/api-tokens/api-tokens.service\";\n\ninterface AuthTokensState {\n  apiTokens: APIToken[];\n  loading: {\n    apiTokens: boolean;\n    create: boolean;\n    delete: string | null;\n  };\n  createError: string;\n  createErrorLabel: string;\n  createErrorScopes: string;\n}\n\nconst initialState: AuthTokensState = {\n  apiTokens: [],\n  loading: {\n    apiTokens: false,\n    create: false,\n    delete: null,\n  },\n  createError: \"\",\n  createErrorLabel: \"\",\n  createErrorScopes: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthTokensService {\n  private readonly state = new BehaviorSubject<AuthTokensState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  readonly apiTokens$ = this.getState$.pipe(map((state) => state.apiTokens));\n  readonly initialLoad$ = this.getState$.pipe(\n    map((state) => state.loading.apiTokens)\n  );\n  readonly createError$ = this.getState$.pipe(\n    map((state) => state.createError)\n  );\n  readonly createErrorLabel$ = this.getState$.pipe(\n    map((state) => state.createErrorLabel)\n  );\n  readonly createErrorScopes$ = this.getState$.pipe(\n    map((state) => state.createErrorScopes)\n  );\n  readonly createLoading$ = this.getState$.pipe(\n    map((state) => state.loading.create)\n  );\n  readonly deleteLoading$ = this.getState$.pipe(\n    map((state) => state.loading.delete)\n  );\n\n  constructor(\n    private apiTokenService: APITokenService,\n    private router: Router\n  ) {}\n\n  loadAuthTokens() {\n    this.apiTokenService\n      .list()\n      .pipe(\n        tap((apiTokens) => {\n          this.setAPITokensLoading();\n          this.setAPITokens(apiTokens);\n        })\n      )\n      .toPromise();\n  }\n\n  createAuthToken(label: string, scopes: string[]) {\n    this.setCreateLoading(true);\n    this.apiTokenService\n      .create({ label, scopes })\n      // TODO handle errors\n      .pipe(\n        tap(() => {\n          this.setCreateLoading(false);\n          this.router.navigate([\"/profile/auth-tokens\"]);\n        }),\n        catchError((error) => {\n          this.setCreateLoading(false);\n          if (error) {\n            if (error.status === 400) {\n              if (error.error.label) {\n                error.error.label.length === 1\n                  ? this.setCreateLabelError(error.error.label[0])\n                  : this.setCreateLabelError(error.error.label.join(\" \"));\n              }\n              if (error.error.scopes) {\n                error.error.scopes.length === 1\n                  ? this.setCreateScopesError(error.error.scopes[0])\n                  : this.setCreateScopesError(error.error.scopes.join(\" \"));\n              }\n            } else {\n              this.setCreateError(`${error.statusText}: ${error.status}`);\n            }\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  deleteAuthToken(id: string) {\n    this.setDeleteLoading(id);\n    this.apiTokenService\n      .destroy(id)\n      .pipe(\n        tap(() => {\n          this.loadAuthTokens();\n        })\n      )\n      .toPromise();\n  }\n\n  clear() {\n    this.state.next(initialState);\n  }\n\n  resetCreateErrors() {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createError: \"\",\n      createErrorLabel: \"\",\n      createErrorScopes: \"\",\n    });\n  }\n\n  private setAPITokens(apiTokens: APIToken[]) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      apiTokens,\n    });\n  }\n\n  private setAPITokensLoading() {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: { ...state.loading, apiTokens: true },\n    });\n  }\n\n  private setDeleteLoading(id: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: { ...state.loading, delete: id },\n    });\n  }\n\n  private setCreateLoading(isLoading: boolean) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: { ...state.loading, create: isLoading },\n    });\n  }\n\n  private setCreateError(error: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createError: error,\n    });\n  }\n\n  private setCreateLabelError(error: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createErrorLabel: error,\n    });\n  }\n\n  private setCreateScopesError(error: string) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      createErrorScopes: error,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apiTokenService",
                        "type": "APITokenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "apiTokenService",
                        "type": "APITokenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ConfirmEmailService",
            "id": "injectable-ConfirmEmailService-e9b1a7e02e9c40a29ea663ba59d65052",
            "file": "src/app/api/confirm-email/confirm-email.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "\"/rest-auth/registration/verify-email/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "confirmEmail",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postConfirmEmailKey",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSnackbarMessage",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap, catchError } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfirmEmailService {\n  private readonly url = \"/rest-auth/registration/verify-email/\";\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n\n  confirmEmail(key: string) {\n    this.postConfirmEmailKey(key)\n      .pipe(\n        tap((_) => {\n          this.setSnackbarMessage(\"Your email address has been confirmed.\");\n          this.router.navigate([\"profile\"]);\n        }),\n        catchError((error) => {\n          if (error.error?.detail === \"Not found.\") {\n            this.setSnackbarMessage(`\n                This e-mail confirmation link expired or is invalid. Please\n                issue a new e-mail confirmation request.\n            `);\n          } else {\n            this.setSnackbarMessage(error.error?.detail);\n          }\n          this.router.navigate([\"profile\"]);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  postConfirmEmailKey(key: string) {\n    return this.http.post<string>(this.url, { key });\n  }\n\n  private setSnackbarMessage(message: string) {\n    this.snackBar.open(message);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EmailService",
            "id": "injectable-EmailService-8b96fc17935de9c91dc45f33fda80ad5",
            "file": "src/app/api/emails/email.service.ts",
            "properties": [
                {
                    "name": "addEmailError$",
                    "defaultValue": "this.state.pipe(\n    map((state) => state.addEmailError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "emailAddresses$",
                    "defaultValue": "this.state.pipe(\n    map((state) => state.emailAddresses)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "emailAddressesSorted$",
                    "defaultValue": "this.emailAddresses$.pipe(\n    map((emailAddresses) =>\n      // Sort by boolean https://stackoverflow.com/a/17387454/443457\n      [...emailAddresses].sort((a, b) =>\n        a.isPrimary === b.isPrimary ? 0 : a.isPrimary ? -1 : 1\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>A list of the user&#39;s email addresses, with primary email on top</p>\n<p>The backend allows multiple emails with isPrimary === true, but the\nfrontend is not built to accommodate this</p>\n",
                    "line": 68,
                    "rawdescription": "\n\nA list of the user's email addresses, with primary email on top\n\nThe backend allows multiple emails with isPrimary === true, but the\nfrontend is not built to accommodate this\n",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "loadingStates$",
                    "defaultValue": "this.state.pipe(\n    map((state) => state.loadingStates)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "resetFormSubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "resetLoadingAdd",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 193
                },
                {
                    "name": "resetLoadingDelete",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "resetLoadingMakePrimary",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "resetLoadingResend",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "setAddEmailError",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 305,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setLoadingAdd",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "setLoadingDelete",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "setLoadingMakePrimary",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "setLoadingResend",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<EmailState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/users/me/emails/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addEmailAddress",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteEmailAddress",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEmailAddresses",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "makeEmailPrimary",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postEmailAddress",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "putEmailAddress",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeEmailAddress",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resendConfirmation",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetLoadingState",
                    "args": [
                        {
                            "name": "stateToReset",
                            "type": "LoadingStateNames",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 293,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "stateToReset",
                            "type": "LoadingStateNames",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveEmailAddresses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendConfirmation",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setEmailAddresses",
                    "args": [
                        {
                            "name": "emailAddresses",
                            "type": "EmailAddress[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "emailAddresses",
                            "type": "EmailAddress[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoadingState",
                    "args": [
                        {
                            "name": "stateToSet",
                            "type": "LoadingStateNames",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "stateToSet",
                            "type": "LoadingStateNames",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNewEmailAddress",
                    "args": [
                        {
                            "name": "emailAddress",
                            "type": "EmailAddress",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "emailAddress",
                            "type": "EmailAddress",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNewPrimaryEmail",
                    "args": [
                        {
                            "name": "newPrimaryEmail",
                            "type": "EmailAddress",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n- Make isPrimary false on formerly primary email\n- Make isPrimary new on the new primary email, which is done here by\n  replacing it with the API response\n- Put new primary email up top\n",
                    "description": "<ul>\n<li>Make isPrimary false on formerly primary email</li>\n<li>Make isPrimary new on the new primary email, which is done here by\nreplacing it with the API response</li>\n<li>Put new primary email up top</li>\n</ul>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "newPrimaryEmail",
                            "type": "EmailAddress",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRemovedEmailAddress",
                    "args": [
                        {
                            "name": "emailToDelete",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "emailToDelete",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSnackbarMessage",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, Subject, EMPTY } from \"rxjs\";\nimport { EmailAddress } from \"./email.interfaces\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"../../constants\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\ntype LoadingStateNames =\n  | \"add\"\n  | \"delete\"\n  | \"makePrimary\"\n  | \"resendConfirmation\";\n\ninterface LoadingStates {\n  add: boolean;\n  /**\n   * Theoretically you could be deleting two at once and the UI won't\n   * reflect this. Didn't think it was a 1.0 problem\n   */\n  delete: string | null;\n  /**\n   * If you click one \"Make primary\" button and then another quickly, could\n   * cause problems. Again, didn't think it was a 1.0 problem\n   */\n  makePrimary: string | null;\n  resendConfirmation: string | null;\n}\n\ninterface EmailState {\n  emailAddresses: EmailAddress[];\n  loadingStates: LoadingStates;\n  addEmailError: string;\n}\n\nconst initialState: EmailState = {\n  emailAddresses: [],\n  loadingStates: {\n    add: false,\n    delete: null,\n    makePrimary: null,\n    resendConfirmation: null,\n  },\n  addEmailError: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EmailService {\n  private readonly state = new BehaviorSubject<EmailState>(initialState);\n  readonly resetFormSubject = new Subject();\n  readonly emailAddresses$ = this.state.pipe(\n    map((state) => state.emailAddresses)\n  );\n  readonly loadingStates$ = this.state.pipe(\n    map((state) => state.loadingStates)\n  );\n  readonly addEmailError$ = this.state.pipe(\n    map((state) => state.addEmailError)\n  );\n  /**\n   * A list of the user's email addresses, with primary email on top\n   *\n   * The backend allows multiple emails with isPrimary === true, but the\n   * frontend is not built to accommodate this\n   */\n  readonly emailAddressesSorted$ = this.emailAddresses$.pipe(\n    map((emailAddresses) =>\n      // Sort by boolean https://stackoverflow.com/a/17387454/443457\n      [...emailAddresses].sort((a, b) =>\n        a.isPrimary === b.isPrimary ? 0 : a.isPrimary ? -1 : 1\n      )\n    )\n  );\n\n  private readonly url = baseUrl + \"/users/me/emails/\";\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  retrieveEmailAddresses() {\n    this.getEmailAddresses()\n      .pipe(tap((response: EmailAddress[]) => this.setEmailAddresses(response)))\n      .subscribe();\n  }\n\n  addEmailAddress(email: string) {\n    this.setLoadingAdd();\n    this.postEmailAddress(email)\n      .pipe(\n        tap((response: EmailAddress) => {\n          this.setNewEmailAddress(response);\n          this.resetFormSubject.next();\n          this.resetLoadingAdd();\n          this.setAddEmailError(\"\");\n        }),\n        catchError((error) => {\n          this.resetLoadingAdd();\n          if (error.error?.non_field_errors) {\n            this.setAddEmailError(error.error.non_field_errors.join(\", \"));\n          } else {\n            if (\n              error.status === 500 &&\n              (error.error as string).includes(\n                `'to' parameter is not a valid address`\n              )\n            ) {\n              this.setAddEmailError(\n                \"This is not a valid email address. Please try another one.\"\n              );\n            } else if (error.status === 500) {\n              this\n                .setAddEmailError(`There was a problem. Refresh the page to see if your email is\n                on the list. You may need to try again, or try a different\n                email address.`);\n            } else if (error.status === 400) {\n              this.setAddEmailError(\"There was a problem. Please try again.\");\n            } else {\n              this.setAddEmailError(\"Error: \" + error.statusText);\n            }\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeEmailAddress(email: string) {\n    this.setLoadingDelete(email);\n    this.deleteEmailAddress(email)\n      .pipe(\n        tap((_) => {\n          this.setRemovedEmailAddress(email);\n          this.resetLoadingDelete();\n          this.setSnackbarMessage(\n            `${email} has been removed from your account.`\n          );\n        }),\n        catchError((_) => {\n          this.resetLoadingDelete();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  makeEmailPrimary(email: string) {\n    this.setLoadingMakePrimary(email);\n    this.putEmailAddress(email)\n      .pipe(\n        tap((response) => {\n          this.setNewPrimaryEmail(response);\n          this.resetLoadingMakePrimary();\n          this.setSnackbarMessage(\n            `${email} is now your primary email address.`\n          );\n        }),\n        catchError((error) => {\n          this.resetLoadingMakePrimary();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  resendConfirmation(email: string) {\n    this.setLoadingResend(email);\n    this.sendConfirmation(email)\n      .pipe(\n        tap((_) => {\n          this.resetLoadingResend();\n          this.setSnackbarMessage(\n            `A confirmation email has been sent to ${email}.`\n          );\n        }),\n        catchError((_) => {\n          this.resetLoadingResend();\n          this.setSnackbarMessage(`There was a problem. Try again later.`);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  setLoadingAdd = () => this.setLoadingState(\"add\");\n  setLoadingDelete = (value: string) => this.setLoadingState(\"delete\", value);\n  setLoadingMakePrimary = (value: string) =>\n    this.setLoadingState(\"makePrimary\", value);\n  setLoadingResend = (value: string) =>\n    this.setLoadingState(\"resendConfirmation\", value);\n\n  resetLoadingAdd = () => this.resetLoadingState(\"add\");\n  resetLoadingDelete = () => this.resetLoadingState(\"delete\");\n  resetLoadingMakePrimary = () => this.resetLoadingState(\"makePrimary\");\n  resetLoadingResend = () => this.resetLoadingState(\"resendConfirmation\");\n\n  private setSnackbarMessage(message: string) {\n    this.snackBar.open(message);\n  }\n\n  private getEmailAddresses() {\n    return this.http.get<EmailAddress[]>(this.url);\n  }\n\n  private postEmailAddress(email: string) {\n    return this.http.post<EmailAddress>(this.url, { email });\n  }\n\n  private deleteEmailAddress(email: string) {\n    // Delete with body, from https://stackoverflow.com/a/40857437/\n    const options = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n      }),\n      body: { email },\n    };\n    return this.http.delete<null>(this.url, options);\n  }\n\n  private putEmailAddress(email: string) {\n    return this.http.put<EmailAddress>(this.url, { email });\n  }\n\n  private sendConfirmation(email: string) {\n    return this.http.post<EmailAddress>(this.url + \"confirm/\", { email });\n  }\n\n  private setEmailAddresses(emailAddresses: EmailAddress[]) {\n    this.state.next({ ...this.state.getValue(), emailAddresses });\n  }\n\n  private setNewEmailAddress(emailAddress: EmailAddress) {\n    const current = this.state.getValue();\n    this.state.next({\n      ...current,\n      emailAddresses: [...current.emailAddresses].concat(emailAddress),\n    });\n  }\n\n  /**\n   * - Make isPrimary false on formerly primary email\n   * - Make isPrimary new on the new primary email, which is done here by\n   *   replacing it with the API response\n   * - Put new primary email up top\n   */\n  private setNewPrimaryEmail(newPrimaryEmail: EmailAddress) {\n    const current = this.state.getValue();\n    const nonPrimaryEmails = [...current.emailAddresses]\n      .filter((email) => email.email !== newPrimaryEmail.email)\n      .map((email) => ({ ...email, isPrimary: false }));\n\n    this.state.next({\n      ...current,\n      emailAddresses: [newPrimaryEmail].concat(nonPrimaryEmails),\n    });\n  }\n\n  private setRemovedEmailAddress(emailToDelete: string) {\n    const current = this.state.getValue();\n    const indexToDelete = current.emailAddresses.findIndex(\n      (email) => email.email === emailToDelete\n    );\n    let emailAddresses = current.emailAddresses;\n    if (indexToDelete > -1) {\n      emailAddresses = current.emailAddresses\n        .slice(0, indexToDelete)\n        .concat(\n          current.emailAddresses.slice(\n            indexToDelete + 1,\n            current.emailAddresses.length\n          )\n        );\n    }\n\n    this.state.next({ ...current, emailAddresses });\n  }\n\n  private setLoadingState(stateToSet: LoadingStateNames, value?: string) {\n    const current = this.state.getValue();\n    const loadingStates = { ...current.loadingStates };\n    if (stateToSet === \"add\") {\n      loadingStates.add = true;\n    } else {\n      if (value) {\n        loadingStates[stateToSet] = value;\n      }\n    }\n\n    this.state.next({ ...current, loadingStates });\n  }\n\n  private resetLoadingState(stateToReset: LoadingStateNames) {\n    const current = this.state.getValue();\n    const loadingStates = { ...current.loadingStates };\n    if (stateToReset === \"add\") {\n      loadingStates.add = false;\n    } else {\n      loadingStates[stateToReset] = null;\n    }\n\n    this.state.next({ ...current, loadingStates });\n  }\n\n  private setAddEmailError = (message: string) => {\n    this.state.next({ ...this.state.getValue(), addEmailError: message });\n  };\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 77,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GlitchTipOAuthService",
            "id": "injectable-GlitchTipOAuthService-b593edc12d7b600245a899585c36f015",
            "file": "src/app/api/oauth/oauth.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "\"rest-auth\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "githubLogin",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gitlabLogin",
                    "args": [
                        {
                            "name": "accessToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accessToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "googleLogin",
                    "args": [
                        {
                            "name": "accessToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accessToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initGithubLogin",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initGitlabLogin",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initGoogleLogin",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initMicrosoftLogin",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initOAuthLogin",
                    "args": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "provider",
                            "type": "OAuthProvider",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nRedirect user to OAuth provider auth URL",
                    "description": "<p>Redirect user to OAuth provider auth URL</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "clientId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "provider",
                            "type": "OAuthProvider",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "microsoftLogin",
                    "args": [
                        {
                            "name": "accessToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accessToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isConnect",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { getOAuthConfig } from \"./social\";\nimport { OAuthProvider } from \"./oauth.interfaces\";\n\ninterface RestAuthConnectData {\n  access_token?: string;\n  code?: string;\n}\n\ninterface RestAuthLoginResp {\n  key: string;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlitchTipOAuthService {\n  private readonly baseUrl = \"rest-auth\";\n\n  constructor(private http: HttpClient) {}\n\n  githubLogin(code: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      code,\n    };\n    let url = this.baseUrl + \"/github/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  microsoftLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/microsoft/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  googleLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/google/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  gitlabLogin(accessToken: string, isConnect: boolean) {\n    const data: RestAuthConnectData = {\n      access_token: accessToken,\n    };\n    let url = this.baseUrl + \"/gitlab/\";\n    if (isConnect) {\n      url += \"connect/\";\n    }\n    return this.http.post<RestAuthLoginResp>(url, data);\n  }\n\n  initGitlabLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"gitlab\");\n  }\n\n  initGithubLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"github\");\n  }\n\n  initGoogleLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"google\");\n  }\n\n  initMicrosoftLogin(clientId: string) {\n    this.initOAuthLogin(clientId, \"microsoft\");\n  }\n\n  /** Redirect user to OAuth provider auth URL */\n  private initOAuthLogin(clientId: string, provider: OAuthProvider) {\n    const config = getOAuthConfig(provider);\n    if (config) {\n      const params = new URLSearchParams({\n        response_type: \"token\",\n        client_id: clientId,\n        redirect_uri: window.location.origin + \"/auth/\" + provider,\n        scope: config.scope,\n      });\n      const url = `${config.loginURL}?${params.toString()}`;\n      window.location.href = url;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "IssueDetailService",
            "id": "injectable-IssueDetailService-ea3d8ddfab257797fdb76c483f71878e",
            "file": "src/app/issues/issue-detail/issue-detail.service.ts",
            "properties": [
                {
                    "name": "breadcrumbs$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => (event ? this.eventEntryBreadcrumbs(event) : undefined))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "event$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.event))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "eventEntryCSP$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => (event ? this.eventEntryCSP(event) : undefined))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "eventEntryException$",
                    "defaultValue": "combineLatest([\n    this.event$,\n    this.isReversed$,\n  ]).pipe(\n    map(([event, isReversed]) =>\n      event ? this.reverseFrames(event, isReversed) : undefined\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "eventEntryMessage$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => (event ? this.eventEntryMessage(event) : undefined))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "eventEntryRequest$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => (event ? this.entryRequestData(event) : undefined))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "eventInitialLoadComplete$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.eventInitialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "hasNextEvent$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => event && event.nextEventID !== null)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "hasPreviousEvent$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => event && event.previousEventID !== null)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "isReversed$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.isReversed))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "issue$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.issue))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "issueInitialLoadComplete$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.issueInitialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "nextEventUrl$",
                    "defaultValue": "combineLatest([\n    this.organization.activeOrganizationSlug$,\n    this.issue$,\n    this.event$,\n  ]).pipe(\n    map(([orgSlug, issue, event]) => {\n      if (event && event.nextEventID) {\n        return this.eventUrl(orgSlug, issue, event.nextEventID);\n      }\n      return null;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "previousEventUrl$",
                    "defaultValue": "combineLatest([\n    this.organization.activeOrganizationSlug$,\n    this.issue$,\n    this.event$,\n  ]).pipe(\n    map(([orgSlug, issue, event]) => {\n      if (event && event.previousEventID) {\n        return this.eventUrl(orgSlug, issue, event.previousEventID);\n      }\n      return null;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "rawStacktraceValues$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => (event ? this.rawStacktraceValues(event) : undefined))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "showShowMore$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.showShowMore)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "specialContexts$",
                    "defaultValue": "this.event$.pipe(\n    map((event) => (event ? this.specialContexts(event) : undefined))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "tags$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.tags && this.tagsWithPercent(state.tags))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "clearEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 330,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearIssue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 312,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "deleteIssue",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "entryRequestData",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AnnotatedRequest | undefined",
                    "typeParameters": [],
                    "line": 379,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "eventEntryBreadcrumbs",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "BreadcrumbValueData | undefined",
                    "typeParameters": [],
                    "line": 368,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "eventEntryCSP",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CSP | undefined",
                    "typeParameters": [],
                    "line": 358,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "eventEntryMessage",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Message | undefined",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "eventUrl",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "issue",
                            "type": "IssueDetail | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 637,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nBuild event detail url string",
                    "description": "<p>Build event detail url string</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "issue",
                            "type": "IssueDetail | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBreadcrumbs",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 618,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCspEntryData",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 610,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEntryData",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entryType",
                            "type": "EntryType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 628,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRegardless of what kind of entry it is, we want to return the `data`\nproperty or undefined\n",
                    "description": "<p>Regardless of what kind of entry it is, we want to return the <code>data</code>\nproperty or undefined</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entryType",
                            "type": "EntryType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEventByID",
                    "args": [
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getExceptionEntryData",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 600,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWe had some methods above that looked a bit daunting; one way to make them\nless daunting was to get the ugly-looking typecasting out of the way.\n\nSo here are a few helper functions that funnel into getEntryData and return\ndata which is typed the way we want.\n",
                    "description": "<p>We had some methods above that looked a bit daunting; one way to make them\nless daunting was to get the ugly-looking typecasting out of the way.</p>\n<p>So here are a few helper functions that funnel into getEntryData and return\ndata which is typed the way we want.</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLatestEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getMessageEntryData",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 606,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNextEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPreviousEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getRequestEntryData",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 614,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReversedFrames",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "rawStacktraceValues",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "[] | undefined",
                    "typeParameters": [],
                    "line": 426,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveEvent",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveIssue",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveLatestEvent",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveTags",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reverseFrames",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isReversed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ExceptionValueData | undefined",
                    "typeParameters": [],
                    "line": 397,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isReversed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIssue",
                    "args": [
                        {
                            "name": "issue",
                            "type": "IssueDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 304,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issue",
                            "type": "IssueDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIssueStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet local state issue state",
                    "description": "<p>Set local state issue state</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setShowShowMore",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTags",
                    "args": [
                        {
                            "name": "tags",
                            "type": "IssueTags[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 338,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tags",
                            "type": "IssueTags[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "specialContexts",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AnnotatedContexts[]",
                    "typeParameters": [],
                    "line": 457,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFor the contexts bar in event detail, find specific contexts and\nreturn array of matching objects to loop through in template.\nThe order they are return in should always be user, browser, runtime\nos, device, gpu\n",
                    "description": "<p>For the contexts bar in event detail, find specific contexts and\nreturn array of matching objects to loop through in template.\nThe order they are return in should always be user, browser, runtime\nos, device, gpu</p>\n",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tagsWithPercent",
                    "args": [
                        {
                            "name": "tags",
                            "type": "IssueTags[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "[] | undefined",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "tags",
                            "type": "IssueTags[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleIsReversed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 342,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport { tap, map, catchError, withLatestFrom } from \"rxjs/operators\";\nimport {\n  IssueDetail,\n  EventDetail,\n  IssueStatus,\n  ExceptionValueData,\n  Request,\n  AnnotatedRequest,\n  CSP,\n  Message,\n  Values,\n  EntryType,\n  AnnotatedContexts,\n  BreadcrumbValueData,\n  IssueTags,\n  IssueTagsAdjusted,\n} from \"../interfaces\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { IssuesService } from \"../issues.service\";\nimport { generateIconPath } from \"../../shared/shared.utils\";\nimport { IssuesAPIService } from \"src/app/api/issues/issues-api.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\ninterface IssueDetailState {\n  issue: IssueDetail | null;\n  issueLoading: boolean;\n  issueInitialLoadComplete: boolean;\n  event: EventDetail | null;\n  eventLoading: boolean;\n  eventInitialLoadComplete: boolean;\n  tags: IssueTags[] | null;\n  isReversed: boolean;\n  showShowMore: boolean;\n}\n\nconst initialState: IssueDetailState = {\n  issue: null,\n  event: null,\n  tags: null,\n  isReversed: true,\n  showShowMore: false,\n  issueLoading: false,\n  issueInitialLoadComplete: false,\n  eventLoading: false,\n  eventInitialLoadComplete: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IssueDetailService extends StatefulService<IssueDetailState> {\n  readonly issue$ = this.getState$.pipe(map((state) => state.issue));\n  readonly issueInitialLoadComplete$ = this.getState$.pipe(\n    map((state) => state.issueInitialLoadComplete)\n  );\n  readonly event$ = this.getState$.pipe(map((state) => state.event));\n  readonly tags$ = this.getState$.pipe(\n    map((state) => state.tags && this.tagsWithPercent(state.tags))\n  );\n  readonly eventInitialLoadComplete$ = this.getState$.pipe(\n    map((state) => state.eventInitialLoadComplete)\n  );\n  readonly isReversed$ = this.getState$.pipe(map((state) => state.isReversed));\n  readonly showShowMore$ = this.getState$.pipe(\n    map((state) => state.showShowMore)\n  );\n  readonly hasNextEvent$ = this.event$.pipe(\n    map((event) => event && event.nextEventID !== null)\n  );\n  readonly hasPreviousEvent$ = this.event$.pipe(\n    map((event) => event && event.previousEventID !== null)\n  );\n  readonly nextEventUrl$ = combineLatest([\n    this.organization.activeOrganizationSlug$,\n    this.issue$,\n    this.event$,\n  ]).pipe(\n    map(([orgSlug, issue, event]) => {\n      if (event && event.nextEventID) {\n        return this.eventUrl(orgSlug, issue, event.nextEventID);\n      }\n      return null;\n    })\n  );\n  readonly previousEventUrl$ = combineLatest([\n    this.organization.activeOrganizationSlug$,\n    this.issue$,\n    this.event$,\n  ]).pipe(\n    map(([orgSlug, issue, event]) => {\n      if (event && event.previousEventID) {\n        return this.eventUrl(orgSlug, issue, event.previousEventID);\n      }\n      return null;\n    })\n  );\n  readonly eventEntryException$ = combineLatest([\n    this.event$,\n    this.isReversed$,\n  ]).pipe(\n    map(([event, isReversed]) =>\n      event ? this.reverseFrames(event, isReversed) : undefined\n    )\n  );\n  readonly rawStacktraceValues$ = this.event$.pipe(\n    map((event) => (event ? this.rawStacktraceValues(event) : undefined))\n  );\n  readonly eventEntryRequest$ = this.event$.pipe(\n    map((event) => (event ? this.entryRequestData(event) : undefined))\n  );\n  readonly eventEntryCSP$ = this.event$.pipe(\n    map((event) => (event ? this.eventEntryCSP(event) : undefined))\n  );\n  readonly eventEntryMessage$ = this.event$.pipe(\n    map((event) => (event ? this.eventEntryMessage(event) : undefined))\n  );\n  readonly specialContexts$ = this.event$.pipe(\n    map((event) => (event ? this.specialContexts(event) : undefined))\n  );\n  readonly breadcrumbs$ = this.event$.pipe(\n    map((event) => (event ? this.eventEntryBreadcrumbs(event) : undefined))\n  );\n\n  constructor(\n    private organization: OrganizationsService,\n    private issueService: IssuesService,\n    private issuesAPIService: IssuesAPIService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n    super(initialState);\n  }\n\n  retrieveIssue(id: number) {\n    this.setState({ issueLoading: true });\n    return this.issuesAPIService.retrieve(id.toString()).pipe(\n      tap((issue) => this.setIssue(issue)),\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 404) {\n          this.clearIssue();\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  getPreviousEvent() {\n    const state = this.state.getValue();\n    if (state.issue && state.event && state.event.previousEventID) {\n      this.retrieveEvent(state.issue.id, state.event.previousEventID);\n    }\n  }\n\n  getNextEvent() {\n    const state = this.state.getValue();\n    if (state.issue && state.event && state.event.nextEventID) {\n      this.retrieveEvent(state.issue.id, state.event.nextEventID);\n    }\n  }\n\n  getLatestEvent() {\n    const issue = this.state.getValue().issue;\n    if (issue) {\n      return this.retrieveLatestEvent(issue.id);\n    }\n    return EMPTY;\n  }\n\n  getEventByID(eventID: string) {\n    const issue = this.state.getValue().issue;\n    if (issue) {\n      return this.retrieveEvent(issue.id, eventID);\n    }\n    return EMPTY;\n  }\n\n  retrieveTags(id: number, query?: string) {\n    return this.issuesAPIService.retrieveTags(id.toString(), query).pipe(\n      tap((resp) => {\n        this.setTags(resp);\n      })\n    );\n  }\n\n  getReversedFrames() {\n    this.toggleIsReversed();\n  }\n\n  setShowShowMore(value: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      showShowMore: value,\n    });\n  }\n\n  setStatus(status: IssueStatus) {\n    const issue = this.state.getValue().issue;\n    if (issue) {\n      return this.issueService\n        .setStatus(issue.id, status)\n        .pipe(tap((resp) => this.setIssueStatus(resp.status)))\n        .toPromise();\n    }\n    return;\n  }\n\n  deleteIssue(id: string) {\n    this.issuesAPIService\n      .destroy(id)\n      .pipe(\n        withLatestFrom(this.organization.activeOrganizationSlug$),\n        tap(([_, activeOrgSlug]) => {\n          this.snackBar.open(`Issue ${id} has been deleted.`);\n          this.router.navigate([activeOrgSlug, \"issues\"]);\n        }),\n        catchError((_) => {\n          this.snackBar.open(\n            `There was an error deleting this issue. Please try again.`\n          );\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  private tagsWithPercent(tags: IssueTags[]): IssueTagsAdjusted[] | undefined {\n    if (tags.length > 0) {\n      const tagsWithExtraData = tags.map((tag) => {\n        const totalValues = tag.totalValues;\n        const limitedTopValues = tag.topValues.slice(0, 10);\n        const tagWithPercent = limitedTopValues.map((topValue) => {\n          const count = topValue.count;\n          const percent = (count / totalValues) * 100;\n          const percentRounded = Math.round(percent);\n          /** percent is to add up for total percent and percentRounded is for display */\n          return {\n            ...topValue,\n            percentRounded,\n            percent,\n          };\n        });\n        const sumOfPercents = tagWithPercent.reduce(\n          (accum, item) => accum + item.percent,\n          0\n        );\n        if (sumOfPercents < 100) {\n          return {\n            ...tag,\n            topValues: tagWithPercent,\n            other: Math.round(100 - sumOfPercents),\n          };\n        } else {\n          return { ...tag, topValues: tagWithPercent };\n        }\n      });\n\n      return [...tagsWithExtraData];\n    }\n    return;\n  }\n\n  /** Set local state issue state */\n  private setIssueStatus(status: IssueStatus) {\n    const state = this.state.getValue();\n    if (state.issue) {\n      const issue = { ...state.issue, status };\n      this.state.next({ ...state, issue });\n    }\n  }\n\n  private retrieveLatestEvent(issueId: number) {\n    this.setState({ eventLoading: true });\n    return this.issuesAPIService.retrieveLatestEvent(issueId).pipe(\n      tap((event) => this.setEvent(event)),\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 404) {\n          this.clearEvent();\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  // private removed for testing\n  retrieveEvent(issueId: number, eventID: string) {\n    this.setState({ eventLoading: true });\n    return this.issuesAPIService.retrieveEvent(issueId, eventID).pipe(\n      tap((event) => this.setEvent(event)),\n      catchError((error) => {\n        if (error instanceof HttpErrorResponse && error.status === 404) {\n          this.clearEvent();\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  // private removed for testing\n  setIssue(issue: IssueDetail) {\n    this.setState({\n      issue,\n      issueLoading: false,\n      issueInitialLoadComplete: true,\n    });\n  }\n\n  private clearIssue() {\n    this.setState({\n      issue: null,\n      issueLoading: false,\n      issueInitialLoadComplete: true,\n      event: null,\n    });\n  }\n\n  // private removed for testing\n  setEvent(event: EventDetail) {\n    this.setState({\n      event,\n      eventLoading: false,\n      eventInitialLoadComplete: true,\n    });\n  }\n\n  clearEvent() {\n    this.setState({\n      event: null,\n      eventLoading: false,\n      eventInitialLoadComplete: true,\n    });\n  }\n\n  setTags(tags: IssueTags[]) {\n    this.setState({ tags });\n  }\n\n  private toggleIsReversed() {\n    const isReversed = this.state.getValue().isReversed;\n    this.setState({ isReversed: !isReversed });\n  }\n\n  /* Return the message entry type for an event */\n  private eventEntryMessage(event: EventDetail): Message | undefined {\n    const eventMessage = this.getMessageEntryData(event);\n\n    if (eventMessage) {\n      return { ...eventMessage };\n    }\n    return;\n  }\n\n  /* Return the CSP entry type for an event */\n  private eventEntryCSP(event: EventDetail): CSP | undefined {\n    const eventCSP = this.getCspEntryData(event);\n\n    if (eventCSP) {\n      return { ...eventCSP };\n    }\n    return;\n  }\n\n  /* Return the breadcrumbs entry type for an event */\n  private eventEntryBreadcrumbs(\n    event: EventDetail\n  ): BreadcrumbValueData | undefined {\n    const breadcrumbs = this.getBreadcrumbs(event);\n    if (breadcrumbs) {\n      return { ...breadcrumbs };\n    }\n    return;\n  }\n\n  /* Return the request entry type for an event with additional fields parsed from url */\n  private entryRequestData(event: EventDetail): AnnotatedRequest | undefined {\n    const eventRequest = this.getRequestEntryData(event);\n    if (eventRequest) {\n      let urlDomainName = \"\";\n      let urlPath = \"\";\n      try {\n        urlDomainName = new URL(eventRequest.url).hostname;\n        const path = new URL(eventRequest.url).pathname;\n        urlPath = path === \"/\" ? eventRequest.url : path;\n      } catch (_) {\n        urlPath = eventRequest.url;\n      }\n      return { ...eventRequest, domainName: urlDomainName, path: urlPath };\n    }\n    return;\n  }\n\n  /* Reverse frame array, nested in the event object */\n  private reverseFrames(\n    event: EventDetail,\n    isReversed: boolean\n  ): ExceptionValueData | undefined {\n    const eventException = this.getExceptionEntryData(event);\n\n    if (eventException) {\n      if (isReversed) {\n        const reversedFrames = eventException.values.map((value) => {\n          if (value.stacktrace && \"frames\" in value.stacktrace) {\n            const frameReverse = [...value.stacktrace.frames].reverse();\n            return {\n              ...value,\n              stacktrace: { ...value.stacktrace, frames: [...frameReverse] },\n            };\n          }\n          return value;\n        });\n        return {\n          ...eventException,\n          values: reversedFrames,\n        };\n      } else {\n        return { ...eventException };\n      }\n    }\n    return;\n  }\n\n  rawStacktraceValues(event: EventDetail): Values[] | undefined {\n    const platform = event.platform;\n    const eventException = this.getExceptionEntryData(event);\n\n    if (eventException) {\n      const values = eventException.values.map((value) => {\n        if (\n          platform !== \"python\" &&\n          value.stacktrace &&\n          \"frames\" in value.stacktrace\n        ) {\n          const reverseFrames = [...value.stacktrace.frames].reverse();\n          return {\n            ...value,\n            stacktrace: { ...value.stacktrace, frames: reverseFrames },\n          };\n        } else {\n          return { ...value };\n        }\n      });\n      return [...values];\n    }\n    return;\n  }\n\n  /**\n   * For the contexts bar in event detail, find specific contexts and\n   * return array of matching objects to loop through in template.\n   * The order they are return in should always be user, browser, runtime\n   * os, device, gpu\n   */\n  specialContexts(event: EventDetail): AnnotatedContexts[] {\n    const user = event.user;\n    const contexts = event.contexts;\n    const contextsArray: AnnotatedContexts[] = [];\n\n    for (const key in contexts) {\n      if (key) {\n        const contextsObject = contexts[key];\n\n        if (key === \"browser\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"tab\",\n            title:\n              contextsObject.name !== \"Other\"\n                ? (contextsObject.name as string)\n                : \"Unknown Browser\",\n            subtitle: contextsObject.version\n              ? (contextsObject.version as string)\n              : \"Unknown\",\n            key: \"Version\",\n          });\n        }\n        if (key === \"runtime\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"tab\",\n            title:\n              contextsObject.name !== \"Other\"\n                ? (contextsObject.name as string)\n                : \"Unknown Runtime\",\n            subtitle: contextsObject.version\n              ? (contextsObject.version as string)\n              : \"Unknown\",\n            key: \"Version\",\n          });\n        }\n        if (key === \"os\" || key === \"client_os\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"computer\",\n            title:\n              contextsObject.name !== \"Other\"\n                ? (contextsObject.name as string)\n                : \"Unknown Operating System\",\n            subtitle: contextsObject.version\n              ? (contextsObject.version as string)\n              : contextsObject.kernel_version\n              ? (contextsObject.kernel_version as string)\n              : \"Unknown\",\n            key: contextsObject.version\n              ? \"Version\"\n              : contextsObject.kernel_version\n              ? \"Kernel\"\n              : \"Version\",\n          });\n        }\n        if (key === \"device\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.model\n              ? generateIconPath(contextsObject.model as string)\n              : null,\n            matIcon: \"devices_other\",\n            title: contextsObject.model\n              ? (contextsObject.model as string)\n              : \"Unknown Device\",\n            subtitle: contextsObject.arch\n              ? (contextsObject.arch as string)\n              : contextsObject.model_id\n              ? (contextsObject.model_id as string)\n              : null,\n            key: contextsObject.arch\n              ? \"Arch\"\n              : contextsObject.model_id\n              ? \"Model\"\n              : null,\n          });\n        }\n        if (key === \"gpu\") {\n          contextsArray.unshift({\n            type: key,\n            icon: contextsObject.name\n              ? generateIconPath(contextsObject.name as string)\n              : null,\n            matIcon: \"memory\",\n            title: contextsObject.name\n              ? (contextsObject.name as string)\n              : \"Unknown GPU\",\n            subtitle: contextsObject.vendor_name\n              ? (contextsObject.vendor_name as string)\n              : \"Unknown\",\n            key: \"Vendor\",\n          });\n        }\n      }\n    }\n\n    if (user) {\n      let userTitle = user.email\n        ? user.email\n        : user.ip_address || user.id || user.username;\n      if (!userTitle) {\n        userTitle = \"Unknown User\";\n      }\n      let newKey = \"\";\n      let newSubtitle = \"\";\n      if (user.id && user.id !== userTitle) {\n        newKey = \"ID\";\n        newSubtitle = user.id;\n      } else if (user.username && user.username !== userTitle) {\n        newKey = \"Username\";\n        newSubtitle = user.username;\n      }\n      contextsArray.unshift({\n        type: \"user\",\n        icon: null,\n        matIcon: \"account_circle\",\n        title: userTitle,\n        subtitle: newSubtitle,\n        key: newKey,\n      });\n    }\n\n    return contextsArray;\n  }\n\n  /**\n   * We had some methods above that looked a bit daunting; one way to make them\n   * less daunting was to get the ugly-looking typecasting out of the way.\n   *\n   * So here are a few helper functions that funnel into getEntryData and return\n   * data which is typed the way we want.\n   */\n  private getExceptionEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"exception\") as\n      | ExceptionValueData\n      | undefined;\n  }\n\n  private getMessageEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"message\") as Message | undefined;\n  }\n\n  private getCspEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"csp\") as CSP | undefined;\n  }\n\n  private getRequestEntryData(event: EventDetail) {\n    return this.getEntryData(event, \"request\") as Request | undefined;\n  }\n\n  private getBreadcrumbs(event: EventDetail) {\n    return this.getEntryData(event, \"breadcrumbs\") as\n      | BreadcrumbValueData\n      | undefined;\n  }\n\n  /**\n   * Regardless of what kind of entry it is, we want to return the `data`\n   * property or undefined\n   */\n  private getEntryData(event: EventDetail, entryType: EntryType) {\n    const entries = event.entries.find((entry) => entry.type === entryType);\n    if (!entries) {\n      return undefined;\n    }\n    return entries.data;\n  }\n\n  /** Build event detail url string */\n  private eventUrl(\n    orgSlug: string | null,\n    issue: IssueDetail | null,\n    eventID: string\n  ) {\n    if (orgSlug && issue) {\n      return `/${orgSlug}/issues/${issue.id}/events/${eventID}`;\n    }\n    return null;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organization",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "issueService",
                        "type": "IssuesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "issuesAPIService",
                        "type": "IssuesAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 127,
                "jsdoctags": [
                    {
                        "name": "organization",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "issueService",
                        "type": "IssuesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "issuesAPIService",
                        "type": "IssuesAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "IssuesAPIService",
            "id": "injectable-IssuesAPIService-aefb8ff574378bcecdb6282048e58788",
            "file": "src/app/api/issues/issues-api.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/issues/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "cursor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "start",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "end",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "sort",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "environment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "start",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveEvent",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "eventID",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveLatestEvent",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveTags",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ids",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ids",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { baseUrl } from \"../../constants\";\nimport { APIBaseService } from \"../api-base.service\";\nimport {\n  EventDetail,\n  Issue,\n  IssueDetail,\n  IssueStatus,\n  IssueTags,\n  UpdateStatusResponse,\n} from \"src/app/issues/interfaces\";\nimport { Params } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IssuesAPIService extends APIBaseService {\n  readonly url = baseUrl + \"/issues/\";\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  list(\n    organizationSlug?: string,\n    cursor?: string,\n    query?: string,\n    project?: string[] | null,\n    start?: string,\n    end?: string,\n    sort?: string,\n    environment?: string\n  ) {\n    const url = organizationSlug\n      ? `${baseUrl}/organizations/${organizationSlug}/issues/`\n      : this.url;\n    let httpParams = new HttpParams();\n    if (cursor) {\n      httpParams = httpParams.set(\"cursor\", cursor);\n    }\n    if (query) {\n      httpParams = httpParams.set(\"query\", query);\n    }\n    if (project) {\n      project.forEach((id) => {\n        httpParams = httpParams.append(\"project\", id);\n      });\n    }\n    if (start && end) {\n      httpParams = httpParams.set(\"start\", start);\n      httpParams = httpParams.set(\"end\", end);\n    }\n    if (sort) {\n      httpParams = httpParams.set(\"sort\", sort);\n    }\n    if (environment) {\n      httpParams = httpParams.set(\"environment\", environment);\n    }\n    return this.http.get<Issue[]>(url, {\n      observe: \"response\",\n      params: httpParams,\n    });\n  }\n\n  retrieve(id: string) {\n    return this.http.get<IssueDetail>(this.detailURL(id));\n  }\n\n  update(\n    status: IssueStatus,\n    ids: number[],\n    orgSlug?: string,\n    projectId?: string,\n    query?: string\n  ) {\n    let params: Params;\n    let updateUrl = `${baseUrl}/organizations/${orgSlug}/issues/`;\n\n    if (orgSlug && projectId && query) {\n      params = {\n        project: projectId,\n        query,\n      };\n    } else if (orgSlug && projectId) {\n      params = {\n        project: projectId,\n      };\n    } else {\n      updateUrl = this.url;\n      params = {\n        id: ids.map((id) => id.toString()),\n      };\n    }\n    return this.http.put<UpdateStatusResponse>(\n      updateUrl,\n      { status },\n      { params }\n    );\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  retrieveLatestEvent(issueId: number) {\n    const url = `${this.url}${issueId}/events/latest/`;\n    return this.http.get<EventDetail>(url);\n  }\n\n  retrieveEvent(issueId: number, eventID: string) {\n    const url = `${this.url}${issueId}/events/${eventID}/`;\n    return this.http.get<EventDetail>(url);\n  }\n\n  retrieveTags(issueId: string, query?: string) {\n    const url = `${this.url}${issueId}/tags/`;\n    let params = new HttpParams();\n    if (query) {\n      params = params.append(\"query\", query);\n    }\n    return this.http.get<IssueTags[]>(url, { params });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "IssuesService",
            "id": "injectable-IssuesService-88a08b7ac3f1d43002f78b6b79b4982d",
            "file": "src/app/issues/issues.service.ts",
            "properties": [
                {
                    "name": "areAllSelected$",
                    "defaultValue": "combineLatest([this.issues$, this.selectedIssues$]).pipe(\n    map(\n      ([issues, selectedIssues]) =>\n        issues.length === selectedIssues.length && issues.length > 0\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "errors$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.errors))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "issues$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.issues))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "issuesWithSelected$",
                    "defaultValue": "combineLatest([\n    this.issues$,\n    this.selectedIssues$,\n  ]).pipe(\n    map(([issues, selectedIssues]) =>\n      issues.map((issue) => ({\n        ...issue,\n        isSelected: selectedIssues.includes(issue.id) ? true : false,\n        projectSlug: issue.project?.slug,\n      }))\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IssueWithSelected[]>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "numberOfSelectedIssues$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.selectedIssues.length)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "organizationEnvironments$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.organizationEnvironments)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "organizationEnvironmentsProcessed$",
                    "defaultValue": "this.organizationEnvironments$.pipe(\n    map((environments) =>\n      environments.reduce(\n        (accumulator, environment) => [\n          ...accumulator,\n          ...(!accumulator.includes(environment.name)\n            ? [environment.name]\n            : []),\n        ],\n        [] as string[]\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Uses reducer to remove duplicate environments, also converts objects to a\nlist of names since that&#39;s all that the component requires</p>\n",
                    "line": 79,
                    "rawdescription": "\n\nUses reducer to remove duplicate environments, also converts objects to a\nlist of names since that's all that the component requires\n",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "searchHits$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.pagination.hits)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "selectedIssues$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.selectedIssues))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "selectedProjectInfo$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.selectedProjectInfo)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "thereAreSelectedIssues$",
                    "defaultValue": "this.selectedIssues$.pipe(\n    map((selectedIssues) => selectedIssues.length > 0)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.pagination$.pipe(map((pagination) => pagination.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "pagination$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.pagination))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "bulkSetStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet all selected issues to this status",
                    "description": "<p>Set all selected issues to this status</p>\n",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "bulkUpdateIssuesForProject",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearBulkProjectUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "clearProjectInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIssues",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "\"is:unresolved\""
                        },
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "start",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sort",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "environment",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nRefresh issues data. orgSlug is required.",
                    "description": "<p>Refresh issues data. orgSlug is required.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "\"is:unresolved\"",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "start",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environment",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOrganizationEnvironments",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveIssues",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "cursor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "start",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "end",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "sort",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "environment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGet issues from backend using appropriate endpoint based on organization",
                    "description": "<p>Get issues from backend using appropriate endpoint based on organization</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "start",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveOrganizationEnvironments",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 298,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setBulkUpdateIssuesForProject",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setClearErrors",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setIssuesError",
                    "args": [
                        {
                            "name": "errors",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 286,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIssueStatuses",
                    "args": [
                        {
                            "name": "issueIds",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 275,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "issueIds",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStatus",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet one specified issue ID as status",
                    "description": "<p>Set one specified issue ID as status</p>\n",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSelectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSelected",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateErrorMessage",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateStatus",
                    "args": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ids",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "IssueStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ids",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStateAndPagination",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { combineLatest, Observable, EMPTY } from \"rxjs\";\nimport { tap, catchError, map, take } from \"rxjs/operators\";\nimport { Issue, IssueWithSelected, IssueStatus } from \"./interfaces\";\nimport { IssuesAPIService } from \"../api/issues/issues-api.service\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"../shared/stateful-service/pagination-stateful-service\";\nimport { Environment } from \"../api/organizations/organizations.interface\";\nimport { OrganizationAPIService } from \"../api/organizations/organizations-api.service\";\n\nexport interface IssuesState extends PaginationStatefulServiceState {\n  issues: Issue[];\n  selectedIssues: number[];\n  organizationEnvironments: Environment[];\n  selectedProjectInfo: { orgSlug?: string; projectId?: string; query?: string };\n  areIssuesForProjectSelected: boolean;\n  errors: string[];\n}\n\nconst initialState: IssuesState = {\n  issues: [],\n  selectedIssues: [],\n  pagination: initialPaginationState,\n  organizationEnvironments: [],\n  selectedProjectInfo: {},\n  areIssuesForProjectSelected: false,\n  errors: [],\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IssuesService extends PaginationStatefulService<IssuesState> {\n  issues$ = this.getState$.pipe(map((state) => state.issues));\n  selectedIssues$ = this.getState$.pipe(map((state) => state.selectedIssues));\n  issuesWithSelected$: Observable<IssueWithSelected[]> = combineLatest([\n    this.issues$,\n    this.selectedIssues$,\n  ]).pipe(\n    map(([issues, selectedIssues]) =>\n      issues.map((issue) => ({\n        ...issue,\n        isSelected: selectedIssues.includes(issue.id) ? true : false,\n        projectSlug: issue.project?.slug,\n      }))\n    )\n  );\n  areAllSelected$ = combineLatest([this.issues$, this.selectedIssues$]).pipe(\n    map(\n      ([issues, selectedIssues]) =>\n        issues.length === selectedIssues.length && issues.length > 0\n    )\n  );\n  readonly searchHits$ = this.getState$.pipe(\n    map((state) => state.pagination.hits)\n  );\n  readonly thereAreSelectedIssues$ = this.selectedIssues$.pipe(\n    map((selectedIssues) => selectedIssues.length > 0)\n  );\n  readonly organizationEnvironments$ = this.getState$.pipe(\n    map((data) => data.organizationEnvironments)\n  );\n  readonly numberOfSelectedIssues$ = this.getState$.pipe(\n    map((state) => state.selectedIssues.length)\n  );\n  readonly selectedProjectInfo$ = this.getState$.pipe(\n    map((state) => state.selectedProjectInfo)\n  );\n  readonly errors$ = this.getState$.pipe(map((state) => state.errors));\n  /**\n   * Uses reducer to remove duplicate environments, also converts objects to a\n   * list of names since that's all that the component requires\n   */\n  readonly organizationEnvironmentsProcessed$ = this.organizationEnvironments$.pipe(\n    map((environments) =>\n      environments.reduce(\n        (accumulator, environment) => [\n          ...accumulator,\n          ...(!accumulator.includes(environment.name)\n            ? [environment.name]\n            : []),\n        ],\n        [] as string[]\n      )\n    )\n  );\n\n  constructor(\n    private snackbar: MatSnackBar,\n    private issuesAPIService: IssuesAPIService,\n    private organizationsAPIService: OrganizationAPIService\n  ) {\n    super(initialState);\n  }\n\n  /** Refresh issues data. orgSlug is required. */\n  getIssues(\n    orgSlug: string,\n    cursor: string | undefined,\n    query: string = \"is:unresolved\",\n    project: string[] | null,\n    start: string | undefined,\n    end: string | undefined,\n    sort: string | undefined,\n    environment: string | undefined\n  ) {\n    this.retrieveIssues(\n      orgSlug,\n      cursor,\n      query,\n      project,\n      start,\n      end,\n      sort,\n      environment\n    ).toPromise();\n  }\n\n  getOrganizationEnvironments(orgSlug: string) {\n    return this.retrieveOrganizationEnvironments(orgSlug);\n  }\n\n  toggleSelected(issueId: number) {\n    const state = this.state.getValue();\n    let selectedIssues: number[];\n    if (state.selectedIssues.includes(issueId)) {\n      selectedIssues = state.selectedIssues.filter(\n        (issue) => issue !== issueId\n      );\n    } else {\n      selectedIssues = state.selectedIssues.concat([issueId]);\n    }\n    this.state.next({ ...state, selectedIssues });\n  }\n\n  toggleSelectAll() {\n    const state = this.state.getValue();\n    if (state.issues.length === state.selectedIssues.length) {\n      this.state.next({\n        ...state,\n        selectedIssues: [],\n      });\n      this.clearBulkProjectUpdate();\n    } else {\n      this.state.next({\n        ...state,\n        selectedIssues: state.issues.map((issue) => issue.id),\n      });\n    }\n  }\n\n  /** Set one specified issue ID as status */\n  setStatus(id: number, status: IssueStatus) {\n    return this.updateStatus(status, [id]);\n  }\n\n  /** Set all selected issues to this status */\n  bulkSetStatus(status: IssueStatus) {\n    combineLatest([this.selectedIssues$, this.selectedProjectInfo$])\n      .pipe(\n        take(1),\n        map(([selectedIssues, selectedProjectInfo]) => {\n          return this.updateStatus(\n            status,\n            selectedIssues,\n            selectedProjectInfo.orgSlug,\n            selectedProjectInfo.projectId,\n            selectedProjectInfo.query\n          ).toPromise();\n        })\n      )\n      .subscribe();\n  }\n\n  bulkUpdateIssuesForProject(\n    orgSlug: string,\n    projectId: string,\n    query: string\n  ) {\n    this.setBulkUpdateIssuesForProject(orgSlug, projectId, query);\n  }\n\n  clearProjectInfo() {\n    this.clearBulkProjectUpdate();\n  }\n\n  /** Get issues from backend using appropriate endpoint based on organization */\n  private retrieveIssues(\n    organizationSlug?: string,\n    cursor?: string,\n    query?: string,\n    project?: string[] | null,\n    start?: string,\n    end?: string,\n    sort?: string,\n    environment?: string\n  ) {\n    this.setClearErrors();\n    return this.issuesAPIService\n      .list(\n        organizationSlug,\n        cursor,\n        query,\n        project,\n        start,\n        end,\n        sort,\n        environment\n      )\n      .pipe(\n        tap((res) => {\n          this.setStateAndPagination({ issues: res.body! }, res);\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setIssuesError(err);\n          return EMPTY;\n        })\n      );\n  }\n\n  private updateStatus(\n    status: IssueStatus,\n    ids: number[],\n    orgSlug?: string,\n    projectId?: string,\n    query?: string\n  ) {\n    return this.issuesAPIService\n      .update(status, ids, orgSlug, projectId, query)\n      .pipe(\n        tap((resp) => {\n          this.setIssueStatuses(ids, resp.status);\n          this.clearBulkProjectUpdate();\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.snackbar.open(\"Error, unable to update issue\");\n          return EMPTY;\n        })\n      );\n  }\n\n  private clearBulkProjectUpdate() {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      selectedProjectInfo: {},\n    });\n  }\n\n  private setBulkUpdateIssuesForProject(\n    orgSlug?: string,\n    projectId?: string,\n    query?: string\n  ) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      selectedProjectInfo: { orgSlug, projectId, query },\n    });\n  }\n\n  private setClearErrors() {\n    const state = this.state.getValue();\n    this.setState({\n      errors: [],\n      pagination: { ...state.pagination, loading: false },\n    });\n  }\n\n  private setIssueStatuses(issueIds: number[], status: IssueStatus) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      issues: state.issues.map((issue) =>\n        issueIds.includes(issue.id) ? { ...issue, status } : issue\n      ),\n      selectedIssues: [],\n    });\n  }\n\n  private setIssuesError(errors: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: this.updateErrorMessage(errors),\n      pagination: {\n        ...state.pagination,\n        loading: false,\n        initialLoadComplete: true,\n      },\n    });\n  }\n\n  private retrieveOrganizationEnvironments(orgSlug: string) {\n    return this.organizationsAPIService\n      .retrieveOrganizationEnvironments(orgSlug)\n      .pipe(\n        tap((environments) => {\n          this.setState({ organizationEnvironments: environments });\n        })\n      );\n  }\n\n  private updateErrorMessage(err: HttpErrorResponse): string[] {\n    if (err.error) {\n      const errorValues: string[][] = Object.values<string[]>(err.error);\n      return errorValues.reduce((a, v) => a.concat(v), []);\n    } else {\n      return [err.message];\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "issuesAPIService",
                        "type": "IssuesAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsAPIService",
                        "type": "OrganizationAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 91,
                "jsdoctags": [
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "issuesAPIService",
                        "type": "IssuesAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsAPIService",
                        "type": "OrganizationAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationStatefulService",
            "type": "injectable"
        },
        {
            "name": "LoginService",
            "id": "injectable-LoginService-f305683dbdab4e07185b1676c79c70d7",
            "file": "src/app/login/login.service.ts",
            "properties": [
                {
                    "name": "error$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.error))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "hasFIDO2$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"FIDO2\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "hasTOTP$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"TOTP\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "requiresMFA$",
                    "defaultValue": "this.getState$.pipe(map((state) => !!state.validAuth))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "authenticateBackupCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "authenticateTOTP",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { StatefulService } from \"../shared/stateful-service/stateful-service\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { ServerError } from \"../shared/django.interfaces\";\nimport { EMPTY } from \"rxjs\";\n\nconst baseUrl = \"/rest-auth\";\n\ntype ValidAuth = \"TOTP\" | \"FIDO2\";\n\ninterface LoginResponse {\n  requires_mfa: boolean;\n  valid_auth: ValidAuth[];\n}\n\ninterface LoginState {\n  loading: boolean;\n  error: ServerError | null;\n  validAuth: ValidAuth[] | null;\n}\n\nconst initialState: LoginState = {\n  loading: false,\n  error: null,\n  validAuth: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoginService extends StatefulService<LoginState> {\n  loading$ = this.getState$.pipe(map((state) => state.loading));\n  error$ = this.getState$.pipe(map((state) => state.error));\n  requiresMFA$ = this.getState$.pipe(map((state) => !!state.validAuth));\n  hasFIDO2$ = this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"FIDO2\"))\n  );\n  hasTOTP$ = this.getState$.pipe(\n    map((state) => state.validAuth?.includes(\"TOTP\"))\n  );\n  constructor(private http: HttpClient, private authService: AuthService) {\n    super(initialState);\n  }\n\n  login(email: string, password: string) {\n    const url = baseUrl + \"/login/\";\n    const data = {\n      email,\n      password,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post<LoginResponse>(url, data).pipe(\n      tap((resp) => {\n        if (resp.requires_mfa) {\n          this.setState({ validAuth: resp.valid_auth });\n        } else {\n          this.authService.afterLogin();\n        }\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          error = err.error;\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n\n  authenticateTOTP(code: string) {\n    const url = \"/api/mfa/authenticate/totp/\";\n    const data = {\n      otp: code,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post(url, data).pipe(\n      tap(() => {\n        this.clearState();\n        this.authService.afterLogin();\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          error = { non_field_errors: err.error };\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n\n  authenticateBackupCode(code: string) {\n    const url = \"/api/mfa/authenticate/backup_codes/\";\n    const data = {\n      code: code,\n    };\n    this.setState({ loading: true, error: null });\n    return this.http.post(url, data).pipe(\n      tap(() => {\n        this.clearState();\n        this.authService.afterLogin();\n      }),\n      catchError((err) => {\n        let error: ServerError | null = null;\n        if (err.status === 400) {\n          if (err.error.code) {\n            error = err.error;\n            console.log(error);\n          } else {\n            error = { non_field_errors: err.error };\n          }\n        } else {\n          error = { non_field_errors: [\"Error\"] };\n        }\n        this.setState({ loading: false, error });\n        return EMPTY;\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "MainNavService",
            "id": "injectable-MainNavService-f51baa13d926e1dac52946595d61ac1f",
            "file": "src/app/main-nav/main-nav.service.ts",
            "properties": [
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "mobileNav$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.mobileNav))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "navOpen$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.navOpen))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<MainNavState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "desktopNavSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getClosedNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToggleNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mobileNavSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCloseNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setMobileNav",
                    "args": [
                        {
                            "name": "isMobile",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "isMobile",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOpenNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setToggleNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, fromEvent } from \"rxjs\";\nimport { debounceTime, map, tap } from \"rxjs/operators\";\n\ninterface MainNavState {\n  navOpen: boolean;\n  mobileNav: boolean | null;\n}\n\nconst initialState: MainNavState = {\n  navOpen: true,\n  mobileNav: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MainNavService {\n  private readonly state = new BehaviorSubject<MainNavState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n\n  readonly navOpen$ = this.getState$.pipe(map((state) => state.navOpen));\n  readonly mobileNav$ = this.getState$.pipe(map((state) => state.mobileNav));\n\n  constructor(private router: Router) {\n    const tabletSize = 768; // same as $tablet for scss\n\n    if (window.innerWidth < tabletSize) {\n      this.mobileNavSettings();\n    } else {\n      this.desktopNavSettings();\n    }\n\n    this.router.events.subscribe((_) => {\n      if (window.innerWidth < tabletSize) {\n        this.setCloseNav();\n      }\n    });\n\n    fromEvent(window, \"resize\")\n      .pipe(\n        debounceTime(100),\n        tap((_) => {\n          if (window.innerWidth < tabletSize) {\n            this.mobileNavSettings();\n          } else {\n            this.desktopNavSettings();\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  mobileNavSettings() {\n    this.setMobileNav(true);\n    this.setCloseNav();\n  }\n\n  desktopNavSettings() {\n    this.setMobileNav(false);\n    this.setOpenNav();\n  }\n\n  getToggleNav() {\n    this.setToggleNav();\n  }\n\n  getClosedNav() {\n    this.setCloseNav();\n  }\n\n  private setMobileNav(isMobile: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      mobileNav: isMobile,\n    });\n  }\n\n  private setCloseNav() {\n    this.state.next({\n      ...this.state.getValue(),\n      navOpen: false,\n    });\n  }\n\n  private setOpenNav() {\n    this.state.next({\n      ...this.state.getValue(),\n      navOpen: true,\n    });\n  }\n\n  private setToggleNav() {\n    const navOpen = this.state.getValue().navOpen;\n    this.state.next({\n      ...this.state.getValue(),\n      navOpen: !navOpen,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MemberDetailService",
            "id": "injectable-MemberDetailService-537bb05612d81bd094c0a4cf3bc76041",
            "file": "src/app/api/organizations/member-detail.service.ts",
            "properties": [
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "memberDetail$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.memberDetail)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<MemberDetailState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "updateMemberError$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.updateMemberError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "updateMemberLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.updateMemberLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/organizations/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retrieveMemberDetail",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "memberId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMemberDetail",
                    "args": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateMemberError",
                    "args": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateMemberLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMember",
                    "args": [
                        {
                            "name": "updatedRole",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nUpdate member teams and/or permissions",
                    "description": "<p>Update member teams and/or permissions</p>\n",
                    "jsdoctags": [
                        {
                            "name": "updatedRole",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMemberDetail",
                    "args": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse, HttpClient } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, combineLatest, EMPTY } from \"rxjs\";\nimport { map, take, exhaustMap, tap, catchError } from \"rxjs/operators\";\nimport { Member } from \"./organizations.interface\";\nimport { OrganizationsService } from \"./organizations.service\";\nimport { baseUrl } from \"src/app/constants\";\n\ninterface MemberDetailState {\n  memberDetail: Member | null;\n  updateMemberError: string;\n  updateMemberLoading: boolean;\n}\n\nconst initialState: MemberDetailState = {\n  memberDetail: null,\n  updateMemberError: \"\",\n  updateMemberLoading: false,\n};\n\n@Injectable({ providedIn: \"root\" })\nexport class MemberDetailService {\n  private readonly url = baseUrl + \"/organizations/\";\n  private readonly state = new BehaviorSubject<MemberDetailState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  readonly memberDetail$ = this.getState$.pipe(\n    map((data) => data.memberDetail)\n  );\n  readonly updateMemberError$ = this.getState$.pipe(\n    map((state) => state.updateMemberError)\n  );\n  readonly updateMemberLoading$ = this.getState$.pipe(\n    map((state) => state.updateMemberLoading)\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private http: HttpClient,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /** Update member teams and/or permissions */\n  updateMember(updatedRole: string) {\n    this.setUpdateMemberLoading(true);\n    return combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.memberDetail$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, memberDetail]) => {\n          const data = {\n            ...memberDetail,\n            role: updatedRole,\n          };\n          const url = `${this.url}${orgSlug}/members/${memberDetail?.id}/`;\n          return this.http.put<Member>(url, data).pipe(\n            tap((resp) => {\n              this.setUpdateMemberLoading(false);\n              this.snackBar.open(\n                `Successfully updated ${resp.email}'s role to ${resp.roleName}`\n              );\n              if (memberDetail) {\n                const newMemberDetail = { ...resp, teams: memberDetail.teams };\n                this.updateMemberDetail(newMemberDetail);\n              }\n            }),\n            catchError((error: HttpErrorResponse) => {\n              this.setUpdateMemberLoading(false);\n              this.setUpdateMemberError(`${error.statusText}: ${error.status}`);\n              return EMPTY;\n            })\n          );\n        })\n      )\n      .toPromise();\n  }\n\n  clearState() {\n    this.state.next(initialState);\n  }\n\n  retrieveMemberDetail(orgSlug: string, memberId: string) {\n    const url = `${this.url}${orgSlug}/members/${memberId}/`;\n    return this.http\n      .get<Member>(url)\n      .pipe(tap((memberDetail) => this.setMemberDetail(memberDetail)));\n  }\n\n  updateMemberDetail(member: Member) {\n    this.setMemberDetail(member);\n  }\n\n  private setUpdateMemberError(errorMessage: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      updateMemberError: errorMessage,\n    });\n  }\n\n  private setUpdateMemberLoading(loading: boolean) {\n    this.state.next({ ...this.state.getValue(), updateMemberLoading: loading });\n  }\n\n  private setMemberDetail(member: Member) {\n    this.state.next({\n      ...this.state.getValue(),\n      memberDetail: member,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MembersService",
            "id": "injectable-MembersService-d10ff4daebb012fa5ef2edb027bfcb7f",
            "file": "src/app/api/organizations/members.service.ts",
            "properties": [
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "loadingResendInvite$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.loadingResendInvite)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "members$",
                    "defaultValue": "combineLatest([\n    this.organizationsService.organizationMembers$,\n    this.loadingResendInvite$,\n    this.sentResendInvite$,\n    this.userService.activeUserEmail$,\n  ]).pipe(\n    map(([members, loadingResendInvite, sentResendInvite, activeUserEmail]) => {\n      return members.map((member) => {\n        return {\n          ...member,\n          loadingResendInvite: member.id === loadingResendInvite ? true : false,\n          sentResendInvite: sentResendInvite.includes(member.id) ? true : false,\n          isMe: member.email === activeUserEmail ? true : false,\n        };\n      });\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<MemberSelector[]>",
                    "optional": false,
                    "description": "<p>Organization members with computed loading/success data</p>\n",
                    "line": 40,
                    "rawdescription": "\nOrganization members with computed loading/success data",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "sentResendInvite$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.sentResendInvite)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<MembersState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/organizations/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearLoadingResendInvite",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "removeMember",
                    "args": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nRemove member for active organization.",
                    "description": "<p>Remove member for active organization.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resendInvite",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSend another invite to already invited org member",
                    "description": "<p>Send another invite to already invited org member</p>\n",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoadingResendInvite",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setResendInviteSuccess",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, EMPTY, combineLatest, Observable } from \"rxjs\";\nimport {\n  mergeMap,\n  map,\n  tap,\n  catchError,\n  exhaustMap,\n  take,\n} from \"rxjs/operators\";\nimport { OrganizationsService } from \"./organizations.service\";\nimport { baseUrl } from \"../../constants\";\nimport { Member, MemberSelector } from \"./organizations.interface\";\nimport { UserService } from \"../user/user.service\";\n\ninterface MembersState {\n  loadingResendInvite: number | null;\n  sentResendInvite: number[];\n}\n\nconst initialState: MembersState = {\n  loadingResendInvite: null,\n  sentResendInvite: [],\n};\n\n@Injectable({ providedIn: \"root\" })\nexport class MembersService {\n  private readonly url = baseUrl + \"/organizations/\";\n  private readonly state = new BehaviorSubject<MembersState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  readonly loadingResendInvite$ = this.getState$.pipe(\n    map((state) => state.loadingResendInvite)\n  );\n  readonly sentResendInvite$ = this.getState$.pipe(\n    map((state) => state.sentResendInvite)\n  );\n  /** Organization members with computed loading/success data */\n  readonly members$: Observable<MemberSelector[]> = combineLatest([\n    this.organizationsService.organizationMembers$,\n    this.loadingResendInvite$,\n    this.sentResendInvite$,\n    this.userService.activeUserEmail$,\n  ]).pipe(\n    map(([members, loadingResendInvite, sentResendInvite, activeUserEmail]) => {\n      return members.map((member) => {\n        return {\n          ...member,\n          loadingResendInvite: member.id === loadingResendInvite ? true : false,\n          sentResendInvite: sentResendInvite.includes(member.id) ? true : false,\n          isMe: member.email === activeUserEmail ? true : false,\n        };\n      });\n    })\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private userService: UserService,\n    private http: HttpClient,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /** Send another invite to already invited org member */\n  resendInvite(memberId: number) {\n    const data = { reinvite: 1 };\n    this.setLoadingResendInvite(memberId);\n    return this.organizationsService.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        mergeMap((orgSlug) =>\n          this.http.put(`${this.url}${orgSlug}/members/${memberId}/`, data)\n        ),\n        tap(() => this.setResendInviteSuccess(memberId)),\n        catchError(() => {\n          this.clearLoadingResendInvite();\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  /** Remove member for active organization. */\n  removeMember(member: Member) {\n    return this.organizationsService.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        exhaustMap((orgSlug) => {\n          return this.http\n            .delete(`${this.url}${orgSlug}/members/${member.id}/`)\n            .pipe(\n              exhaustMap(() => {\n                this.snackBar.open(\n                  `Successfully removed ${member.email} from organization`\n                );\n                if (orgSlug) {\n                  return this.organizationsService.retrieveOrganizationMembers(\n                    orgSlug\n                  );\n                }\n                return EMPTY;\n              }),\n              catchError(() => {\n                this.snackBar.open(\n                  `Error attempting to remove ${member.email} from organization`\n                );\n                return EMPTY;\n              })\n            );\n        })\n      )\n      .toPromise();\n  }\n\n  private setLoadingResendInvite(memberId: number) {\n    this.state.next({\n      ...this.state.getValue(),\n      loadingResendInvite: memberId,\n    });\n  }\n\n  private setResendInviteSuccess(memberId: number) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loadingResendInvite: null,\n      sentResendInvite: [...state.sentResendInvite, memberId],\n    });\n  }\n\n  private clearLoadingResendInvite() {\n    this.state.next({ ...this.state.getValue(), loadingResendInvite: null });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MultiFactorAuthService",
            "id": "injectable-MultiFactorAuthService-d51a590163fdf77027e2174596132b50",
            "file": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
            "properties": [
                {
                    "name": "backupCodes$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.backupCodes))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "copiedCodes$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.backupCodes !== null && state.copiedCodes)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "enteredCodeSuccess$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.copiedCodes && state.enteredCode)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "FIDO2Keys$",
                    "defaultValue": "this.userKeys$.pipe(\n    map((keys) => keys.filter((key) => key.key_type === \"FIDO2\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.initialLoad))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "serverError$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.serverError))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "setupTOTPStage$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.setupTOTPStage))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "totp$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.TOTPResponse))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "TOTPKey$",
                    "defaultValue": "this.userKeys$.pipe(\n    map((userKeys) => userKeys.find((key) => key.key_type === \"TOTP\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "userKeys$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.userKeys))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "decrementTOTPStage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteKey",
                    "args": [
                        {
                            "name": "keyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "keyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "enableTOTP",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBackupCodes",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTOTP",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserKeys",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "incrementTOTPStage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCopiedCodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verifyBackupCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { EMPTY } from \"rxjs\";\nimport { catchError, exhaustMap, map, tap } from \"rxjs/operators\";\nimport {\n  BackupCodes,\n  TOTPResponse,\n  UserKey,\n  UserKeysService,\n} from \"src/app/api/mfa/user-keys.service\";\nimport { ServerError } from \"src/app/shared/django.interfaces\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\ninterface MFAState {\n  userKeys: UserKey[];\n  initialLoad: boolean;\n  setupTOTPStage: number;\n  TOTPResponse: TOTPResponse | null;\n  serverError: ServerError;\n  backupCodes: BackupCodes | null;\n  copiedCodes: boolean;\n  /** User has successfully entered one of the backup codes, confirming they have them */\n  enteredCode: boolean;\n}\n\nconst initialState: MFAState = {\n  userKeys: [],\n  initialLoad: false,\n  setupTOTPStage: 1,\n  TOTPResponse: null,\n  serverError: {},\n  backupCodes: null,\n  copiedCodes: false,\n  enteredCode: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MultiFactorAuthService extends StatefulService<MFAState> {\n  initialLoad$ = this.getState$.pipe(map((state) => state.initialLoad));\n  userKeys$ = this.getState$.pipe(map((state) => state.userKeys));\n  TOTPKey$ = this.userKeys$.pipe(\n    map((userKeys) => userKeys.find((key) => key.key_type === \"TOTP\"))\n  );\n  FIDO2Keys$ = this.userKeys$.pipe(\n    map((keys) => keys.filter((key) => key.key_type === \"FIDO2\"))\n  );\n  setupTOTPStage$ = this.getState$.pipe(map((state) => state.setupTOTPStage));\n  totp$ = this.getState$.pipe(map((state) => state.TOTPResponse));\n  serverError$ = this.getState$.pipe(map((state) => state.serverError));\n  backupCodes$ = this.getState$.pipe(map((state) => state.backupCodes));\n  copiedCodes$ = this.getState$.pipe(\n    map((state) => state.backupCodes !== null && state.copiedCodes)\n  );\n  enteredCodeSuccess$ = this.getState$.pipe(\n    map((state) => state.copiedCodes && state.enteredCode)\n  );\n\n  constructor(private api: UserKeysService) {\n    super(initialState);\n  }\n\n  getUserKeys() {\n    return this.api\n      .list()\n      .pipe(tap((userKeys) => this.setState({ userKeys, initialLoad: true })));\n  }\n\n  deleteKey(keyId: number) {\n    return this.api\n      .destroy(keyId.toString())\n      .pipe(exhaustMap(() => this.getUserKeys()));\n  }\n\n  incrementTOTPStage() {\n    const setupTOTPStage = this.state.getValue().setupTOTPStage;\n    if (setupTOTPStage === 1) {\n      this.getTOTP().subscribe();\n      this.getBackupCodes().subscribe();\n    }\n    this.setState({ setupTOTPStage: setupTOTPStage + 1 });\n  }\n\n  decrementTOTPStage() {\n    const setupTOTPStage = this.state.getValue().setupTOTPStage;\n    this.setState({ setupTOTPStage: setupTOTPStage - 1 });\n  }\n\n  enableTOTP(code: string) {\n    const state = this.state.getValue();\n    this.setState({ serverError: {} });\n    if (state.TOTPResponse) {\n      return this.api\n        .totpCreate({\n          answer: code,\n          secret_key: state.TOTPResponse.secret_key,\n        })\n        .pipe(\n          tap(() => {\n            this.clearState();\n            this.getUserKeys().subscribe();\n          }),\n          catchError((err) => {\n            if (err instanceof HttpErrorResponse) {\n              if (err.error) {\n                this.setState({ serverError: err.error });\n              }\n            }\n            return EMPTY;\n          })\n        );\n    }\n    return EMPTY;\n  }\n\n  getTOTP() {\n    return this.api\n      .totp()\n      .pipe(tap((resp) => this.setState({ TOTPResponse: resp })));\n  }\n\n  getBackupCodes() {\n    return this.api.backupCodes().pipe(\n      tap((resp) =>\n        this.setState({\n          backupCodes: resp.codes,\n          copiedCodes: false,\n          enteredCode: false,\n        })\n      )\n    );\n  }\n\n  setCopiedCodes() {\n    this.setState({ copiedCodes: true });\n  }\n\n  verifyBackupCode(code: string) {\n    const state = this.state.getValue();\n    if (state.backupCodes !== null && state.backupCodes.includes(code)) {\n      return this.api\n        .backupCodesCreate({\n          name: \"Backup Codes\",\n          codes: state.backupCodes,\n        })\n        .pipe(\n          tap(() =>\n            this.setState({\n              setupTOTPStage: state.setupTOTPStage + 1,\n              backupCodes: null,\n              serverError: {},\n            })\n          )\n        );\n    } else {\n      this.setState({ serverError: { non_field_errors: [\"Invalid code\"] } });\n    }\n    return EMPTY;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "UserKeysService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "UserKeysService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "NotificationsService",
            "id": "injectable-NotificationsService-6e8327a76a8211d0c848ae8efe475405",
            "file": "src/app/profile/notifications/notifications.service.ts",
            "properties": [
                {
                    "name": "getState$",
                    "defaultValue": "this.notificationsState.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "groupedProjects$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.groupedProjects)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "notificationsState",
                    "defaultValue": "new BehaviorSubject<NotificationsState>(\n    initialState\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "projectAlertLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectAlertLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectAlertsError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectAlertError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectViewExpanded$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectViewExpanded)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "subscribeByDefault$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.subscribeByDefault)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "subscribeByDefaultError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.subscribeByDefaultError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "subscribeByDefaultLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.subscribeByDefaultLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "`${baseUrl}/users/me/notifications/`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "alertsList",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "alertsUpdate",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "NotificationStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "NotificationStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "error",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "groupProjectsByOrg",
                    "args": [
                        {
                            "name": "projects",
                            "type": "ProjectWithAlertStatus[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projects",
                            "type": "ProjectWithAlertStatus[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notificationsList",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "notificationsUpdate",
                    "args": [
                        {
                            "name": "subscribe",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subscribe",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveUserAlertSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setGroupedProjects",
                    "args": [
                        {
                            "name": "projects",
                            "type": "GroupedProjects",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projects",
                            "type": "GroupedProjects",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjectAlertError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjectAlertLoading",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 204,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSubscribeByDefault",
                    "args": [
                        {
                            "name": "subscribe",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "subscribe",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSubscribeByDefaultError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSubscribeByDefaultLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setToggleProjectView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "subscribeToEndpoints",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleProjectView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, EMPTY, combineLatest } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"src/app/constants\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ProjectsService } from \"src/app/projects/projects.service\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport {\n  GroupedProjects,\n  ProjectError,\n  ProjectWithAlertStatus,\n  NotificationStatus,\n  ProjectAlerts,\n  SubscribeByDefault,\n} from \"./notifications.interface\";\n\ninterface NotificationsState {\n  projectViewExpanded: boolean;\n  subscribeByDefault: boolean;\n  subscribeByDefaultLoading: boolean;\n  subscribeByDefaultError: string;\n  groupedProjects: GroupedProjects;\n  projectAlertLoading: string;\n  projectAlertError: ProjectError;\n}\n\nconst initialState: NotificationsState = {\n  projectViewExpanded: false,\n  subscribeByDefault: true,\n  subscribeByDefaultLoading: false,\n  subscribeByDefaultError: \"\",\n  groupedProjects: [],\n  projectAlertLoading: \"\",\n  projectAlertError: { error: \"\", id: \"\" },\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationsService {\n  private readonly notificationsState = new BehaviorSubject<NotificationsState>(\n    initialState\n  );\n  private readonly getState$ = this.notificationsState.asObservable();\n  private readonly url = `${baseUrl}/users/me/notifications/`;\n  readonly subscribeByDefault$ = this.getState$.pipe(\n    map((data) => data.subscribeByDefault)\n  );\n  readonly projectViewExpanded$ = this.getState$.pipe(\n    map((data) => data.projectViewExpanded)\n  );\n  readonly subscribeByDefaultLoading$ = this.getState$.pipe(\n    map((data) => data.subscribeByDefaultLoading)\n  );\n  readonly subscribeByDefaultError$ = this.getState$.pipe(\n    map((data) => data.subscribeByDefaultError)\n  );\n  readonly groupedProjects$ = this.getState$.pipe(\n    map((data) => data.groupedProjects)\n  );\n  readonly projectAlertLoading$ = this.getState$.pipe(\n    map((data) => data.projectAlertLoading)\n  );\n  readonly projectAlertsError$ = this.getState$.pipe(\n    map((data) => data.projectAlertError)\n  );\n\n  constructor(\n    private projectsService: ProjectsService,\n    private http: HttpClient\n  ) {}\n\n  subscribeToEndpoints() {\n    this.notificationsList();\n    this.retrieveUserAlertSettings();\n    this.projectsService.retrieveProjects();\n  }\n\n  notificationsList() {\n    return this.http\n      .get<SubscribeByDefault>(this.url)\n      .pipe(tap((resp) => this.setSubscribeByDefault(resp.subscribeByDefault)))\n      .toPromise();\n  }\n\n  alertsList() {\n    return this.http.get<ProjectAlerts>(`${this.url}alerts/`);\n  }\n\n  retrieveUserAlertSettings() {\n    combineLatest([this.alertsList(), this.projectsService.projects$])\n      .pipe(\n        map(([projectAlerts, projects]) => {\n          if (projects) {\n            const projectsWithAlerts = projects.map((project) => {\n              const matchingId = Object.keys(projectAlerts).find(\n                (element) => element === project.id\n              );\n              return {\n                ...project,\n                alertStatus: matchingId ? projectAlerts[matchingId] : -1,\n              };\n            });\n            this.groupProjectsByOrg(projectsWithAlerts);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  groupProjectsByOrg(projects: ProjectWithAlertStatus[]) {\n    const groupedProjects = projects.reduce(\n      (r: GroupedProjects, a: ProjectWithAlertStatus) => {\n        r[a.organization.id] = [...(r[a.organization.id] || []), a];\n        return r;\n      },\n      {}\n    );\n    this.setGroupedProjects(groupedProjects);\n  }\n\n  alertsUpdate(projectId: string, status: NotificationStatus) {\n    const data: ProjectAlerts = {\n      [projectId]: status,\n    };\n    this.setProjectAlertLoading(projectId);\n    return this.http\n      .put<ProjectAlerts>(`${this.url}alerts/`, data)\n      .pipe(\n        tap((_) => {\n          this.retrieveUserAlertSettings();\n          this.setProjectAlertLoading(\"\");\n        }),\n        catchError((error) => {\n          if (error) {\n            this.setProjectAlertLoading(\"\");\n            this.setProjectAlertError(this.error(error), projectId);\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  notificationsUpdate(subscribe: boolean) {\n    const data = { subscribeByDefault: subscribe };\n    this.setSubscribeByDefaultLoading(true);\n    return this.http\n      .put<SubscribeByDefault>(this.url, data)\n      .pipe(\n        tap((resp) => {\n          this.setSubscribeByDefaultLoading(false);\n          this.setSubscribeByDefault(resp.subscribeByDefault);\n        }),\n        catchError((error) => {\n          if (error) {\n            this.setSubscribeByDefaultLoading(false);\n            this.setSubscribeByDefaultError(this.error(error));\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  error(error: HttpErrorResponse): string {\n    return `${error.name}: ${error.statusText}`;\n  }\n\n  toggleProjectView() {\n    this.setToggleProjectView();\n  }\n\n  private setSubscribeByDefault(subscribe: boolean) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      subscribeByDefault: subscribe,\n    });\n  }\n\n  private setToggleProjectView() {\n    const projectViewExpanded = this.notificationsState.getValue()\n      .projectViewExpanded;\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      projectViewExpanded: !projectViewExpanded,\n    });\n  }\n\n  private setSubscribeByDefaultError(error: string) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      subscribeByDefaultError: error,\n    });\n  }\n\n  private setSubscribeByDefaultLoading(loading: boolean) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      subscribeByDefaultLoading: loading,\n    });\n  }\n\n  private setProjectAlertLoading(projectId: string) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      projectAlertLoading: projectId,\n    });\n  }\n\n  private setProjectAlertError(error: string, id: string) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      projectAlertError: { error, id },\n    });\n  }\n\n  private setGroupedProjects(projects: GroupedProjects) {\n    this.notificationsState.next({\n      ...this.notificationsState.getValue(),\n      groupedProjects: projects,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "projectsService",
                        "type": "ProjectsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "projectsService",
                        "type": "ProjectsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OrganizationAPIService",
            "id": "injectable-OrganizationAPIService-735eb1ae6ddd9bdb874a764fad54857f",
            "file": "src/app/api/organizations/organizations-api.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/organizations/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "obj",
                            "type": "OrganizationNew",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "OrganizationNew",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveOrganizationEnvironments",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "obj",
                            "type": "OrganizationNew",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "obj",
                            "type": "OrganizationNew",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport {\n  Organization,\n  OrganizationDetail,\n  OrganizationNew,\n  Environment,\n} from \"./organizations.interface\";\nimport { baseUrl } from \"../../constants\";\nimport { APIBaseService } from \"../api-base.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationAPIService extends APIBaseService {\n  readonly url = baseUrl + \"/organizations/\";\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  list() {\n    return this.http.get<Organization[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<OrganizationDetail>(this.detailURL(id));\n  }\n\n  create(obj: OrganizationNew) {\n    return this.http.post<OrganizationDetail>(this.url, obj);\n  }\n\n  update(id: string, obj: OrganizationNew) {\n    return this.http.put<OrganizationDetail>(this.detailURL(id), obj);\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  retrieveOrganizationEnvironments(orgSlug: string) {\n    const url = `${baseUrl}/organizations/${orgSlug}/environments/`;\n    return this.http.get<Environment[]>(url);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "OrganizationsService",
            "id": "injectable-OrganizationsService-edb87359febe29d7da1a1ea9ea767be0",
            "file": "src/app/api/organizations/organizations.service.ts",
            "properties": [
                {
                    "name": "activeOrganization$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.activeOrganization)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "combineLatest([\n    this.organizations$,\n    this.activeOrganizationId$,\n  ]).pipe(\n    map(([organizations, activeOrganization]) =>\n      organizations.find(\n        (organization) => organization.id === activeOrganization\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "activeOrganizationId$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.activeOrganizationId)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "activeOrganizationLoaded$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => !!data.activeOrganization)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "activeOrganizationProjects$",
                    "defaultValue": "this.activeOrganization$.pipe(\n    map((data) => (data ? data.projects : null))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "activeOrganizationSlug$",
                    "defaultValue": "combineLatest([\n    this.organizations$,\n    this.activeOrganizationId$,\n  ]).pipe(\n    map(([orgs, id]) => {\n      const activeOrg = orgs.find((org) => org.id === id);\n      if (activeOrg) {\n        return activeOrg.slug;\n      }\n      return null;\n    }),\n    distinct()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "errors$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.errors))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 166,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "filteredAddTeamMembers$",
                    "defaultValue": "combineLatest([\n    this.organizationMembers$,\n    this.teamsService.teamMembers$,\n  ]).pipe(\n    map(([organizationMembers, teamMembers]) => {\n      return organizationMembers.filter(\n        (orgMembers) =>\n          !teamMembers.find((teamMems) => orgMembers.id === teamMems.id)\n      );\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "filteredOrganizationTeams$",
                    "defaultValue": "this.organizationTeams$.pipe(\n    withLatestFrom(this.selectedOrganizationTeams$),\n    filter(([orgTeams, selectedOrgTeams]) => orgTeams === selectedOrgTeams)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "defaultValue": "this.organizationsState.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.initialLoad),\n    distinct()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "navigationStart$",
                    "defaultValue": "this.router.events.pipe(\n    filter((event) => event instanceof NavigationStart)\n  ) as Observable<NavigationStart>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Lots of kinds of router events; this isolates a specific kind in a tidy\nand TypeScript-friendly way.</p>\n",
                    "line": 172,
                    "rawdescription": "\n\nLots of kinds of router events; this isolates a specific kind in a tidy\nand TypeScript-friendly way.\n",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "organizationCount$",
                    "defaultValue": "this.organizations$.pipe(\n    map((organizations) => organizations.length)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "organizationMembers$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.organizationMembers)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "organizations$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.organizations),\n    distinct()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "organizationsState",
                    "defaultValue": "new BehaviorSubject<OrganizationsState>(\n    initialState\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "organizationTeams$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.organizationTeams)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 154,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "orgHasAProject$",
                    "defaultValue": "this.activeOrganizationProjects$.pipe(\n    map((projects) => !!projects && projects.length > 0)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectsCount$",
                    "defaultValue": "this.activeOrganizationProjects$.pipe(\n    map((projects) => {\n      if (!projects) {\n        return 0;\n      }\n      return projects.length;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "routeParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "routeParams$",
                    "defaultValue": "this.routesRecognized$.pipe(\n    map((event) => event.state.root.firstChild?.params)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 184,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "routesRecognized$",
                    "defaultValue": "this.router.events.pipe(\n    filter((event) => event instanceof RoutesRecognized)\n  ) as Observable<RoutesRecognized>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Lots of kinds of router events; this isolates a specific kind in a tidy\nand TypeScript-friendly way.</p>\n",
                    "line": 180,
                    "rawdescription": "\n\nLots of kinds of router events; this isolates a specific kind in a tidy\nand TypeScript-friendly way.\n",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "selectedOrganizationTeams$",
                    "defaultValue": "this.organizationTeams$.pipe(\n    map((data) => data)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 157,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/organizations/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addTeamMember",
                    "args": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 441,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "member",
                            "type": "Member",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "orgSlug",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeActiveOrganization",
                    "args": [
                        {
                            "name": "activeOrganizationId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange the active organization and if necessary\nUpdate the route to reflect the organization slug update\n",
                    "description": "<p>Change the active organization and if necessary\nUpdate the route to reflect the organization slug update</p>\n",
                    "jsdoctags": [
                        {
                            "name": "activeOrganizationId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearErrorState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 507,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createOrganization",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createTeam",
                    "args": [
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteOrganization",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 347,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDelete organization: route to home page",
                    "description": "<p>Delete organization: route to home page</p>\n",
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteTeam",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 499,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOrganizationDetail",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 711,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOrganizationTeams",
                    "args": [
                        {
                            "name": "teams",
                            "type": "Team[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 652,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "teams",
                            "type": "Team[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "inviteOrganizationMembers",
                    "args": [
                        {
                            "name": "emailInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamsInput",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roleInput",
                            "type": "MemberRole",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 380,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nInvite a user via email to join an organization",
                    "description": "<p>Invite a user via email to join an organization</p>\n",
                    "jsdoctags": [
                        {
                            "name": "emailInput",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamsInput",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "roleInput",
                            "type": "MemberRole",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "joinTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 483,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "leaveTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 467,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshOrganizationDetail",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 363,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhen you need updated information on the active org",
                    "description": "<p>When you need updated information on the active org</p>\n"
                },
                {
                    "name": "removeOrganization",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 633,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeTeamMember",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 457,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveOrganizationMembers",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 371,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveOrganizations",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retrieveOrganizationTeams",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 417,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveOrganization",
                    "args": [
                        {
                            "name": "organization",
                            "type": "OrganizationDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 626,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organization",
                            "type": "OrganizationDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveOrganizationFromRouteChange",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 316,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet active organization when a route change is observed\n\nActive organization can be set in state even in pages that don't have the organization slug,\nfor example the profile page.\nHowever some pages have the organization slug in the route params. When this changes, whether by back button\nor client side routing, the active org should change.\nThis function needs called when any such event happens.\n",
                    "description": "<p>Set active organization when a route change is observed</p>\n<p>Active organization can be set in state even in pages that don&#39;t have the organization slug,\nfor example the profile page.\nHowever some pages have the organization slug in the route params. When this changes, whether by back button\nor client side routing, the active org should change.\nThis function needs called when any such event happens.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveOrganizationId",
                    "args": [
                        {
                            "name": "activeOrganizationId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 619,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "activeOrganizationId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveOrganizationMembers",
                    "args": [
                        {
                            "name": "members",
                            "type": "Member[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 645,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "members",
                            "type": "Member[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAddMemberError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 552,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAddMemberLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 541,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialErrorState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 511,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setJoinTeamError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 582,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setJoinTeamLoading",
                    "args": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 530,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLeaveTeamError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 567,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLeaveTeamLoading",
                    "args": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 519,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOrganizations",
                    "args": [
                        {
                            "name": "organizations",
                            "type": "Organization[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 597,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizations",
                            "type": "Organization[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTeamsView",
                    "args": [
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "member",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "members",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 659,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "member",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "members",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOrganization",
                    "args": [
                        {
                            "name": "orgName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOrgName",
                    "args": [
                        {
                            "name": "orgName",
                            "type": "Organization",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 605,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "orgName",
                            "type": "Organization",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTeam",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 503,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTeamSlug",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 696,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTeamsView",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 681,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport {\n  Router,\n  RoutesRecognized,\n  ActivatedRoute,\n  NavigationStart,\n} from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, combineLatest, Observable, EMPTY } from \"rxjs\";\nimport {\n  map,\n  withLatestFrom,\n  filter,\n  distinctUntilChanged,\n  catchError,\n  take,\n  mergeMap,\n  takeWhile,\n  distinct,\n  tap,\n  first,\n} from \"rxjs/operators\";\nimport { baseUrl } from \"../../constants\";\nimport {\n  Organization,\n  OrganizationDetail,\n  Member,\n  OrganizationMembersRequest,\n  MemberRole,\n  OrganizationErrors,\n  OrganizationLoading,\n} from \"./organizations.interface\";\nimport { SettingsService } from \"../settings.service\";\nimport { SubscriptionsService } from \"../subscriptions/subscriptions.service\";\nimport { TeamsService } from \"../teams/teams.service\";\nimport { Team } from \"../teams/teams.interfaces\";\nimport { OrganizationAPIService } from \"./organizations-api.service\";\n\ninterface OrganizationsState {\n  organizations: Organization[];\n  activeOrganizationId: number | null;\n  activeOrganization: OrganizationDetail | null;\n  organizationMembers: Member[];\n  organizationTeams: Team[];\n  errors: OrganizationErrors;\n  loading: OrganizationLoading;\n  /** Has organizations loaded the first time? */\n  initialLoad: boolean;\n}\n\nconst initialState: OrganizationsState = {\n  organizations: [],\n  activeOrganizationId: null,\n  activeOrganization: null,\n  organizationMembers: [],\n  organizationTeams: [],\n  errors: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: \"\",\n  },\n  loading: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: false,\n  },\n  initialLoad: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationsService {\n  private readonly organizationsState = new BehaviorSubject<OrganizationsState>(\n    initialState\n  );\n  private readonly getState$ = this.organizationsState.asObservable();\n  private readonly url = baseUrl + \"/organizations/\";\n  private routeParams?: { [key: string]: string };\n  initialLoad$ = this.getState$.pipe(\n    map((data) => data.initialLoad),\n    distinct()\n  );\n\n  readonly organizations$ = this.getState$.pipe(\n    map((data) => data.organizations),\n    distinct()\n  );\n  readonly organizationCount$ = this.organizations$.pipe(\n    map((organizations) => organizations.length)\n  );\n  readonly activeOrganizationId$ = this.getState$.pipe(\n    map((data) => data.activeOrganizationId)\n  );\n  readonly activeOrganization$ = this.getState$.pipe(\n    map((data) => data.activeOrganization)\n  );\n  readonly activeOrganizationLoaded$ = this.getState$.pipe(\n    map((data) => !!data.activeOrganization)\n  );\n  readonly organizationMembers$ = this.getState$.pipe(\n    map((data) => data.organizationMembers)\n  );\n  readonly activeOrganizationProjects$ = this.activeOrganization$.pipe(\n    map((data) => (data ? data.projects : null))\n  );\n  readonly orgHasAProject$ = this.activeOrganizationProjects$.pipe(\n    map((projects) => !!projects && projects.length > 0)\n  );\n  readonly projectsCount$ = this.activeOrganizationProjects$.pipe(\n    map((projects) => {\n      if (!projects) {\n        return 0;\n      }\n      return projects.length;\n    })\n  );\n  readonly activeOrganizationDetail$ = combineLatest([\n    this.organizations$,\n    this.activeOrganizationId$,\n  ]).pipe(\n    map(([organizations, activeOrganization]) =>\n      organizations.find(\n        (organization) => organization.id === activeOrganization\n      )\n    )\n  );\n  readonly activeOrganizationSlug$ = combineLatest([\n    this.organizations$,\n    this.activeOrganizationId$,\n  ]).pipe(\n    map(([orgs, id]) => {\n      const activeOrg = orgs.find((org) => org.id === id);\n      if (activeOrg) {\n        return activeOrg.slug;\n      }\n      return null;\n    }),\n    distinct()\n  );\n\n  readonly filteredAddTeamMembers$ = combineLatest([\n    this.organizationMembers$,\n    this.teamsService.teamMembers$,\n  ]).pipe(\n    map(([organizationMembers, teamMembers]) => {\n      return organizationMembers.filter(\n        (orgMembers) =>\n          !teamMembers.find((teamMems) => orgMembers.id === teamMems.id)\n      );\n    })\n  );\n  readonly organizationTeams$ = this.getState$.pipe(\n    map((data) => data.organizationTeams)\n  );\n  readonly selectedOrganizationTeams$ = this.organizationTeams$.pipe(\n    map((data) => data)\n  );\n\n  readonly filteredOrganizationTeams$ = this.organizationTeams$.pipe(\n    withLatestFrom(this.selectedOrganizationTeams$),\n    filter(([orgTeams, selectedOrgTeams]) => orgTeams === selectedOrgTeams)\n  );\n\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n  readonly loading$ = this.getState$.pipe(map((data) => data.loading));\n  /**\n   * Lots of kinds of router events; this isolates a specific kind in a tidy\n   * and TypeScript-friendly way.\n   */\n  readonly navigationStart$ = this.router.events.pipe(\n    filter((event) => event instanceof NavigationStart)\n  ) as Observable<NavigationStart>;\n\n  /**\n   * Lots of kinds of router events; this isolates a specific kind in a tidy\n   * and TypeScript-friendly way.\n   */\n  readonly routesRecognized$ = this.router.events.pipe(\n    filter((event) => event instanceof RoutesRecognized)\n  ) as Observable<RoutesRecognized>;\n\n  readonly routeParams$ = this.routesRecognized$.pipe(\n    map((event) => event.state.root.firstChild?.params)\n  );\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute,\n    private organizationAPIService: OrganizationAPIService,\n    private snackBar: MatSnackBar,\n    private settingsService: SettingsService,\n    private subscriptionsService: SubscriptionsService,\n    private teamsService: TeamsService\n  ) {\n    this.routeParams$.subscribe((params) => (this.routeParams = params));\n\n    // When billing is enabled, check if active org has subscription\n    combineLatest([\n      this.settingsService.billingEnabled$,\n      this.activeOrganization$,\n    ])\n      .pipe(\n        filter(\n          ([billingEnabled, activeOrganization]) =>\n            billingEnabled && !!activeOrganization\n        ),\n        distinctUntilChanged((a, b) => a[1]?.id === b[1]?.id),\n        tap(([_, activeOrganization]) => {\n          this.subscriptionsService.checkIfUserHasSubscription(\n            activeOrganization!.slug\n          );\n        })\n      )\n      .subscribe();\n\n    this.activeOrganizationId$\n      .pipe(\n        filter((id) => id !== null),\n        distinctUntilChanged(),\n        withLatestFrom(this.organizations$),\n        map(([id, orgs]) => orgs.find((org) => org.id === id)),\n        filter((org) => org !== undefined),\n        map((org) => org!.slug),\n        tap((slug) => this.getOrganizationDetail(slug).toPromise())\n      )\n      .subscribe();\n  }\n\n  createOrganization(name: string) {\n    const data = {\n      name,\n    };\n    return this.organizationAPIService.create(data).pipe(\n      tap((organization) => {\n        this.retrieveOrganizations()\n          .pipe(\n            tap(() => {\n              this.setActiveOrganizationId(organization.id);\n            })\n          )\n          .toPromise();\n      })\n    );\n  }\n\n  retrieveOrganizations() {\n    return this.organizationAPIService.list().pipe(\n      tap((organizations) => this.setOrganizations(organizations)),\n      withLatestFrom(this.activeOrganizationId$),\n      tap(([organizations, activeOrgId]) => {\n        if (activeOrgId === null && organizations.length) {\n          let activeOrg: Organization | undefined;\n          if (this.routeParams) {\n            activeOrg = organizations.find(\n              (org) =>\n                org.slug ===\n                (this.routeParams ? this.routeParams[\"org-slug\"] : null)\n            );\n          }\n          if (activeOrg) {\n            this.changeActiveOrganization(activeOrg.id);\n          } else {\n            // Set default org\n            this.changeActiveOrganization(organizations[0].id);\n          }\n        }\n      })\n    );\n  }\n\n  /**\n   * Change the active organization and if necessary\n   * Update the route to reflect the organization slug update\n   */\n  changeActiveOrganization(activeOrganizationId: number) {\n    this.setActiveOrganizationId(activeOrganizationId);\n    this.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        filter((slug) => slug !== null),\n        tap((slug) => {\n          const firstChild = this.route.snapshot.firstChild;\n          if (\n            this.routeParams &&\n            this.routeParams[\"org-slug\"] &&\n            slug !== this.routeParams[\"org-slug\"] &&\n            firstChild\n          ) {\n            if (\n              firstChild.firstChild?.url &&\n              firstChild.firstChild.url.length >= 1\n            ) {\n              this.router.navigate([slug, firstChild.firstChild.url[0].path]);\n            } else {\n              this.router.navigate([slug]);\n            }\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  /**\n   * Set active organization when a route change is observed\n   * @slug organization slug as seen by the router\n   *\n   * Active organization can be set in state even in pages that don't have the organization slug,\n   * for example the profile page.\n   * However some pages have the organization slug in the route params. When this changes, whether by back button\n   * or client side routing, the active org should change.\n   * This function needs called when any such event happens.\n   */\n  setActiveOrganizationFromRouteChange(slug: string) {\n    combineLatest([this.organizations$, this.initialLoad$])\n      .pipe(\n        takeWhile(([_, initialLoad]) => initialLoad === false, true),\n        filter(([_, initialLoad]) => initialLoad),\n        map(([organizations, _]) =>\n          organizations.find((organization) => organization.slug === slug)\n        ),\n        filter((organization) => organization !== undefined),\n        tap((organization) => {\n          this.setActiveOrganizationId(organization!.id);\n        })\n      )\n      .subscribe();\n  }\n\n  updateOrganization(orgName: string) {\n    const data = { name: orgName };\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    if (orgSlug) {\n      return this.organizationAPIService.update(orgSlug, data).pipe(\n        tap((resp) => {\n          this.setActiveOrganizationId(resp.id);\n          this.updateOrgName(resp);\n        })\n      );\n    }\n    return EMPTY;\n  }\n\n  /** Delete organization: route to home page */\n  deleteOrganization(slug: string) {\n    return this.organizationAPIService.destroy(slug).pipe(\n      tap((_) => this.removeOrganization(slug)),\n      withLatestFrom(this.organizations$),\n      tap(([_, organizations]) => {\n        if (organizations) {\n          if (organizations.length) {\n            this.setActiveOrganizationId(organizations[0].id);\n          }\n          this.router.navigate([\"\"]);\n        }\n      })\n    );\n  }\n\n  /** When you need updated information on the active org */\n  refreshOrganizationDetail() {\n    return this.activeOrganizationSlug$.pipe(\n      first(),\n      filter((orgSlug) => !!orgSlug),\n      mergeMap((orgSlug) => this.getOrganizationDetail(orgSlug!))\n    );\n  }\n\n  retrieveOrganizationMembers(orgSlug: string) {\n    return this.http.get<Member[]>(`${this.url}${orgSlug}/members/`).pipe(\n      tap((members) => {\n        this.setActiveOrganizationMembers(members);\n      })\n    );\n  }\n\n  /** Invite a user via email to join an organization */\n  inviteOrganizationMembers(\n    emailInput: string,\n    teamsInput: string[],\n    roleInput: MemberRole\n  ) {\n    const data: OrganizationMembersRequest = {\n      email: emailInput,\n      role: roleInput,\n      teams: teamsInput,\n    };\n    return this.activeOrganizationSlug$\n      .pipe(\n        take(1),\n        mergeMap((orgSlug) =>\n          this.http\n            .post<Member>(`${this.url}${orgSlug}/members/`, data)\n            .pipe(map((response) => ({ response, orgSlug })))\n        ),\n        tap(({ response, orgSlug }) => {\n          this.setAddMemberLoading(false);\n          this.snackBar.open(\n            `An email invite has been sent to ${response.email}`\n          );\n          this.router.navigate([orgSlug, \"settings\", \"members\"]);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          if (error.error?.detail) {\n            this.setAddMemberError(error.error?.detail);\n          } else {\n            this.setAddMemberError(`${error.statusText}: ${error.status}`);\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  retrieveOrganizationTeams(orgSlug: string) {\n    const url = `${this.url}${orgSlug}/teams/`;\n    return this.http\n      .get<Team[]>(url)\n      .pipe(\n        tap((resp) => {\n          this.getOrganizationTeams(resp);\n        })\n      )\n      .toPromise();\n  }\n\n  createTeam(teamSlug: string, orgSlug: string) {\n    const data = {\n      slug: teamSlug,\n    };\n    return this.http.post<Team>(`${this.url}${orgSlug}/teams/`, data).pipe(\n      tap((team) => {\n        this.refreshOrganizationDetail().subscribe();\n        this.teamsService.addTeam(team);\n      })\n    );\n  }\n\n  addTeamMember(\n    member: Member,\n    orgSlug: string | undefined,\n    teamSlug: string | undefined\n  ) {\n    const url = `${this.url}${orgSlug}/members/${member.id}/teams/${teamSlug}/`;\n    return this.http.post<Team>(url, member).pipe(\n      tap((team: Team) => {\n        if (orgSlug) {\n          this.teamsService.retrieveTeamMembers(orgSlug, team.slug).toPromise();\n          this.retrieveOrganizationMembers(orgSlug).toPromise();\n        }\n      })\n    );\n  }\n\n  removeTeamMember(memberId: number, teamSlug: string) {\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    const url = `${this.url}${orgSlug}/members/${memberId}/teams/${teamSlug}/`;\n    return this.http.delete<Team>(url).pipe(\n      tap(() => {\n        this.teamsService.removeMember(memberId);\n      })\n    );\n  }\n\n  leaveTeam(team: string) {\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    const url = `${this.url}${orgSlug}/members/me/teams/${team}/`;\n    this.setLeaveTeamLoading(team);\n    return this.http.delete<Team>(url).pipe(\n      tap((resp) => {\n        this.snackBar.open(`You have left ${resp.slug}`);\n        this.setTeamsView(resp.slug, resp.isMember, resp.memberCount);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setLeaveTeamError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  joinTeam(team: string) {\n    const orgSlug = this.organizationsState.getValue().activeOrganization?.slug;\n    const url = `${this.url}${orgSlug}/members/me/teams/${team}/`;\n    this.setJoinTeamLoading(team);\n    return this.http.post<Team>(url, null).pipe(\n      tap((resp) => {\n        this.snackBar.open(`You joined ${resp.slug}`);\n        this.setTeamsView(resp.slug, resp.isMember, resp.memberCount);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setJoinTeamError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  deleteTeam(slug: string) {\n    this.updateTeamsView(slug);\n  }\n\n  updateTeam(id: number, newSlug: string) {\n    this.updateTeamSlug(id, newSlug);\n  }\n\n  clearErrorState() {\n    this.setInitialErrorState();\n  }\n\n  private setInitialErrorState() {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: initialState.errors,\n    });\n  }\n\n  private setLeaveTeamLoading(team: string) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        removeTeamMember: team,\n      },\n    });\n  }\n\n  private setJoinTeamLoading(team: string) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        addTeamMember: team,\n      },\n    });\n  }\n\n  private setAddMemberLoading(loading: boolean) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        addOrganizationMember: loading,\n      },\n    });\n  }\n\n  private setAddMemberError(error: string) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        addOrganizationMember: error,\n      },\n      loading: {\n        ...state.loading,\n        addOrganizationMember: false,\n      },\n    });\n  }\n\n  private setLeaveTeamError(error: HttpErrorResponse) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        removeTeamMember: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        removeTeamMember: \"\",\n      },\n    });\n  }\n\n  private setJoinTeamError(error: HttpErrorResponse) {\n    const state = this.organizationsState.getValue();\n    this.organizationsState.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        addTeamMember: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        addTeamMember: \"\",\n      },\n    });\n  }\n\n  private setOrganizations(organizations: Organization[]) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      organizations,\n      initialLoad: true,\n    });\n  }\n\n  private updateOrgName(orgName: Organization) {\n    const state = this.organizationsState.getValue();\n    if (state.organizations) {\n      this.organizationsState.next({\n        ...state,\n        organizations: state.organizations.map((organization) =>\n          orgName.id === organization.id\n            ? { ...organization, name: orgName.name }\n            : organization\n        ),\n      });\n    }\n  }\n\n  private setActiveOrganizationId(activeOrganizationId: number) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      activeOrganizationId,\n    });\n  }\n\n  private setActiveOrganization(organization: OrganizationDetail) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      activeOrganization: organization,\n    });\n  }\n\n  private removeOrganization(orgSlug: string) {\n    const filteredOrgs = this.organizationsState\n      .getValue()\n      .organizations.filter((organization) => organization.slug !== orgSlug);\n    if (filteredOrgs) {\n      this.organizationsState.next({\n        ...this.organizationsState.getValue(),\n        organizations: filteredOrgs,\n      });\n    }\n  }\n\n  private setActiveOrganizationMembers(members: Member[]) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      organizationMembers: members,\n    });\n  }\n\n  private getOrganizationTeams(teams: Team[]) {\n    this.organizationsState.next({\n      ...this.organizationsState.getValue(),\n      organizationTeams: teams,\n    });\n  }\n\n  private setTeamsView(teamSlug: string, member: boolean, members: number) {\n    const state = this.organizationsState.getValue();\n    if (state.activeOrganization?.teams) {\n      this.organizationsState.next({\n        ...state,\n        activeOrganization: {\n          ...state.activeOrganization,\n          teams: state.activeOrganization?.teams.map((team) =>\n            team.slug === teamSlug\n              ? { ...team, isMember: member, memberCount: members }\n              : team\n          ),\n        },\n        loading: {\n          ...state.loading,\n          addTeamMember: \"\",\n          removeTeamMember: \"\",\n        },\n      });\n    }\n  }\n\n  private updateTeamsView(slug: string) {\n    const state = this.organizationsState.getValue();\n    if (state.activeOrganization?.teams) {\n      this.organizationsState.next({\n        ...state,\n        activeOrganization: {\n          ...state.activeOrganization,\n          teams: state.activeOrganization?.teams.filter(\n            (team) => team.slug !== slug\n          ),\n        },\n      });\n    }\n  }\n\n  private updateTeamSlug(id: number, newSlug: string) {\n    const state = this.organizationsState.getValue();\n    if (state.activeOrganization?.teams) {\n      this.organizationsState.next({\n        ...state,\n        activeOrganization: {\n          ...state.activeOrganization,\n          teams: state.activeOrganization?.teams.map((team) =>\n            team.id === id ? { ...team, slug: newSlug } : team\n          ),\n        },\n      });\n    }\n  }\n\n  private getOrganizationDetail(slug: string) {\n    return this.organizationAPIService\n      .retrieve(slug)\n      .pipe(tap((organization) => this.setActiveOrganization(organization)));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationAPIService",
                        "type": "OrganizationAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "subscriptionsService",
                        "type": "SubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 186,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationAPIService",
                        "type": "OrganizationAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "subscriptionsService",
                        "type": "SubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PasswordService",
            "id": "injectable-PasswordService-588fadbe5ba92d9ec269448d7eb795c7",
            "file": "src/app/profile/change-password/password.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "changePassword",
                    "args": [
                        {
                            "name": "old_password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "new_password1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "new_password2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "old_password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "new_password1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "new_password2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\ninterface ChangePassword {\n  old_password: string;\n  new_password1: string;\n  new_password2: string;\n}\n\nconst baseUrl = \"/rest-auth/password\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PasswordService {\n  constructor(private http: HttpClient) {}\n\n  changePassword(\n    // tslint:disable: variable-name\n    old_password: string,\n    new_password1: string,\n    new_password2: string\n  ) {\n    const url = baseUrl + \"/change/\";\n    const data: ChangePassword = {\n      old_password,\n      new_password1,\n      new_password2,\n    };\n    return this.http.post(url, data);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PerformanceService",
            "id": "injectable-PerformanceService-472b0382897111d23c4bec3477afb0e7",
            "file": "src/app/performance/performance.service.ts",
            "properties": [
                {
                    "name": "transactions$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.transactions))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "transactionsWithDelta$",
                    "defaultValue": "this.transactions$.pipe(\n    map((transactions) =>\n      transactions.map((transaction) => ({\n        ...transaction,\n        delta:\n          new Date(transaction.timestamp).getTime() -\n          new Date(transaction.startTimestamp).getTime(),\n      }))\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.pagination$.pipe(map((pagination) => pagination.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "pagination$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.pagination))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getTransactions",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStateAndPagination",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { map, tap } from \"rxjs/operators\";\nimport { Transaction } from \"../api/transactions/transactions.interfaces\";\nimport { TransactionsService } from \"../api/transactions/transactions.service\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"../shared/stateful-service/pagination-stateful-service\";\n\nexport interface PerformanceState extends PaginationStatefulServiceState {\n  transactions: Transaction[];\n}\n\nconst initialState: PerformanceState = {\n  transactions: [],\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PerformanceService extends PaginationStatefulService<PerformanceState> {\n  transactions$ = this.getState$.pipe(map((state) => state.transactions));\n  transactionsWithDelta$ = this.transactions$.pipe(\n    map((transactions) =>\n      transactions.map((transaction) => ({\n        ...transaction,\n        delta:\n          new Date(transaction.timestamp).getTime() -\n          new Date(transaction.startTimestamp).getTime(),\n      }))\n    )\n  );\n\n  constructor(private transactionsService: TransactionsService) {\n    super(initialState);\n  }\n\n  getTransactions(orgSlug: string, cursor?: string | undefined) {\n    this.transactionsService\n      .list(orgSlug, cursor)\n      .pipe(\n        tap((res) =>\n          this.setStateAndPagination({ transactions: res.body! }, res)\n        )\n      )\n      .toPromise();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transactionsService",
                        "type": "TransactionsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "transactionsService",
                        "type": "TransactionsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationStatefulService",
            "type": "injectable"
        },
        {
            "name": "ProjectAlertsAPIService",
            "id": "injectable-ProjectAlertsAPIService-cf2828060e63b0f138e0f7f88d43d26a",
            "file": "src/app/api/projects/project-alerts/project-alerts.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/projects/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "newProjectAlert",
                            "type": "NewProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newProjectAlert",
                            "type": "NewProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detailURL",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectAlert",
                            "type": "NewProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectAlert",
                            "type": "NewProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Alerts viewSet nested under projects ViewSet\n/api/0/projects/organization-slug/project-slug/alerts/</p>\n",
            "rawdescription": "\n\nAlerts viewSet nested under projects ViewSet\n/api/0/projects/organization-slug/project-slug/alerts/\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NewProjectAlert, ProjectAlert } from \"./project-alerts.interface\";\nimport { baseUrl } from \"../../../constants\";\nimport { APIBaseService } from \"../../api-base.service\";\n\n/**\n * Alerts viewSet nested under projects ViewSet\n * /api/0/projects/organization-slug/project-slug/alerts/\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectAlertsAPIService extends APIBaseService {\n  readonly url = baseUrl + \"/projects/\";\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  list(organizationSlug: string, projectSlug: string) {\n    return this.http.get<ProjectAlert[]>(\n      this.listURL(organizationSlug, projectSlug)\n    );\n  }\n\n  retrieve(id: string, organizationSlug: string, projectSlug: string) {\n    return this.http.get<ProjectAlert>(\n      this.detailURL(id, organizationSlug, projectSlug)\n    );\n  }\n\n  create(\n    newProjectAlert: NewProjectAlert,\n    organizationSlug: string,\n    projectSlug: string\n  ) {\n    return this.http.post<ProjectAlert>(\n      this.listURL(organizationSlug, projectSlug),\n      newProjectAlert\n    );\n  }\n\n  destroy(id: string, organizationSlug: string, projectSlug: string) {\n    return this.http.delete(this.detailURL(id, organizationSlug, projectSlug));\n  }\n\n  update(\n    id: string,\n    projectAlert: NewProjectAlert,\n    organizationSlug: string,\n    projectSlug: string\n  ) {\n    return this.http.put<ProjectAlert>(\n      this.detailURL(id, organizationSlug, projectSlug),\n      projectAlert\n    );\n  }\n\n  protected listURL(organizationSlug: string, projectSlug: string) {\n    return `${this.url}${organizationSlug}/${projectSlug}/alerts/`;\n  }\n\n  protected detailURL(\n    id: string,\n    organizationSlug: string,\n    projectSlug: string\n  ) {\n    return this.listURL(organizationSlug, projectSlug) + id + \"/\";\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "ProjectAlertsService",
            "id": "injectable-ProjectAlertsService-9ff7f269ccc31b6de9b8cfc490dae1c9",
            "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
            "properties": [
                {
                    "name": "activeAlert$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.recipientDialogState.activeAlert)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "deleteRecipientLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.deleteRecipientLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "emailSelected$",
                    "defaultValue": "combineLatest([\n    this.newProjectAlertRecipients$,\n    this.activeAlert$,\n  ]).pipe(\n    map(([newRecipients, activeAlert]) => {\n      if (activeAlert?.pk) {\n        return activeAlert.alertRecipients.some(\n          (data) => data.recipientType === \"email\"\n        );\n      } else if (newRecipients !== null) {\n        return newRecipients.some((data) => data.recipientType === \"email\");\n      }\n      return;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.initialLoad))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "initialLoadError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.initialLoadError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "newAlertError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "newAlertLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "newAlertOpen$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertOpen)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>New Alert</p>\n",
                    "line": 91,
                    "rawdescription": "\nNew Alert",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "newProjectAlertRecipients$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.newAlertState.newProjectAlertRecipients)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectAlert$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectAlerts)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "recipientDialogOpen$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientDialogOpen)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "recipientError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Recipient Dialog</p>\n",
                    "line": 105,
                    "rawdescription": "\nRecipient Dialog",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "removeAlertError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.removeAlertError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "removeAlertLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.removeAlertLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Current Alerts</p>\n",
                    "line": 131,
                    "rawdescription": "\nCurrent Alerts",
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "updateTimespanQuantityError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "updateTimespanQuantityLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "addAlertRecipient",
                    "args": [
                        {
                            "name": "event",
                            "type": "NewAlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "NewAlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeNewAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeRecipientDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 409,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createNewAlert",
                    "args": [
                        {
                            "name": "timeQuantity",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "timeQuantity",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAlertRecipient",
                    "args": [
                        {
                            "name": "recipientToRemove",
                            "type": "AlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "recipientToRemove",
                            "type": "AlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProjectAlert",
                    "args": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nUpdate Actions",
                    "description": "<p>Update Actions</p>\n",
                    "jsdoctags": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findAndReplaceAlert",
                    "args": [
                        {
                            "name": "currentAlerts",
                            "type": "ProjectAlert[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newAlert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 667,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nUtility Functions",
                    "description": "<p>Utility Functions</p>\n",
                    "jsdoctags": [
                        {
                            "name": "currentAlerts",
                            "type": "ProjectAlert[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newAlert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listProjectAlerts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nActions",
                    "description": "<p>Actions</p>\n"
                },
                {
                    "name": "openCreateRecipientDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 405,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openNewAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nNew Alert Actions",
                    "description": "<p>New Alert Actions</p>\n"
                },
                {
                    "name": "openUpdateRecipientDialog",
                    "args": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 401,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeNewAlertRecipient",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAddNewAlertRecipient",
                    "args": [
                        {
                            "name": "recipient",
                            "type": "NewAlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 455,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "recipient",
                            "type": "NewAlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCloseNewAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 443,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setCloseRecipientDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 526,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nRecipient Dialog",
                    "description": "<p>Recipient Dialog</p>\n",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setCreateAlert",
                    "args": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 494,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCreateAlertError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 502,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteAlertError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 567,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteAlertLoading",
                    "args": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 550,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAlert Updates",
                    "description": "<p>Alert Updates</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteProjectAlert",
                    "args": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 557,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteRecipientError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 654,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteRecipientLoading",
                    "args": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 641,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNewAlertLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 484,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setOpenCreateRecipientDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 513,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setOpenNewAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nNew Alert",
                    "description": "<p>New Alert</p>\n",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setOpenUpdateRecipientDialog",
                    "args": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 537,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjectAlertsList",
                    "args": [
                        {
                            "name": "alerts",
                            "type": "ProjectAlert[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 415,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSet state",
                    "description": "<p>Set state</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "alerts",
                            "type": "ProjectAlert[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjectAlertsListError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 423,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRemoveNewAlertRecipient",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 471,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateAlertRecipients",
                    "args": [
                        {
                            "name": "recipients",
                            "type": "AlertRecipient[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 622,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "recipients",
                            "type": "AlertRecipient[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateAlertRecipientsError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 610,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateTimespanQuantity",
                    "args": [
                        {
                            "name": "updatedAlert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 579,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "updatedAlert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateTimespanQuantityError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 598,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateTimespanQuantityLoading",
                    "args": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 591,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAlertRecipient",
                    "args": [
                        {
                            "name": "newRecipient",
                            "type": "NewAlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 320,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newRecipient",
                            "type": "NewAlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTimespanQuantity",
                    "args": [
                        {
                            "name": "newTimespan",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newQuantity",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "recipients",
                            "type": "AlertRecipient[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 280,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newTimespan",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newQuantity",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "recipients",
                            "type": "AlertRecipient[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport {\n  tap,\n  map,\n  mergeMap,\n  take,\n  catchError,\n  exhaustMap,\n} from \"rxjs/operators\";\nimport { OrganizationsService } from \"../../../../api/organizations/organizations.service\";\nimport { ProjectAlertsAPIService } from \"../../../../api/projects/project-alerts/project-alerts.service\";\nimport {\n  AlertRecipient,\n  NewAlertRecipient,\n  NewProjectAlert,\n  ProjectAlert,\n} from \"../../../../api/projects/project-alerts/project-alerts.interface\";\nimport { ProjectSettingsService } from \"../../project-settings.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\n\ninterface NewAlertState {\n  newAlertOpen: boolean;\n  newProjectAlertRecipients: NewAlertRecipient[] | null;\n  newAlertLoading: boolean;\n  newAlertError: string | null;\n}\n\ninterface RecipientDialogState {\n  recipientError: string | null;\n  recipientDialogOpen: ProjectAlert | boolean;\n  activeAlert: ProjectAlert | null;\n}\n\ninterface ProjectAlertState {\n  initialLoad: boolean;\n  initialLoadError: string | null;\n  projectAlerts: ProjectAlert[] | null;\n  newAlertState: NewAlertState;\n  recipientDialogState: RecipientDialogState;\n  // current alerts\n  removeAlertLoading: number | null;\n  removeAlertError: { error: string; pk: number } | null;\n  updateTimespanQuantityLoading: number | null;\n  updateTimespanQuantityError: { error: string; pk: number } | null;\n  deleteRecipientLoading: number | null;\n}\n\nconst initialNewAlertState = {\n  newAlertOpen: false,\n  newProjectAlertRecipients: null,\n  newAlertLoading: false,\n  newAlertError: null,\n};\n\nconst initialRecipientDialogState = {\n  recipientError: null,\n  recipientDialogOpen: false,\n  activeAlert: null,\n};\n\nconst initialState: ProjectAlertState = {\n  initialLoad: false,\n  initialLoadError: null,\n  projectAlerts: null,\n  newAlertState: initialNewAlertState,\n  recipientDialogState: initialRecipientDialogState,\n  // current alerts\n  removeAlertLoading: null,\n  removeAlertError: null,\n  updateTimespanQuantityLoading: null,\n  updateTimespanQuantityError: null,\n  deleteRecipientLoading: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectAlertsService extends StatefulService<ProjectAlertState> {\n  readonly initialLoad$ = this.getState$.pipe(map((data) => data.initialLoad));\n  readonly initialLoadError$ = this.getState$.pipe(\n    map((data) => data.initialLoadError)\n  );\n  readonly projectAlert$ = this.getState$.pipe(\n    map((data) => data.projectAlerts)\n  );\n\n  /** New Alert */\n  readonly newAlertOpen$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertOpen)\n  );\n  readonly newProjectAlertRecipients$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newProjectAlertRecipients)\n  );\n  readonly newAlertLoading$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertLoading)\n  );\n  readonly newAlertError$ = this.getState$.pipe(\n    map((data) => data.newAlertState.newAlertError)\n  );\n\n  /** Recipient Dialog */\n  readonly recipientError$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientError)\n  );\n  readonly recipientDialogOpen$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.recipientDialogOpen)\n  );\n  readonly activeAlert$ = this.getState$.pipe(\n    map((data) => data.recipientDialogState.activeAlert)\n  );\n  readonly emailSelected$ = combineLatest([\n    this.newProjectAlertRecipients$,\n    this.activeAlert$,\n  ]).pipe(\n    map(([newRecipients, activeAlert]) => {\n      if (activeAlert?.pk) {\n        return activeAlert.alertRecipients.some(\n          (data) => data.recipientType === \"email\"\n        );\n      } else if (newRecipients !== null) {\n        return newRecipients.some((data) => data.recipientType === \"email\");\n      }\n      return;\n    })\n  );\n\n  /** Current Alerts */\n  readonly removeAlertLoading$ = this.getState$.pipe(\n    map((data) => data.removeAlertLoading)\n  );\n  readonly removeAlertError$ = this.getState$.pipe(\n    map((data) => data.removeAlertError)\n  );\n  readonly updateTimespanQuantityLoading$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityLoading)\n  );\n  readonly updateTimespanQuantityError$ = this.getState$.pipe(\n    map((data) => data.updateTimespanQuantityError)\n  );\n  readonly deleteRecipientLoading$ = this.getState$.pipe(\n    map((data) => data.deleteRecipientLoading)\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService,\n    private projectAlertsAPIService: ProjectAlertsAPIService,\n    private snackBar: MatSnackBar\n  ) {\n    super(initialState);\n  }\n\n  /** Actions */\n  listProjectAlerts() {\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService.list(orgSlug, projectSlug).pipe(\n              tap((projectAlerts) => {\n                this.setProjectAlertsList(projectAlerts);\n              }),\n              catchError((err: HttpErrorResponse) => {\n                this.setProjectAlertsListError(err);\n                return EMPTY;\n              })\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** New Alert Actions */\n  openNewAlert() {\n    this.setOpenNewAlert();\n  }\n\n  closeNewAlert() {\n    this.setCloseNewAlert();\n  }\n\n  addAlertRecipient(event: NewAlertRecipient) {\n    // Force https:// if no protocol exists\n    if (event.url && !event.url.startsWith(\"http\")) {\n      event.url = \"https://\" + event.url;\n    }\n    combineLatest([this.newProjectAlertRecipients$, this.activeAlert$])\n      .pipe(\n        take(1),\n        exhaustMap(([newRecipients, activeAlert]) => {\n          if (newRecipients !== null) {\n            this.setAddNewAlertRecipient(event);\n          } else if (activeAlert?.alertRecipients !== null) {\n            this.updateAlertRecipient(event);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeNewAlertRecipient(url: string) {\n    this.setRemoveNewAlertRecipient(url);\n  }\n\n  createNewAlert(timeQuantity: { timespan_minutes: number; quantity: number }) {\n    this.setNewAlertLoading();\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n      this.newProjectAlertRecipients$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([orgSlug, projectSlug, recipients]) => {\n          if (orgSlug && projectSlug && timeQuantity && recipients !== null) {\n            const data: NewProjectAlert = {\n              timespan_minutes: timeQuantity.timespan_minutes,\n              quantity: timeQuantity.quantity,\n              alertRecipients: recipients,\n            };\n            return this.projectAlertsAPIService\n              .create(data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setCreateAlert(resp);\n                  this.snackBar.open(`Success! Your new alert has been added.`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setCreateAlertError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  /** Update Actions */\n  deleteProjectAlert(pk: number) {\n    this.setDeleteAlertLoading(pk);\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .destroy(pk.toString(), orgSlug, projectSlug)\n              .pipe(\n                tap((_) => {\n                  this.setDeleteProjectAlert(pk);\n                  this.snackBar.open(`Success: Your alert has been deleted`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteAlertError(err, pk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateTimespanQuantity(\n    newTimespan: number,\n    newQuantity: number,\n    id: number,\n    recipients: AlertRecipient[]\n  ) {\n    this.setUpdateTimespanQuantityLoading(id);\n    const data: ProjectAlert = {\n      pk: id,\n      timespan_minutes: newTimespan,\n      quantity: newQuantity,\n      alertRecipients: recipients,\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(id.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateTimespanQuantity(resp);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateTimespanQuantityError(err, id);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  updateAlertRecipient(newRecipient: NewAlertRecipient) {\n    let activeErrorPk = 0;\n    combineLatest([\n      this.activeAlert$,\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        exhaustMap(([activeAlert, orgSlug, projectSlug]) => {\n          if (activeAlert && orgSlug && projectSlug) {\n            activeErrorPk = activeAlert.pk;\n            const recipientsWithoutPK: NewAlertRecipient[] = activeAlert.alertRecipients\n              .map((recipient) => {\n                return {\n                  recipientType: recipient.recipientType,\n                  url: recipient.url,\n                };\n              })\n              .concat([newRecipient]);\n            const data = {\n              timespan_minutes: activeAlert.timespan_minutes,\n              quantity: activeAlert.quantity,\n              alertRecipients: recipientsWithoutPK,\n            };\n            return this.projectAlertsAPIService\n              .update(activeAlert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(`Success: Your alert has been updated`);\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setUpdateAlertRecipientsError(err, activeErrorPk);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  deleteAlertRecipient(recipientToRemove: AlertRecipient, alert: ProjectAlert) {\n    this.setDeleteRecipientLoading(recipientToRemove.pk);\n    const data = {\n      ...alert,\n      alertRecipients: alert.alertRecipients.filter(\n        (currentRecipient) => currentRecipient.pk !== recipientToRemove.pk\n      ),\n    };\n    combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ])\n      .pipe(\n        take(1),\n        mergeMap(([orgSlug, projectSlug]) => {\n          if (orgSlug && projectSlug) {\n            return this.projectAlertsAPIService\n              .update(alert.pk.toString(), data, orgSlug, projectSlug)\n              .pipe(\n                tap((resp) => {\n                  this.setUpdateAlertRecipients(resp.alertRecipients, resp.pk);\n                  this.snackBar.open(\n                    `Success: Your recipient has been deleted`\n                  );\n                })\n              );\n          }\n          return EMPTY;\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDeleteRecipientError(err);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  openUpdateRecipientDialog(alert: ProjectAlert) {\n    this.setOpenUpdateRecipientDialog(alert);\n  }\n\n  openCreateRecipientDialog() {\n    this.setOpenCreateRecipientDialog();\n  }\n\n  closeRecipientDialog() {\n    this.setCloseRecipientDialog();\n  }\n\n  /** Set state */\n\n  private setProjectAlertsList(alerts: ProjectAlert[]) {\n    this.setState({\n      projectAlerts: alerts,\n      initialLoad: true,\n      initialLoadError: null,\n    });\n  }\n\n  private setProjectAlertsListError(err: HttpErrorResponse) {\n    this.setState({\n      initialLoad: true,\n      initialLoadError: `There was an error loading your alerts. Try refreshing the page.`,\n    });\n  }\n\n  /** New Alert */\n\n  private setOpenNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: true,\n        newProjectAlertRecipients: [{ recipientType: \"email\", url: \"\" }],\n      },\n    });\n  }\n\n  private setCloseNewAlert() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertOpen: false,\n        newAlertError: null,\n        newProjectAlertRecipients: null,\n      },\n    });\n  }\n\n  private setAddNewAlertRecipient(recipient: NewAlertRecipient) {\n    const newAlertState = this.state.getValue().newAlertState;\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.concat([recipient]) ?? null,\n      },\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n      },\n    });\n  }\n\n  private setRemoveNewAlertRecipient(url: string) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newProjectAlertRecipients:\n          newAlertState.newProjectAlertRecipients?.filter(\n            (recipient) => recipient.url !== url\n          ) ?? null,\n      },\n    });\n  }\n\n  private setNewAlertLoading() {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertLoading: true,\n      },\n    });\n  }\n\n  private setCreateAlert(alert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: state.projectAlerts?.concat([alert]),\n      newAlertState: initialNewAlertState,\n    });\n  }\n\n  private setCreateAlertError(error: HttpErrorResponse) {\n    const newAlertState = this.state.getValue().newAlertState;\n    this.setState({\n      newAlertState: {\n        ...newAlertState,\n        newAlertError: `${error.statusText} : ${error.status}`,\n        newAlertLoading: false,\n      },\n    });\n  }\n\n  private setOpenCreateRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  /** Recipient Dialog */\n\n  private setCloseRecipientDialog() {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setOpenUpdateRecipientDialog(alert: ProjectAlert) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientDialogOpen: true,\n        activeAlert: alert,\n      },\n    });\n  }\n\n  /** Alert Updates */\n\n  private setDeleteAlertLoading(pk: number) {\n    this.setState({\n      removeAlertLoading: pk,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteProjectAlert(pk: number) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts:\n        state.projectAlerts?.filter((alert) => alert.pk !== pk) ?? null,\n      removeAlertLoading: null,\n      removeAlertError: null,\n    });\n  }\n\n  private setDeleteAlertError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      removeAlertError: {\n        ...state.removeAlertError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n      removeAlertLoading: null,\n    });\n  }\n\n  private setUpdateTimespanQuantity(updatedAlert: ProjectAlert) {\n    const state = this.state.getValue();\n    this.setState({\n      projectAlerts: this.findAndReplaceAlert(\n        state.projectAlerts,\n        updatedAlert\n      ),\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityLoading(pk: number) {\n    this.setState({\n      updateTimespanQuantityLoading: pk,\n      updateTimespanQuantityError: null,\n    });\n  }\n\n  private setUpdateTimespanQuantityError(err: HttpErrorResponse, id: number) {\n    const state = this.state.getValue();\n    this.setState({\n      updateTimespanQuantityLoading: null,\n      updateTimespanQuantityError: {\n        ...state.updateTimespanQuantityError,\n        error: `${err.statusText} : ${err.status}`,\n        pk: id,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipientsError(err: HttpErrorResponse, id: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n        recipientDialogOpen: true,\n        activeAlert: null,\n      },\n    });\n  }\n\n  private setUpdateAlertRecipients(recipients: AlertRecipient[], id: number) {\n    const state = this.state.getValue();\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      projectAlerts: state.projectAlerts?.map((alert) =>\n        alert.pk === id ? { ...alert, alertRecipients: recipients } : alert\n      ),\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n        recipientDialogOpen: false,\n        activeAlert: null,\n      },\n      deleteRecipientLoading: null,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientLoading(pk: number) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: null,\n      },\n      deleteRecipientLoading: pk,\n    });\n\n    this.setState({});\n  }\n\n  private setDeleteRecipientError(err: HttpErrorResponse) {\n    const recipientDialogState = this.state.getValue().recipientDialogState;\n    this.setState({\n      recipientDialogState: {\n        ...recipientDialogState,\n        recipientError: `${err.statusText} : ${err.status}`,\n      },\n      deleteRecipientLoading: null,\n    });\n  }\n\n  /** Utility Functions */\n\n  findAndReplaceAlert(\n    currentAlerts: ProjectAlert[] | null,\n    newAlert: ProjectAlert\n  ): ProjectAlert[] | null {\n    const updatedAlert = currentAlerts?.map((alert) => {\n      if (alert.pk === newAlert.pk) {\n        return {\n          ...alert,\n          timespan_minutes: newAlert.timespan_minutes,\n          quantity: newAlert.quantity,\n        };\n      } else return alert;\n    });\n    return updatedAlert !== undefined ? updatedAlert : null;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectSettingsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectAlertsAPIService",
                        "type": "ProjectAlertsAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 145,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectSettingsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectAlertsAPIService",
                        "type": "ProjectAlertsAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "ProjectEnvironmentsService",
            "id": "injectable-ProjectEnvironmentsService-21bd8a56e0e87ffbad064bab18740844",
            "file": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
            "properties": [
                {
                    "name": "environments$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.environments)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "error$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.error))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.initialLoad))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "sortedEnvironments$",
                    "defaultValue": "this.environments$.pipe(\n    map((environments) => {\n      if (environments.length === 0) return null;\n      const visible = {\n        heading: \"Visible\",\n        environments: environments.filter(\n          (environment) => environment.isHidden === false\n        ),\n      };\n      const hidden = {\n        heading: \"Hidden\",\n        environments: environments.filter(\n          (environment) => environment.isHidden === true\n        ),\n      };\n      const sorted = [];\n      if (visible.environments.length > 0) sorted.push(visible);\n      if (hidden.environments.length > 0) sorted.push(hidden);\n      return sorted;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "toggleHiddenLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.toggleHiddenLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "visibleEnvironments$",
                    "defaultValue": "this.environments$.pipe(\n    map((environments) =>\n      environments\n        .filter((environment) => environment.isHidden === false)\n        .map((environment) => environment.name)\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "visibleEnvironmentsLoaded$",
                    "defaultValue": "this.getState$.pipe(\n    filter(({ initialLoad }) => initialLoad === true),\n    map((state) =>\n      state.environments\n        .filter((environment) => environment.isHidden === false)\n        .map((environment) => environment.name)\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "retrieveEnvironments",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retrieveEnvironmentsWithProperties",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sortEnvironments",
                    "args": [
                        {
                            "name": "environments",
                            "type": "ProjectEnvironment[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "environments",
                            "type": "ProjectEnvironment[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updatedEnvironments",
                    "args": [
                        {
                            "name": "newEnvironment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "newEnvironment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateEnvironment",
                    "args": [
                        {
                            "name": "environment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { combineLatest, EMPTY } from \"rxjs\";\nimport { filter, map, mergeMap, takeWhile, tap } from \"rxjs/operators\";\nimport { ProjectEnvironment } from \"src/app/api/organizations/organizations.interface\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { ProjectsAPIService } from \"src/app/api/projects/projects-api.service\";\nimport { StatefulService } from \"src/app/shared/stateful-service/stateful-service\";\nimport { ProjectSettingsService } from \"../../project-settings.service\";\n\ninterface ProjectsState {\n  initialLoad: boolean;\n  toggleHiddenLoading: number | null;\n  error: string;\n  environments: ProjectEnvironment[];\n}\n\nconst initialState: ProjectsState = {\n  initialLoad: false,\n  toggleHiddenLoading: null,\n  error: \"\",\n  environments: [],\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectEnvironmentsService extends StatefulService<ProjectsState> {\n  readonly initialLoad$ = this.getState$.pipe(map((data) => data.initialLoad));\n  readonly toggleHiddenLoading$ = this.getState$.pipe(\n    map((data) => data.toggleHiddenLoading)\n  );\n  readonly error$ = this.getState$.pipe(map((data) => data.error));\n  readonly environments$ = this.getState$.pipe(\n    map((data) => data.environments)\n  );\n  readonly sortedEnvironments$ = this.environments$.pipe(\n    map((environments) => {\n      if (environments.length === 0) return null;\n      const visible = {\n        heading: \"Visible\",\n        environments: environments.filter(\n          (environment) => environment.isHidden === false\n        ),\n      };\n      const hidden = {\n        heading: \"Hidden\",\n        environments: environments.filter(\n          (environment) => environment.isHidden === true\n        ),\n      };\n      const sorted = [];\n      if (visible.environments.length > 0) sorted.push(visible);\n      if (hidden.environments.length > 0) sorted.push(hidden);\n      return sorted;\n    })\n  );\n  readonly visibleEnvironments$ = this.environments$.pipe(\n    map((environments) =>\n      environments\n        .filter((environment) => environment.isHidden === false)\n        .map((environment) => environment.name)\n    )\n  );\n  readonly visibleEnvironmentsLoaded$ = this.getState$.pipe(\n    filter(({ initialLoad }) => initialLoad === true),\n    map((state) =>\n      state.environments\n        .filter((environment) => environment.isHidden === false)\n        .map((environment) => environment.name)\n    )\n  );\n\n  constructor(\n    private projectsAPIService: ProjectsAPIService,\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService\n  ) {\n    super(initialState);\n  }\n\n  retrieveEnvironments() {\n    return combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ]).pipe(\n      takeWhile(([orgSlug, projectSlug]) => !orgSlug || !projectSlug, true),\n      mergeMap(([orgSlug, projectSlug]) => {\n        if (orgSlug && projectSlug) {\n          return this.projectsAPIService\n            .listEnvironments(orgSlug, projectSlug)\n            .pipe(\n              tap((environments) =>\n                this.setState({\n                  environments: this.sortEnvironments(environments),\n                  initialLoad: true,\n                })\n              )\n            );\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  retrieveEnvironmentsWithProperties(orgSlug: string, projectSlug: string) {\n    return this.projectsAPIService.listEnvironments(orgSlug, projectSlug).pipe(\n      tap((environments) =>\n        this.setState({\n          environments: this.sortEnvironments(environments),\n          initialLoad: true,\n        })\n      )\n    );\n  }\n\n  updateEnvironment(environment: ProjectEnvironment) {\n    return combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.projectSettingsService.activeProjectSlug$,\n    ]).pipe(\n      takeWhile(([orgSlug, projectSlug]) => !orgSlug || !projectSlug, true),\n      mergeMap(([orgSlug, projectSlug]) => {\n        if (orgSlug && projectSlug) {\n          this.setState({ toggleHiddenLoading: environment.id });\n\n          return this.projectsAPIService\n            .updateEnvironment(orgSlug, projectSlug, environment)\n            .pipe(\n              tap((updatedEnvironment) =>\n                this.setState({\n                  environments: this.updatedEnvironments(updatedEnvironment),\n                  toggleHiddenLoading: null,\n                })\n              )\n            );\n        }\n        return EMPTY;\n      })\n    );\n  }\n\n  private sortEnvironments(environments: ProjectEnvironment[]) {\n    // https://stackoverflow.com/a/17387454/\n    return environments.sort((a, b) =>\n      a.isHidden === b.isHidden ? 0 : a.isHidden ? 1 : -1\n    );\n  }\n\n  private updatedEnvironments(newEnvironment: ProjectEnvironment) {\n    const currentEnvironments = this.state.getValue().environments;\n    const environmentToReplace = currentEnvironments.findIndex(\n      (currentEnvironment) => currentEnvironment.name === newEnvironment.name\n    );\n    currentEnvironments[environmentToReplace] = newEnvironment;\n    return this.sortEnvironments(currentEnvironments);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "projectsAPIService",
                        "type": "ProjectsAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectSettingsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "projectsAPIService",
                        "type": "ProjectsAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectSettingsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "ProjectKeysAPIService",
            "id": "injectable-ProjectKeysAPIService-48c31138323ebf857486c90eb28261ed",
            "file": "src/app/api/projects/project-keys-api.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "`${baseUrl}/projects/`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detailURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\nimport { baseUrl } from \"../../constants\";\nimport { ProjectKey } from \"./projects-api.interfaces\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectKeysAPIService extends APIBaseService {\n  readonly url = `${baseUrl}/projects/`;\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  list(organizationSlug: string, projectSlug: string) {\n    return this.http.get<ProjectKey[]>(\n      this.listURL(organizationSlug, projectSlug)\n    );\n  }\n\n  retrieve(organizationSlug: string, projectSlug: string, id: string) {\n    return this.http.get<ProjectKey>(\n      this.detailURL(organizationSlug, projectSlug, id)\n    );\n  }\n\n  destroy(organizationSlug: string, projectSlug: string, id: string) {\n    return this.http.delete(this.detailURL(organizationSlug, projectSlug, id));\n  }\n\n  private listURL(organizationSlug: string, projectSlug: string) {\n    return `${this.url}${organizationSlug}/${projectSlug}/keys/`;\n  }\n\n  protected detailURL(\n    organizationSlug: string,\n    projectSlug: string,\n    id: string\n  ) {\n    return `${this.listURL(\n      organizationSlug,\n      projectSlug\n    )}${projectSlug}/${id}/`;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "ProjectsAPIService",
            "id": "injectable-ProjectsAPIService-b2f81e77596d7865319034ad783975bd",
            "file": "src/app/api/projects/projects-api.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/projects/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addProjectToTeam",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "project",
                            "type": "ProjectNew",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "ProjectNew",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detailURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 586,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "organizationSlug"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 580,
                                "end": 585,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>Optional filter by organization slug</p>\n"
                        },
                        {
                            "name": {
                                "pos": 652,
                                "end": 657,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "query"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 646,
                                "end": 651,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>Optional query filter</p>\n"
                        }
                    ]
                },
                {
                    "name": "listEnvironments",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "projectEnvironmentsURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "projectTeamsURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeProjectFromTeam",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "Partial<Project>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "Partial<Project>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateEnvironment",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "environment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\nimport { baseUrl } from \"../../constants\";\nimport { Project, ProjectDetail, ProjectNew } from \"./projects-api.interfaces\";\nimport { ProjectEnvironment } from \"../organizations/organizations.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectsAPIService extends APIBaseService {\n  readonly url = baseUrl + \"/projects/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  /**\n   * @param organizationSlug Optional filter by organization slug\n   * @param query Optional query filter\n   */\n  list(organizationSlug?: string, query?: string) {\n    let params = new HttpParams();\n    if (query) {\n      params = params.append(\"query\", query);\n    }\n    const url = this.listURL(organizationSlug);\n    return this.http.get<Project[]>(url, { params });\n  }\n\n  retrieve(organizationSlug: string, projectSlug: string) {\n    return this.http.get<ProjectDetail>(\n      this.detailURL(organizationSlug, projectSlug)\n    );\n  }\n\n  update(\n    organizationSlug: string,\n    projectSlug: string,\n    data: Partial<Project>\n  ) {\n    return this.http.put<ProjectDetail>(\n      this.detailURL(organizationSlug, projectSlug),\n      data\n    );\n  }\n\n  create(project: ProjectNew, teamSlug: string, orgSlug: string) {\n    const url = `${baseUrl}/teams/${orgSlug}/${teamSlug}/projects/`;\n    return this.http.post<Project>(url, project);\n  }\n\n  destroy(organizationSlug: string, projectSlug: string) {\n    return this.http.delete(this.detailURL(organizationSlug, projectSlug));\n  }\n\n  addProjectToTeam(\n    organizationSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    return this.http.post<Project>(\n      this.projectTeamsURL(organizationSlug, teamSlug, projectSlug),\n      null\n    );\n  }\n\n  removeProjectFromTeam(\n    organizationSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    return this.http.delete<Project>(\n      this.projectTeamsURL(organizationSlug, teamSlug, projectSlug)\n    );\n  }\n\n  listEnvironments(organizationSlug: string, projectSlug: string) {\n    return this.http.get<ProjectEnvironment[]>(\n      this.projectEnvironmentsURL(organizationSlug, projectSlug)\n    );\n  }\n\n  updateEnvironment(\n    organizationSlug: string,\n    projectSlug: string,\n    environment: ProjectEnvironment\n  ) {\n    return this.http.put<ProjectEnvironment>(\n      this.projectEnvironmentsURL(\n        organizationSlug,\n        projectSlug,\n        environment.name\n      ),\n      environment\n    );\n  }\n\n  private projectTeamsURL(\n    organizationSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    return `${this.url}${organizationSlug}/${projectSlug}/teams/${teamSlug}/`;\n  }\n\n  private projectEnvironmentsURL(\n    organizationSlug: string,\n    projectSlug: string,\n    name?: string\n  ) {\n    return `${this.url}${organizationSlug}/${projectSlug}/environments/${\n      name ? encodeURIComponent(name) + \"/\" : \"\"\n    }`;\n  }\n\n  private listURL(organizationSlug?: string) {\n    if (organizationSlug) {\n      return `${baseUrl}/organizations/${organizationSlug}/projects/`;\n    }\n    return this.url;\n  }\n\n  protected detailURL(organizationSlug: string, projectSlug: string) {\n    return `${this.listURL(organizationSlug)}${projectSlug}/`;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "ProjectSettingsService",
            "id": "injectable-ProjectSettingsService-afa7db4b8b5dfb6cbf0efdb300653ac7",
            "file": "src/app/settings/projects/project-settings.service.ts",
            "properties": [
                {
                    "name": "activeProject$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectDetail)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "activeProjectSlug$",
                    "defaultValue": "this.activeProject$.pipe(\n    map((data) => data?.slug)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "addRemoveLoading$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "errors$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.errors))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectKeys$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.projectKeys))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projects$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.projects))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectsNotOnTeam$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectsNotOnTeam)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projectsOnTeam$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.projectsOnTeam)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.pagination$.pipe(map((pagination) => pagination.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "pagination$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.pagination))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "addOneProject",
                    "args": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 295,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addProjectToTeam",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearActiveProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 344,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createProject",
                    "args": [
                        {
                            "name": "project",
                            "type": "ProjectNew",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "ProjectNew",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteProject",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProjectDetails",
                    "args": [
                        {
                            "name": "project",
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "activeOrgProjects",
                            "type": "OrganizationProject[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalls retrieveProjectDetail with the active org slug and the slug of a\nsingle project. Project comes from either the URL or the active org list\n\n",
                    "description": "<p>Calls retrieveProjectDetail with the active org slug and the slug of a\nsingle project. Project comes from either the URL or the active org list</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3200,
                                "end": 3207,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "project"
                            },
                            "type": "string[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3194,
                                "end": 3199,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>An array of project IDs that come from the URL</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3267,
                                "end": 3284,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "activeOrgProjects"
                            },
                            "type": "OrganizationProject[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3261,
                                "end": 3266,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>All projects associated with the active organization</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3350,
                                "end": 3357,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "orgSlug"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3344,
                                "end": 3349,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>Active organization slug</p>\n"
                        }
                    ]
                },
                {
                    "name": "removeProjectFromTeam",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveCurrentProjectClientKeys",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveProjectDetail",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveProjects",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveProjectsNotOnTeam",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveProjectsOnTeam",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveProject",
                    "args": [
                        {
                            "name": "projectDetail",
                            "type": "ProjectDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projectDetail",
                            "type": "ProjectDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAddProjectToTeam",
                    "args": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAddProjectToTeamError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAddProjectToTeamLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setKeys",
                    "args": [
                        {
                            "name": "projectKeys",
                            "type": "ProjectKey[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 340,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projectKeys",
                            "type": "ProjectKey[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjects",
                    "args": [
                        {
                            "name": "projects",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projects",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjectsNotOnTeam",
                    "args": [
                        {
                            "name": "projectsNotOnTeam",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projectsNotOnTeam",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProjectsPerTeam",
                    "args": [
                        {
                            "name": "projectsOnTeam",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 277,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projectsOnTeam",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRemoveProjectFromTeam",
                    "args": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 304,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRemoveProjectFromTeamLoading",
                    "args": [
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRemoveProjectFromTeamLoadingError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProjectName",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateProjectPlatform",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectPlatform",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectPlatform",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStateAndPagination",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { EMPTY } from \"rxjs\";\nimport { tap, map, catchError, filter, first } from \"rxjs/operators\";\nimport { OrganizationProject } from \"../../api/organizations/organizations.interface\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"src/app/shared/stateful-service/pagination-stateful-service\";\nimport {\n  Project,\n  ProjectDetail,\n  ProjectKey,\n  ProjectNew,\n} from \"../../api/projects/projects-api.interfaces\";\nimport { ProjectsAPIService } from \"../../api/projects/projects-api.service\";\nimport { ProjectKeysAPIService } from \"../../api/projects/project-keys-api.service\";\n\ninterface ProjectLoading {\n  addProjectToTeam: boolean;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectError {\n  addProjectToTeam: string;\n  removeProjectFromTeam: string;\n}\n\ninterface ProjectSettingsState extends PaginationStatefulServiceState {\n  projects: Project[] | null;\n  projectsOnTeam: Project[];\n  projectsNotOnTeam: Project[];\n  projectDetail: ProjectDetail | null;\n  projectKeys: ProjectKey[] | null;\n  loading: ProjectLoading;\n  errors: ProjectError;\n}\n\nconst initialState: ProjectSettingsState = {\n  projects: null,\n  projectsOnTeam: [],\n  projectsNotOnTeam: [],\n  projectDetail: null,\n  projectKeys: null,\n  loading: { addProjectToTeam: false, removeProjectFromTeam: \"\" },\n  errors: { addProjectToTeam: \"\", removeProjectFromTeam: \"\" },\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectSettingsService extends PaginationStatefulService<ProjectSettingsState> {\n  readonly projects$ = this.getState$.pipe(map((data) => data.projects));\n\n  readonly activeProject$ = this.getState$.pipe(\n    map((data) => data.projectDetail)\n  );\n  readonly activeProjectSlug$ = this.activeProject$.pipe(\n    map((data) => data?.slug)\n  );\n  readonly projectKeys$ = this.getState$.pipe(map((data) => data.projectKeys));\n\n  readonly projectsOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsOnTeam)\n  );\n  readonly projectsNotOnTeam$ = this.getState$.pipe(\n    map((data) => data.projectsNotOnTeam)\n  );\n  readonly addRemoveLoading$ = this.getState$.pipe(map((data) => data.loading));\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private projectsAPIService: ProjectsAPIService,\n    private projectKeysAPIService: ProjectKeysAPIService\n  ) {\n    super(initialState);\n  }\n\n  createProject(project: ProjectNew, teamSlug: string, orgSlug: string) {\n    return this.projectsAPIService\n      .create(project, teamSlug, orgSlug)\n      .pipe(tap((newProject) => this.addOneProject(newProject)));\n  }\n\n  retrieveProjects(organizationSlug: string) {\n    this.projectsAPIService\n      .list(organizationSlug)\n      .pipe(tap((projects) => this.setProjects(projects)))\n      .subscribe();\n  }\n\n  /**\n   * Calls retrieveProjectDetail with the active org slug and the slug of a\n   * single project. Project comes from either the URL or the active org list\n   *\n   * @param project An array of project IDs that come from the URL\n   * @param activeOrgProjects All projects associated with the active organization\n   * @param orgSlug Active organization slug\n   */\n  getProjectDetails(\n    project: string[] | null,\n    activeOrgProjects: OrganizationProject[] | null,\n    orgSlug: string\n  ) {\n    if (activeOrgProjects) {\n      let matchingProject: OrganizationProject | null = null;\n      if (project && project.length === 1) {\n        const match = activeOrgProjects.find(\n          (activeOrgProject) => activeOrgProject.id === parseInt(project[0], 10)\n        );\n        if (match) matchingProject = match;\n      } else if (activeOrgProjects.length === 1) {\n        matchingProject = activeOrgProjects[0];\n      }\n\n      if (matchingProject) {\n        this.retrieveProjectDetail(orgSlug, matchingProject.slug);\n      }\n    }\n  }\n\n  addProjectToTeam(orgSlug: string, teamSlug: string, projectSlug: string) {\n    this.setAddProjectToTeamLoading(true);\n    this.projectsAPIService\n      .addProjectToTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been added to #${teamSlug}`);\n          this.setAddProjectToTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setAddProjectToTeamError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  removeProjectFromTeam(\n    orgSlug: string,\n    teamSlug: string,\n    projectSlug: string\n  ) {\n    this.setRemoveProjectFromTeamLoading(projectSlug);\n    return this.projectsAPIService\n      .removeProjectFromTeam(orgSlug, teamSlug, projectSlug)\n      .pipe(\n        tap((resp) => {\n          this.snackBar.open(`${resp.slug} has been removed from #${teamSlug}`);\n          this.setRemoveProjectFromTeam(resp);\n        }),\n        catchError((error: HttpErrorResponse) => {\n          this.setRemoveProjectFromTeamLoadingError(error);\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  retrieveProjectsOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `team:${teamSlug}`;\n    this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsPerTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectsNotOnTeam(orgSlug: string, teamSlug: string) {\n    const query = `!team:${teamSlug}`;\n    return this.projectsAPIService\n      .list(orgSlug, query)\n      .pipe(tap((resp) => this.setProjectsNotOnTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveProjectDetail(organizationSlug: string, projectSlug: string) {\n    this.projectsAPIService\n      .retrieve(organizationSlug, projectSlug)\n      .pipe(tap((activeProject) => this.setActiveProject(activeProject)))\n      .subscribe();\n  }\n\n  retrieveCurrentProjectClientKeys(organizationSlug: string) {\n    this.activeProject$\n      .pipe(\n        filter((project) => !!project),\n        first(),\n        tap((project) => {\n          return this.projectKeysAPIService\n            .list(organizationSlug, project!.slug)\n            .pipe(tap((projectKeys) => this.setKeys(projectKeys)))\n            .subscribe();\n        })\n      )\n      .subscribe();\n  }\n\n  updateProjectName(orgSlug: string, projectSlug: string, projectName: string) {\n    const data = { name: projectName };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  updateProjectPlatform(\n    orgSlug: string,\n    projectSlug: string,\n    projectPlatform: string,\n    projectName: string\n  ) {\n    const data = { name: projectName, platform: projectPlatform };\n    return this.projectsAPIService\n      .update(orgSlug, projectSlug, data)\n      .pipe(tap((resp) => this.setActiveProject(resp)));\n  }\n\n  deleteProject(organizationSlug: string, projectSlug: string) {\n    return this.projectsAPIService.destroy(organizationSlug, projectSlug);\n  }\n\n  private setAddProjectToTeamError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        addProjectToTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setAddProjectToTeamLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        addProjectToTeam: loading,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoading(projectSlug: string) {\n    const state = this.state.getValue();\n    this.setState({\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: projectSlug,\n      },\n    });\n  }\n\n  private setRemoveProjectFromTeamLoadingError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.setState({\n      errors: {\n        ...state.errors,\n        removeProjectFromTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setProjects(projects: Project[]) {\n    this.setState({ projects });\n  }\n\n  private setProjectsPerTeam(projectsOnTeam: Project[]) {\n    this.setState({\n      projectsOnTeam,\n    });\n  }\n\n  private setProjectsNotOnTeam(projectsNotOnTeam: Project[]) {\n    this.setState({\n      projectsNotOnTeam,\n    });\n  }\n\n  private setActiveProject(projectDetail: ProjectDetail) {\n    this.setState({\n      projectDetail,\n    });\n  }\n\n  private addOneProject(project: Project) {\n    const newProjects = this.state.getValue().projects?.concat([project]);\n    if (newProjects) {\n      this.setState({\n        projects: newProjects,\n      });\n    }\n  }\n\n  private setRemoveProjectFromTeam(project: Project) {\n    const filteredTeams = this.state\n      .getValue()\n      .projectsOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: filteredTeams,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        removeProjectFromTeam: \"\",\n      },\n    });\n  }\n\n  private setAddProjectToTeam(project: Project) {\n    const notOnTeam = this.state\n      .getValue()\n      .projectsNotOnTeam.filter(\n        (currentProject) => currentProject.slug !== project.slug\n      );\n    const onTeam = this.state.getValue().projectsOnTeam?.concat([project]);\n    this.setState({\n      projectsOnTeam: onTeam,\n      projectsNotOnTeam: notOnTeam,\n      loading: {\n        ...this.state.getValue().loading,\n        addProjectToTeam: false,\n      },\n    });\n  }\n\n  private setKeys(projectKeys: ProjectKey[]) {\n    this.setState({ projectKeys });\n  }\n\n  clearActiveProject() {\n    this.setState({ projectDetail: null, projectKeys: null });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectsAPIService",
                        "type": "ProjectsAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectKeysAPIService",
                        "type": "ProjectKeysAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectsAPIService",
                        "type": "ProjectsAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectKeysAPIService",
                        "type": "ProjectKeysAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationStatefulService",
            "type": "injectable"
        },
        {
            "name": "ProjectsService",
            "id": "injectable-ProjectsService-515134fecb35529a2a13b1d7d5a34a0a",
            "file": "src/app/projects/projects.service.ts",
            "properties": [
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.initialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "projects$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.projects))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "retrieveProjects",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setProjects",
                    "args": [
                        {
                            "name": "projects",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "projects",
                            "type": "Project[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { map, tap } from \"rxjs/operators\";\nimport { Project } from \"../api/projects/projects-api.interfaces\";\nimport { ProjectsAPIService } from \"../api/projects/projects-api.service\";\nimport { StatefulService } from \"../shared/stateful-service/stateful-service\";\n\ninterface ProjectsState {\n  projects: Project[] | null;\n  initialLoadComplete: boolean;\n  loading: boolean;\n}\n\nconst initialState: ProjectsState = {\n  projects: null,\n  initialLoadComplete: false,\n  loading: false,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProjectsService extends StatefulService<ProjectsState> {\n  readonly projects$ = this.getState$.pipe(map((data) => data.projects));\n  readonly initialLoadComplete$ = this.getState$.pipe(\n    map((state) => state.initialLoadComplete)\n  );\n  readonly loading$ = this.getState$.pipe(map((state) => state.loading));\n\n  constructor(private projectsAPIService: ProjectsAPIService) {\n    super(initialState);\n  }\n\n  retrieveProjects() {\n    this.setState({ loading: true });\n    this.projectsAPIService\n      .list()\n      .pipe(tap((projects) => this.setProjects(projects)))\n      .subscribe();\n  }\n\n  private setProjects(projects: Project[]) {\n    this.setState({ projects, initialLoadComplete: true, loading: false });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "projectsAPIService",
                        "type": "ProjectsAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "projectsAPIService",
                        "type": "ProjectsAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "StatefulService",
            "type": "injectable"
        },
        {
            "name": "RegisterService",
            "id": "injectable-RegisterService-dcef92439ad7b84f7985085fbfe383bd",
            "file": "src/app/register/register.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap } from \"rxjs/operators\";\nimport { AuthService, AuthState } from \"../api/auth/auth.service\";\n\nconst baseUrl = \"/rest-auth\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RegisterService {\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  register(email: string, password1: string, password2: string) {\n    const url = baseUrl + \"/registration/\";\n    const data = {\n      email,\n      password1,\n      password2,\n    };\n    return this.http.post<AuthState>(url, data).pipe(tap(() => this.setAuth()));\n  }\n\n  setAuth() {\n    this.authService.afterLogin();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ResetPasswordService",
            "id": "injectable-ResetPasswordService-7acd8e66931ea675a887fe31a63a038f",
            "file": "src/app/api/reset-password/reset-password.service.ts",
            "properties": [
                {
                    "name": "confirmUrl",
                    "defaultValue": "\"/rest-auth/password/reset/confirm/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "resetUrl",
                    "defaultValue": "\"/rest-auth/password/reset/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "sendResetEmailError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.sendResetEmailError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "sendResetEmailLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.sendResetEmailLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "sendResetEmailSuccess$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.sendResetEmailSuccess)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "setNewPasswordError$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.setNewPasswordError)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "setNewPasswordLoading$",
                    "defaultValue": "this.getState$.pipe(\n    map((data) => data.setNewPasswordLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<ResetPasswordState>(\n    initialState\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "postEmailToReset",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postNewPassword",
                    "args": [
                        {
                            "name": "newPassword1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newPassword2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "uid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "newPassword1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newPassword2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "uid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendResetEmail",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNewPassword",
                    "args": [
                        {
                            "name": "newPassword1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newPassword2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "uid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newPassword1",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newPassword2",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "uid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNewPasswordError",
                    "args": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setNewPasswordLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSendResetEmailError",
                    "args": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "errorMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSendResetEmailLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSendResetEmailSuccess",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap, catchError, map } from \"rxjs/operators\";\nimport { EMPTY, BehaviorSubject } from \"rxjs\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router } from \"@angular/router\";\n\ninterface ResetPasswordState {\n  setNewPasswordError: string;\n  setNewPasswordLoading: boolean;\n  sendResetEmailError: string;\n  sendResetEmailLoading: boolean;\n  sendResetEmailSuccess: string;\n}\n\nconst initialState: ResetPasswordState = {\n  setNewPasswordError: \"\",\n  setNewPasswordLoading: false,\n  sendResetEmailError: \"\",\n  sendResetEmailLoading: false,\n  sendResetEmailSuccess: \"\",\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ResetPasswordService {\n  private readonly resetUrl = \"/rest-auth/password/reset/\";\n  private readonly confirmUrl = \"/rest-auth/password/reset/confirm/\";\n  private readonly state = new BehaviorSubject<ResetPasswordState>(\n    initialState\n  );\n  private readonly getState$ = this.state.asObservable();\n  readonly setNewPasswordError$ = this.getState$.pipe(\n    map((data) => data.setNewPasswordError)\n  );\n  readonly setNewPasswordLoading$ = this.getState$.pipe(\n    map((data) => data.setNewPasswordLoading)\n  );\n  readonly sendResetEmailError$ = this.getState$.pipe(\n    map((data) => data.sendResetEmailError)\n  );\n  readonly sendResetEmailLoading$ = this.getState$.pipe(\n    map((data) => data.sendResetEmailLoading)\n  );\n  readonly sendResetEmailSuccess$ = this.getState$.pipe(\n    map((data) => data.sendResetEmailSuccess)\n  );\n\n  constructor(\n    private http: HttpClient,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  sendResetEmail(email: string) {\n    this.setSendResetEmailLoading(true);\n    this.postEmailToReset(email)\n      .pipe(\n        tap((_) => {\n          console.log(_);\n          this.setSendResetEmailLoading(false),\n            this.setSendResetEmailSuccess(\n              `If you have an account with GlitchTip, an email has been sent to ${email}`\n            );\n        }),\n        catchError((error) => {\n          this.setSendResetEmailLoading(false);\n          if (error.status === 500) {\n            this.setSendResetEmailError(\n              \"There was a problem on our end. Try again later.\"\n            );\n          } else if (error.error?.detail) {\n            this.setSendResetEmailError(error.error.detail);\n          } else {\n            this.setSendResetEmailError(\n              \"There was a problem. Try again later.\"\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  setNewPassword(\n    newPassword1: string,\n    newPassword2: string,\n    uid: string,\n    token: string\n  ) {\n    this.setNewPasswordLoading(true);\n    this.postNewPassword(newPassword1, newPassword2, uid, token)\n      .pipe(\n        tap((_) => {\n          this.setNewPasswordLoading(false);\n          this.snackBar.open(\"Your password has been changed.\");\n          this.router.navigate([\"/login\"]);\n        }),\n        catchError((error) => {\n          this.setNewPasswordLoading(false);\n          if (error.status === 500) {\n            this.setNewPasswordError(\n              \"There was a problem on our end. Try again later.\"\n            );\n          } else if (error.error?.detail) {\n            this.setNewPasswordError(error.error.detail);\n          } else {\n            this.setNewPasswordError(\"There was a problem. Try again later.\");\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  private postEmailToReset(email: string) {\n    return this.http.post<string>(this.resetUrl, { email });\n  }\n\n  private postNewPassword(\n    newPassword1: string,\n    newPassword2: string,\n    uid: string,\n    token: string\n  ) {\n    return this.http.post<string>(this.confirmUrl, {\n      new_password1: newPassword1,\n      new_password2: newPassword2,\n      uid,\n      token,\n    });\n  }\n\n  clearState() {\n    this.state.next(initialState);\n  }\n\n  private setNewPasswordError(errorMessage: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      setNewPasswordError: errorMessage,\n    });\n  }\n\n  private setNewPasswordLoading(loading: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      setNewPasswordLoading: loading,\n    });\n  }\n\n  private setSendResetEmailError(errorMessage: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      sendResetEmailError: errorMessage,\n    });\n  }\n\n  private setSendResetEmailLoading(loading: boolean) {\n    this.state.next({\n      ...this.state.getValue(),\n      sendResetEmailLoading: loading,\n    });\n  }\n\n  private setSendResetEmailSuccess(message: string) {\n    this.state.next({\n      ...this.state.getValue(),\n      sendResetEmailSuccess: message,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SettingsService",
            "id": "injectable-SettingsService-2eb9df44f256c04efe056f37f63bb502",
            "file": "src/app/api/settings.service.ts",
            "properties": [
                {
                    "name": "billingEnabled$",
                    "defaultValue": "this.state.pipe(map((settings) => settings.billingEnabled))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "enableUserRegistration$",
                    "defaultValue": "this.state.pipe(\n    map((settings) => settings.enableUserRegistration)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "paidForGlitchTip$",
                    "defaultValue": "this.state.pipe(\n    map((settings) => settings.iPaidForGlitchTip)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "socialApps$",
                    "defaultValue": "this.state.pipe(map((settings) => settings.socialApps))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<SettingsState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "stripePublicKey$",
                    "defaultValue": "this.state.pipe(\n    map((settings) => settings.stripePublicKey)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "url",
                    "defaultValue": "\"/api/settings/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGet and set conf settings from backend. Typically run on application start",
                    "description": "<p>Get and set conf settings from backend. Typically run on application start</p>\n"
                },
                {
                    "name": "retrieveSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setSettings",
                    "args": [
                        {
                            "name": "settings",
                            "type": "SettingsState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "settings",
                            "type": "SettingsState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as Sentry from \"@sentry/angular\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { SocialApp } from \"./user/user.interfaces\";\n\ninterface SettingsState {\n  socialApps: SocialApp[];\n  billingEnabled: boolean;\n  iPaidForGlitchTip: boolean | null;\n  enableUserRegistration: boolean;\n  matomoURL: string | null;\n  matomoSiteId: string | null;\n  chatwootWebsiteToken: string | null;\n  stripePublicKey: string | null;\n  sentryDSN: string | null;\n  sentryTracesSampleRate: number | null;\n  environment: string | null;\n  version: string | null;\n}\n\nconst initialState: SettingsState = {\n  socialApps: [],\n  billingEnabled: false,\n  iPaidForGlitchTip: null,\n  enableUserRegistration: false,\n  matomoURL: null,\n  matomoSiteId: null,\n  chatwootWebsiteToken: null,\n  stripePublicKey: null,\n  sentryDSN: null,\n  sentryTracesSampleRate: null,\n  environment: null,\n  version: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SettingsService {\n  private readonly state = new BehaviorSubject<SettingsState>(initialState);\n  socialApps$ = this.state.pipe(map((settings) => settings.socialApps));\n  billingEnabled$ = this.state.pipe(map((settings) => settings.billingEnabled));\n  paidForGlitchTip$ = this.state.pipe(\n    map((settings) => settings.iPaidForGlitchTip)\n  );\n  stripePublicKey$ = this.state.pipe(\n    map((settings) => settings.stripePublicKey)\n  );\n  enableUserRegistration$ = this.state.pipe(\n    map((settings) => settings.enableUserRegistration)\n  );\n  private readonly url = \"/api/settings/\";\n\n  constructor(private http: HttpClient) {}\n\n  /** Get and set conf settings from backend. Typically run on application start */\n  getSettings() {\n    return this.retrieveSettings().pipe(\n      tap((settings) => this.setSettings(settings)),\n      tap((settings) => {\n        if (settings.matomoSiteId && settings.matomoURL) {\n          // tslint:disable:no-any\n          const _PAQ = ((window as any)._paq = (window as any)._paq || []);\n          /* tracker methods like \"setCustomDimension\" should be called before \"trackPageView\" */\n          _PAQ.push([\"trackPageView\"]);\n          _PAQ.push([\"enableLinkTracking\"]);\n          const u = settings.matomoURL;\n          _PAQ.push([\"setTrackerUrl\", u + \"matomo.php\"]);\n          _PAQ.push([\"setSiteId\", settings.matomoSiteId]);\n          _PAQ.push([\"setDomains\", [\"glitchtip.com\", \"app.glitchtip.com\"]]);\n          _PAQ.push([\"enableCrossDomainLinking\"]);\n          const d = document;\n          const g = d.createElement(\"script\");\n          const s = d.getElementsByTagName(\"script\")[0];\n          g.type = \"text/javascript\";\n          g.async = true;\n          g.defer = true;\n          g.src = u + \"matomo.js\";\n          s.parentNode!.insertBefore(g, s);\n        }\n      }),\n      tap((settings) => {\n        if (settings.sentryDSN) {\n          Sentry.init({\n            dsn: settings.sentryDSN,\n            environment: settings.environment\n              ? settings.environment\n              : undefined,\n            release: settings.version\n              ? \"glitchtip@\" + settings.version\n              : undefined,\n            autoSessionTracking: false,\n            tracesSampleRate: settings.sentryTracesSampleRate\n              ? settings.sentryTracesSampleRate\n              : undefined,\n          });\n        }\n      }),\n      tap((settings) => {\n        if (settings.chatwootWebsiteToken) {\n          // tslint:disable:only-arrow-functions\n          // tslint:disable:space-before-function-paren\n          // tslint:disable:one-variable-per-declaration\n          (function (d, t) {\n            const BASE_URL = \"https://app.chatwoot.com\";\n            const g: any = d.createElement(t),\n              s: any = d.getElementsByTagName(t)[0];\n            g.src = BASE_URL + \"/packs/js/sdk.js\";\n            s.parentNode.insertBefore(g, s);\n            g.onload = function () {\n              (window as any).chatwootSDK.run({\n                websiteToken: settings.chatwootWebsiteToken,\n                baseUrl: BASE_URL,\n              });\n            };\n          })(document, \"script\");\n        }\n      })\n    );\n  }\n\n  private retrieveSettings() {\n    return this.http.get<SettingsState>(this.url);\n  }\n\n  private setSettings(settings: SettingsState) {\n    this.state.next(settings);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StripeService",
            "id": "injectable-StripeService-a40ef1e2e77f9d5f5e5da442bd3730d7",
            "file": "src/app/settings/subscription/stripe.service.ts",
            "properties": [
                {
                    "name": "activeOrganizationId$",
                    "defaultValue": "this.organizationService.activeOrganizationId$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "stripePublicKey$",
                    "defaultValue": "this.settingsService.stripePublicKey$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [
                {
                    "name": "createBillingPortal",
                    "args": [
                        {
                            "name": "organization",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organization",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createSubscriptionCheckout",
                    "args": [
                        {
                            "name": "organization",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "plan",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organization",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "plan",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "redirectToBillingPortal",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRedirect the user to Stripe's self service billing portal\nhttps://stripe.com/docs/billing/subscriptions/integrating-self-serve-portal\n",
                    "description": "<p>Redirect the user to Stripe&#39;s self service billing portal\n<a href=\"https://stripe.com/docs/billing/subscriptions/integrating-self-serve-portal\">https://stripe.com/docs/billing/subscriptions/integrating-self-serve-portal</a></p>\n"
                },
                {
                    "name": "redirectToSubscriptionCheckout",
                    "args": [
                        {
                            "name": "plan",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "plan",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { tap, exhaustMap, withLatestFrom } from \"rxjs/operators\";\nimport { baseUrl } from \"src/app/constants\";\nimport {\n  StripeCheckoutSession,\n  StripeBillingPortalSession,\n} from \"./stripe.interfaces\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { SettingsService } from \"src/app/api/settings.service\";\nimport { EMPTY } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class StripeService {\n  activeOrganizationId$ = this.organizationService.activeOrganizationId$;\n  stripePublicKey$ = this.settingsService.stripePublicKey$;\n  constructor(\n    private http: HttpClient,\n    private organizationService: OrganizationsService,\n    private settingsService: SettingsService\n  ) {}\n\n  redirectToSubscriptionCheckout(plan: string) {\n    return this.activeOrganizationId$\n      .pipe(\n        exhaustMap((organization) => {\n          if (organization) {\n            return this.createSubscriptionCheckout(organization, plan).pipe(\n              withLatestFrom(this.settingsService.stripePublicKey$),\n              exhaustMap(([resp, stripePublicKey]) => {\n                if (stripePublicKey) {\n                  return loadStripe(stripePublicKey).then((stripe) =>\n                    stripe?.redirectToCheckout({ sessionId: resp.id })\n                  );\n                } else {\n                  return EMPTY;\n                }\n              })\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  createSubscriptionCheckout(organization: number, plan: string) {\n    const url = baseUrl + \"/create-stripe-subscription-checkout/\";\n    const data = {\n      organization,\n      plan,\n    };\n    return this.http.post<StripeCheckoutSession>(url, data);\n  }\n\n  /**\n   * Redirect the user to Stripe's self service billing portal\n   * https://stripe.com/docs/billing/subscriptions/integrating-self-serve-portal\n   */\n  redirectToBillingPortal() {\n    return this.activeOrganizationId$\n      .pipe(\n        exhaustMap((organization) =>\n          this.createBillingPortal(organization!).pipe(\n            tap((resp) => (window.location.href = resp.url))\n          )\n        )\n      )\n      .toPromise();\n  }\n\n  createBillingPortal(organization: number) {\n    const url = baseUrl + \"/create-billing-portal/\";\n    const data = {\n      organization,\n    };\n    return this.http.post<StripeBillingPortalSession>(url, data);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SubscriptionsService",
            "id": "injectable-SubscriptionsService-1c5040cc2d361c19d3d41e991fc1681c",
            "file": "src/app/api/subscriptions/subscriptions.service.ts",
            "properties": [
                {
                    "name": "eventsCount$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.eventsCount)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "planOptions$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.products))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "planOptionsWithShortNames$",
                    "defaultValue": "this.planOptions$.pipe(\n    map((plans) => {\n      return plans?.map((plan) => ({\n        ...plan,\n        name: plan.name.startsWith(\"GlitchTip \")\n          ? plan.name.substring(10)\n          : plan.name,\n      }));\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<SubscriptionsState>(\n    initialState\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "subscription$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.subscription)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl + \"/subscriptions/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        120,
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "checkIfUserHasSubscription",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieve Subscription and navigate to subscription page if no subscription exists\n",
                    "description": "<p>Retrieve Subscription and navigate to subscription page if no subscription exists</p>\n",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createFreeSubscription",
                    "args": [
                        {
                            "name": "organizationId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "planId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "planId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveSubscription",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieve subscription for this organization\n",
                    "description": "<p>Retrieve subscription for this organization</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1568,
                                "end": 1572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "slug"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1562,
                                "end": 1567,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>Organization Slug for requested subscription</p>\n"
                        }
                    ]
                },
                {
                    "name": "retrieveSubscriptionCount",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieve event count for current active subscription for this organization\n",
                    "description": "<p>Retrieve event count for current active subscription for this organization</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1994,
                                "end": 1998,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "slug"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1988,
                                "end": 1993,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>Organization Slug for requested subscription event count</p>\n"
                        }
                    ]
                },
                {
                    "name": "retrieveSubscriptionPlans",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieve subscription plans\nproductAmountSorted converts product prices to ints and sorts from low to high\n",
                    "description": "<p>Retrieve subscription plans\nproductAmountSorted converts product prices to ints and sorts from low to high</p>\n"
                },
                {
                    "name": "setProducts",
                    "args": [
                        {
                            "name": "products",
                            "type": "Product[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "products",
                            "type": "Product[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSubscription",
                    "args": [
                        {
                            "name": "subscription",
                            "type": "Subscription",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "subscription",
                            "type": "Subscription",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSubscriptionCount",
                    "args": [
                        {
                            "name": "eventsCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "eventsCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, EMPTY } from \"rxjs\";\nimport { tap, map, catchError } from \"rxjs/operators\";\nimport {\n  Subscription,\n  Product,\n  CreateSubscriptionResp,\n} from \"./subscriptions.interfaces\";\nimport { baseUrl } from \"src/app/constants\";\n\ninterface SubscriptionsState {\n  subscription: Subscription | null;\n  eventsCount: number | null;\n  products: Product[] | null;\n}\n\nconst initialState: SubscriptionsState = {\n  subscription: null,\n  eventsCount: null,\n  products: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SubscriptionsService {\n  private readonly state = new BehaviorSubject<SubscriptionsState>(\n    initialState\n  );\n  private readonly getState$ = this.state.asObservable();\n  private readonly url = baseUrl + \"/subscriptions/\";\n\n  readonly subscription$ = this.getState$.pipe(\n    map((state) => state.subscription)\n  );\n  readonly eventsCount$ = this.getState$.pipe(\n    map((state) => state.eventsCount)\n  );\n  readonly planOptions$ = this.getState$.pipe(map((state) => state.products));\n  readonly planOptionsWithShortNames$ = this.planOptions$.pipe(\n    map((plans) => {\n      return plans?.map((plan) => ({\n        ...plan,\n        name: plan.name.startsWith(\"GlitchTip \")\n          ? plan.name.substring(10)\n          : plan.name,\n      }));\n    })\n  );\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Retrieve subscription for this organization\n   * @param slug Organization Slug for requested subscription\n   */\n  retrieveSubscription(slug: string) {\n    return this.http.get<Subscription>(`${this.url}${slug}/`).pipe(\n      tap((subscription) => this.setSubscription(subscription)),\n      catchError((error) => {\n        this.clearState();\n        return EMPTY;\n      })\n    );\n  }\n\n  /**\n   * Retrieve event count for current active subscription for this organization\n   * @param slug Organization Slug for requested subscription event count\n   */\n  retrieveSubscriptionCount(slug: string) {\n    return this.http.get<number>(`${this.url}${slug}/events_count/`).pipe(\n      tap((count) => this.setSubscriptionCount(count)),\n      catchError((error) => {\n        return EMPTY;\n      })\n    );\n  }\n\n  /**\n   * Retrieve subscription plans\n   * productAmountSorted converts product prices to ints and sorts from low to high\n   */\n  retrieveSubscriptionPlans() {\n    return this.http.get<Product[]>(\"/api/0/products/\").pipe(\n      tap((products) => {\n        const productAmountSorted = products\n          .map((product) => ({\n            ...product,\n            plans: product.plans.map((plans) => ({\n              ...plans,\n              amount: +plans.amount,\n            })),\n          }))\n          .sort((a, b) => a.plans[0].amount - b.plans[0].amount);\n        this.setProducts(productAmountSorted);\n      })\n    );\n  }\n\n  createFreeSubscription(organizationId: number, planId: string) {\n    const data = {\n      organization: organizationId,\n      plan: planId,\n    };\n    return this.http\n      .post<CreateSubscriptionResp>(\"/api/0/subscriptions/\", data)\n      .pipe(\n        tap((resp) => {\n          this.setSubscription(resp.subscription);\n        })\n      );\n  }\n\n  /**\n   * Retrieve Subscription and navigate to subscription page if no subscription exists\n   */\n  checkIfUserHasSubscription(orgSlug: string) {\n    this.retrieveSubscription(orgSlug)\n      .pipe(\n        tap((subscription) => {\n          if (subscription.status === null) {\n            this.router.navigate([orgSlug, \"settings\", \"subscription\"]);\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  clearState() {\n    this.state.next(initialState);\n  }\n\n  private setProducts(products: Product[]) {\n    this.state.next({ ...this.state.getValue(), products });\n  }\n\n  private setSubscription(subscription: Subscription) {\n    this.state.next({ ...this.state.getValue(), subscription });\n  }\n\n  private setSubscriptionCount(eventsCount: number) {\n    this.state.next({ ...this.state.getValue(), eventsCount });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TeamsService",
            "id": "injectable-TeamsService-74c45540dd39fd5777be6ba6793e10dc",
            "file": "src/app/api/teams/teams.service.ts",
            "properties": [
                {
                    "name": "errors$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.errors))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getState$",
                    "defaultValue": "this.state.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<TeamsState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "team$",
                    "defaultValue": "this.getState$.pipe(map((data) => data.team))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "teamMembers$",
                    "defaultValue": "this.getState$.pipe(\n    map((state) => state.teamMembers)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "teams$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.teams))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "userTeamRole$",
                    "defaultValue": "combineLatest([\n    this.teamMembers$,\n    this.userService.activeUserEmail$,\n  ]).pipe(\n    map(([teamMembers, userEmail]) => {\n      const activeTeamMember = teamMembers.find(\n        (teamMember) => teamMember.email === userEmail\n      );\n      return activeTeamMember?.role;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addOneTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "Team",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdd new team to state\nThe new team needs to be added to the beginning of the Teams array\n",
                    "description": "<p>Add new team to state\nThe new team needs to be added to the beginning of the Teams array</p>\n",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "Team",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "Team",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "Team",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteTeam",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeMember",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeTeamMember",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveSingleTeam",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveTeamMembers",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveTeamsByOrg",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteTeamError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDeleteTeamLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSingleTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "Team",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "Team",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTeamMembers",
                    "args": [
                        {
                            "name": "teamMembers",
                            "type": "Member[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "teamMembers",
                            "type": "Member[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTeams",
                    "args": [
                        {
                            "name": "teams",
                            "type": "Team[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "teams",
                            "type": "Team[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateTeamSlugError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpdateTeamSlugLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTeamSlug",
                    "args": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newTeamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "teamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newTeamSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Team, TeamErrors, TeamLoading } from \"./teams.interfaces\";\nimport { BehaviorSubject, combineLatest, EMPTY } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\nimport { baseUrl } from \"src/app/constants\";\nimport { Member } from \"../organizations/organizations.interface\";\nimport { UserService } from \"../user/user.service\";\nimport { Router } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\ninterface TeamsState {\n  teams: Team[] | null;\n  team: Team | null;\n  teamMembers: Member[];\n  errors: TeamErrors;\n  loading: TeamLoading;\n}\n\nconst initialState: TeamsState = {\n  teams: null,\n  team: null,\n  teamMembers: [],\n  errors: { updateName: \"\", deleteTeam: \"\" },\n  loading: { updateName: false, deleteTeam: false },\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TeamsService {\n  private readonly state = new BehaviorSubject<TeamsState>(initialState);\n  private readonly getState$ = this.state.asObservable();\n  private readonly url = baseUrl;\n\n  readonly teams$ = this.getState$.pipe(map((state) => state.teams));\n  readonly team$ = this.getState$.pipe(map((data) => data.team));\n  readonly teamMembers$ = this.getState$.pipe(\n    map((state) => state.teamMembers)\n  );\n  readonly loading$ = this.getState$.pipe(map((data) => data.loading));\n  readonly errors$ = this.getState$.pipe(map((data) => data.errors));\n\n  readonly userTeamRole$ = combineLatest([\n    this.teamMembers$,\n    this.userService.activeUserEmail$,\n  ]).pipe(\n    map(([teamMembers, userEmail]) => {\n      const activeTeamMember = teamMembers.find(\n        (teamMember) => teamMember.email === userEmail\n      );\n      return activeTeamMember?.role;\n    })\n  );\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n\n  retrieveTeamsByOrg(orgSlug: string) {\n    return this.http\n      .get<Team[]>(`${this.url}/organizations/${orgSlug}/teams/`)\n      .pipe(tap((teams) => this.setTeams(teams)));\n  }\n\n  retrieveSingleTeam(orgSlug: string, teamSlug: string) {\n    return this.http\n      .get<Team>(`${this.url}/teams/${orgSlug}/${teamSlug}/`)\n      .pipe(tap((resp) => this.setSingleTeam(resp)))\n      .subscribe();\n  }\n\n  retrieveTeamMembers(orgSlug: string, teamSlug: string) {\n    return this.http\n      .get<Member[]>(`${this.url}/teams/${orgSlug}/${teamSlug}/members/`)\n      .pipe(tap((teamMembers) => this.setTeamMembers(teamMembers)));\n  }\n\n  updateTeamSlug(orgSlug: string, teamSlug: string, newTeamSlug: string) {\n    const url = `${this.url}/teams/${orgSlug}/${teamSlug}/`;\n    const data = { slug: newTeamSlug };\n    this.setUpdateTeamSlugLoading(true);\n    return this.http.put<Team>(url, data).pipe(\n      tap((resp) => {\n        this.router.navigate([\n          orgSlug,\n          \"settings\",\n          \"teams\",\n          resp.slug,\n          \"settings\",\n        ]);\n        this.setUpdateTeamSlugLoading(false);\n        this.snackBar.open(`Your team slug has been changed to #${resp.slug}`);\n        this.setSingleTeam(resp);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setUpdateTeamSlugError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  deleteTeam(orgSlug: string, teamSlug: string) {\n    const url = `${this.url}/teams/${orgSlug}/${teamSlug}/`;\n    this.setDeleteTeamLoading(true);\n    return this.http.delete(url).pipe(\n      tap(() => {\n        this.setDeleteTeamLoading(false);\n        this.snackBar.open(`You have successfully deleted #${teamSlug}`);\n        this.router.navigate([orgSlug, \"settings\", \"teams\"]);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.setDeleteTeamError(error);\n        return EMPTY;\n      })\n    );\n  }\n\n  private setDeleteTeamLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        deleteTeam: loading,\n      },\n    });\n  }\n\n  private setDeleteTeamError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        deleteTeam: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        deleteTeam: false,\n      },\n    });\n  }\n\n  addTeam(team: Team) {\n    this.addOneTeam(team);\n  }\n\n  removeMember(memberId: number) {\n    this.removeTeamMember(memberId);\n  }\n\n  private setTeams(teams: Team[]) {\n    this.state.next({ ...this.state.getValue(), teams });\n  }\n\n  private setSingleTeam(team: Team) {\n    this.state.next({ ...this.state.getValue(), team });\n  }\n\n  private setTeamMembers(teamMembers: Member[]) {\n    this.state.next({ ...this.state.getValue(), teamMembers });\n  }\n\n  private removeTeamMember(memberId: number) {\n    const filteredMembers = this.state\n      .getValue()\n      .teamMembers.filter((teamMember) => teamMember.id !== memberId);\n    if (filteredMembers) {\n      this.state.next({\n        ...this.state.getValue(),\n        teamMembers: filteredMembers,\n      });\n    }\n  }\n\n  private setUpdateTeamSlugLoading(loading: boolean) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      loading: {\n        ...state.loading,\n        updateName: loading,\n      },\n    });\n  }\n\n  private setUpdateTeamSlugError(error: HttpErrorResponse) {\n    const state = this.state.getValue();\n    this.state.next({\n      ...state,\n      errors: {\n        ...state.errors,\n        updateName: `${error.statusText}: ${error.status}`,\n      },\n      loading: {\n        ...state.loading,\n        updateName: false,\n      },\n    });\n  }\n\n  /**\n   * Add new team to state\n   * The new team needs to be added to the beginning of the Teams array\n   */\n  private addOneTeam(team: Team) {\n    const getTeamsState = this.state.getValue().teams;\n    const teams = getTeamsState ? getTeamsState : [];\n\n    const newTeams = [team].concat(teams);\n    if (newTeams) {\n      this.state.next({\n        ...this.state.getValue(),\n        teams: newTeams,\n      });\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TransactionsService",
            "id": "injectable-TransactionsService-499d5b97bc162e4e36f592c91d907c47",
            "file": "src/app/api/transactions/transactions.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "\"/transactions/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detailURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cursor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listURL",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Transaction } from \"./transactions.interfaces\";\nimport { baseUrl } from \"../../constants\";\nimport { APIBaseService } from \"../api-base.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TransactionsService extends APIBaseService {\n  readonly url = \"/transactions/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  list(organizationSlug: string, cursor?: string) {\n    let httpParams = new HttpParams();\n    if (cursor) {\n      httpParams = httpParams.set(\"cursor\", cursor);\n    }\n    return this.http.get<Transaction[]>(this.listURL(organizationSlug), {\n      observe: \"response\",\n      params: httpParams,\n    });\n  }\n\n  retrieve(organizationSlug: string, id: string) {\n    return this.http.get<Transaction>(this.detailURL(organizationSlug, id));\n  }\n\n  destroy(organizationSlug: string, id: string) {\n    return this.http.delete(this.detailURL(organizationSlug, id));\n  }\n\n  protected listURL(organizationSlug: string) {\n    return `${baseUrl}/organizations/${organizationSlug}${this.url}`;\n  }\n\n  protected detailURL(organizationSlug: string, id: string) {\n    return `${this.listURL(organizationSlug)}${id}/`;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "UserKeysService",
            "id": "injectable-UserKeysService-95eb60cb3a3ebc9c52f10211bc3fdcfd",
            "file": "src/app/api/mfa/user-keys.service.ts",
            "properties": [
                {
                    "name": "backupCodesUrl",
                    "defaultValue": "this.url + \"backup_codes/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "fido2Url",
                    "defaultValue": "this.url + \"fido2/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "totpUrl",
                    "defaultValue": "this.url + \"totp/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "\"/api/mfa/user_keys/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "backupCodes",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "backupCodesCreate",
                    "args": [
                        {
                            "name": "data",
                            "type": "BackUpCodesRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "BackUpCodesRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fido2",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fido2Create",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "retrieve",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "totp",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "totpCreate",
                    "args": [
                        {
                            "name": "data",
                            "type": "TOTPRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TOTPRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>MFA User Keys\nCreate requires a specific mfa type and sometimes requires a GET to fetch\nrelevant data before submitting a POST to actually create the key</p>\n",
            "rawdescription": "\n\nMFA User Keys\nCreate requires a specific mfa type and sometimes requires a GET to fetch\nrelevant data before submitting a POST to actually create the key\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { APIBaseService } from \"../api-base.service\";\n\ntype UserKeyType = \"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\";\n\nexport interface UserKey {\n  id: number;\n  user: number;\n  name: string;\n  created: string;\n  key_type: UserKeyType;\n  last_used: string;\n}\n\nexport interface TOTPResponse {\n  provisioning_uri: string;\n  secret_key: string;\n}\n\nexport type BackupCodes = string[];\n\ninterface BackUpGenerateResponse {\n  codes: BackupCodes;\n}\n\ninterface BackUpCodesRequest {\n  name: string;\n  codes: BackupCodes;\n}\n\ninterface TOTPRequest {\n  answer: string;\n  secret_key: string;\n}\n\n/**\n * MFA User Keys\n * Create requires a specific mfa type and sometimes requires a GET to fetch\n * relevant data before submitting a POST to actually create the key\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserKeysService extends APIBaseService {\n  readonly url = \"/api/mfa/user_keys/\";\n  readonly fido2Url = this.url + \"fido2/\";\n  readonly totpUrl = this.url + \"totp/\";\n  readonly backupCodesUrl = this.url + \"backup_codes/\";\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n  list() {\n    return this.http.get<UserKey[]>(this.url);\n  }\n\n  retrieve(id: string) {\n    return this.http.get<UserKey>(this.detailURL(id));\n  }\n\n  destroy(id: string) {\n    return this.http.delete(this.detailURL(id));\n  }\n\n  fido2() {\n    // Should use cbor\n    return this.http.get<unknown>(this.fido2Url);\n  }\n\n  fido2Create(data: unknown) {\n    return this.http.post<unknown>(this.fido2Url, data);\n  }\n\n  totp() {\n    return this.http.get<TOTPResponse>(this.totpUrl);\n  }\n\n  totpCreate(data: TOTPRequest) {\n    return this.http.post<unknown>(this.totpUrl, data);\n  }\n\n  backupCodes() {\n    return this.http.get<BackUpGenerateResponse>(this.backupCodesUrl);\n  }\n\n  backupCodesCreate(data: BackUpCodesRequest) {\n    return this.http.post<UserKey>(this.backupCodesUrl, data);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "APIBaseService",
            "type": "injectable"
        },
        {
            "name": "UserReportsService",
            "id": "injectable-UserReportsService-ae7232f26a18f2387d68dc547ef0afdc",
            "file": "src/app/api/user-reports/user-reports.service.ts",
            "properties": [
                {
                    "name": "errors$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.errors))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "issuePageUrl",
                    "defaultValue": "baseUrl + \"/issues/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "reports$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.reports))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.pagination$.pipe(map((pagination) => pagination.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "pagination$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.pagination))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getIssueReports",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReportsForIssue",
                    "args": [
                        {
                            "name": "issue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cursor",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetErrorsReports",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "resetUserReports",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setErrorsReports",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoadingReports",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStateAndPagination",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "PaginationStatefulService"
                    }
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { tap, catchError, map } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\nimport { baseUrl } from \"../../constants\";\nimport { UserReport } from \"./user-reports.interfaces\";\nimport {\n  initialPaginationState,\n  PaginationStatefulService,\n  PaginationStatefulServiceState,\n} from \"src/app/shared/stateful-service/pagination-stateful-service\";\n\nexport interface UserReportsState extends PaginationStatefulServiceState {\n  reports: UserReport[] | null;\n  errors: string | null;\n}\n\nconst initialState: UserReportsState = {\n  reports: null,\n  errors: null,\n  pagination: initialPaginationState,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserReportsService extends PaginationStatefulService<UserReportsState> {\n  private readonly issuePageUrl = baseUrl + \"/issues/\";\n\n  reports$ = this.getState$.pipe(map((state) => state.reports));\n  errors$ = this.getState$.pipe(map((state) => state.errors));\n\n  constructor(private http: HttpClient) {\n    super(initialState);\n  }\n\n  getReportsForIssue(issue: number, cursor: string | undefined) {\n    this.setLoadingReports(true);\n    this.resetUserReports();\n    this.getIssueReports(issue, cursor)\n      .pipe(\n        tap((response) => {\n          this.setLoadingReports(false);\n          this.resetErrorsReports();\n          if (response.body) {\n            this.setStateAndPagination({ reports: response.body }, response);\n          }\n        }),\n        catchError((error) => {\n          this.setLoadingReports(false);\n          this.setErrorsReports(\n            \"Something went wrong. Try reloading the page.\"\n          );\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  private getIssueReports(issueId: number, cursor: string | undefined) {\n    let httpParams = new HttpParams();\n    if (cursor) {\n      httpParams = httpParams.set(\"cursor\", cursor);\n    }\n    return this.http.get<UserReport[]>(\n      `${this.issuePageUrl}${issueId}/user-reports/`,\n      { observe: \"response\", params: httpParams }\n    );\n  }\n\n  private setLoadingReports(loading: boolean) {\n    const state = this.state.getValue();\n    this.setState({\n      pagination: {\n        ...state.pagination,\n        loading,\n      },\n    });\n  }\n\n  private setErrorsReports(message: string) {\n    this.setState({ errors: message });\n  }\n\n  private resetUserReports() {\n    this.setState({ reports: initialState.reports });\n  }\n\n  private resetErrorsReports() {\n    this.setState({ errors: initialState.errors });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationStatefulService",
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-f40e0840f98cab8456960c498ca85c89",
            "file": "src/app/api/user/user.service.ts",
            "properties": [
                {
                    "name": "activeUserEmail$",
                    "defaultValue": "this.userDetails$.pipe(\n    map((userDetails) => userDetails?.email)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "disconnectLoading$",
                    "defaultValue": "this.state.pipe(\n    map((state) => state.disconnectLoading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        142
                    ]
                },
                {
                    "name": "getUserDetailsAction",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "state",
                    "defaultValue": "new BehaviorSubject<UserState>(initialState)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "\"/api/0/users/me/\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        120,
                        142
                    ]
                },
                {
                    "name": "userDetails$",
                    "defaultValue": "this.state.pipe(map((state) => state.user))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        142
                    ]
                }
            ],
            "methods": [
                {
                    "name": "disconnectSocialAccount",
                    "args": [
                        {
                            "name": "accountId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accountId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserDetails",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGet and set current logged in user details from backend",
                    "description": "<p>Get and set current logged in user details from backend</p>\n"
                },
                {
                    "name": "matomoSetUserId",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIf Matomo is present, set user ID.\napp.glitchtip.com will further anonymize this and respects Do Not Track\n",
                    "description": "<p>If Matomo is present, set user ID.\napp.glitchtip.com will further anonymize this and respects Do Not Track</p>\n",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "retrieveUserDetails",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "setDisconnectLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUserDetails",
                    "args": [
                        {
                            "name": "userDetails",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "userDetails",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { BehaviorSubject, EMPTY, Subject } from \"rxjs\";\nimport { tap, map, catchError, exhaustMap } from \"rxjs/operators\";\nimport { User } from \"./user.interfaces\";\n\ninterface UserState {\n  user: User | null;\n  disconnectLoading: number | null;\n}\n\nconst initialState: UserState = {\n  user: null,\n  disconnectLoading: null,\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private readonly state = new BehaviorSubject<UserState>(initialState);\n  readonly userDetails$ = this.state.pipe(map((state) => state.user));\n  readonly disconnectLoading$ = this.state.pipe(\n    map((state) => state.disconnectLoading)\n  );\n  private readonly getUserDetailsAction = new Subject();\n\n  readonly activeUserEmail$ = this.userDetails$.pipe(\n    map((userDetails) => userDetails?.email)\n  );\n  private readonly url = \"/api/0/users/me/\";\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {\n    this.getUserDetailsAction\n      .pipe(\n        exhaustMap(() =>\n          this.retrieveUserDetails().pipe(\n            tap((resp: User) => this.setUserDetails(resp)),\n            tap((resp: User) => this.matomoSetUserId(resp.id)),\n            catchError(() => EMPTY)\n          )\n        )\n      )\n      .subscribe();\n  }\n\n  /**\n   * If Matomo is present, set user ID.\n   * app.glitchtip.com will further anonymize this and respects Do Not Track\n   */\n  matomoSetUserId(id: string) {\n    // tslint:disable:no-any\n    const _paq: any = (window as any)._paq;\n    _paq.push([\"setUserId\", id]);\n  }\n\n  /** Get and set current logged in user details from backend */\n  getUserDetails() {\n    this.getUserDetailsAction.next();\n  }\n\n  private retrieveUserDetails() {\n    return this.http.get<User>(this.url);\n  }\n\n  disconnectSocialAccount(accountId: number) {\n    this.setDisconnectLoading(accountId);\n    this.http\n      .post(\"/api/socialaccounts/\" + accountId + \"/disconnect/\", {})\n      .pipe(\n        tap(() => {\n          this.setDisconnectLoading(null);\n          this.getUserDetails();\n          this.snackBar.open(\n            \"You have successfully disconnected your social auth account\"\n          );\n        }),\n        catchError((err: HttpErrorResponse) => {\n          this.setDisconnectLoading(null);\n          if (Array.isArray(err.error) && err.error.length) {\n            this.snackBar.open(err.error[0]);\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n\n  private setDisconnectLoading(loading: number | null) {\n    this.state.next({ ...this.state.getValue(), disconnectLoading: loading });\n  }\n\n  private setUserDetails(userDetails: User) {\n    this.state.next({ ...this.state.getValue(), user: userDetails });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AlreadyLoggedInGuard",
            "id": "injectable-AlreadyLoggedInGuard-dea40580e178f72e120f7af248b572fc",
            "file": "src/app/guards/already-logged-in.guard.ts",
            "properties": [
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\nimport { AuthService } from \"../api/auth/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AlreadyLoggedInGuard implements CanActivate {\n  isLoggedIn?: boolean;\n\n  constructor(private auth: AuthService, private router: Router) {\n    this.auth.isLoggedIn.subscribe(\n      (isLoggedIn) => (this.isLoggedIn = isLoggedIn)\n    );\n  }\n  canActivate() {\n    if (this.isLoggedIn) {\n      this.router.navigate([\"\"]);\n      return false;\n    }\n    return true;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "IsLoggedInGuard",
            "id": "injectable-IsLoggedInGuard-1b8f27a0a1dd71b881aa5e93573bb5ba",
            "file": "src/app/guards/is-logged-in.guard.ts",
            "properties": [
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { AuthService } from \"../api/auth/auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class IsLoggedInGuard implements CanActivate {\n  isLoggedIn?: boolean;\n\n  constructor(private auth: AuthService, private router: Router) {\n    this.auth.isLoggedIn.subscribe(\n      (isLoggedIn) => (this.isLoggedIn = isLoggedIn)\n    );\n  }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.isLoggedIn) {\n      this.auth.setRedirectUrl(state.url);\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n    return true;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "TokenInterceptor",
            "id": "injectable-TokenInterceptor-f8a9dcb49c714a3e0fd26408d4fe5600",
            "file": "src/app/api/auth/token.interceptor.ts",
            "properties": [
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from \"@angular/common/http\";\nimport { EMPTY, throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public auth: AuthService) {}\n\n  intercept(req: HttpRequest<unknown>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (\n          error.status === 403 &&\n          error.error.detail === \"Authentication credentials were not provided.\"\n        ) {\n          this.auth.expireAuth();\n          return EMPTY;\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "LessAnnoyingErrorStateMatcher",
            "id": "class-LessAnnoyingErrorStateMatcher-cba01d9653364c36630f13175ca146d8",
            "file": "src/app/shared/less-annoying-error-state-matcher.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ErrorStateMatcher } from \"@angular/material/core\";\nimport { FormControl, FormGroupDirective, NgForm } from \"@angular/forms\";\n\nexport class LessAnnoyingErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    return !!(control && control.invalid && form?.submitted);\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "isErrorState",
                    "args": [
                        {
                            "name": "control",
                            "type": "FormControl | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "form",
                            "type": "FormGroupDirective | NgForm | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "FormControl | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "form",
                            "type": "FormGroupDirective | NgForm | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ErrorStateMatcher"
            ]
        },
        {
            "name": "NewAlertErrorStateMatcher",
            "id": "class-NewAlertErrorStateMatcher-b7cea1571b11c3bbe0ef52908d80a130",
            "file": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  FormGroupDirective,\n  NgForm,\n} from \"@angular/forms\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { LessAnnoyingErrorStateMatcher } from \"src/app/shared/less-annoying-error-state-matcher\";\n\nfunction numberValidator(control: AbstractControl): ValidationErrors | null {\n  if (typeof control.value === \"number\") {\n    return null;\n  }\n  return { invalidNumber: true };\n}\n\nexport class NewAlertErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    return !!(control && control.invalid && form?.touched);\n  }\n}\n\n@Component({\n  selector: \"gt-alert-form\",\n  templateUrl: \"./alert-form.component.html\",\n  styleUrls: [\"./alert-form.component.scss\"],\n})\nexport class AlertFormComponent implements OnInit {\n  @Input() loading: boolean | null = false;\n  @Input() timespan = 1;\n  @Input() quantity = 1;\n  @Output() alertSubmit = new EventEmitter<{\n    timespan_minutes: number;\n    quantity: number;\n  }>();\n  @Input() newAlert: boolean | undefined = false;\n\n  projectAlertForm = new FormGroup({\n    timespan_minutes: new FormControl(\"\", [\n      Validators.min(0),\n      numberValidator,\n      Validators.required,\n    ]),\n    quantity: new FormControl(\"\", [\n      Validators.min(0),\n      numberValidator,\n      Validators.required,\n    ]),\n  });\n\n  projectFormTimespan = this.projectAlertForm.get(\n    \"timespan_minutes\"\n  ) as FormControl;\n  projectFormQuantity = this.projectAlertForm.get(\"quantity\") as FormControl;\n\n  matcher = new LessAnnoyingErrorStateMatcher();\n  newFormMatcher = new NewAlertErrorStateMatcher();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.projectAlertForm.setValue({\n      timespan_minutes: this.timespan,\n      quantity: this.quantity,\n    });\n  }\n\n  onSubmit(): void {\n    if (this.projectAlertForm.valid) {\n      this.alertSubmit.emit({\n        timespan_minutes: this.projectFormTimespan.value,\n        quantity: this.projectFormQuantity.value,\n      });\n    }\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "isErrorState",
                    "args": [
                        {
                            "name": "control",
                            "type": "FormControl | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "form",
                            "type": "FormGroupDirective | NgForm | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "FormControl | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "form",
                            "type": "FormGroupDirective | NgForm | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ErrorStateMatcher"
            ]
        },
        {
            "name": "PaginationBaseComponent",
            "id": "class-PaginationBaseComponent-67fac31785d80a00e02e5700f1b858be",
            "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { urlParamsToObject } from \"src/app/issues/utils\";\nimport { StatefulService } from \"./stateful-service\";\n\n/**\n * Pagination info exists in a header, this parses it out for storing.\n */\nconst processLinkHeader = (linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {});\n\nexport interface PaginationState {\n  hits: number | null;\n  maxHits: number | null;\n  page: number | null;\n  nextPageURL: string | null;\n  previousPageURL: string | null;\n  loading: boolean;\n  initialLoadComplete: boolean;\n}\n\nexport const initialPaginationState: PaginationState = {\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n};\n\nexport interface PaginationStatefulServiceState {\n  pagination: PaginationState;\n}\n\n/**\n * Extends StatefulService to include some basic CRUD pagination state and logic\n * If working with a CRUD view that is paginated, use this as the base class\n */\nexport abstract class PaginationStatefulService<\n  TState extends PaginationStatefulServiceState\n> extends StatefulService<TState> {\n  pagination$ = this.getState$.pipe(map((state) => state.pagination));\n  initialLoadComplete$ = this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  );\n  loading$ = this.pagination$.pipe(map((pagination) => pagination.loading));\n  constructor(initialState: TState) {\n    super(initialState);\n  }\n\n  setStateAndPagination(newState: Partial<TState>, res: HttpResponse<unknown>) {\n    const prevState = this.state.getValue();\n\n    const link = res.headers.get(\"link\");\n    const results = link ? processLinkHeader(link) : {};\n    const pagination = {\n      ...prevState.pagination,\n      nextPageURL: results.next,\n      previousPageURL: results.previous,\n      hits: res.headers.get(\"x-hits\"),\n      maxHits: res.headers.get(\"x-max-hits\"),\n      loading: false,\n      initialLoadComplete: true,\n    };\n    this.state.next({\n      ...prevState,\n      pagination,\n      ...newState,\n    });\n  }\n}\n\n/**\n * Component level interface for paging needs\n */\ninterface Paginator extends PaginationState {\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  nextPageParams: {\n    [key: string]: string;\n  } | null;\n  previousPageParams: {\n    [key: string]: string;\n  } | null;\n  /** Human readable object count string that appends \"+\" to indicate max hits */\n  count: string | undefined;\n}\n\nexport abstract class PaginationBaseComponent<\n  TState extends PaginationStatefulServiceState,\n  TService extends PaginationStatefulService<TState>\n> {\n  paginator$: Observable<Paginator>;\n\n  constructor(protected service: TService) {\n    this.paginator$ = service.pagination$.pipe(\n      map((pagination) => ({\n        ...pagination,\n        hasNextPage: !!pagination.nextPageURL,\n        hasPreviousPage: !!pagination.previousPageURL,\n        nextPageParams: urlParamsToObject(pagination.nextPageURL),\n        previousPageParams: urlParamsToObject(pagination.previousPageURL),\n        count:\n          pagination.hits && pagination.hits === pagination.maxHits\n            ? pagination.hits.toString() + \"+\"\n            : pagination.hits?.toString(),\n      }))\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "TService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 109,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "TService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "paginator$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Paginator>",
                    "optional": false,
                    "description": "",
                    "line": 109
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PaginationStatefulService",
            "id": "class-PaginationStatefulService-67fac31785d80a00e02e5700f1b858be",
            "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { urlParamsToObject } from \"src/app/issues/utils\";\nimport { StatefulService } from \"./stateful-service\";\n\n/**\n * Pagination info exists in a header, this parses it out for storing.\n */\nconst processLinkHeader = (linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {});\n\nexport interface PaginationState {\n  hits: number | null;\n  maxHits: number | null;\n  page: number | null;\n  nextPageURL: string | null;\n  previousPageURL: string | null;\n  loading: boolean;\n  initialLoadComplete: boolean;\n}\n\nexport const initialPaginationState: PaginationState = {\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n};\n\nexport interface PaginationStatefulServiceState {\n  pagination: PaginationState;\n}\n\n/**\n * Extends StatefulService to include some basic CRUD pagination state and logic\n * If working with a CRUD view that is paginated, use this as the base class\n */\nexport abstract class PaginationStatefulService<\n  TState extends PaginationStatefulServiceState\n> extends StatefulService<TState> {\n  pagination$ = this.getState$.pipe(map((state) => state.pagination));\n  initialLoadComplete$ = this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  );\n  loading$ = this.pagination$.pipe(map((pagination) => pagination.loading));\n  constructor(initialState: TState) {\n    super(initialState);\n  }\n\n  setStateAndPagination(newState: Partial<TState>, res: HttpResponse<unknown>) {\n    const prevState = this.state.getValue();\n\n    const link = res.headers.get(\"link\");\n    const results = link ? processLinkHeader(link) : {};\n    const pagination = {\n      ...prevState.pagination,\n      nextPageURL: results.next,\n      previousPageURL: results.previous,\n      hits: res.headers.get(\"x-hits\"),\n      maxHits: res.headers.get(\"x-max-hits\"),\n      loading: false,\n      initialLoadComplete: true,\n    };\n    this.state.next({\n      ...prevState,\n      pagination,\n      ...newState,\n    });\n  }\n}\n\n/**\n * Component level interface for paging needs\n */\ninterface Paginator extends PaginationState {\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  nextPageParams: {\n    [key: string]: string;\n  } | null;\n  previousPageParams: {\n    [key: string]: string;\n  } | null;\n  /** Human readable object count string that appends \"+\" to indicate max hits */\n  count: string | undefined;\n}\n\nexport abstract class PaginationBaseComponent<\n  TState extends PaginationStatefulServiceState,\n  TService extends PaginationStatefulService<TState>\n> {\n  paginator$: Observable<Paginator>;\n\n  constructor(protected service: TService) {\n    this.paginator$ = service.pagination$.pipe(\n      map((pagination) => ({\n        ...pagination,\n        hasNextPage: !!pagination.nextPageURL,\n        hasPreviousPage: !!pagination.previousPageURL,\n        nextPageParams: urlParamsToObject(pagination.nextPageURL),\n        previousPageParams: urlParamsToObject(pagination.previousPageURL),\n        count:\n          pagination.hits && pagination.hits === pagination.maxHits\n            ? pagination.hits.toString() + \"+\"\n            : pagination.hits?.toString(),\n      }))\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "initialState",
                        "type": "TState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "initialState",
                        "type": "TState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.pagination$.pipe(\n    map((pagination) => pagination.initialLoadComplete)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.pagination$.pipe(map((pagination) => pagination.loading))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "pagination$",
                    "defaultValue": "this.getState$.pipe(map((state) => state.pagination))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "description": "<p>Extends StatefulService to include some basic CRUD pagination state and logic\nIf working with a CRUD view that is paginated, use this as the base class</p>\n",
            "rawdescription": "\n\nExtends StatefulService to include some basic CRUD pagination state and logic\nIf working with a CRUD view that is paginated, use this as the base class\n",
            "methods": [
                {
                    "name": "setStateAndPagination",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "res",
                            "type": "HttpResponse<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n",
                    "inheritance": {
                        "file": "StatefulService"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "StatefulService"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "StatefulService",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StatefulService",
            "id": "class-StatefulService-3fa5a3c6304c7da86be1021e1a046c09",
            "file": "src/app/shared/stateful-service/stateful-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, Observable } from \"rxjs\";\n\n/**\n * Add RXJS BehaviorSubject drive redux-like state to any Angular service\n * All GlitchTip services with state should extend this class\n */\nexport abstract class StatefulService<TState> {\n  protected state: BehaviorSubject<TState>;\n  getState$: Observable<TState>;\n  initialState: TState;\n\n  constructor(initialState: TState) {\n    this.initialState = initialState;\n    this.state = new BehaviorSubject<TState>(initialState);\n    this.getState$ = this.state.asObservable();\n  }\n\n  setState(newState: Partial<TState>) {\n    this.state.next({ ...this.state.getValue(), ...newState });\n  }\n\n  /**\n   * Set state back to initial state\n   */\n  clearState() {\n    this.state.next(this.initialState);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "initialState",
                        "type": "TState",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "initialState",
                        "type": "TState",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "getState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TState>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "initialState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TState",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<TState>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "description": "<p>Add RXJS BehaviorSubject drive redux-like state to any Angular service\nAll GlitchTip services with state should extend this class</p>\n",
            "rawdescription": "\n\nAdd RXJS BehaviorSubject drive redux-like state to any Angular service\nAll GlitchTip services with state should extend this class\n",
            "methods": [
                {
                    "name": "clearState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet state back to initial state\n",
                    "description": "<p>Set state back to initial state</p>\n"
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newState",
                            "type": "Partial<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "InputMatcherDirective",
            "id": "directive-InputMatcherDirective-562c04875da7dbf5a958dbf98eb8e02d",
            "file": "src/app/shared/input-matcher.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from \"@angular/core\";\nimport {\n  Validator,\n  NG_VALIDATORS,\n  AbstractControl,\n  ValidationErrors,\n} from \"@angular/forms\";\n\n@Directive({\n  selector: \"[gtInputMatcher]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: InputMatcherDirective,\n      multi: true,\n    },\n  ],\n})\nexport class InputMatcherDirective implements Validator {\n  @Input() gtInputMatcher?: string;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    if (this.gtInputMatcher !== undefined) {\n      const comparisonInput = control.parent!.get(this.gtInputMatcher);\n      if (comparisonInput && comparisonInput.value !== control.value) {\n        return { notEqual: true };\n      } else {\n        return null;\n      }\n    }\n    return null;\n  }\n}\n",
            "selector": "[gtInputMatcher]",
            "providers": [
                {
                    "name": "{\n    provide: NG_VALIDATORS, useExisting: InputMatcherDirective, multi: true,\n}",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "gtInputMatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "validate",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidationErrors | null",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "Validator"
            ]
        },
        {
            "name": "SlugifyDirective",
            "id": "directive-SlugifyDirective-42dc5232e2f949295b0945437bc05fc9",
            "file": "src/app/settings/teams/new-team/slugify.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener, ElementRef } from \"@angular/core\";\n@Directive({\n  selector: \"[gtSlugify]\",\n})\nexport class SlugifyDirective {\n  regexStr = \"^[ ]*$\";\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"keypress\", [\"$event\"]) onKeyPress(event: KeyboardEvent) {\n    if (new RegExp(this.regexStr).test(event.key)) {\n      this.validateFields();\n    }\n    return true;\n  }\n\n  @HostListener(\"paste\", [\"$event\"]) blockPaste(event: KeyboardEvent) {\n    this.validateFields();\n  }\n\n  validateFields() {\n    setTimeout(() => {\n      this.el.nativeElement.value = this.el.nativeElement.value.replaceAll(\n        \" \",\n        \"-\"\n      );\n    });\n  }\n}\n",
            "selector": "[gtSlugify]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "keypress",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10
                },
                {
                    "name": "paste",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17
                }
            ],
            "propertiesClass": [
                {
                    "name": "regexStr",
                    "defaultValue": "\"^[ ]*$\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methodsClass": [
                {
                    "name": "blockPaste",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'paste', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKeyPress",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keypress', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateFields",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AcceptInviteComponent",
            "id": "component-AcceptInviteComponent-2dc9a0b66004adb09620190799c9a353",
            "file": "src/app/accept/accept-invite/accept-invite.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-accept-invite",
            "styleUrls": [
                "./accept-invite.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accept-invite.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "acceptInfo$",
                    "defaultValue": "this.acceptService.acceptInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "alreadyInOrg$",
                    "defaultValue": "this.acceptService.alreadyInOrg$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isLoggedIn$",
                    "defaultValue": "this.authService.isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "nextUrl$",
                    "defaultValue": "this.params$.pipe(\n    map(({ memberId, token }) => `/accept/${memberId}/${token}`)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "params$",
                    "defaultValue": "this.activatedRoute.params.pipe(\n    map((params) => ({\n      memberId: params.memberId,\n      token: params.token,\n    }))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { AuthService } from \"src/app/api/auth/auth.service\";\nimport { AcceptInviteService } from \"src/app/api/accept/accept-invite.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, tap } from \"rxjs/operators\";\n\n@Component({\n  selector: \"gt-accept-invite\",\n  templateUrl: \"./accept-invite.component.html\",\n  styleUrls: [\"./accept-invite.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AcceptInviteComponent implements OnInit {\n  isLoggedIn$ = this.authService.isLoggedIn;\n  params$ = this.activatedRoute.params.pipe(\n    map((params) => ({\n      memberId: params.memberId,\n      token: params.token,\n    }))\n  );\n  nextUrl$ = this.params$.pipe(\n    map(({ memberId, token }) => `/accept/${memberId}/${token}`)\n  );\n  acceptInfo$ = this.acceptService.acceptInfo$;\n  alreadyInOrg$ = this.acceptService.alreadyInOrg$;\n\n  constructor(\n    private authService: AuthService,\n    private acceptService: AcceptInviteService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.params$\n      .pipe(\n        tap(({ memberId, token }) => {\n          this.acceptService.getAcceptInviteDetails(memberId, token);\n        })\n      )\n      .subscribe();\n  }\n\n  onSubmit() {\n    this.params$\n      .pipe(\n        tap(({ memberId, token }) => {\n          this.acceptService.acceptInvite(memberId, token);\n        })\n      )\n      .subscribe();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo-container,\nmat-card.skinnier {\n  max-width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n}\n\n.not-skinny {\n  margin: 25px;\n}\n\n.logo-container {\n  text-align: center;\n  img {\n    width: 150px;\n  }\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n}\n",
                    "styleUrl": "./accept-invite.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "acceptService",
                        "type": "AcceptInviteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "acceptService",
                        "type": "AcceptInviteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"(isLoggedIn$ | async) === false\" class=\"logo-container\">\n  <img src=\"static/assets/images/glitchtip-logo-v1.svg\" alt=\"GlitchTip\" />\n</div>\n\n<mat-card\n  [class.skinnier]=\"(isLoggedIn$ | async) === false\"\n  [class.not-skinny]=\"isLoggedIn$ | async\"\n>\n  <mat-card-content *ngIf=\"acceptInfo$ | async as acceptInfo\">\n    <mat-card-title>Organization Invite</mat-card-title>\n    <p>\n      You have been invited to join\n      <strong>{{ acceptInfo.org_user.organization.name }}</strong> so you can\n      keep track of errors.\n    </p>\n\n    <p *ngIf=\"alreadyInOrg$ | async\">\n      The account you're logged into is already a part of this organization. You\n      might want to <a (click)=\"logout()\" href=\"javascript:void(0)\">log out</a>,\n      then create an account for or log into the account that this invite link\n      was intended for.\n    </p>\n\n    <p *ngIf=\"isLoggedIn$ | async\">\n      <button\n        *ngIf=\"(alreadyInOrg$ | async) === false\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"onSubmit()\"\n      >\n        Accept invitation\n      </button>\n      <button\n        *ngIf=\"alreadyInOrg$ | async\"\n        mat-stroked-button\n        color=\"primary\"\n        (click)=\"onSubmit()\"\n      >\n        Accept invitation\n      </button>\n    </p>\n\n    <p *ngIf=\"(isLoggedIn$ | async) === false\">\n      To continue, you must either log in to your existing account, or create a\n      new one.\n    </p>\n\n    <div class=\"button-container\" *ngIf=\"(isLoggedIn$ | async) === false\">\n      <a\n        mat-flat-button\n        color=\"primary\"\n        [routerLink]=\"['/register']\"\n        [queryParams]=\"{ next: nextUrl$ | async }\"\n      >\n        Create new account\n      </a>\n      <a\n        mat-stroked-button\n        color=\"primary\"\n        [routerLink]=\"['/login']\"\n        [queryParams]=\"{ next: nextUrl$ | async }\"\n      >\n        Log in with existing account\n      </a>\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "AccountComponent",
            "id": "component-AccountComponent-da88ab80314e11e40831060156cdd6d4",
            "file": "src/app/profile/account/account.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-account",
            "styleUrls": [
                "./account.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./account.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"gt-account\",\n  templateUrl: \"./account.component.html\",\n  styleUrls: [\"./account.component.scss\"],\n})\nexport class AccountComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".spacing {\n  display: block;\n  margin-top: 32px;\n  margin-bottom: 32px;\n}\n",
                    "styleUrl": "./account.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<gt-change-password class=\"spacing\"></gt-change-password>\n<gt-social-auth class=\"spacing\"></gt-social-auth>\n<gt-manage-emails class=\"spacing\"></gt-manage-emails>\n"
        },
        {
            "name": "AlertFormComponent",
            "id": "component-AlertFormComponent-b7cea1571b11c3bbe0ef52908d80a130",
            "file": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-alert-form",
            "styleUrls": [
                "./alert-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean | null"
                },
                {
                    "name": "newAlert",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean | undefined"
                },
                {
                    "name": "quantity",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number"
                },
                {
                    "name": "timespan",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "alertSubmit",
                    "defaultValue": "new EventEmitter<{\n    timespan_minutes: number;\n    quantity: number;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "matcher",
                    "defaultValue": "new LessAnnoyingErrorStateMatcher()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "newFormMatcher",
                    "defaultValue": "new NewAlertErrorStateMatcher()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "projectAlertForm",
                    "defaultValue": "new FormGroup({\n    timespan_minutes: new FormControl(\"\", [\n      Validators.min(0),\n      numberValidator,\n      Validators.required,\n    ]),\n    quantity: new FormControl(\"\", [\n      Validators.min(0),\n      numberValidator,\n      Validators.required,\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "projectFormQuantity",
                    "defaultValue": "this.projectAlertForm.get(\"quantity\") as FormControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "projectFormTimespan",
                    "defaultValue": "this.projectAlertForm.get(\n    \"timespan_minutes\"\n  ) as FormControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  FormGroupDirective,\n  NgForm,\n} from \"@angular/forms\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { LessAnnoyingErrorStateMatcher } from \"src/app/shared/less-annoying-error-state-matcher\";\n\nfunction numberValidator(control: AbstractControl): ValidationErrors | null {\n  if (typeof control.value === \"number\") {\n    return null;\n  }\n  return { invalidNumber: true };\n}\n\nexport class NewAlertErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    return !!(control && control.invalid && form?.touched);\n  }\n}\n\n@Component({\n  selector: \"gt-alert-form\",\n  templateUrl: \"./alert-form.component.html\",\n  styleUrls: [\"./alert-form.component.scss\"],\n})\nexport class AlertFormComponent implements OnInit {\n  @Input() loading: boolean | null = false;\n  @Input() timespan = 1;\n  @Input() quantity = 1;\n  @Output() alertSubmit = new EventEmitter<{\n    timespan_minutes: number;\n    quantity: number;\n  }>();\n  @Input() newAlert: boolean | undefined = false;\n\n  projectAlertForm = new FormGroup({\n    timespan_minutes: new FormControl(\"\", [\n      Validators.min(0),\n      numberValidator,\n      Validators.required,\n    ]),\n    quantity: new FormControl(\"\", [\n      Validators.min(0),\n      numberValidator,\n      Validators.required,\n    ]),\n  });\n\n  projectFormTimespan = this.projectAlertForm.get(\n    \"timespan_minutes\"\n  ) as FormControl;\n  projectFormQuantity = this.projectAlertForm.get(\"quantity\") as FormControl;\n\n  matcher = new LessAnnoyingErrorStateMatcher();\n  newFormMatcher = new NewAlertErrorStateMatcher();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.projectAlertForm.setValue({\n      timespan_minutes: this.timespan,\n      quantity: this.quantity,\n    });\n  }\n\n  onSubmit(): void {\n    if (this.projectAlertForm.valid) {\n      this.alertSubmit.emit({\n        timespan_minutes: this.projectFormTimespan.value,\n        quantity: this.projectFormQuantity.value,\n      });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\nform {\n  padding-bottom: 8px;\n  .mat-form-field {\n    width: 88px;\n  }\n  gt-loading-button {\n    margin-bottom: 8px;\n  }\n}\n\n// Move to global styles if we decide to implement in other places in app\n.tooltip {\n  text-decoration: underline;\n  text-decoration-style: dotted;\n  text-decoration-color: mat.get-color-from-palette(mat.$gray-palette, 500);\n  cursor: help;\n}\n\n.mat-form-field {\n  margin-left: 12px;\n  margin-right: 12px;\n}\n\n.mat-form-field ::ng-deep .mat-form-field-subscript-wrapper {\n  width: 150px;\n}\n\n.underline {\n  &::ng-deep .mat-button-toggle-label-content {\n    text-decoration: underline;\n  }\n}\n",
                    "styleUrl": "./alert-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 64
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form\n  class=\"flex-common\"\n  (ngSubmit)=\"onSubmit()\"\n  [formGroup]=\"projectAlertForm\"\n>\n  <div>\n    <span\n      >If&nbsp;an&nbsp;<span\n        class=\"tooltip\"\n        matTooltip=\"An event is every occurrence of the same error (aka: issue) in your application.\"\n        >event</span\n      >&nbsp;happens</span\n    >\n    <mat-form-field>\n      <mat-label>Quantity</mat-label>\n      <input\n        matInput\n        min=\"0\"\n        max=\"10000\"\n        type=\"number\"\n        autocomplete=\"off\"\n        formControlName=\"quantity\"\n        placeholder=\"#\"\n        [errorStateMatcher]=\"newAlert ? newFormMatcher : matcher\"\n      />\n      <mat-error *ngIf=\"projectFormQuantity?.errors\">\n        <span *ngIf=\"projectFormQuantity?.errors?.min\"\n          >The quantity needs to be greater than or equal to 0.</span\n        >\n        <span *ngIf=\"projectFormQuantity?.errors?.invalidNumber\"\n          >Enter a number.\n        </span>\n        <span *ngIf=\"projectFormQuantity?.errors?.required\"\n          >This field is required.</span\n        >\n      </mat-error>\n    </mat-form-field>\n    <span\n      >time<span *ngIf=\"projectFormQuantity?.value !== 1\">s</span>&nbsp;in</span\n    >\n    <mat-form-field>\n      <mat-label>Timespan</mat-label>\n      <input\n        matInput\n        min=\"0\"\n        max=\"10000\"\n        type=\"number\"\n        autocomplete=\"off\"\n        formControlName=\"timespan_minutes\"\n        placeholder=\"#\"\n        [errorStateMatcher]=\"newAlert ? newFormMatcher : matcher\"\n      />\n      <mat-error *ngIf=\"projectFormTimespan?.errors\">\n        <span *ngIf=\"projectFormTimespan?.errors?.min\"\n          >The timespan needs to be greater than or equal to 0.</span\n        >\n        <span *ngIf=\"projectFormTimespan?.errors?.invalidNumber\"\n          >Enter a number.\n        </span>\n        <span *ngIf=\"projectFormTimespan?.errors?.required\"\n          >This field is required.</span\n        >\n      </mat-error>\n    </mat-form-field>\n    <span\n      >minute<span *ngIf=\"projectFormTimespan?.value !== 1\">s</span\n      >,&nbsp;send&nbsp;an&nbsp;email.</span\n    >\n  </div>\n\n  <gt-loading-button\n    *ngIf=\"!newAlert\"\n    buttonText=\"Update\"\n    [disabled]=\"\n      projectFormTimespan?.value === timespan &&\n      projectFormQuantity?.value === quantity\n    \"\n    buttonStyle=\"basic\"\n    [loading]=\"loading === true\"\n  ></gt-loading-button>\n</form>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-258fecc593443a26cbd72649ef03f2a5",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoggedIn$",
                    "defaultValue": "this.auth.isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "routesAreRecognized$",
                    "defaultValue": "this.router.events.pipe(\n    map((event) => {\n      if (event instanceof RoutesRecognized) {\n        return true;\n      }\n      return false;\n    }),\n    filter((isRecognized) => !!isRecognized),\n    take(1)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Need RoutesRecognized to fire before retrieving organizations since doing\nso relies on the organization slug to set the active org</p>\n",
                    "line": 23,
                    "rawdescription": "\n\nNeed RoutesRecognized to fire before retrieving organizations since doing\nso relies on the organization slug to set the active org\n"
                },
                {
                    "name": "title",
                    "defaultValue": "\"glitchtip-frontend\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { Router, RoutesRecognized, NavigationEnd } from \"@angular/router\";\nimport { map, filter, take, exhaustMap, tap } from \"rxjs/operators\";\nimport { combineLatest } from \"rxjs\";\nimport { AuthService } from \"./api/auth/auth.service\";\nimport { OrganizationsService } from \"./api/organizations/organizations.service\";\nimport { SettingsService } from \"./api/settings.service\";\nimport { UserService } from \"./api/user/user.service\";\nimport { Title } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"gt-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent implements OnInit {\n  title = \"glitchtip-frontend\";\n  isLoggedIn$ = this.auth.isLoggedIn;\n\n  /**\n   * Need RoutesRecognized to fire before retrieving organizations since doing\n   * so relies on the organization slug to set the active org\n   */\n  routesAreRecognized$ = this.router.events.pipe(\n    map((event) => {\n      if (event instanceof RoutesRecognized) {\n        return true;\n      }\n      return false;\n    }),\n    filter((isRecognized) => !!isRecognized),\n    take(1)\n  );\n\n  constructor(\n    private auth: AuthService,\n    private userService: UserService,\n    private organizationService: OrganizationsService,\n    private settings: SettingsService,\n    private router: Router,\n    private titleService: Title\n  ) {}\n\n  ngOnInit() {\n    this.settings.getSettings().subscribe();\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        // tslint:disable:no-any\n        const _paq: any = (window as any)._paq;\n        if (_paq) {\n          const origin = location.origin;\n          _paq.push([\"setCustomUrl\", origin + event.url]);\n          _paq.push([\"trackPageView\"]);\n        }\n      }\n\n      if (event instanceof RoutesRecognized && event.state.root.firstChild) {\n        const params = event.state.root.firstChild.params;\n        const orgSlug = params[\"org-slug\"];\n        if (orgSlug !== undefined) {\n          this.organizationService.setActiveOrganizationFromRouteChange(\n            orgSlug\n          );\n        }\n      }\n\n      if (event instanceof RoutesRecognized) {\n        let titleTag = \"GlitchTip\";\n        if (typeof event.state.root.firstChild!.data.title !== \"undefined\") {\n          titleTag = event.state.root.firstChild!.data.title + \" | GlitchTip\";\n        }\n        this.titleService.setTitle(titleTag);\n      }\n    });\n\n    combineLatest([this.isLoggedIn$, this.routesAreRecognized$])\n      .pipe(\n        filter(([isLoggedIn, _]) => !!isLoggedIn),\n        exhaustMap(() => this.organizationService.retrieveOrganizations()),\n        tap(() => this.userService.getUserDetails())\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settings",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settings",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<gt-main-nav>\n  <gt-rate-limit-banner></gt-rate-limit-banner>\n  <router-outlet></router-outlet>\n</gt-main-nav>\n"
        },
        {
            "name": "AuthComponent",
            "id": "component-AuthComponent-dff0785013da1204fa5ae2235b8d8de4",
            "file": "src/app/auth/auth.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-auth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "provider$",
                    "defaultValue": "this.route.params.pipe(map((params) => params.provider))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "attemptOAuthLogin",
                    "args": [
                        {
                            "name": "provider",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fragment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "query",
                            "type": "ParamMap",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "provider",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fragment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "ParamMap",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loginSuccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOn success for any oauth client, set auth data and redirect to home",
                    "description": "<p>On success for any oauth client, set auth data and redirect to home</p>\n",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "notEnoughQueryData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nNot enough data to even try auth...just navigate home",
                    "description": "<p>Not enough data to even try auth...just navigate home</p>\n",
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "processSocialAuthErrorResponse",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ActivatedRoute, Router, ParamMap } from \"@angular/router\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { EMPTY } from \"rxjs\";\nimport { map, catchError, tap } from \"rxjs/operators\";\nimport { GlitchTipOAuthService } from \"../api/oauth/oauth.service\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"gt-auth\",\n  templateUrl: \"./auth.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthComponent implements OnInit {\n  provider$ = this.route.params.pipe(map((params) => params.provider));\n  isLoggedIn = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private oauthService: GlitchTipOAuthService,\n    private authService: AuthService,\n    private snackbar: MatSnackBar\n  ) {\n    authService.isLoggedIn.subscribe(\n      (isLoggedIn) => (this.isLoggedIn = isLoggedIn)\n    );\n  }\n\n  ngOnInit(): void {\n    const provider: string | undefined = this.route.snapshot.params.provider;\n    const fragment = this.route.snapshot.fragment!;\n    const query = this.route.snapshot.queryParamMap;\n    if (provider) {\n      this.attemptOAuthLogin(provider, fragment, query);\n    } else {\n      this.notEnoughQueryData();\n    }\n  }\n\n  private attemptOAuthLogin(\n    provider: string,\n    fragment: string,\n    query: ParamMap\n  ) {\n    // Various services return tokens in slightly different ways\n    if (fragment) {\n      const accessToken = new URLSearchParams(fragment).get(\"access_token\");\n      if (accessToken) {\n        if (provider === \"gitlab\") {\n          this.oauthService\n            .gitlabLogin(accessToken, this.isLoggedIn)\n            .pipe(\n              tap(() => this.loginSuccess()),\n              catchError((error: HttpErrorResponse) => {\n                this.processSocialAuthErrorResponse(error);\n                return EMPTY;\n              })\n            )\n            .toPromise();\n        } else if (provider === \"google\") {\n          this.oauthService\n            .googleLogin(accessToken, this.isLoggedIn)\n            .pipe(\n              tap(() => this.loginSuccess()),\n              catchError((error: HttpErrorResponse) => {\n                this.processSocialAuthErrorResponse(error);\n                return EMPTY;\n              })\n            )\n            .toPromise();\n        } else if (provider === \"microsoft\") {\n          this.oauthService\n            .microsoftLogin(accessToken, this.isLoggedIn)\n            .pipe(\n              tap(() => this.loginSuccess()),\n              catchError((error: HttpErrorResponse) => {\n                this.processSocialAuthErrorResponse(error);\n                return EMPTY;\n              })\n            )\n            .toPromise();\n        }\n      }\n    } else if (query) {\n      const code = query.get(\"code\");\n      if (code) {\n        if (provider === \"github\") {\n          this.oauthService\n            .githubLogin(code, this.isLoggedIn)\n            .pipe(\n              tap(() => this.loginSuccess()),\n              catchError((error: HttpErrorResponse) => {\n                this.processSocialAuthErrorResponse(error);\n                return EMPTY;\n              })\n            )\n            .toPromise();\n        }\n      }\n    } else {\n      this.notEnoughQueryData();\n    }\n  }\n\n  private processSocialAuthErrorResponse(error: HttpErrorResponse) {\n    if (error.status === 400) {\n      if (error.error?.non_field_errors) {\n        this.router.navigate([\"\"]);\n        this.snackbar.open(error.error.non_field_errors[0]);\n      }\n    } else if (error.status === 500) {\n      this.router.navigate([\"\"]);\n      this.snackbar.open(\n        \"There was an error connecting to your social authentication provider.\"\n      );\n    }\n  }\n\n  /** Not enough data to even try auth...just navigate home */\n  private notEnoughQueryData() {\n    this.router.navigate([]);\n  }\n\n  /** On success for any oauth client, set auth data and redirect to home */\n  private loginSuccess() {\n    if (this.isLoggedIn) {\n      this.router.navigate([\"profile\"]);\n    } else {\n      this.authService.afterLogin();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"l-body wrapper\">\n  <p class=\"mat-body-1\">Connecting to {{ provider$ | async }}</p>\n</div>\n"
        },
        {
            "name": "AuthSvgComponent",
            "id": "component-AuthSvgComponent-680e328d2a965b76062832886ef2ecd0",
            "file": "src/app/shared/auth-svg/auth-svg.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-auth-svg",
            "styleUrls": [
                "./auth-svg.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth-svg.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "provider",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "source",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"auth\" | \"dropdown\" | \"disconnect\" | string"
                },
                {
                    "name": "text",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"gt-auth-svg\",\n  templateUrl: \"./auth-svg.component.html\",\n  styleUrls: [\"./auth-svg.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthSvgComponent {\n  @Input() text = \"\";\n  @Input() provider = \"\";\n  @Input() source: \"auth\" | \"dropdown\" | \"disconnect\" | \"\" = \"\";\n  @Input() loading = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  width: 100%;\n}\n\n.wrapper {\n  display: inline-block;\n  margin: 0 auto;\n\n  &.auth {\n    width: 220px;\n    transform: translateX(-4px);\n\n    .text {\n      width: 144px;\n    }\n  }\n\n  &.dropdown {\n    svg {\n      margin-left: 0;\n    }\n  }\n\n  &.disconnect {\n    svg {\n      margin-left: 0;\n    }\n  }\n}\n\nmat-spinner {\n  display: inline-block;\n  vertical-align: -7.5px;\n}\n\nsvg {\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  margin: 0 24px; // Google requirements are 24dp against an 18px icon size\n  vertical-align: -5px;\n}\n\n.text {\n  display: inline-block;\n  text-align: left;\n}\n\n.margin {\n  margin-bottom: 8px;\n  margin-top: 8px;\n}\n\n.disabled {\n  fill: rgba(0, 0, 0, 0.26);\n}\n",
                    "styleUrl": "./auth-svg.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"wrapper {{ source }}\">\n  <ng-container *ngIf=\"loading; else notLoading\">\n    <mat-spinner diameter=\"24\"></mat-spinner>\n  </ng-container>\n  <ng-template #notLoading>\n    <svg>\n      <use *ngIf=\"provider === 'gitlab'\" xlink:href=\"#gitlab\"></use>\n      <use *ngIf=\"provider === 'microsoft'\" xlink:href=\"#microsoft\"></use>\n      <use *ngIf=\"provider === 'github'\" xlink:href=\"#github\"></use>\n      <use *ngIf=\"provider === 'google'\" xlink:href=\"#google\"></use>\n    </svg>\n    <span class=\"text\">{{ text }}</span></ng-template\n  >\n</div>\n"
        },
        {
            "name": "AuthTokensComponent",
            "id": "component-AuthTokensComponent-59e4c98f3c76b4013d3c1274022492ba",
            "file": "src/app/profile/auth-tokens/auth-tokens.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-auth-tokens",
            "styleUrls": [
                "./auth-tokens.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth-tokens.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authTokens$",
                    "defaultValue": "this.authTokensService.apiTokens$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "deleteLoading$",
                    "defaultValue": "this.authTokensService.deleteLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.authTokensService.initialLoad$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteAuthToken",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { AuthTokensService } from \"./auth-tokens.service\";\n\n@Component({\n  selector: \"gt-auth-tokens\",\n  templateUrl: \"./auth-tokens.component.html\",\n  styleUrls: [\"./auth-tokens.component.scss\"],\n})\nexport class AuthTokensComponent implements OnInit, OnDestroy {\n  authTokens$ = this.authTokensService.apiTokens$;\n  deleteLoading$ = this.authTokensService.deleteLoading$;\n  initialLoad$ = this.authTokensService.initialLoad$;\n\n  constructor(private authTokensService: AuthTokensService) {}\n\n  ngOnInit(): void {\n    this.authTokensService.loadAuthTokens();\n  }\n\n  ngOnDestroy(): void {\n    this.authTokensService.clear();\n  }\n\n  deleteAuthToken(id: string) {\n    this.authTokensService.deleteAuthToken(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-card {\n  margin-bottom: 32px;\n}\n\nmat-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 12px;\n\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n\n  mat-card-title {\n    margin-bottom: 0;\n  }\n}\n\n.content {\n  padding-top: 32px;\n  padding-bottom: 16px;\n}\n\n.content-wrapper {\n  padding-top: 16px;\n}\n\n.loading-wrapper {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.label {\n  width: 80%;\n  margin-bottom: 0;\n}\n\n.token {\n  width: 80%;\n}\n\n.scopes {\n  display: flex;\n  flex-direction: column;\n  margin-top: -4px;\n  margin-bottom: 32px;\n\n  &__list-wrapper {\n    display: inline-block;\n\n    span:not(:last-child)::after {\n      content: \", \";\n    }\n  }\n}\n\n.empty-state {\n  padding-top: 16px;\n}\n\n.token-copied {\n  color: $amaranth;\n}\n",
                    "styleUrl": "./auth-tokens.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authTokensService",
                        "type": "AuthTokensService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authTokensService",
                        "type": "AuthTokensService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ng-container *ngIf=\"(initialLoad$ | async) === true\" class=\"l-body\">\n  <mat-card>\n    <mat-card-header class=\"flex-space-between\">\n      <mat-card-title>Auth Tokens</mat-card-title>\n      <a\n        mat-flat-button\n        [routerLink]=\"['/profile', 'auth-tokens', 'new']\"\n        color=\"primary\"\n      >\n        Create New Token\n      </a>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content class=\"content\">\n      <p>\n        Authentication tokens give you access to the GlitchTip API. You can\n        create these tokens as authentication to gain specific access around the\n        app.\n      </p>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Your Tokens</mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <ng-container *ngIf=\"(authTokens$ | async)?.length; else emptyState\">\n        <div\n          class=\"content-wrapper\"\n          *ngFor=\"let authToken of authTokens$ | async; let i = index\"\n        >\n          <h3 class=\"label\">{{ authToken.label }}</h3>\n          <div class=\"loading-wrapper\">\n            <gt-copy-input\n              class=\"token\"\n              [value]=\"authToken.token\"\n            ></gt-copy-input>\n            <gt-loading-button\n              (click)=\"deleteAuthToken(authToken.id)\"\n              [loading]=\"authToken.id === (deleteLoading$ | async)\"\n              buttonText=\"Delete\"\n              buttonStyle=\"stroked\"\n            >\n            </gt-loading-button>\n          </div>\n          <p class=\"scopes\">\n            <span class=\"mat-body-strong\">Scopes</span>\n            <span class=\"scopes__list-wrapper\">\n              <span *ngFor=\"let scope of authToken.scopes; let i = index\">{{\n                scope\n              }}</span></span\n            >\n          </p>\n          <mat-divider\n            *ngIf=\"(authTokens$ | async)?.length !== i + 1\"\n          ></mat-divider>\n        </div>\n      </ng-container>\n      <ng-template #emptyState>\n        <p class=\"empty-state\">\n          Once you create a token, it will show up here.\n        </p>\n      </ng-template>\n    </mat-card-content>\n  </mat-card>\n</ng-container>\n"
        },
        {
            "name": "ChangePasswordComponent",
            "id": "component-ChangePasswordComponent-930c9aaaf32c065dbfd19b6d687b0719",
            "file": "src/app/profile/change-password/change-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-change-password",
            "styleUrls": [
                "./change-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./change-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    old_password: new FormControl(\"\", [Validators.required]),\n    new_password1: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    new_password2: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "formDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormGroupDirective"
                        }
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "passwordResetLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "passwordResetSuccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userService.userDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "passwordReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormGroupDirective,\n} from \"@angular/forms\";\nimport { PasswordService } from \"./password.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { UserService } from \"src/app/api/user/user.service\";\nimport { AuthService } from \"src/app/api/auth/auth.service\";\nimport { map, take, mergeMap, tap } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\n\n@Component({\n  selector: \"gt-change-password\",\n  templateUrl: \"./change-password.component.html\",\n  styleUrls: [\"./change-password.component.scss\"],\n})\nexport class ChangePasswordComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formDirective?: FormGroupDirective;\n  user$ = this.userService.userDetails$;\n  passwordResetLoading = false;\n  passwordResetSuccess = false;\n\n  loading = false;\n  error: string | null | undefined;\n  form = new FormGroup({\n    old_password: new FormControl(\"\", [Validators.required]),\n    new_password1: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    new_password2: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  get old_password() {\n    return this.form.get(\"old_password\");\n  }\n\n  get new_password1() {\n    return this.form.get(\"new_password1\");\n  }\n\n  get new_password2() {\n    return this.form.get(\"new_password2\");\n  }\n\n  constructor(\n    private passwordService: PasswordService,\n    private snackBar: MatSnackBar,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.userService.getUserDetails();\n    this.passwordResetSuccess = false;\n    this.passwordResetLoading = false;\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loading = true;\n      this.passwordService\n        .changePassword(\n          this.form.value.old_password,\n          this.form.value.new_password1,\n          this.form.value.new_password2\n        )\n        .subscribe(\n          () => {\n            this.formDirective?.resetForm();\n            this.snackBar.open(\"Your new password has been saved.\");\n            this.loading = false;\n            this.error = null;\n          },\n          (err) => {\n            this.loading = false;\n            if (err.status === 400 && err.error.old_password) {\n              this.error = \"Your current password is incorrect.\";\n            } else if (err.status === 400 && err.error.new_password2) {\n              this.new_password2?.setErrors({\n                serverError: err.error.new_password2,\n              });\n            } else {\n              this.error = \"Error: \" + err.statusText;\n            }\n          }\n        );\n    }\n  }\n\n  passwordReset() {\n    this.passwordResetSuccess = false;\n    this.passwordResetLoading = true;\n    this.user$\n      .pipe(\n        map((user) => user?.email),\n        take(1),\n        mergeMap((email) => {\n          if (email) {\n            return this.authService.passwordReset(email).pipe(\n              tap(() => {\n                this.passwordResetSuccess = true;\n                this.passwordResetLoading = false;\n              })\n            );\n          }\n          return EMPTY;\n        })\n      )\n      .toPromise();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card-header {\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n}\n\n.half-width {\n  max-width: 390px;\n}\n\nform {\n  margin-left: auto;\n  margin-right: auto;\n\n  .server-error {\n    padding-top: 16px;\n    text-align: center;\n  }\n\n  mat-error {\n    span {\n      padding-right: 16px;\n    }\n  }\n}\n\nmat-form-field {\n  margin-bottom: 10px;\n}\n\n.first-field {\n  margin-top: 24px;\n}\n\nmat-spinner {\n  margin-top: 16px;\n}\n\n.confirm-email {\n  padding-top: 16px;\n}\n\n.success-text {\n  display: flex;\n  align-items: center;\n\n  mat-icon {\n    margin-right: 8px;\n  }\n}\n",
                    "styleUrl": "./change-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "passwordService",
                        "type": "PasswordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "passwordService",
                        "type": "PasswordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "old_password": {
                    "name": "old_password",
                    "getSignature": {
                        "name": "old_password",
                        "type": "",
                        "returnType": "",
                        "line": 40
                    }
                },
                "new_password1": {
                    "name": "new_password1",
                    "getSignature": {
                        "name": "new_password1",
                        "type": "",
                        "returnType": "",
                        "line": 44
                    }
                },
                "new_password2": {
                    "name": "new_password2",
                    "getSignature": {
                        "name": "new_password2",
                        "type": "",
                        "returnType": "",
                        "line": 48
                    }
                }
            },
            "templateData": "<ng-container *ngIf=\"user$ | async as user\">\n  <ng-container *ngIf=\"user.hasPasswordAuth; else setPassword\">\n    <mat-card class=\"half-width\">\n      <mat-card-content>\n        <mat-card-title>Change Password</mat-card-title>\n        <mat-divider></mat-divider>\n        <form\n          [formGroup]=\"form\"\n          (ngSubmit)=\"onSubmit()\"\n          id=\"change-password-form\"\n        >\n          <mat-error class=\"server-error\" *ngIf=\"error\">{{ error }}</mat-error>\n          <mat-form-field class=\"full-width first-field\">\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"Current Password\"\n              formControlName=\"old_password\"\n            />\n            <mat-error\n              ><span *ngIf=\"old_password?.errors?.required\"\n                >Your current is required to change your password</span\n              >\n              <span *ngIf=\"old_password?.errors?.serverError\">{{\n                old_password?.errors?.serverError\n              }}</span></mat-error\n            >\n          </mat-form-field>\n          <mat-form-field class=\"full-width\">\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"New Password\"\n              formControlName=\"new_password1\"\n            />\n            <mat-error\n              ><span\n                *ngIf=\"new_password1?.errors && new_password1?.errors?.required\"\n                >Your password should be at least 8 characters long</span\n              >\n              <span *ngIf=\"new_password1?.errors?.required\"\n                >Type in your new password</span\n              >\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field class=\"full-width\">\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n              formControlName=\"new_password2\"\n              gtInputMatcher=\"new_password1\"\n            />\n\n            <mat-error\n              ><span *ngIf=\"new_password2?.errors?.required\"\n                >Type in your new password</span\n              ><span *ngIf=\"new_password2?.errors?.notEqual\"\n                >Your passwords don't match</span\n              >\n              <span *ngIf=\"new_password2?.errors?.serverError\">{{\n                new_password2?.errors?.serverError\n              }}</span></mat-error\n            >\n          </mat-form-field>\n          <gt-loading-button buttonText=\"Change Password\" [loading]=\"loading\">\n            Change Password\n          </gt-loading-button>\n        </form>\n      </mat-card-content>\n    </mat-card></ng-container\n  >\n  <ng-template #setPassword>\n    <mat-card *ngIf=\"!user.hasPasswordAuth\" class=\"half-width\">\n      <mat-card-title>Set Password</mat-card-title>\n      <mat-divider></mat-divider>\n      <mat-card-content>\n        <p class=\"confirm-email\">\n          GlitchTip will need to reconfirm your email before setting one.\n        </p>\n        <gt-loading-button\n          *ngIf=\"!passwordResetSuccess\"\n          buttonText=\"Request set password email\"\n          [loading]=\"passwordResetLoading\"\n          (click)=\"passwordReset()\"\n        >\n        </gt-loading-button>\n        <p *ngIf=\"passwordResetSuccess\" class=\"success-text\">\n          <mat-icon color=\"primary\">check_circle</mat-icon>\n          <span>Email sent</span>\n        </p>\n      </mat-card-content>\n    </mat-card>\n  </ng-template>\n  <section></section>\n</ng-container>\n"
        },
        {
            "name": "ConfirmEmailComponent",
            "id": "component-ConfirmEmailComponent-4e676a06679fd5a9afe54ec986c32041",
            "file": "src/app/profile/confirm-email/confirm-email.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-confirm-email",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { ConfirmEmailService } from \"../../api/confirm-email/confirm-email.service\";\n\n@Component({\n  selector: \"gt-confirm-email\",\n  template: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmEmailComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private confirmEmailService: ConfirmEmailService\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n      .pipe(map((params) => this.confirmEmailService.confirmEmail(params.key)))\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmEmailService",
                        "type": "ConfirmEmailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmEmailService",
                        "type": "ConfirmEmailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ContextsComponent",
            "id": "component-ContextsComponent-131787ef5e4498900b2d0b116a88c97e",
            "file": "src/app/issues/issue-detail/event-detail/context/contexts.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-contexts",
            "styleUrls": [
                "./contexts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contexts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "specialContexts$",
                    "defaultValue": "this.issueDetailService.specialContexts$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { IssueDetailService } from \"../../issue-detail.service\";\n\n@Component({\n  selector: \"gt-contexts\",\n  templateUrl: \"./contexts.component.html\",\n  styleUrls: [\"./contexts.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContextsComponent implements OnInit {\n  specialContexts$ = this.issueDetailService.specialContexts$;\n\n  constructor(private issueDetailService: IssueDetailService) {}\n\n  ngOnInit() {\n    this.issueDetailService.specialContexts$.subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-wrapper {\n  padding: 16px 0;\n}\n\n.wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.spacer {\n  margin-left: 16px;\n}\n\n.spacer-small {\n  margin-left: 8px;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.bold {\n  font-weight: 700;\n}\n\n.image {\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n}\n",
                    "styleUrl": "./contexts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueDetailService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "issueDetailService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"card-wrapper\">\n  <div *ngFor=\"let contexts of specialContexts$ | async\" class=\"wrapper\">\n    <ng-container *ngIf=\"contexts.icon || contexts.matIcon; else unknownIcon\">\n      <ng-container *ngIf=\"contexts.icon; else useMatIcon\">\n        <img class=\"image\" [src]=\"contexts.icon\" [alt]=\"contexts.icon\"\n      /></ng-container>\n      <ng-template #useMatIcon>\n        <mat-icon class=\"image\">{{ contexts.matIcon }}</mat-icon></ng-template\n      >\n    </ng-container>\n    <ng-template #unknownIcon>\n      <mat-icon class=\"image\">help_outline</mat-icon>\n    </ng-template>\n    <div class=\"spacer\">\n      <p class=\"mat-body-strong\">{{ contexts.title }}</p>\n      <p\n        *ngIf=\"\n          !contexts.title.includes('Unknown') &&\n          contexts.key &&\n          contexts.subtitle\n        \"\n        class=\"mat-small mat-caption\"\n      >\n        <span class=\"bold\">{{ contexts.key }}:&nbsp;</span\n        ><span class=\"spacer-small\">{{ contexts.subtitle }}</span>\n      </p>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "CopyInputComponent",
            "id": "component-CopyInputComponent-52f92956d894f837cf56f91b7c66b5d5",
            "file": "src/app/shared/copy-input/copy-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-copy-input",
            "styleUrls": [
                "./copy-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./copy-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "copied$",
                    "defaultValue": "new BehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "copied",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet copy icon to show it was copied, then reset state\n",
                    "description": "<p>Set copy icon to show it was copied, then reset state</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>A read-only input that allows the user to copy it&#39;s value</p>\n",
            "rawdescription": "\n\nA read-only input that allows the user to copy it's value\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport { BehaviorSubject, timer } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\n/**\n * A read-only input that allows the user to copy it's value\n */\n@Component({\n  selector: \"gt-copy-input\",\n  templateUrl: \"./copy-input.component.html\",\n  styleUrls: [\"./copy-input.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyInputComponent {\n  @Input() value = \"\";\n  @Input() placeholder = \"\";\n  copied$ = new BehaviorSubject(false);\n\n  /**\n   * Set copy icon to show it was copied, then reset state\n   */\n  copied() {\n    timer(0, 4000)\n      .pipe(take(2))\n      .subscribe((i) =>\n        i === 0 ? this.copied$.next(true) : this.copied$.next(false)\n      );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.dsn-copied {\n  color: $amaranth;\n}\n",
                    "styleUrl": "./copy-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field class=\"full-width\">\n  <input\n    class=\"background\"\n    readonly\n    matInput\n    [placeholder]=\"placeholder\"\n    [value]=\"value\"\n    data-test-dsn\n  />\n  <button\n    mat-icon-button\n    [cdkCopyToClipboard]=\"value\"\n    (cdkCopyToClipboardCopied)=\"copied()\"\n    matTooltip=\"Copy key to clipboard\"\n    matSuffix\n  >\n    <mat-icon [class.dsn-copied]=\"copied$ | async\">\n      {{ (copied$ | async) ? \"check_circle\" : \"file_copy\" }}\n    </mat-icon>\n  </button>\n</mat-form-field>\n"
        },
        {
            "name": "EmptyProjectsComponent",
            "id": "component-EmptyProjectsComponent-43013a30f5d69b5e5aa2b7e57b10b742",
            "file": "src/app/shared/project-card/empty-projects/empty-projects.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-empty-projects",
            "styleUrls": [
                "./empty-projects.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-projects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeOrgOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"gt-empty-projects\",\n  templateUrl: \"./empty-projects.component.html\",\n  styleUrls: [\"./empty-projects.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmptyProjectsComponent {\n  @Input() activeOrgOnly = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.empty-state-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n\n.project-card {\n  @media screen and (max-width: $tablet - 1) {\n    display: none;\n  }\n}\n",
                    "styleUrl": "./empty-projects.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"card-wrapper\">\n  <mat-card class=\"empty-state-card\">\n    <h3>This organization has no projects.</h3>\n    <p>\n      To add a project to this organization, press the \"Create New\n      Project\"&nbsp;button.\n    </p>\n  </mat-card>\n  <gt-project-card\n    [class.project-card]=\"activeOrgOnly === false\"\n    role=\"image\"\n    [sampleCard]=\"true\"\n    [cardLink]=\"['']\"\n    [cardLinkQueryParams]=\"{ foo: 'bar' }\"\n    title=\"Test thing\"\n    [descriptionList]=\"[\n      { key: 'organization', value: 'test org' },\n      { key: 'date created', value: 'May 08, 2020' }\n    ]\"\n    [primaryButton]=\"{\n      text: 'Issues',\n      icon: 'warning',\n      link: [''],\n      query: { foo: 'bar' }\n    }\"\n    [secondaryButton]=\"{\n      text: 'Settings',\n      icon: 'settings',\n      link: ['']\n    }\"\n  ></gt-project-card>\n  <gt-project-card\n    [class.project-card]=\"activeOrgOnly === false\"\n    role=\"image\"\n    [sampleCard]=\"true\"\n    [cardLink]=\"['']\"\n    [cardLinkQueryParams]=\"{ foo: 'bar' }\"\n    title=\"Test thing\"\n    [descriptionList]=\"[\n      { key: 'organization', value: 'test org' },\n      { key: 'date created', value: 'May 08, 2020' }\n    ]\"\n    [primaryButton]=\"{\n      text: 'Issues',\n      icon: 'warning',\n      link: [''],\n      query: { foo: 'bar' }\n    }\"\n    [secondaryButton]=\"{\n      text: 'Settings',\n      icon: 'settings',\n      link: ['']\n    }\"\n  ></gt-project-card>\n</div>\n"
        },
        {
            "name": "EntryBreadcrumbsComponent",
            "id": "component-EntryBreadcrumbsComponent-a3d0e6981b73c0ba44209736d6c00f22",
            "file": "src/app/issues/issue-detail/event-detail/entry-breadcrumbs/entry-breadcrumbs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-entry-breadcrumbs",
            "styleUrls": [
                "./entry-breadcrumbs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'breadBox'"
                        }
                    ]
                },
                {
                    "name": "breadcrumbs$",
                    "defaultValue": "this.issueDetailService.breadcrumbs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "keepOrder",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "showShowMore$",
                    "defaultValue": "this.issueDetailService.showShowMore$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "expandBreadcrumbs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { KeyValue } from \"@angular/common\";\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from \"@angular/core\";\nimport { Json } from \"src/app/interface-primitives\";\nimport { IssueDetailService } from \"../../issue-detail.service\";\n\n@Component({\n  selector: \"gt-entry-breadcrumbs\",\n  templateUrl: \"./entry-breadcrumbs.component.html\",\n  styleUrls: [\"./entry-breadcrumbs.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntryBreadcrumbsComponent implements AfterViewInit {\n  @ViewChild(\"breadBox\") breadBox?: ElementRef;\n\n  breadcrumbs$ = this.issueDetailService.breadcrumbs$;\n  showShowMore$ = this.issueDetailService.showShowMore$;\n\n  constructor(private issueDetailService: IssueDetailService) {}\n\n  ngAfterViewInit() {\n    if (this.breadBox?.nativeElement.offsetHeight >= 1250) {\n      setTimeout(() => this.issueDetailService.setShowShowMore(true));\n    }\n  }\n\n  expandBreadcrumbs() {\n    this.issueDetailService.setShowShowMore(false);\n  }\n\n  keepOrder = (\n    a: KeyValue<string, Json>,\n    b: KeyValue<string, Json>\n  ): number => {\n    return 0;\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"src/assets/styles/variables\";\n\nh3 {\n  padding-top: 32px;\n}\n\n.wrapper {\n  position: relative;\n  margin-bottom: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n}\n\nul {\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  li {\n    list-style: none;\n    font-size: 14px;\n    line-height: 20px;\n  }\n}\n\n.expand-button {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-align: left;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  background: white;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.12);\n  z-index: 1;\n\n  mat-icon {\n    margin-right: 8px;\n  }\n}\n\n.bread-box {\n  height: 1250px;\n  overflow: hidden;\n\n  &--expanded {\n    height: 100%;\n  }\n}\n\n.table-wrapper {\n  padding-left: 8px;\n  padding-right: 8px;\n}\n\n.error {\n  background-color: mat.get-color-from-palette(mat.$gray-palette, 100);\n}\n\n.category {\n  font-weight: 700;\n}\n\ntable {\n  width: 100%;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  border-spacing: 0 16px;\n\n  .column-one {\n    width: 24px;\n    padding-right: 8px;\n\n    .error {\n      color: red;\n    }\n\n    .ui {\n      color: rebeccapurple;\n    }\n\n    .xhr {\n      color: green;\n    }\n  }\n\n  .column-two {\n    width: 15%;\n  }\n\n  .column-three {\n    width: 60%;\n    font-family: $font-mono;\n    word-break: break-all;\n  }\n\n  .column-four {\n    width: 20%;\n    text-align: right;\n  }\n\n  td {\n    vertical-align: top;\n  }\n}\n",
                    "styleUrl": "./entry-breadcrumbs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueDetailService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "issueDetailService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<section *ngIf=\"breadcrumbs$ | async as breadcrumbs\">\n  <mat-divider></mat-divider>\n  <h3>Breadcrumbs</h3>\n  <div\n    #breadBox\n    class=\"wrapper\"\n    [ngClass]=\"(showShowMore$ | async) ? 'bread-box' : 'bread-box--expanded'\"\n    [class.bread-box--expanded]=\"(showShowMore$| async) === false\"\n  >\n    <button\n      *ngIf=\"showShowMore$ | async\"\n      class=\"expand-button\"\n      mat-button\n      color=\"primary\"\n      (click)=\"expandBreadcrumbs()\"\n    >\n      <mat-icon>more_horiz</mat-icon> Show All\n      {{ breadcrumbs?.values?.length }} Breadcrumbs\n    </button>\n    <ul>\n      <li *ngFor=\"let value of breadcrumbs?.values; let i = index\">\n        <ng-container>\n          <mat-divider *ngIf=\"i !== 0\"></mat-divider>\n          <div class=\"table-wrapper\" [class.error]=\"value.level === 'error'\">\n            <table cdk-table>\n              <ng-container>\n                <tr>\n                  <td class=\"column-one\">\n                    <ng-container\n                      *ngIf=\"value.level === 'error'; else useCategory\"\n                    >\n                      <mat-icon class=\"error\">warning</mat-icon>\n                    </ng-container>\n                    <ng-template #useCategory>\n                      <ng-container [ngSwitch]=\"value.category\">\n                        <ng-container *ngSwitchCase=\"'ui.click'\">\n                          <mat-icon class=\"ui\">person</mat-icon>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'xhr'\">\n                          <mat-icon class=\"xhr\">cached</mat-icon>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault\n                          ><mat-icon>code</mat-icon>\n                        </ng-container>\n                      </ng-container></ng-template\n                    >\n                  </td>\n\n                  <td class=\"column-two category\">\n                    {{ value.category }}\n                  </td>\n                  <td class=\"column-three\">{{ value.message }}</td>\n                  <td class=\"column-four\">\n                    {{ value.timestamp | date: \"HH:mm:ss.SSS\" }}\n                  </td>\n                </tr>\n                <ng-container>\n                  <tr *ngFor=\"let data of value.data | keyvalue: keepOrder\">\n                    <td class=\"column-one\"></td>\n                    <td class=\"column-two\">{{ data.key }}</td>\n                    <td class=\"column-three\">\n                      {{ data.value | json }}\n                    </td>\n                  </tr></ng-container\n                >\n              </ng-container>\n            </table>\n          </div></ng-container\n        >\n      </li>\n    </ul>\n  </div>\n</section>\n"
        },
        {
            "name": "EntryCSPComponent",
            "id": "component-EntryCSPComponent-dd624bb528da197c9a1eae67d785f48b",
            "file": "src/app/issues/issue-detail/event-detail/entry-csp/entry-csp.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-entry-csp",
            "styleUrls": [
                "./entry-csp.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-csp.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eventEntryCSP$",
                    "defaultValue": "this.issueService.eventEntryCSP$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\nimport { IssueDetailService } from \"../../issue-detail.service\";\n\n@Component({\n  selector: \"gt-entry-csp\",\n  templateUrl: \"./entry-csp.component.html\",\n  styleUrls: [\"./entry-csp.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntryCSPComponent {\n  eventEntryCSP$ = this.issueService.eventEntryCSP$;\n\n  constructor(private issueService: IssueDetailService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".csp {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 16px;\n  }\n\n  &__code {\n    display: block;\n    margin-left: 24px;\n  }\n}\n\npre {\n  overflow-x: scroll;\n  margin-top: 0;\n}\n",
                    "styleUrl": "./entry-csp.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section *ngIf=\"eventEntryCSP$ | async as csp\" class=\"mat-typography\">\n  <mat-divider></mat-divider>\n  <div class=\"csp__header\">\n    <h3>CSP Report</h3>\n    <mat-button-toggle-group #group=\"matButtonToggleGroup\">\n      <mat-button-toggle\n        [checked]=\"true\"\n        value=\"report-csp\"\n        aria-label=\"full csp report data\"\n      >\n        Report\n      </mat-button-toggle>\n      <mat-button-toggle value=\"raw-csp\" aria-label=\"raw csp report data\">\n        Raw\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div *ngIf=\"group.value === 'report-csp'\">\n    <h4>{{ csp?.effective_directive }}</h4>\n    <dl *ngFor=\"let data of csp | keyvalue\">\n      <gt-entry-data [key]=\"data.key\" [value]=\"data.value\"></gt-entry-data>\n    </dl>\n  </div>\n  <div *ngIf=\"group.value === 'raw-csp'\">\n    <pre>\n&#123;<span class=\"csp__code\">\"csp-report\": {{ csp | json }}</span>&#125;\n  </pre>\n  </div>\n</section>\n"
        },
        {
            "name": "EntryDataComponent",
            "id": "component-EntryDataComponent-70da898ddc4cb8abec0afcdd943aef4a",
            "file": "src/app/shared/entry-data/entry-data.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-entry-data",
            "styleUrls": [
                "./entry-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-data.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": ""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"gt-entry-data\",\n  templateUrl: \"./entry-data.component.html\",\n  styleUrls: [\"./entry-data.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntryDataComponent {\n  @Input() key?: string;\n  @Input() value: unknown;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n$left-column-width: 30%;\n\n:host {\n  display: block;\n  clear: both;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\ndt {\n  float: left;\n  width: $left-column-width;\n  padding-right: 16px;\n  padding-top: 7px;\n\n  @media screen and (max-width: $small - 1) {\n    float: none;\n    width: 100%;\n    padding-right: 0;\n    padding-top: 0;\n    padding-bottom: 3px;\n  }\n}\n\ndd {\n  margin-left: $left-column-width;\n  width: 70%;\n  min-height: 36px;\n  word-wrap: break-word;\n  padding: 8px;\n  font-family: $font-mono;\n  background-color: mat.get-color-from-palette(mat.$gray-palette, 100);\n  border-radius: 3px;\n\n  @media screen and (max-width: $small - 1) {\n    float: none;\n    width: 100%;\n    margin-left: 0;\n    margin-bottom: 12px;\n  }\n}\n",
                    "styleUrl": "./entry-data.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<dt class=\"mat-body-strong\">{{ key }}</dt>\n<dd>{{ value }}</dd>\n"
        },
        {
            "name": "EntryExceptionComponent",
            "id": "component-EntryExceptionComponent-fd73f8f350193f50321cb87612b8549d",
            "file": "src/app/issues/issue-detail/event-detail/entry-exception/entry-exception.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-entry-exception",
            "styleUrls": [
                "./entry-exception.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-exception.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "eventPlatform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | undefined"
                },
                {
                    "name": "eventTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkStacktraceInterface",
                    "defaultValue": "isStacktrace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "eventEntryException$",
                    "defaultValue": "this.issueService.eventEntryException$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "isReversed$",
                    "defaultValue": "this.issueService.isReversed$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getFlippedFrames",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport { IssueDetailService } from \"../../issue-detail.service\";\nimport { isStacktrace } from \"src/app/issues/utils\";\n\n@Component({\n  selector: \"gt-entry-exception\",\n  templateUrl: \"./entry-exception.component.html\",\n  styleUrls: [\"./entry-exception.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntryExceptionComponent {\n  @Input() eventTitle: string | undefined;\n  @Input() eventPlatform: string | undefined;\n  eventEntryException$ = this.issueService.eventEntryException$;\n  isReversed$ = this.issueService.isReversed$;\n\n  constructor(private issueService: IssueDetailService) {}\n\n  checkStacktraceInterface = isStacktrace;\n\n  getFlippedFrames() {\n    this.issueService.getReversedFrames();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n.exception {\n  margin-bottom: 16px;\n\n  .header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8px;\n\n    @media screen and (max-width: $small - 1) {\n      flex-direction: column;\n    }\n  }\n  .text-wrapper {\n    display: flex;\n  }\n\n  .spacer {\n    margin-left: 8px;\n  }\n\n  .subtitle {\n    margin-bottom: 24px;\n  }\n\n  .yes {\n    border: 2px solid green;\n  }\n\n  .no {\n    border: 2px solid red;\n  }\n\n  .raw {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .full {\n    h2 {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  mat-chip-list {\n    display: block;\n    margin-bottom: 24px;\n  }\n\n  mat-accordion::ng-deep .mat-expansion-panel-body {\n    padding-top: 16px;\n  }\n\n  mat-expansion-panel:not(:last-child) mat-expansion-panel-header {\n    margin-bottom: -1px;\n  }\n\n  mat-expansion-panel-header {\n    padding-top: 16px;\n    padding-bottom: 16px;\n    border: 1px solid mat.get-color-from-palette(mat.$gray-palette, 300);\n\n    gt-frame-title {\n      padding-right: 16px;\n    }\n  }\n\n  .disabled-panel {\n    color: mat.get-color-from-palette(mat.$gray-palette, 900);\n  }\n\n  .highlighted {\n    background: mat.get-color-from-palette(mat.$gray-palette, 100);\n  }\n}\n",
                    "styleUrl": "./entry-exception.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section *ngIf=\"eventEntryException$ | async as exception\">\n  <section class=\"exception\">\n    <div class=\"header-wrapper\">\n      <div class=\"text-wrapper\">\n        <h3>Exception</h3>\n        <p *ngIf=\"group.value === 'full-data'\" class=\"spacer\">\n          (<a mat-button (click)=\"getFlippedFrames()\"\n            >most recent call <span *ngIf=\"isReversed$ | async\">first</span\n            ><span *ngIf=\"(isReversed$ | async) === false\">last</span></a\n          >)\n        </p>\n      </div>\n      <mat-button-toggle-group #group=\"matButtonToggleGroup\">\n        <mat-button-toggle\n          [checked]=\"true\"\n          value=\"full-data\"\n          aria-label=\"full data\"\n        >\n          Full\n        </mat-button-toggle>\n        <mat-button-toggle value=\"raw\" aria-label=\"raw data\">\n          Raw\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n    <div class=\"full\" *ngIf=\"group.value === 'full-data' && exception.values\">\n      <div *ngFor=\"let value of exception.values\">\n        <h2>{{ value.type }}</h2>\n        <p class=\"subtitle\">{{ value.value }}</p>\n        <mat-chip-list *ngIf=\"value.mechanism\">\n          <mat-chip disabled>mechanism: {{ value.mechanism.type }}</mat-chip>\n          <mat-chip color=\"accent\" selected disabled\n            >handled: {{ value.mechanism.handled ? \"yes\" : \"no\" }}</mat-chip\n          >\n          <mat-chip *ngIf=\"value.mechanism.data\" disabled\n            >function: {{ value.mechanism.data.function }}</mat-chip\n          >\n        </mat-chip-list>\n        <mat-accordion\n          *ngIf=\"checkStacktraceInterface(value.stacktrace)\"\n          [multi]=\"true\"\n          displayMode=\"flat\"\n        >\n          <!-- TODO:  Add additional conditions for non expandable frames\n          https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx#L107-->\n          <mat-expansion-panel\n            *ngFor=\"let frame of value.stacktrace.frames; let i = index\"\n            [disabled]=\"\n              (!frame.context || !frame.context.length) && !frame.vars\n            \"\n            [expanded]=\"frame.context?.length ? i === 0 : undefined\"\n            class=\"mat-elevation-z0\"\n          >\n            <mat-expansion-panel-header\n              collapsedHeight=\"auto\"\n              expandedHeight=\"auto\"\n              [class.disabled-panel]=\"!frame.context?.length && !frame.vars\"\n              [class.highlighted]=\"frame.inApp\"\n            >\n              <gt-frame-title\n                [frame]=\"frame\"\n                [eventPlatform]=\"eventPlatform\"\n              ></gt-frame-title>\n            </mat-expansion-panel-header>\n            <gt-frame-expanded\n              [lineNo]=\"frame.lineNo\"\n              [context]=\"frame.context\"\n              [vars]=\"frame.vars\"\n            ></gt-frame-expanded>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n    </div>\n    <div *ngIf=\"group.value === 'raw' && exception.values\">\n      <gt-raw-stacktrace [eventPlatform]=\"eventPlatform\"></gt-raw-stacktrace>\n    </div>\n  </section>\n</section>\n"
        },
        {
            "name": "EntryMessageComponent",
            "id": "component-EntryMessageComponent-a5ee750c3f189500ec5bda9eac0f30f5",
            "file": "src/app/issues/issue-detail/event-detail/entry-message/entry-message.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-entry-message",
            "styleUrls": [
                "./entry-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eventEntryMessage$",
                    "defaultValue": "this.issueService.eventEntryMessage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\nimport { IssueDetailService } from \"../../issue-detail.service\";\n\n@Component({\n  selector: \"gt-entry-message\",\n  templateUrl: \"./entry-message.component.html\",\n  styleUrls: [\"./entry-message.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntryMessageComponent {\n  eventEntryMessage$ = this.issueService.eventEntryMessage$;\n\n  constructor(private issueService: IssueDetailService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nh3 {\n  padding-top: 16px;\n}\n\np {\n  font-family: $font-mono;\n}\n",
                    "styleUrl": "./entry-message.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section *ngIf=\"eventEntryMessage$ | async as message\" class=\"mat-typography\">\n  <div>\n    <mat-divider></mat-divider>\n    <h3>Message</h3>\n    <p>{{ message?.formatted }}</p>\n  </div>\n</section>\n"
        },
        {
            "name": "EntryRequestComponent",
            "id": "component-EntryRequestComponent-406720476da2039fa91aaeb26c15c1e2",
            "file": "src/app/issues/issue-detail/event-detail/entry-request/entry-request.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-entry-request",
            "styleUrls": [
                "./entry-request.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./entry-request.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "eventEntryRequest$",
                    "defaultValue": "this.issueService.eventEntryRequest$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\nimport { IssueDetailService } from \"../../issue-detail.service\";\n\n@Component({\n  selector: \"gt-entry-request\",\n  templateUrl: \"./entry-request.component.html\",\n  styleUrls: [\"./entry-request.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntryRequestComponent {\n  eventEntryRequest$ = this.issueService.eventEntryRequest$;\n\n  constructor(private issueService: IssueDetailService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".location {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  padding-top: 24px;\n}\n\n.method {\n  margin-right: 8px;\n}\n\n.domain {\n  margin-left: 24px;\n}\n\n.data {\n  margin-top: 40px;\n}\n\nh3 {\n  padding-top: 8px;\n}\n",
                    "styleUrl": "./entry-request.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section *ngIf=\"eventEntryRequest$ | async as request\" class=\"mat-typography\">\n  <mat-divider></mat-divider>\n  <section class=\"location\">\n    <span class=\"method mat-body-strong\">{{\n      request?.method ? request?.method : \"GET\"\n    }}</span>\n    <a\n      [matTooltip]=\"request.url\"\n      matTooltipPosition=\"above\"\n      color=\"primary\"\n      target=\"_blank\"\n      [href]=\"request?.url\"\n      >{{ request?.path }}</a\n    >\n    <span class=\"domain\">{{ request?.domainName }}</span>\n  </section>\n  <section>\n    <div *ngIf=\"request.data\">\n      <mat-divider></mat-divider>\n      <h3>Body</h3>\n      <dl>\n        <gt-entry-data\n          *ngFor=\"let requestData of request.data | keyvalue\"\n          [key]=\"requestData.key\"\n          [value]=\"requestData.value\"\n        ></gt-entry-data>\n      </dl>\n    </div>\n    <section *ngIf=\"request?.headers\">\n      <h3>Headers</h3>\n      <dl>\n        <gt-entry-data\n          *ngFor=\"let header of request?.headers\"\n          [key]=\"header[0]\"\n          [value]=\"header[1]\"\n        ></gt-entry-data>\n      </dl>\n    </section>\n    <section *ngIf=\"request?.env\">\n      <mat-divider></mat-divider>\n      <h3>Environment</h3>\n      <dl>\n        <gt-entry-data\n          *ngFor=\"let env of request.env | keyvalue\"\n          [key]=\"env.key\"\n          [value]=\"env.value\"\n        ></gt-entry-data>\n      </dl>\n    </section>\n  </section>\n</section>\n"
        },
        {
            "name": "EventDetailComponent",
            "id": "component-EventDetailComponent-3857e7b0edb168f112fb93d7fca621d1",
            "file": "src/app/issues/issue-detail/event-detail/event-detail.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-event-detail",
            "styleUrls": [
                "./event-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./event-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "event$",
                    "defaultValue": "this.issueService.event$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "eventIDParam$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => params.get(\"event-id\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.issueService.eventInitialLoadComplete$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "nextEvent$",
                    "defaultValue": "this.issueService.hasNextEvent$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "nextEventUrl$",
                    "defaultValue": "this.issueService.nextEventUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "orgSlug$",
                    "defaultValue": "this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "previousEvent$",
                    "defaultValue": "this.issueService.hasPreviousEvent$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "previousEventUrl$",
                    "defaultValue": "this.issueService.previousEventUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "generateQuery",
                    "args": [
                        {
                            "name": "tag",
                            "type": "EventTag",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ environment: any; query?: undefined; } | { query: string; environment?: undefined; }",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nTODO fix these types",
                    "description": "<p>TODO fix these types</p>\n",
                    "jsdoctags": [
                        {
                            "name": "tag",
                            "type": "EventTag",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNewerEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getOlderEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, exhaustMap } from \"rxjs/operators\";\nimport { IssueDetailService } from \"../issue-detail.service\";\nimport { EventTag } from \"src/app/issues/interfaces\";\n\n@Component({\n  selector: \"gt-event-detail\",\n  templateUrl: \"./event-detail.component.html\",\n  styleUrls: [\"./event-detail.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EventDetailComponent implements OnInit {\n  event$ = this.issueService.event$;\n  initialLoadComplete$ = this.issueService.eventInitialLoadComplete$;\n  nextEvent$ = this.issueService.hasNextEvent$;\n  previousEvent$ = this.issueService.hasPreviousEvent$;\n  nextEventUrl$ = this.issueService.nextEventUrl$;\n  previousEventUrl$ = this.issueService.previousEventUrl$;\n  eventIDParam$ = this.route.paramMap.pipe(\n    map((params) => params.get(\"event-id\"))\n  );\n  orgSlug$ = this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")));\n\n  constructor(\n    private issueService: IssueDetailService,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.eventIDParam$\n      .pipe(\n        exhaustMap((eventID) => {\n          if (eventID) {\n            return this.issueService.getEventByID(eventID);\n          }\n          return this.issueService.getLatestEvent();\n        })\n      )\n      .subscribe();\n  }\n\n  getNewerEvent() {\n    this.issueService.getNextEvent();\n  }\n\n  getOlderEvent() {\n    this.issueService.getPreviousEvent();\n  }\n\n  /** TODO fix these types */\n  generateQuery(tag: EventTag) {\n    // Assume unresolved if not present; tag overrides query otherwise\n    const query = this.route.snapshot.queryParams.query;\n    const unresolved = query === undefined ? \"is:unresolved \" : \"\";\n\n    if (tag.key === \"environment\") {\n      return { environment: tag.value };\n    } else {\n      return { query: `${unresolved}\"${tag.key}\":\"${tag.value}\"` };\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\nsection {\n  margin-bottom: 16px;\n\n  h3 {\n    padding-top: 8px;\n  }\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: $small - 1) {\n    flex-direction: column-reverse;\n  }\n\n  .space {\n    margin-right: 16px;\n  }\n\n  p,\n  h2 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .navigation-buttons {\n    @media screen and (max-width: $small - 1) {\n      margin: 0 auto 8px;\n    }\n  }\n}\n\n.tags {\n  margin-top: 16px;\n}\n\n.tags .spacer {\n  margin-left: 8px;\n}\n\ngt-entry-request {\n  display: block;\n}\n\n.pseudo-chip-list {\n  margin: 4px 0 20px;\n  padding: 0;\n  overflow: hidden;\n\n  a {\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    text-decoration: none;\n  }\n}\n.pseudo-chip {\n  margin-top: 6px;\n  margin-right: 8px;\n  padding: 2px 12px;\n  border-radius: 16px;\n  border: 1px solid mat.get-color-from-palette(mat.$gray-palette, 500);\n  background-color: #fefefe;\n  float: left;\n  list-style: none;\n  transition: 0.3s;\n\n  &:hover {\n    background: mat.get-color-from-palette(mat.$gray-palette, 100);\n  }\n}\n.pseudo-chip-key {\n  font-size: 0.8em;\n  padding-right: 10px;\n  opacity: 0.8;\n}\n.pseudo-chip-value {\n  vertical-align: -0.07em;\n}\n",
                    "styleUrl": "./event-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section\n  class=\"mat-typography\"\n  *ngIf=\"(initialLoadComplete$ | async) && (event$ | async) === null\"\n>\n  <h2>Event not found</h2>\n  <p class=\"mat-body-1\">\n    This may be because the URL is pointing to an event that doesn't exist or\n    was deleted.\n  </p>\n</section>\n\n<section *ngIf=\"event$ | async as event\" class=\"mat-typography\">\n  <section class=\"header\">\n    <div>\n      <h2>Event</h2>\n      <p>\n        <a>{{ event?.eventID }}</a>\n      </p>\n      <p>\n        <span *ngIf=\"event?.dateCreated\" class=\"space\">{{\n          event?.dateCreated | date: \"long\"\n        }}</span>\n        <a\n          target=\"_blank\"\n          [href]=\"\n            '/organizations/' +\n            (orgSlug$ | async) +\n            '/issues/' +\n            event.issue +\n            '/events/' +\n            event?.eventID +\n            '/json/'\n          \"\n          >JSON</a\n        >\n      </p>\n    </div>\n    <nav class=\"navigation-buttons\">\n      <button\n        mat-button\n        [routerLink]=\"(previousEventUrl$ | async) || ''\"\n        [disabled]=\"(previousEvent$ | async) === false\"\n      >\n        <mat-icon>keyboard_arrow_left</mat-icon> Older\n      </button>\n      <button\n        mat-button\n        [routerLink]=\"(nextEventUrl$ | async) || ''\"\n        [disabled]=\"(nextEvent$ | async) === false\"\n      >\n        Newer <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n    </nav>\n  </section>\n  <mat-divider *ngIf=\"event?.contexts || event?.user\"></mat-divider>\n  <gt-contexts></gt-contexts>\n  <mat-divider></mat-divider>\n\n  <section class=\"tags\" *ngIf=\"event?.tags && event.tags.length > 0\">\n    <h2>Tags</h2>\n    <ul class=\"pseudo-chip-list\">\n      <li *ngFor=\"let tag of event.tags\" class=\"pseudo-chip\">\n        <a\n          [routerLink]=\"['..']\"\n          [relativeTo]=\"route.parent\"\n          [queryParams]=\"generateQuery(tag)\"\n          queryParamsHandling=\"merge\"\n        >\n          <span class=\"pseudo-chip-key\">{{ tag.key }}</span>\n          <span class=\"pseudo-chip-value\">{{ tag.value }}</span></a\n        >\n      </li>\n    </ul>\n  </section>\n\n  <gt-entry-message></gt-entry-message>\n  <gt-entry-exception\n    [eventTitle]=\"event?.title\"\n    [eventPlatform]=\"event?.platform\"\n  ></gt-entry-exception>\n  <gt-entry-csp></gt-entry-csp>\n  <gt-entry-breadcrumbs></gt-entry-breadcrumbs>\n  <gt-entry-request></gt-entry-request>\n  <section *ngFor=\"let context of event.contexts | keyvalue\">\n    <mat-divider></mat-divider>\n    <h3>\n      {{ context.value.type }}\n\n      <ng-container *ngIf=\"context.value.type; else elseBlock\">\n        ({{ context.key }})\n      </ng-container>\n      <ng-template #elseBlock>{{ context.key }}</ng-template>\n    </h3>\n    <dl>\n      <ng-container *ngFor=\"let context_entry of context.value | keyvalue\">\n        <gt-entry-data\n          *ngIf=\"context_entry.key !== 'type'\"\n          [key]=\"context_entry.key\"\n          [value]=\"context_entry.value\"\n        ></gt-entry-data>\n      </ng-container>\n    </dl>\n  </section>\n\n  <section *ngIf=\"event.context\">\n    <mat-divider></mat-divider>\n    <h3>Additional Data</h3>\n    <dl>\n      <gt-entry-data\n        *ngFor=\"let context of event.context | keyvalue\"\n        [key]=\"context.key\"\n        [value]=\"context.value | json\"\n      >\n      </gt-entry-data>\n    </dl>\n  </section>\n  <section *ngIf=\"event?.sdk\">\n    <mat-divider></mat-divider>\n    <h3>SDK</h3>\n    <dl>\n      <gt-entry-data key=\"name\" [value]=\"event?.sdk?.name\"></gt-entry-data>\n      <gt-entry-data\n        key=\"version\"\n        [value]=\"event?.sdk?.version\"\n      ></gt-entry-data>\n    </dl>\n  </section>\n</section>\n"
        },
        {
            "name": "Fido2Component",
            "id": "component-Fido2Component-fbd04c318b8d5af7c993400de338d3e0",
            "file": "src/app/profile/multi-factor-auth/fido2/fido2.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-fido2",
            "styleUrls": [
                "./fido2.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fido2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "userKeys$",
                    "defaultValue": "this.service.FIDO2Keys$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\nimport { MultiFactorAuthService } from \"../multi-factor-auth.service\";\n\n@Component({\n  selector: \"gt-fido2\",\n  templateUrl: \"./fido2.component.html\",\n  styleUrls: [\"./fido2.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Fido2Component {\n  userKeys$ = this.service.FIDO2Keys$;\n  constructor(private service: MultiFactorAuthService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  \n    mat-card-content {\n      padding-top: 16px;\n    }\n  }",
                    "styleUrl": "./fido2.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MultiFactorAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MultiFactorAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-card>\n  <mat-card-title>Register Universal 2nd Factor (U2F) device</mat-card-title>\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    Keys:\n    <ng-container *ngFor=\"let key of userKeys$ | async\">\n      {{ key.name }}\n    </ng-container>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "FormErrorComponent",
            "id": "component-FormErrorComponent-b9ee112572adbb8eff229733769232c1",
            "file": "src/app/shared/forms/form-error/form-error.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-form-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ServerError | null | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport { ServerError } from \"../../django.interfaces\";\n\n@Component({\n  selector: \"gt-form-error\",\n  templateUrl: \"./form-error.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormErrorComponent {\n  @Input() error: ServerError | null | undefined = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<mat-error *ngFor=\"let non_field_error of error?.non_field_errors\">\n  <div>{{ non_field_error }}</div>\n</mat-error>\n"
        },
        {
            "name": "FrameExpandedComponent",
            "id": "component-FrameExpandedComponent-c2a08d796f7c6601c4d574162f96cd46",
            "file": "src/app/issues/issue-detail/event-detail/entry-exception/frame-expanded/frame-expanded.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-frame-expanded",
            "styleUrls": [
                "./frame-expanded.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./frame-expanded.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "[][]"
                },
                {
                    "name": "lineNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | number | null"
                },
                {
                    "name": "vars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "literal type | null"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "checkType",
                    "args": [
                        {
                            "name": "value",
                            "type": "JsonArrayOrObject | Json",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "JsonArrayOrObject | Json",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport { JsonArrayOrObject, Json } from \"src/app/interface-primitives\";\n\n@Component({\n  selector: \"gt-frame-expanded\",\n  templateUrl: \"./frame-expanded.component.html\",\n  styleUrls: [\"./frame-expanded.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FrameExpandedComponent {\n  @Input() lineNo?: string | number | null;\n  @Input() context?: (string | number)[][];\n  @Input() vars?: { [key: string]: Json } | null;\n\n  checkType(value: JsonArrayOrObject | Json): string {\n    if (value === null) {\n      return \"\";\n    } else if (typeof value !== \"string\" || Array.isArray(value)) {\n      return JSON.stringify(value);\n    } else {\n      return value;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n$left-column-width: 20%;\n\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.padding {\n  padding-left: 8px;\n  padding-right: 8px;\n}\n\n.context {\n  padding-top: 1px;\n  padding-bottom: 1px;\n}\n\n.highlight {\n  background: mat.get-color-from-palette($amaranth-palette, 100);\n}\n\n.var-wrapper {\n  padding-top: 32px;\n  padding-bottom: 16px;\n\n  .vars {\n    display: block;\n    clear: both;\n    padding-top: 8px;\n    padding-bottom: 8px;\n\n    dt {\n      float: left;\n      width: $left-column-width;\n      padding-right: 16px;\n    }\n\n    dd {\n      margin-left: $left-column-width;\n      width: 80%;\n    }\n  }\n}\n",
                    "styleUrl": "./frame-expanded.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngFor=\"let contextLine of context\">\n  <pre\n    [class.highlight]=\"\n      contextLine[0] == lineNo && context && context.length > 1\n    \"\n    class=\"context padding\"\n    >{{ contextLine[0] }}. {{ contextLine[1] }}</pre\n  >\n</div>\n<div class=\"var-wrapper\" *ngIf=\"vars\">\n  <ng-container *ngFor=\"let varList of vars | keyvalue\">\n    <mat-divider></mat-divider>\n    <div class=\"vars padding\">\n      <dt class=\"mat-body-strong\">{{ varList.key }}:</dt>\n      <dd>\n        <pre>{{ checkType(varList.value) }}</pre>\n      </dd>\n    </div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "FrameTitleComponent",
            "id": "component-FrameTitleComponent-d487dd3ca344354ef5f7654db57fc093",
            "file": "src/app/issues/issue-detail/event-detail/entry-exception/frame-title/frame-title.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-frame-title",
            "styleUrls": [
                "./frame-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./frame-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "eventPlatform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | null | undefined"
                },
                {
                    "name": "frame",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Frame | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "displayFilenameOrModule",
                    "args": [
                        {
                            "name": "platform",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "module",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "platform",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "module",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isUrl",
                    "args": [
                        {
                            "name": "str",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sanitizeUrl",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showToolTip",
                    "args": [
                        {
                            "name": "absPath",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "module",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nShow a tool tip with the absPath if it doesn't match filename or module",
                    "description": "<p>Show a tool tip with the absPath if it doesn&#39;t match filename or module</p>\n",
                    "jsdoctags": [
                        {
                            "name": "absPath",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "module",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport type { Frame } from \"src/app/issues/interfaces\";\n\n@Component({\n  selector: \"gt-frame-title\",\n  templateUrl: \"./frame-title.component.html\",\n  styleUrls: [\"./frame-title.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FrameTitleComponent {\n  @Input() frame: Frame | undefined;\n  @Input() eventPlatform: string | null | undefined;\n\n  /** Show a tool tip with the absPath if it doesn't match filename or module */\n  showToolTip(\n    absPath: string | null,\n    filename: string | null,\n    module: string | null\n  ): string {\n    if ((absPath && absPath !== filename) || (absPath && absPath !== module)) {\n      return absPath;\n    } else {\n      return \"\";\n    }\n  }\n\n  // tslint:disable-next-line: max-line-length\n  // Credit: Sentry https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx#L136\n  displayFilenameOrModule(\n    platform: string | null,\n    filename: string | null,\n    module: string | null\n  ): string | undefined {\n    switch (this.eventPlatform || platform) {\n      case \"java\":\n      case \"csharp\":\n        return module ? module : filename ? filename : undefined;\n      default:\n        return filename ? filename : module ? module : undefined;\n    }\n  }\n\n  isUrl(str: string | null): boolean {\n    if (str) {\n      return str.startsWith(\"http\") ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n  sanitizeUrl(str: string): string | null {\n    const url = sanitizeUrl(str);\n    if (url === \"about:blank\") {\n      return null;\n    } else {\n      return url;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n$helpIcon: 16px;\n\n.help-button {\n  width: $helpIcon;\n  height: 19px;\n  line-height: $helpIcon;\n  min-width: $helpIcon;\n  margin-left: -2px;\n  margin-right: 2px;\n  color: mat.get-color-from-palette(mat.$gray-palette, 800);\n\n  mat-icon {\n    font-size: $helpIcon;\n    height: 19px;\n    width: $helpIcon;\n    line-height: $helpIcon;\n  }\n}\n",
                    "styleUrl": "./frame-title.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container *ngIf=\"frame !== undefined\">\n  <ng-container *ngIf=\"frame.filename || frame.module\">\n    <span\n      [matTooltip]=\"\n        frame.absPath\n          ? showToolTip(frame.absPath, frame.filename, frame.module)\n          : ''\n      \"\n    >\n      {{\n        displayFilenameOrModule(frame.platform, frame.filename, frame.module)\n      }}\n    </span>\n    <ng-container\n      *ngIf=\"\n        displayFilenameOrModule(\n          frame.platform,\n          frame.filename,\n          frame.module\n        ) === frame.module && frame.filename\n      \"\n    >\n      <a\n        class=\"help-button\"\n        mat-icon-button\n        matTooltipPosition=\"above\"\n        [matTooltip]=\"frame.filename\"\n      >\n        <mat-icon>help</mat-icon>\n      </a></ng-container\n    >\n    <a\n      *ngIf=\"isUrl(frame.absPath)\"\n      [href]=\"frame.absPath ? sanitizeUrl(frame.absPath) : null\"\n      target=\"_blank\"\n      >{{ frame.absPath ? sanitizeUrl(frame.absPath) : null }}</a\n    >\n    <ng-container *ngIf=\"frame?.function\"> in </ng-container>\n  </ng-container>\n  <!-- TODO: Add rawFunction conditions-->\n  <ng-container *ngIf=\"frame.function\">{{ frame.function }}</ng-container>\n  <ng-container *ngIf=\"frame.lineNo && frame.lineNo > 0\">\n    at line {{ frame.lineNo\n    }}<ng-container *ngIf=\"frame.colNo && frame.colNo > 0\"\n      >:{{ frame.colNo }}</ng-container\n    ></ng-container\n  >\n  <ng-container *ngIf=\"frame.package\"> within {{ frame.package }}</ng-container>\n  <!--origAbsPath not in frame docs \ncode: https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx#L245\ndocs: https://gitlab.com/glitchtip/sentry-open-source/sentry-docs/-/blob/master/src/collections/_documentation/development/sdk-dev/event-payloads/stacktrace.md\n-->\n</ng-container>\n"
        },
        {
            "name": "HeaderNavComponent",
            "id": "component-HeaderNavComponent-af2f22eda79a04aef062002427f0999f",
            "file": "src/app/issues/header-nav/header-nav.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-header-nav",
            "styleUrls": [
                "./header-nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appliedProjectIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "appliedProjectIds$",
                    "defaultValue": "this.route.queryParams.pipe(\n    map((params) => {\n      const normalizedParams = normalizeProjectParams(params.project);\n      this.selectedProjectIds.next(\n        normalizedParams.map((id: string) => parseInt(id, 10))\n      );\n      return normalizedParams;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Projects that were previously selected and applied</p>\n",
                    "line": 35,
                    "rawdescription": "\nProjects that were previously selected and applied"
                },
                {
                    "name": "expansionPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatExpansionPanel",
                    "optional": true,
                    "description": "",
                    "line": 119,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expansionPanel', {static: false}"
                        }
                    ]
                },
                {
                    "name": "filteredProjects$",
                    "defaultValue": "combineLatest([\n    this.projects$.pipe(startWith([] as OrganizationProject[])),\n    this.filterProjectInput.valueChanges.pipe(startWith(\"\")),\n  ]).pipe(\n    map(([projects, value]) =>\n      projects\n        ? projects.filter((project) =>\n            project.name.toLowerCase().includes(value.toLowerCase())\n          )\n        : null\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<[] | null>",
                    "optional": false,
                    "description": "<p>Projects that are filtered via the text field form control</p>\n",
                    "line": 83,
                    "rawdescription": "\nProjects that are filtered via the text field form control"
                },
                {
                    "name": "filterInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": true,
                    "description": "",
                    "line": 122,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filterInput', {static: false}"
                        }
                    ]
                },
                {
                    "name": "filterProjectInput",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Used to filter project names</p>\n",
                    "line": 80,
                    "rawdescription": "\nUsed to filter project names"
                },
                {
                    "name": "projects$",
                    "defaultValue": "this.organizationsService.activeOrganizationProjects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>All projects available</p>\n",
                    "line": 26,
                    "rawdescription": "\nAll projects available"
                },
                {
                    "name": "selectedAndAppliedIdsAreEqual$",
                    "defaultValue": "combineLatest([\n    this.selectedProjectIds$,\n    this.appliedProjectIds$,\n  ]).pipe(\n    map(\n      ([selected, applied]) =>\n        selected.sort().join(\",\") === applied.sort().join(\",\")\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "selectedProjectIds",
                    "defaultValue": "new BehaviorSubject<number[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Projects that are selected in this component but not yet applied</p>\n",
                    "line": 29,
                    "rawdescription": "\nProjects that are selected in this component but not yet applied"
                },
                {
                    "name": "selectedProjectIds$",
                    "defaultValue": "this.selectedProjectIds.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Observable of selectedProjectIds, intended to separate concerns</p>\n",
                    "line": 32,
                    "rawdescription": "\nObservable of selectedProjectIds, intended to separate concerns"
                },
                {
                    "name": "selectedProjectsString$",
                    "defaultValue": "combineLatest([\n    this.projects$,\n    this.selectedProjectIds$,\n  ]).pipe(\n    map(([projects, ids]) => {\n      if (projects?.length === 1) {\n        return projects[0].name;\n      }\n      switch (ids.length) {\n        case 0:\n          return \"My Projects\";\n        case projects?.length:\n          return \"All Projects\";\n        default:\n          return ids\n            .map((id) => projects?.find((project) => id === project.id)?.name)\n            .join(\", \");\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Use selected projects to generate a string that&#39;s displayed in the UI</p>\n",
                    "line": 48,
                    "rawdescription": "\nUse selected projects to generate a string that's displayed in the UI"
                },
                {
                    "name": "singleProjectSlug$",
                    "defaultValue": "combineLatest([\n    this.projects$,\n    this.selectedProjectIds$,\n  ]).pipe(\n    map(([projects, ids]) => {\n      if (ids.length === 1 && projects) {\n        const matchedProject = projects.find(\n          (project) => project.id === ids[0]\n        );\n        if (matchedProject) {\n          return matchedProject.slug;\n        }\n        return false;\n      }\n      return false;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "someProjectsAreSelected$",
                    "defaultValue": "this.appliedProjectIds$.pipe(\n    map((ids) => ids.length !== 0)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                }
            ],
            "methodsClass": [
                {
                    "name": "closePanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "focusPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveDown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "moveUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "project",
                            "type": "number[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "number[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeydownHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetProjects",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nClose the project picker panel (if open) and remove all project filters",
                    "description": "<p>Close the project picker panel (if open) and remove all project filters</p>\n"
                },
                {
                    "name": "selectProjectAndClose",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleProject",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 124
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  OnInit,\n  HostListener,\n  ElementRef,\n} from \"@angular/core\";\nimport { filter, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, combineLatest, BehaviorSubject } from \"rxjs\";\nimport { FormControl } from \"@angular/forms\";\nimport { OrganizationProject } from \"../../api/organizations/organizations.interface\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { MatExpansionPanel } from \"@angular/material/expansion\";\nimport { normalizeProjectParams } from \"../utils\";\n\n@Component({\n  selector: \"gt-header-nav\",\n  templateUrl: \"./header-nav.component.html\",\n  styleUrls: [\"./header-nav.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderNavComponent implements OnInit {\n  /** All projects available */\n  projects$ = this.organizationsService.activeOrganizationProjects$;\n\n  /** Projects that are selected in this component but not yet applied */\n  selectedProjectIds = new BehaviorSubject<number[]>([]);\n\n  /** Observable of selectedProjectIds, intended to separate concerns */\n  selectedProjectIds$ = this.selectedProjectIds.asObservable();\n\n  /** Projects that were previously selected and applied */\n  appliedProjectIds$ = this.route.queryParams.pipe(\n    map((params) => {\n      const normalizedParams = normalizeProjectParams(params.project);\n      this.selectedProjectIds.next(\n        normalizedParams.map((id: string) => parseInt(id, 10))\n      );\n      return normalizedParams;\n    })\n  );\n\n  appliedProjectIds?: string[];\n\n  /** Use selected projects to generate a string that's displayed in the UI */\n  selectedProjectsString$ = combineLatest([\n    this.projects$,\n    this.selectedProjectIds$,\n  ]).pipe(\n    map(([projects, ids]) => {\n      if (projects?.length === 1) {\n        return projects[0].name;\n      }\n      switch (ids.length) {\n        case 0:\n          return \"My Projects\";\n        case projects?.length:\n          return \"All Projects\";\n        default:\n          return ids\n            .map((id) => projects?.find((project) => id === project.id)?.name)\n            .join(\", \");\n      }\n    })\n  );\n\n  selectedAndAppliedIdsAreEqual$ = combineLatest([\n    this.selectedProjectIds$,\n    this.appliedProjectIds$,\n  ]).pipe(\n    map(\n      ([selected, applied]) =>\n        selected.sort().join(\",\") === applied.sort().join(\",\")\n    )\n  );\n\n  /** Used to filter project names */\n  filterProjectInput = new FormControl();\n\n  /** Projects that are filtered via the text field form control */\n  filteredProjects$: Observable<OrganizationProject[] | null> = combineLatest([\n    this.projects$.pipe(startWith([] as OrganizationProject[])),\n    this.filterProjectInput.valueChanges.pipe(startWith(\"\")),\n  ]).pipe(\n    map(([projects, value]) =>\n      projects\n        ? projects.filter((project) =>\n            project.name.toLowerCase().includes(value.toLowerCase())\n          )\n        : null\n    )\n  );\n\n  someProjectsAreSelected$ = this.appliedProjectIds$.pipe(\n    map((ids) => ids.length !== 0)\n  );\n\n  singleProjectSlug$ = combineLatest([\n    this.projects$,\n    this.selectedProjectIds$,\n  ]).pipe(\n    map(([projects, ids]) => {\n      if (ids.length === 1 && projects) {\n        const matchedProject = projects.find(\n          (project) => project.id === ids[0]\n        );\n        if (matchedProject) {\n          return matchedProject.slug;\n        }\n        return false;\n      }\n      return false;\n    })\n  );\n\n  @ViewChild(\"expansionPanel\", { static: false })\n  expansionPanel?: MatExpansionPanel;\n\n  @ViewChild(\"filterInput\", { static: false })\n  filterInput?: ElementRef<HTMLInputElement>;\n\n  @HostListener(\"document:keydown\", [\"$event\"]) onKeydownHandler(\n    event: KeyboardEvent\n  ) {\n    if (this.expansionPanel?.expanded) {\n      if (event.key === \"Escape\") {\n        this.resetPanel();\n      }\n      if (event.key === \"ArrowDown\") {\n        event.preventDefault();\n        this.moveDown();\n      }\n      if (event.key === \"ArrowUp\") {\n        this.moveUp();\n      }\n    }\n  }\n\n  /** Close the project picker panel (if open) and remove all project filters */\n  resetProjects() {\n    this.closePanel();\n    this.navigate(null);\n  }\n\n  moveDown() {\n    const projectButtons = Array.from(\n      document.querySelectorAll(\".picker-button\")\n    ) as HTMLElement[];\n    // If the text box is focused, go to the first item\n    if (this.filterInput?.nativeElement.id === document.activeElement?.id) {\n      projectButtons[0]?.focus();\n    } else {\n      const indexOfActive = projectButtons.findIndex(\n        (button) => button.id === document.activeElement?.id\n      );\n      if (indexOfActive <= projectButtons.length - 2) {\n        // If we're in the list items, go to the next list item\n        projectButtons[indexOfActive + 1].focus();\n      } else {\n        // If we're in the last list item, go to the first item\n        projectButtons[0].focus();\n      }\n    }\n  }\n\n  moveUp() {\n    const projectButtons = Array.from(\n      document.querySelectorAll(\".picker-button\")\n    ) as HTMLElement[];\n    const indexOfActive = projectButtons.findIndex(\n      (button) => button.id === document.activeElement?.id\n    );\n    if (indexOfActive > 0) {\n      // If we're in the list items, go to the previous list item\n      projectButtons[indexOfActive - 1].focus();\n    } else {\n      // If we're in the first list item, go to the first item\n      this.filterInput?.nativeElement.focus();\n    }\n  }\n\n  navigate(project: number[] | null) {\n    this.router.navigate([], {\n      queryParams: { project: project ? project : null },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  isSelected(projectId: number) {\n    return !!this.selectedProjectIds.getValue().find((id) => id === projectId);\n  }\n\n  focusPanel() {\n    this.filterInput?.nativeElement.focus();\n  }\n\n  selectProjectAndClose(projectId: number) {\n    this.navigate([projectId]);\n    this.selectedProjectIds.next([projectId]);\n    this.expansionPanel?.close();\n  }\n\n  toggleProject(projectId: number) {\n    const selectedIds = [...this.selectedProjectIds.getValue()];\n    const idMatchIndex = selectedIds.indexOf(projectId);\n    if (idMatchIndex > -1) {\n      selectedIds.splice(idMatchIndex, 1);\n    } else {\n      selectedIds.push(projectId);\n    }\n    this.selectedProjectIds.next(selectedIds);\n  }\n\n  resetPanel() {\n    if (this.appliedProjectIds !== undefined) {\n      this.selectedProjectIds.next(\n        this.appliedProjectIds.map((id) => parseInt(id, 10))\n      );\n      this.expansionPanel?.close();\n    }\n  }\n\n  closePanel() {\n    this.navigate(this.selectedProjectIds.getValue());\n    this.expansionPanel?.close();\n  }\n\n  ngOnInit() {\n    this.appliedProjectIds$.subscribe((ids) => {\n      this.appliedProjectIds = ids;\n    });\n\n    this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"]),\n        filter((orgSlug: string) => orgSlug !== undefined),\n        tap(() => this.expansionPanel?.close())\n      )\n      .subscribe();\n  }\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nsection {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.no-projects {\n  &__picker {\n    @media screen and (max-width: $small - 1) {\n      display: none;\n    }\n  }\n}\n\n#project-picker {\n  position: relative;\n  flex: 1;\n}\n\n.reset-button {\n  position: absolute;\n  right: 50px;\n  z-index: 2;\n  height: 48px;\n  color: rgba(0, 0, 0, 0.54);\n  padding: 0;\n  width: 35px;\n  min-width: 35px;\n  overflow: hidden;\n  transform: translateY(0);\n  transition: transform 0.2s;\n}\n\n.mat-expanded + .reset-button {\n  transform: translateY(4px);\n}\n\nmat-accordion {\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  height: 48px;\n  z-index: 2;\n}\n\nmat-expansion-panel.mat-expansion-panel {\n  flex: 1;\n  &:first-of-type,\n  &:last-of-type {\n    border-radius: 0;\n  }\n}\n\nmat-expansion-panel::ng-deep {\n  div.mat-expansion-panel-body {\n    padding-left: 0;\n    padding-right: 0;\n\n    .mat-list-base .mat-list-item .mat-list-item-content {\n      padding-left: 24px;\n      padding-right: 24px;\n    }\n  }\n\n  .mat-selection-list {\n    max-height: 275px;\n    overflow-y: auto;\n  }\n\n  .mat-form-field {\n    display: block;\n  }\n\n  .mat-form-field-wrapper {\n    margin-left: 24px;\n    margin-right: 24px;\n  }\n\n  .mat-expansion-panel-header[aria-disabled=\"true\"] {\n    color: rgba(0, 0, 0, 0.87);\n\n    &.disabled-looking {\n      color: rgba(0, 0, 0, 0.4);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    display: block;\n  }\n\n  .button-group {\n    text-align: right;\n    margin-top: 16px;\n    margin-right: 24px;\n  }\n\n  button {\n    margin-left: 5px;\n  }\n}\n\n.list-item {\n  button {\n    // borrowed from some \"button unstyled\" classes I've done elsewhere\n    display: inline-block;\n    border: none;\n    margin: 0 15px 0 0; // 0\n    padding: 12px 0; // 0\n    -webkit-text-fill-color: currentColor;\n    background: transparent;\n    -webkit-appearance: none;\n    cursor: pointer;\n    color: inherit;\n    font-weight: inherit;\n\n    width: 100%;\n    text-align: left;\n  }\n\n  .disabled {\n    cursor: default;\n    pointer-events: none;\n    color: #b0b0b0;\n  }\n\n  mat-checkbox ::ng-deep label {\n    position: relative;\n\n    &:after {\n      $hitbox: -15px;\n      content: \"\";\n      background: transparent;\n      position: absolute;\n      top: $hitbox;\n      right: $hitbox;\n      bottom: $hitbox;\n      left: $hitbox;\n    }\n  }\n}\n\n.nav-action-group {\n  margin-left: 10px;\n\n  @media screen and (max-width: $medium - 1) {\n    display: flex;\n    flex-direction: column;\n\n    .nav-action:not(:last-child) {\n      margin-bottom: 5px;\n    }\n  }\n\n  @media screen and (max-width: $small - 1) {\n    margin-left: 0;\n  }\n}\n\n.nav-action {\n  margin: 0 0 0 10px;\n\n  @media screen and (max-width: $small - 1) {\n    display: none;\n\n    .no-projects & {\n      display: block;\n      margin-left: 0;\n    }\n  }\n}\n",
                    "styleUrl": "./header-nav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 242,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section\n  *ngIf=\"projects$ | async as projects\"\n  [class.no-projects]=\"(projects$ | async)?.length === 0\"\n>\n  <div [class.no-projects__picker]=\"!projects.length\" id=\"project-picker\">\n    <mat-accordion displayMode=\"flat\" [hideToggle]=\"projects.length < 2\">\n      <mat-expansion-panel\n        #expansionPanel\n        class=\"mat-elevation-z1\"\n        (afterExpand)=\"focusPanel()\"\n        [disabled]=\"projects.length < 2\"\n      >\n        <mat-expansion-panel-header\n          [class.disabled-looking]=\"projects.length === 0\"\n        >\n          <mat-panel-title>\n            {{ selectedProjectsString$ | async }}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field>\n          <input\n            #filterInput\n            type=\"text\"\n            placeholder=\"Filter projects\"\n            aria-label=\"Filter projects\"\n            matInput\n            [formControl]=\"filterProjectInput\"\n          />\n        </mat-form-field>\n\n        <mat-list>\n          <mat-list-item\n            class=\"list-item\"\n            *ngFor=\"let project of filteredProjects$ | async\"\n          >\n            <button\n              id=\"picker-button-{{ project.id }}\"\n              class=\"picker-button mat-body-1\"\n              [class.disabled]=\"!project.isMember\"\n              (click)=\"selectProjectAndClose(project.id)\"\n            >\n              {{ project.name }}\n            </button>\n            <mat-checkbox\n              (change)=\"toggleProject(project.id)\"\n              [checked]=\"isSelected(project.id)\"\n              [disabled]=\"!project.isMember\"\n            >\n            </mat-checkbox>\n          </mat-list-item>\n        </mat-list>\n\n        <div class=\"button-group\">\n          <button\n            *ngIf=\"someProjectsAreSelected$ | async\"\n            mat-stroked-button\n            (click)=\"navigate(null); expansionPanel.close()\"\n          >\n            View All\n          </button>\n          <button mat-flat-button (click)=\"closePanel()\" color=\"primary\">\n            <ng-container\n              *ngIf=\"(selectedAndAppliedIdsAreEqual$ | async) === false\"\n            >\n              Apply &\n            </ng-container>\n            Close\n          </button>\n        </div>\n      </mat-expansion-panel>\n      <button\n        mat-button\n        class=\"reset-button\"\n        *ngIf=\"(appliedProjectIds$ | async)?.length\"\n        (click)=\"resetProjects()\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-accordion>\n  </div>\n  <div class=\"nav-action-group\">\n    <a\n      mat-stroked-button\n      color=\"primary\"\n      class=\"nav-action\"\n      [routerLink]=\"['..', 'settings', 'projects', 'new']\"\n    >\n      <mat-icon>add</mat-icon>\n      Add Project\n    </a>\n    <a\n      *ngIf=\"projects.length > 0\"\n      mat-stroked-button\n      color=\"primary\"\n      class=\"nav-action\"\n      [routerLink]=\"\n        (singleProjectSlug$ | async)\n          ? ['..', 'settings', 'projects', singleProjectSlug$ | async]\n          : ['..', 'settings', 'projects']\n      \"\n    >\n      <mat-icon>settings</mat-icon>\n      Project Settings\n    </a>\n  </div>\n</section>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-ba348f368b0c88dccfd12ba6f0e03001",
            "file": "src/app/home/home.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "template": "<gt-project-list></gt-project-list>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\n@Component({\n  selector: \"gt-home\",\n  template: `<gt-project-list></gt-project-list>`,\n  styleUrls: [\"./home.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IssueDetailComponent",
            "id": "component-IssueDetailComponent-37d73daff6d81794d671564b9520d5f3",
            "file": "src/app/issues/issue-detail/issue-detail.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-issue-detail",
            "styleUrls": [
                "./issue-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    assignee: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "this.issueService.issueInitialLoadComplete$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "issue$",
                    "defaultValue": "this.issueService.issue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "issueIdParam$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => params.get(\"issue-id\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "organization$",
                    "defaultValue": "this.organizationsService.activeOrganization$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "participantCountPluralMapping",
                    "defaultValue": "{\n    \"=0\": \"No Participants\",\n    \"=1\": \"1 Participant\",\n    other: \"# Participants\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteIssue",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateBackLink",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "markIgnored",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markResolved",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markUnresolved",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, exhaustMap, tap } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\nimport { IssueDetailService } from \"./issue-detail.service\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\n\n@Component({\n  selector: \"gt-issue-detail\",\n  templateUrl: \"./issue-detail.component.html\",\n  styleUrls: [\"./issue-detail.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IssueDetailComponent implements OnInit {\n  issue$ = this.issueService.issue$;\n  initialLoadComplete$ = this.issueService.issueInitialLoadComplete$;\n  form = new FormGroup({\n    assignee: new FormControl(\"\"),\n  });\n  issueIdParam$ = this.route.paramMap.pipe(\n    map((params) => params.get(\"issue-id\"))\n  );\n  organization$ = this.organizationsService.activeOrganization$;\n  participantCountPluralMapping: { [k: string]: string } = {\n    \"=0\": \"No Participants\",\n    \"=1\": \"1 Participant\",\n    other: \"# Participants\",\n  };\n\n  constructor(\n    private issueService: IssueDetailService,\n    private organizationsService: OrganizationsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.issueIdParam$\n      .pipe(\n        tap(() => this.issueService.clearState()),\n        exhaustMap((issueId) => {\n          if (issueId) {\n            return this.issueService.retrieveIssue(+issueId);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n\n  markResolved() {\n    this.issueService.setStatus(\"resolved\");\n  }\n\n  markUnresolved() {\n    this.issueService.setStatus(\"unresolved\");\n  }\n\n  markIgnored() {\n    this.issueService.setStatus(\"ignored\");\n  }\n\n  deleteIssue(id?: number) {\n    if (\n      id &&\n      window.confirm(\n        `Are you sure you want delete this issue? You will permanently lose this issue and all associated events.`\n      )\n    ) {\n      this.issueService.deleteIssue(id.toString());\n    }\n  }\n\n  generateBackLink(projectId: string) {\n    return {\n      ...this.route.snapshot.queryParams,\n      project: projectId,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.mat-h1 {\n  padding-right: 20px;\n}\n\n.issue-404 h1 {\n  text-align: left;\n}\n\nheader {\n  margin: -16px 0 5px;\n\n  @media screen and (max-width: $tablet - 1) {\n    margin-bottom: 20px;\n  }\n\n  .header-group {\n    display: flex;\n    justify-content: space-between;\n\n    @media screen and (max-width: $tablet - 1) {\n      flex-direction: column;\n    }\n  }\n\n  .button-row button {\n    margin-right: 8px;\n  }\n\n  gt-issue-detail-title {\n    margin-right: 20px;\n  }\n}\n\ndl {\n  margin-top: 0;\n\n  > div {\n    margin-bottom: 15px;\n  }\n\n  // this was done to mimic a table I removed, design preferences\n  // aren't set in stone here\n  dt {\n    font-weight: 500;\n    opacity: 0.54;\n    margin: 2px 0;\n  }\n\n  dd {\n    margin: 0;\n  }\n}\n\n.event-detail-card {\n  margin-right: 16px;\n\n  @media screen and (max-width: $medium - 1) {\n    margin-right: 0;\n  }\n\n  > .tabbed-nav {\n    margin: -16px -16px 16px;\n  }\n}\n\nmat-grid-list {\n  height: 90vh;\n}\n\n.tags {\n  display: flex;\n  justify-content: space-between;\n}\n\n.row {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: $medium - 1) {\n    flex-direction: column-reverse;\n  }\n\n  .left {\n    flex: 75%;\n    overflow: hidden;\n\n    @media screen and (max-width: $medium - 1) {\n      width: 100%;\n    }\n  }\n\n  .right {\n    flex: 25%;\n\n    @media screen and (max-width: $medium - 1) {\n      width: 100%;\n      margin-bottom: 30px;\n    }\n  }\n}\n\ntable.mat-table {\n  background: none;\n}\n\n.project-issues-link {\n  margin: 0 0 20px;\n}\n\n.report-badge > span {\n  text-overflow: initial;\n}\n",
                    "styleUrl": "./issue-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section\n  class=\"l-body l-body--full-width\"\n  *ngIf=\"(initialLoadComplete$ | async) && (issue$ | async) === null\"\n>\n  <mat-card\n    class=\"auth-form issue-404\"\n    *ngIf=\"organization$ | async as organization\"\n  >\n    <h1 class=\"mat-display-1\">Issue not found</h1>\n    <p class=\"mat-body-1\">\n      This may be because the URL is pointing to an issue that doesn't exist or\n      was deleted.\n    </p>\n    <p class=\"mat-body-1\">\n      It's also possible that this issue was reported to a project that you are\n      not able to access.\n    </p>\n    <a\n      mat-flat-button\n      color=\"primary\"\n      class=\"project-issues-link\"\n      [routerLink]=\"['..']\"\n    >\n      View all issues in {{ organization.name }}\n    </a>\n  </mat-card>\n</section>\n<section class=\"l-body l-body--full-width\" *ngIf=\"issue$ | async as issue\">\n  <header>\n    <a\n      mat-stroked-button\n      class=\"project-issues-link\"\n      [routerLink]=\"['..']\"\n      [queryParams]=\"generateBackLink(issue.project.id)\"\n    >\n      <mat-icon>keyboard_arrow_left</mat-icon>\n      View all issues for {{ issue.project.name }}\n    </a>\n    <div class=\"header-group\">\n      <gt-issue-detail-title\n        [issueType]=\"issue?.type\"\n        [culprit]=\"issue?.culprit\"\n        [metadata]=\"issue?.metadata\"\n      ></gt-issue-detail-title>\n      <div class=\"button-row\">\n        <button\n          *ngIf=\"issue?.status === 'unresolved'\"\n          mat-flat-button\n          color=\"primary\"\n          (click)=\"markResolved()\"\n        >\n          <mat-icon aria-hidden=\"true\">done</mat-icon>\n          Resolve\n        </button>\n        <button\n          *ngIf=\"issue?.status === 'resolved'\"\n          mat-flat-button\n          color=\"primary\"\n          (click)=\"markUnresolved()\"\n        >\n          <mat-icon aria-hidden=\"true\">done</mat-icon>\n          Reopen\n        </button>\n        <button mat-stroked-button (click)=\"markIgnored()\">Ignore</button>\n        <button mat-icon-button (click)=\"deleteIssue(issue?.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n    </div>\n    <p class=\"mat-body-1\" *ngIf=\"issue.status === 'resolved'\">\n      This issue has been marked as resolved.\n    </p>\n    <p class=\"mat-body-1\" *ngIf=\"issue.status === 'ignored'\">\n      This issue is being ignored. You will not be notified of any changes and\n      it will not show up by default in the issues page.\n    </p>\n  </header>\n\n  <div class=\"row\">\n    <mat-card class=\"event-detail-card left\">\n      <nav mat-tab-nav-bar class=\"tabbed-nav\">\n        <a\n          mat-tab-link\n          [routerLink]=\"['./']\"\n          routerLinkActive\n          [active]=\"details.isActive\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          #details=\"routerLinkActive\"\n        >\n          Event Details\n        </a>\n        <a\n          mat-tab-link\n          [routerLink]=\"['user-reports']\"\n          routerLinkActive\n          [active]=\"reports.isActive\"\n          #reports=\"routerLinkActive\"\n        >\n          <span\n            *ngIf=\"issue.userReportCount > 0\"\n            [matBadge]=\"\n              issue.userReportCount < 100\n                ? issue.userReportCount.toString()\n                : '99+'\n            \"\n            matBadgeOverlap=\"false\"\n            class=\"report-badge\"\n          >\n            User Reports\n          </span>\n          <ng-container *ngIf=\"issue.userReportCount === 0\">\n            User Reports\n          </ng-container>\n        </a>\n      </nav>\n\n      <router-outlet></router-outlet>\n    </mat-card>\n    <aside class=\"right\">\n      <mat-card>\n        <dl>\n          <div>\n            <dt class=\"mat-caption\">Issue #</dt>\n            <dd class=\"mat-body-1\">{{ issue?.shortId }}</dd>\n          </div>\n          <div>\n            <dt class=\"mat-caption\">Events</dt>\n            <dd class=\"mat-body-1\">{{ issue?.count }}</dd>\n          </div>\n          <div>\n            <dt class=\"mat-caption\">First Seen</dt>\n            <dd class=\"mat-body-1\">{{ issue.firstSeen | daysAgo }}</dd>\n            <dd class=\"mat-caption\">\n              {{ issue?.firstSeen | date: \"long\" }}\n            </dd>\n          </div>\n          <div>\n            <dt class=\"mat-caption\">Last Seen</dt>\n            <dd class=\"mat-body-1\">{{ issue.lastSeen | daysAgo }}</dd>\n            <dd class=\"mat-caption\">\n              {{ issue?.lastSeen | date: \"long\" }}\n            </dd>\n          </div>\n        </dl>\n      </mat-card>\n      <gt-issue-detail-tags></gt-issue-detail-tags>\n    </aside>\n  </div>\n</section>\n"
        },
        {
            "name": "IssueDetailTagsComponent",
            "id": "component-IssueDetailTagsComponent-56ebf7dd5c2963300b13f709f6993167",
            "file": "src/app/issues/issue-detail/issue-detail-tags/issue-detail-tags.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-issue-detail-tags",
            "styleUrls": [
                "./issue-detail-tags.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-detail-tags.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "issueIdParam$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => params.get(\"issue-id\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "percent",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "tags$",
                    "defaultValue": "this.issueService.tags$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { IssueDetailService } from \"../issue-detail.service\";\nimport { exhaustMap, map } from \"rxjs/operators\";\nimport { EMPTY } from \"rxjs\";\n\n@Component({\n  selector: \"gt-issue-detail-tags\",\n  templateUrl: \"./issue-detail-tags.component.html\",\n  styleUrls: [\"./issue-detail-tags.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IssueDetailTagsComponent implements OnInit {\n  tags$ = this.issueService.tags$;\n\n  issueIdParam$ = this.route.paramMap.pipe(\n    map((params) => params.get(\"issue-id\"))\n  );\n  percent = 10;\n\n  constructor(\n    private issueService: IssueDetailService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.issueIdParam$\n      .pipe(\n        exhaustMap((issueId) => {\n          if (issueId) {\n            return this.issueService.retrieveTags(+issueId);\n          }\n          return EMPTY;\n        })\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\nmat-card {\n  margin-top: 24px;\n  padding-bottom: 32px;\n}\n\n.key {\n  font-weight: 700;\n}\n\n.bars {\n  height: 16px;\n  display: flex;\n  justify-content: flex-start;\n}\n\n.bar {\n  background: mat.get-color-from-palette(mat.$gray-palette, 400);\n  box-shadow: none;\n  transition: all 0.5s;\n\n  &:not(:last-child) {\n    border-right: 1px solid white;\n  }\n\n  &:hover {\n    background: $amaranth;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  }\n}\n\n.top-value {\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:first-child) {\n    margin-top: 24px;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n}\n",
                    "styleUrl": "./issue-detail-tags.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card *ngIf=\"(tags$ | async)?.length\">\n  <h3 class=\"mat-body-strong\">Tags</h3>\n  <ng-container *ngFor=\"let tag of tags$ | async\">\n    <p class=\"top-value mat-caption\">\n      <span class=\"key\">{{ tag.key }}</span>\n      <span>\n        {{ tag.topValues[0].value }}: {{ tag.topValues[0].percentRounded }}%\n      </span>\n    </p>\n    <div>\n      <div class=\"bars\">\n        <span\n          *ngFor=\"let topValue of tag.topValues\"\n          class=\"bar\"\n          [ngStyle]=\"{\n            'width.%': topValue.percentRounded\n          }\"\n          matTooltip=\"\n            {{ topValue.value }} - {{ topValue.percentRounded }}%\n          \"\n          matTooltipPosition=\"left\"\n        ></span\n        ><span\n          class=\"bar\"\n          [ngStyle]=\"{\n            'width.%': tag.other\n          }\"\n          matTooltip=\"\n          Other - {{ tag.other }}%\n        \"\n          matTooltipPosition=\"left\"\n        ></span>\n      </div></div\n  ></ng-container>\n</mat-card>\n"
        },
        {
            "name": "IssueDetailTitleComponent",
            "id": "component-IssueDetailTitleComponent-d7322a320f37f1d76f0b988fc6266b4a",
            "file": "src/app/issues/issue-detail/issue-detail-title/issue-detail-title.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-issue-detail-title",
            "styleUrls": [
                "./issue-detail-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-detail-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "culprit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | null"
                },
                {
                    "name": "issueType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "IssueMetadata"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport type { IssueMetadata } from \"../../interfaces\";\n\n@Component({\n  selector: \"gt-issue-detail-title\",\n  templateUrl: \"./issue-detail-title.component.html\",\n  styleUrls: [\"./issue-detail-title.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IssueDetailTitleComponent {\n  @Input() issueType?: string;\n  @Input() culprit?: string | null;\n  @Input() metadata?: IssueMetadata;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: block;\n  overflow: hidden;\n}\n\n.mat-h1 {\n  padding-right: 8px;\n}\n\n.mat-subheading-1 {\n  margin-bottom: 0;\n}\n",
                    "styleUrl": "./issue-detail-title.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h1 *ngIf=\"metadata !== undefined\" class=\"mat-headline\">\n  <ng-container [ngSwitch]=\"issueType\">\n    <ng-container *ngSwitchCase=\"'error'\">\n      <span class=\"mat-h1\">\n        <ng-container *ngIf=\"metadata.type; else errorTitleFunction\">\n          {{ metadata.type }}\n        </ng-container>\n        <ng-template #errorTitleFunction>\n          {{ metadata.function || \"&lt;unknown&gt;\" }}\n        </ng-template></span\n      ><span class=\"mat-h3\">{{ culprit }}</span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'csp'\">\n      <span class=\"mat-h1\">{{ metadata.directive || \"\" }}</span>\n      <span class=\"mat-h3\">{{ metadata.uri }}</span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'expectct' || 'expectstaple' || 'hpkp'\">\n      <span class=\"mat-h1\">{{ metadata.message || \"\" }}</span>\n      <span class=\"mat-h3\">{{ metadata.origin }}</span>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <span class=\"mat-h1\">{{ metadata.title }}</span>\n    </ng-container>\n  </ng-container>\n  <p class=\"mat-subheading-1\">\n    <ng-container [ngSwitch]=\"issueType\">\n      <ng-container *ngSwitchCase=\"'error'\">{{ metadata.value }}</ng-container>\n      <ng-container *ngSwitchCase=\"'csp'\">{{ metadata.message }}</ng-container>\n      <ng-container *ngSwitchCase=\"'expectct' || 'expectstaple' || 'hpkp'\"\n        ><!--blank--></ng-container\n      >\n      <ng-container *ngSwitchDefault> {{ culprit }}</ng-container>\n    </ng-container>\n  </p>\n</h1>\n"
        },
        {
            "name": "IssuesPageComponent",
            "id": "component-IssuesPageComponent-018abebedfc072ed69ab1bffda736e81",
            "file": "src/app/issues/issues-page/issues-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-issues-page",
            "styleUrls": [
                "./issues-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issues-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganization$",
                    "defaultValue": "this.organizationsService.activeOrganization$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "activeOrganizationProjects$",
                    "defaultValue": "this.organizationsService\n    .activeOrganizationProjects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "appliedProjectCount$",
                    "defaultValue": "this.projectsFromParams$.pipe(\n    map((projects) => {\n      if (Array.isArray(projects)) {\n        return projects.length;\n      }\n      return 0;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Corresponds to project picker/header nav/project IDs in the URL\nIf the count is zero, we show issues from all projects</p>\n",
                    "line": 163,
                    "rawdescription": "\n\nCorresponds to project picker/header nav/project IDs in the URL\nIf the count is zero, we show issues from all projects\n"
                },
                {
                    "name": "areAllSelected$",
                    "defaultValue": "this.issuesService.areAllSelected$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "dateForm",
                    "defaultValue": "new FormGroup({\n    startDate: new FormControl(\"\"),\n    endDate: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\"select\", \"title\", \"events\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "environmentForm",
                    "defaultValue": "new FormGroup({\n    environment: new FormControl({ value: \"\" }),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "errors$",
                    "defaultValue": "this.issuesService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "eventCountPluralMapping",
                    "defaultValue": "{\n    \"=1\": \"1 event\",\n    other: \"# events\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    query: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "issues$",
                    "defaultValue": "combineLatest([\n    this.issuesService.issuesWithSelected$,\n    this.loading$,\n  ]).pipe(map(([issues, loading]) => (!loading ? issues : [])))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.issuesService.getState$.pipe(\n    map((state) => state.pagination.loading)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "navigationEnd$",
                    "defaultValue": "this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    withLatestFrom(this.route.params, this.route.queryParams),\n    map(([event, params, queryParams]) => {\n      const orgSlug: string | undefined = params[\"org-slug\"];\n      const cursor: string | undefined = queryParams.cursor;\n      const query: string | undefined = queryParams.query;\n      let project: string[] | null = null;\n      if (typeof queryParams.project === \"string\") {\n        project = [queryParams.project];\n      } else if (typeof queryParams.project === \"object\") {\n        project = queryParams.project;\n      }\n      const start: string | undefined = queryParams.start;\n      const end: string | undefined = queryParams.end;\n      const sort: string | undefined = queryParams.sort;\n      const environment: string | undefined = queryParams.environment;\n      return { orgSlug, cursor, query, project, start, end, sort, environment };\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "numberOfSelectedIssues$",
                    "defaultValue": "this.issuesService.numberOfSelectedIssues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "organizationEnvironments$",
                    "defaultValue": "combineLatest([\n    this.appliedProjectCount$,\n    this.issuesService.organizationEnvironmentsProcessed$,\n    this.environmentsService.visibleEnvironments$,\n  ]).pipe(\n    map(([appliedProjectCount, orgEnvironments, projectEnvironments]) =>\n      appliedProjectCount !== 1 ? orgEnvironments : projectEnvironments\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "orgEnvironmentSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "projectDetailTriggerProjectCount",
                    "defaultValue": "combineLatest([\n    this.navigationEnd$,\n    this.activeOrganization$,\n  ]).pipe(\n    filter(([navEnd]) => (navEnd.project ? navEnd.project.length > 0 : false)),\n    distinctUntilChanged(\n      ([previousNavEnd], [currentNavEnd]) =>\n        previousNavEnd.project?.toString() === currentNavEnd.project?.toString()\n    ),\n    map(([navEnd, activeOrg]) => ({\n      orgSlug: navEnd.orgSlug,\n      projectId: navEnd.project,\n      activeOrgProjects: activeOrg ? activeOrg.projects : [],\n    }))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Two ways to trigger project detail. The second is if project URL\nparams change.</p>\n",
                    "line": 139,
                    "rawdescription": "\n\nTwo ways to trigger project detail. The second is if project URL\nparams change.\n"
                },
                {
                    "name": "projectDetailTriggerSwitchOrgs",
                    "defaultValue": "combineLatest([\n    this.navigationEnd$,\n    this.activeOrganization$,\n  ]).pipe(\n    filter(([navEnd, activeOrg]) => {\n      return navEnd.orgSlug && activeOrg\n        ? navEnd.orgSlug === activeOrg.slug\n        : false;\n    }),\n    distinctUntilChanged(\n      ([_, previousActiveOrg], [__, currentActiveOrg]) =>\n        previousActiveOrg?.slug === currentActiveOrg?.slug\n    ),\n    map(([navEnd, activeOrg]) => ({\n      orgSlug: navEnd.orgSlug,\n      projectId: navEnd.project,\n      activeOrgProjects: activeOrg ? activeOrg.projects : [],\n    }))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Two ways to trigger project detail. The first is if we switch orgs.\nFiltered out the cases where orgSlug from URL wasn&#39;t the same as\nactive org, and then only move on if the slug actually changes.</p>\n",
                    "line": 115,
                    "rawdescription": "\n\nTwo ways to trigger project detail. The first is if we switch orgs.\nFiltered out the cases where orgSlug from URL wasn't the same as\nactive org, and then only move on if the slug actually changes.\n"
                },
                {
                    "name": "projectEnvironmentSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "projectsFromParams$",
                    "defaultValue": "this.route.queryParams.pipe(\n    map((params) => normalizeProjectParams(params.project))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "resetEnvironmentSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "routerEventSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "searchHits$",
                    "defaultValue": "this.issuesService.searchHits$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "selectedProjectInfo$",
                    "defaultValue": "this.issuesService.selectedProjectInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "showBulkSelectProject$",
                    "defaultValue": "combineLatest([\n    this.appliedProjectCount$,\n    this.areAllSelected$,\n    this.numberOfSelectedIssues$,\n    this.searchHits$,\n  ]).pipe(\n    map(\n      ([\n        appliedProjectCount,\n        areAllSelected,\n        numberOfSelectIssues,\n        searchHits,\n      ]) => {\n        const hits = searchHits && numberOfSelectIssues < searchHits;\n        if (appliedProjectCount === 1 && areAllSelected && hits) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "sortForm",
                    "defaultValue": "new FormGroup({\n    sort: new FormControl({\n      value: \"\",\n      disabled: true,\n    }),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "sorts",
                    "defaultValue": "sorts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "thereAreSelectedIssues$",
                    "defaultValue": "this.issuesService.thereAreSelectedIssues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "paginator$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Paginator>",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "inheritance": {
                        "file": "PaginationBaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "bulkMarkIgnored",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 400,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bulkMarkResolved",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 392,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bulkMarkUnresolved",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 396,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bulkUpdateProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 412,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearBulkProjectUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 426,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dateFormReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 370,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterByEnvironment",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatSelectChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatSelectChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 328,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 304,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDateFormSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 337,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 382,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sortByChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatSelectChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 430,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatSelectChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleCheck",
                    "args": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 404,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "issueId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSelectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 408,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  OnInit,\n} from \"@angular/core\";\nimport { formatDate } from \"@angular/common\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { MatSelectChange } from \"@angular/material/select\";\nimport { Router, ActivatedRoute, NavigationEnd } from \"@angular/router\";\nimport { Subscription, combineLatest, EMPTY } from \"rxjs\";\nimport {\n  map,\n  filter,\n  withLatestFrom,\n  distinctUntilChanged,\n  tap,\n  mergeMap,\n} from \"rxjs/operators\";\nimport { IssuesService, IssuesState } from \"../issues.service\";\nimport { normalizeProjectParams } from \"../utils\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { PaginationBaseComponent } from \"src/app/shared/stateful-service/pagination-stateful-service\";\nimport { ProjectEnvironmentsService } from \"src/app/settings/projects/project-detail/project-environments/project-environments.service\";\n\nexport const sorts = {\n  \"-last_seen\": \"Last Seen\",\n  last_seen: \"First Seen\",\n  \"-created\": \"Newest Creation Date\",\n  created: \"Oldest Creation Date\",\n  \"-count\": \"Most Frequent\",\n  count: \"Least Frequent\",\n  \"-priority\": \"Highest Priority\",\n  priority: \"Lowest Priority\",\n};\n\n@Component({\n  selector: \"gt-issues-page\",\n  templateUrl: \"./issues-page.component.html\",\n  styleUrls: [\"./issues-page.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IssuesPageComponent\n  extends PaginationBaseComponent<IssuesState, IssuesService>\n  implements OnInit, OnDestroy {\n  displayedColumns: string[] = [\"select\", \"title\", \"events\"];\n  loading$ = this.issuesService.getState$.pipe(\n    map((state) => state.pagination.loading)\n  );\n  searchHits$ = this.issuesService.searchHits$;\n  form = new FormGroup({\n    query: new FormControl(\"\"),\n  });\n  sortForm = new FormGroup({\n    sort: new FormControl({\n      value: \"\",\n      disabled: true,\n    }),\n  });\n  environmentForm = new FormGroup({\n    environment: new FormControl({ value: \"\" }),\n  });\n  dateForm = new FormGroup({\n    startDate: new FormControl(\"\"),\n    endDate: new FormControl(\"\"),\n  });\n\n  issues$ = combineLatest([\n    this.issuesService.issuesWithSelected$,\n    this.loading$,\n  ]).pipe(map(([issues, loading]) => (!loading ? issues : [])));\n  areAllSelected$ = this.issuesService.areAllSelected$;\n  thereAreSelectedIssues$ = this.issuesService.thereAreSelectedIssues$;\n  selectedProjectInfo$ = this.issuesService.selectedProjectInfo$;\n  numberOfSelectedIssues$ = this.issuesService.numberOfSelectedIssues$;\n  activeOrganizationProjects$ = this.organizationsService\n    .activeOrganizationProjects$;\n  activeOrganization$ = this.organizationsService.activeOrganization$;\n  navigationEnd$ = this.router.events.pipe(\n    filter((event) => event instanceof NavigationEnd),\n    withLatestFrom(this.route.params, this.route.queryParams),\n    map(([event, params, queryParams]) => {\n      const orgSlug: string | undefined = params[\"org-slug\"];\n      const cursor: string | undefined = queryParams.cursor;\n      const query: string | undefined = queryParams.query;\n      let project: string[] | null = null;\n      if (typeof queryParams.project === \"string\") {\n        project = [queryParams.project];\n      } else if (typeof queryParams.project === \"object\") {\n        project = queryParams.project;\n      }\n      const start: string | undefined = queryParams.start;\n      const end: string | undefined = queryParams.end;\n      const sort: string | undefined = queryParams.sort;\n      const environment: string | undefined = queryParams.environment;\n      return { orgSlug, cursor, query, project, start, end, sort, environment };\n    })\n  );\n  errors$ = this.issuesService.errors$;\n  routerEventSubscription: Subscription;\n  orgEnvironmentSubscription: Subscription;\n  projectEnvironmentSubscription: Subscription;\n  resetEnvironmentSubscription: Subscription;\n  eventCountPluralMapping: { [k: string]: string } = {\n    \"=1\": \"1 event\",\n    other: \"# events\",\n  };\n  sorts = sorts;\n\n  /**\n   * Two ways to trigger project detail. The first is if we switch orgs.\n   * Filtered out the cases where orgSlug from URL wasn't the same as\n   * active org, and then only move on if the slug actually changes.\n   */\n  projectDetailTriggerSwitchOrgs = combineLatest([\n    this.navigationEnd$,\n    this.activeOrganization$,\n  ]).pipe(\n    filter(([navEnd, activeOrg]) => {\n      return navEnd.orgSlug && activeOrg\n        ? navEnd.orgSlug === activeOrg.slug\n        : false;\n    }),\n    distinctUntilChanged(\n      ([_, previousActiveOrg], [__, currentActiveOrg]) =>\n        previousActiveOrg?.slug === currentActiveOrg?.slug\n    ),\n    map(([navEnd, activeOrg]) => ({\n      orgSlug: navEnd.orgSlug,\n      projectId: navEnd.project,\n      activeOrgProjects: activeOrg ? activeOrg.projects : [],\n    }))\n  );\n\n  /**\n   * Two ways to trigger project detail. The second is if project URL\n   * params change.\n   */\n  projectDetailTriggerProjectCount = combineLatest([\n    this.navigationEnd$,\n    this.activeOrganization$,\n  ]).pipe(\n    filter(([navEnd]) => (navEnd.project ? navEnd.project.length > 0 : false)),\n    distinctUntilChanged(\n      ([previousNavEnd], [currentNavEnd]) =>\n        previousNavEnd.project?.toString() === currentNavEnd.project?.toString()\n    ),\n    map(([navEnd, activeOrg]) => ({\n      orgSlug: navEnd.orgSlug,\n      projectId: navEnd.project,\n      activeOrgProjects: activeOrg ? activeOrg.projects : [],\n    }))\n  );\n\n  projectsFromParams$ = this.route.queryParams.pipe(\n    map((params) => normalizeProjectParams(params.project))\n  );\n\n  /**\n   * Corresponds to project picker/header nav/project IDs in the URL\n   * If the count is zero, we show issues from all projects\n   */\n  appliedProjectCount$ = this.projectsFromParams$.pipe(\n    map((projects) => {\n      if (Array.isArray(projects)) {\n        return projects.length;\n      }\n      return 0;\n    })\n  );\n\n  showBulkSelectProject$ = combineLatest([\n    this.appliedProjectCount$,\n    this.areAllSelected$,\n    this.numberOfSelectedIssues$,\n    this.searchHits$,\n  ]).pipe(\n    map(\n      ([\n        appliedProjectCount,\n        areAllSelected,\n        numberOfSelectIssues,\n        searchHits,\n      ]) => {\n        const hits = searchHits && numberOfSelectIssues < searchHits;\n        if (appliedProjectCount === 1 && areAllSelected && hits) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    )\n  );\n\n  organizationEnvironments$ = combineLatest([\n    this.appliedProjectCount$,\n    this.issuesService.organizationEnvironmentsProcessed$,\n    this.environmentsService.visibleEnvironments$,\n  ]).pipe(\n    map(([appliedProjectCount, orgEnvironments, projectEnvironments]) =>\n      appliedProjectCount !== 1 ? orgEnvironments : projectEnvironments\n    )\n  );\n\n  constructor(\n    private issuesService: IssuesService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private organizationsService: OrganizationsService,\n    private environmentsService: ProjectEnvironmentsService\n  ) {\n    super(issuesService);\n\n    this.issues$.subscribe((resp) =>\n      resp.length === 0\n        ? this.sortForm.controls.sort.disable()\n        : this.sortForm.controls.sort.enable()\n    );\n\n    this.organizationEnvironments$.subscribe((environments) =>\n      environments.length === 0\n        ? this.environmentForm.controls.environment.disable()\n        : this.environmentForm.controls.environment.enable()\n    );\n\n    this.routerEventSubscription = this.navigationEnd$.subscribe(\n      ({ orgSlug, cursor, query, project, start, end, sort, environment }) => {\n        if (orgSlug) {\n          this.issuesService.getIssues(\n            orgSlug,\n            cursor,\n            query,\n            project,\n            start,\n            end,\n            sort,\n            environment\n          );\n        }\n      }\n    );\n\n    this.orgEnvironmentSubscription = this.navigationEnd$\n      .pipe(\n        distinctUntilChanged((a, b) => a.orgSlug === b.orgSlug),\n        mergeMap(({ orgSlug }) =>\n          orgSlug\n            ? this.issuesService.getOrganizationEnvironments(orgSlug)\n            : EMPTY\n        )\n      )\n      .subscribe();\n\n    this.projectEnvironmentSubscription = combineLatest([\n      this.navigationEnd$,\n      this.activeOrganizationProjects$,\n    ])\n      .pipe(\n        filter(\n          ([urlData, projects]) =>\n            urlData.orgSlug !== undefined &&\n            urlData.project?.length === 1 &&\n            projects !== null\n        ),\n        distinctUntilChanged((a, b) => a[0].project![0] === b[0].project![0]),\n        map(([urlData, projects]) => {\n          const matchedProject = projects!.find(\n            (project) => project.id === parseInt(urlData.project![0], 10)\n          );\n          if (urlData.orgSlug && matchedProject) {\n            this.environmentsService\n              .retrieveEnvironmentsWithProperties(\n                urlData.orgSlug,\n                matchedProject.slug\n              )\n              .subscribe();\n          }\n        })\n      )\n      .subscribe();\n\n    /**\n     * When changing from one project to another, see if there is an environment\n     * in the URL. If it doesn't match a project environment, reset the URL.\n     */\n    this.resetEnvironmentSubscription = combineLatest([\n      this.environmentsService.visibleEnvironmentsLoaded$,\n      this.route.queryParams,\n    ])\n      .pipe(\n        tap(([projectEnvironments, { environment }]) => {\n          if (environment && !projectEnvironments.includes(environment)) {\n            this.environmentForm.setValue({ environment: null });\n            this.router.navigate([], {\n              queryParams: { environment: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((_) => {\n      const query: string | undefined = this.route.snapshot.queryParams.query;\n      const start: string | undefined = this.route.snapshot.queryParams.start;\n      const end: string | undefined = this.route.snapshot.queryParams.end;\n      const sort: string | undefined = this.route.snapshot.queryParams.sort;\n      const environment: string | undefined = this.route.snapshot.queryParams\n        .environment;\n      this.form.setValue({\n        query: query !== undefined ? query : \"is:unresolved\",\n      });\n      this.sortForm.setValue({\n        sort: sort !== undefined ? sort : \"-last_seen\",\n      });\n      this.environmentForm.setValue({\n        environment: environment !== undefined ? environment : \"\",\n      });\n      this.dateForm.setValue({\n        startDate: start ? start : null,\n        endDate: end ? end : null,\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.routerEventSubscription.unsubscribe();\n    this.orgEnvironmentSubscription.unsubscribe();\n    this.projectEnvironmentSubscription.unsubscribe();\n    this.resetEnvironmentSubscription.unsubscribe();\n    this.issuesService.clearState();\n    this.environmentsService.clearState();\n  }\n\n  onDateFormSubmit() {\n    /**\n     * The + \"Z\" feels ridiculous, but it works, and avoids problems I didn't\n     * have time to solve\n     */\n    const startDate = this.dateForm.value.startDate\n      ? formatDate(\n          this.dateForm.value.startDate,\n          \"yyyy-MM-ddTHH:mm:ss.SSS\",\n          \"en-US\"\n        ) + \"Z\"\n      : null;\n\n    /**\n     * End dates come in at midnight, so if you pick May 5, you don't get events\n     * from May 5. Bumping it to 23:59:59.999 fixes this\n     */\n    const modifiedEndDate = this.dateForm.value.endDate\n      ? this.dateForm.value.endDate.getTime() + 86399999\n      : null;\n    const endDate = modifiedEndDate\n      ? formatDate(modifiedEndDate, \"yyyy-MM-ddTHH:mm:ss.SSS\", \"en-US\") + \"Z\"\n      : null;\n    this.router.navigate([], {\n      queryParams: {\n        cursor: null,\n        start: startDate ? startDate : null,\n        end: endDate ? endDate : null,\n      },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  dateFormReset() {\n    this.router.navigate([], {\n      queryParams: {\n        cursor: null,\n        start: null,\n        end: null,\n      },\n      queryParamsHandling: \"merge\",\n    });\n    this.dateForm.setValue({ startDate: null, endDate: null });\n  }\n\n  onSubmit() {\n    this.router.navigate([], {\n      queryParams: {\n        query: this.form.value.query,\n        cursor: null,\n      },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  bulkMarkResolved() {\n    this.issuesService.bulkSetStatus(\"resolved\");\n  }\n\n  bulkMarkUnresolved() {\n    this.issuesService.bulkSetStatus(\"unresolved\");\n  }\n\n  bulkMarkIgnored() {\n    this.issuesService.bulkSetStatus(\"ignored\");\n  }\n\n  toggleCheck(issueId: number) {\n    this.issuesService.toggleSelected(issueId);\n  }\n\n  toggleSelectAll() {\n    this.issuesService.toggleSelectAll();\n  }\n\n  bulkUpdateProject() {\n    combineLatest([this.route.params, this.route.queryParams])\n      .pipe(\n        map(([params, queryParams]) => {\n          this.issuesService.bulkUpdateIssuesForProject(\n            params[\"org-slug\"],\n            queryParams.project,\n            queryParams.query\n          );\n        })\n      )\n      .subscribe();\n  }\n\n  clearBulkProjectUpdate() {\n    this.issuesService.clearProjectInfo();\n  }\n\n  sortByChanged(event: MatSelectChange) {\n    this.router.navigate([], {\n      queryParams: { sort: event.value },\n      queryParamsHandling: \"merge\",\n    });\n  }\n\n  filterByEnvironment(event: MatSelectChange) {\n    this.router.navigate([], {\n      queryParams: { environment: event.value },\n      queryParamsHandling: \"merge\",\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n$iconWidth: 56px;\n\ngt-header-nav {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  z-index: 2;\n}\n\n.wrapper {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  margin-bottom: 40px;\n\n  &.fixedLayout {\n    table-layout: fixed;\n  }\n}\n\n.table-actions {\n  display: flex;\n  justify-content: space-between;\n}\n\n.button-group {\n  button {\n    font-size: 0.95em;\n    line-height: 30px;\n    padding: 0 12px;\n\n    &:not(:last-of-type) {\n      margin-right: 10px;\n\n      @media screen and (max-width: $small - 1) {\n        margin-right: 5px;\n      }\n    }\n  }\n}\n\n.action-group {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: $tablet - 1) {\n    flex-direction: column-reverse;\n  }\n\n  @media screen and (min-width: $tablet) {\n    > * {\n      padding-left: 10px;\n      padding-right: 10px;\n\n      &:first-child {\n        padding-left: 0;\n      }\n\n      &:last-child {\n        padding-right: 0;\n      }\n    }\n  }\n\n  .environment-form,\n  .sort-form {\n    ::ng-deep .mat-form-field-infix {\n      width: 130px;\n    }\n  }\n\n  .date-form,\n  .search-form {\n    flex: 1;\n    max-width: 400px;\n\n    @media screen and (max-width: $tablet - 1) {\n      padding-bottom: 5px;\n    }\n\n    mat-form-field {\n      width: 100%;\n    }\n  }\n\n  .date-form {\n    padding-right: 20px;\n\n    @media screen and (max-width: $tablet - 1) {\n      padding-right: 0;\n    }\n  }\n\n  .search-form {\n    max-width: 350px;\n  }\n\n  form.date-form {\n    display: flex;\n    align-items: center;\n\n    @media screen and (max-width: $small - 1) {\n      flex-wrap: wrap;\n      margin-bottom: 10px;\n    }\n\n    > mat-form-field {\n      width: 100px;\n      margin-right: 15px;\n    }\n\n    button {\n      margin-top: -14px;\n      margin-right: 5px;\n\n      @media screen and (max-width: $small - 1) {\n        margin-top: 0;\n      }\n    }\n  }\n}\n\n.table-header {\n  padding: 20px 0 8px;\n}\n\n.bulk-project-select {\n  &__hide {\n    display: none;\n    height: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n\n  &__inner {\n    text-align: center;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    background-color: mat.get-color-from-palette(mat.$gray-palette, 50);\n    padding-top: 8px;\n    padding-bottom: 8px;\n\n    button {\n      margin-left: 8px;\n      margin-right: 8px;\n    }\n  }\n\n  &__text {\n    margin-left: 8px;\n    margin-right: 8px;\n    font-size: 14px;\n    font-weight: 500;\n    color: mat.get-color-from-palette(mat.$gray-palette, 800);\n  }\n}\n\n.mat-column-title {\n  max-width: 500px;\n  overflow-wrap: anywhere;\n  hyphens: auto;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n.footer {\n  text-align: right;\n\n  mat-icon {\n    font-size: 35px;\n    height: $iconWidth;\n    width: $iconWidth;\n    line-height: $iconWidth;\n  }\n}\n\n.resolved {\n  background: mat.get-color-from-palette(mat.$gray-palette, 100);\n  > a {\n    text-decoration: line-through;\n  }\n}\n\n.ignored {\n  background: mat.get-color-from-palette(mat.$gray-palette, 100);\n}\n\n.mute-icon {\n  vertical-align: middle;\n  margin-right: 5px;\n}\n\n.spinner-container {\n  mat-progress-spinner {\n    margin: 30px auto;\n  }\n}\n\nmat-card {\n  margin-top: 24px;\n  margin-bottom: 24px;\n}\n\n.checkbox-cell {\n  width: 70px;\n\n  @media screen and (max-width: $tablet - 1) {\n    width: 55px;\n  }\n}\n\n@media screen and (max-width: $tablet - 1) {\n  th.mat-header-cell:first-of-type,\n  td.mat-cell:first-of-type,\n  td.mat-footer-cell:first-of-type {\n    padding-left: 20px;\n  }\n}\n\n.sticky-header {\n  background-color: white;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.status-cell {\n  width: 120px;\n\n  @media screen and (max-width: $tablet - 1) {\n    display: none;\n  }\n}\n\n.status-header-cell,\n.event-header-cell {\n  @media screen and (max-width: $tablet - 1) {\n    display: none;\n  }\n}\n\n.event-cell {\n  width: 80px;\n\n  @media screen and (max-width: $tablet - 1) {\n    display: none;\n  }\n}\n\n.title-cell {\n  padding-right: 10px;\n}\n\n.other-cell-info {\n  margin: 0 0 -4px;\n  font-weight: 500;\n\n  @media screen and (min-width: $tablet) {\n    display: none;\n  }\n}\n\n.level {\n  position: relative;\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    width: 3px;\n  }\n\n  &--sample:after {\n    background-color: mat.get-color-from-palette(mat.$gray-palette, 100);\n  }\n\n  &--debug:after {\n    background-color: mat.get-color-from-palette(mat.$gray-palette, 300);\n  }\n\n  &--info:after {\n    background-color: #4b60b4;\n  }\n\n  &--warning:after {\n    background-color: #e9b949;\n  }\n\n  &--error:after {\n    background-color: $amaranth; //mat.get-color-from-palette($amaranth-palette, 200);\n  }\n\n  &--fatal:after {\n    background-image: repeating-linear-gradient(\n      -60deg,\n      $amaranth,\n      $amaranth 5px,\n      white 5px,\n      white 10px\n    );\n  }\n}\n",
                    "styleUrl": "./issues-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issuesService",
                        "type": "IssuesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentsService",
                        "type": "ProjectEnvironmentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 203,
                "jsdoctags": [
                    {
                        "name": "issuesService",
                        "type": "IssuesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentsService",
                        "type": "ProjectEnvironmentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationBaseComponent",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section\n  class=\"l-body l-body--full-width mat-elevation-z0\"\n  *ngIf=\"paginator$ | async as paginator\"\n>\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">\n      Issues\n      <ng-container *ngIf=\"searchHits$ | async as searchHits\">\n        ({{ searchHits }})\n      </ng-container>\n    </h1>\n  </header>\n  <gt-header-nav></gt-header-nav>\n\n  <div *ngIf=\"issues$ | async as issues\" class=\"wrapper\">\n    <table\n      mat-table\n      [dataSource]=\"issues$\"\n      class=\"mat-elevation-z2\"\n      [class.fixedLayout]=\"issues.length === 0\"\n    >\n      <ng-container matColumnDef=\"actions\">\n        <th\n          mat-header-cell\n          [attr.colspan]=\"displayedColumns.length\"\n          *matHeaderCellDef\n          class=\"resolved-row\"\n          class=\"table-header\"\n        >\n          <div class=\"action-group\">\n            <form\n              class=\"date-form\"\n              [formGroup]=\"dateForm\"\n              (ngSubmit)=\"onDateFormSubmit()\"\n            >\n              <mat-form-field>\n                <mat-label>Start Date</mat-label>\n                <input\n                  matInput\n                  [matDatepicker]=\"startPicker\"\n                  formControlName=\"startDate\"\n                />\n                <mat-datepicker-toggle\n                  matSuffix\n                  [for]=\"startPicker\"\n                ></mat-datepicker-toggle>\n                <mat-datepicker #startPicker></mat-datepicker>\n              </mat-form-field>\n\n              <mat-form-field>\n                <mat-label>End Date</mat-label>\n                <input\n                  matInput\n                  [matDatepicker]=\"endPicker\"\n                  formControlName=\"endDate\"\n                />\n                <mat-datepicker-toggle\n                  matSuffix\n                  [for]=\"endPicker\"\n                ></mat-datepicker-toggle>\n                <mat-datepicker #endPicker></mat-datepicker>\n              </mat-form-field>\n              <button\n                type=\"submit\"\n                mat-flat-button\n                color=\"primary\"\n                [disabled]=\"\n                  !dateForm.value.startDate ||\n                  !dateForm.value.endDate ||\n                  dateForm.pristine\n                \"\n              >\n                Filter\n              </button>\n              <button\n                type=\"button\"\n                (click)=\"dateFormReset()\"\n                mat-stroked-button\n                color=\"primary\"\n                [disabled]=\"\n                  !dateForm.value.startDate && !dateForm.value.endDate\n                \"\n              >\n                Clear\n              </button>\n            </form>\n\n            <form [formGroup]=\"sortForm\" class=\"sort-form\">\n              <mat-form-field>\n                <mat-label>Sort by</mat-label>\n                <mat-select\n                  (selectionChange)=\"sortByChanged($event)\"\n                  formControlName=\"sort\"\n                >\n                  <mat-option\n                    *ngFor=\"let sort of sorts | keyvalue\"\n                    [value]=\"sort.key\"\n                  >\n                    {{ sort.value }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </form>\n\n            <form [formGroup]=\"environmentForm\" class=\"environment-form\">\n              <mat-form-field\n                *ngIf=\"organizationEnvironments$ | async as environments\"\n              >\n                <mat-label>Environment</mat-label>\n                <mat-select\n                  (selectionChange)=\"filterByEnvironment($event)\"\n                  formControlName=\"environment\"\n                >\n                  <mat-option [value]=\"null\">All Environments</mat-option>\n                  <mat-option\n                    *ngFor=\"let environment of environments\"\n                    [value]=\"environment\"\n                  >\n                    {{ environment }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </form>\n\n            <form\n              [formGroup]=\"form\"\n              (ngSubmit)=\"onSubmit()\"\n              class=\"search-form\"\n            >\n              <mat-form-field>\n                <input\n                  matInput\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  formControlName=\"query\"\n                />\n              </mat-form-field>\n            </form>\n          </div>\n        </th>\n      </ng-container>\n\n      <ng-container matColumnDef=\"select\">\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          [class.sticky-header]=\"(thereAreSelectedIssues$ | async) === true\"\n        >\n          <mat-checkbox\n            (change)=\"toggleSelectAll()\"\n            [checked]=\"(areAllSelected$ | async)!\"\n            [disabled]=\"issues.length === 0\"\n            id=\"selectAll\"\n          >\n          </mat-checkbox>\n        </th>\n        <td\n          mat-cell\n          *matCellDef=\"let row\"\n          [class.resolved]=\"row.status === 'resolved'\"\n          [class.ignored]=\"row.status === 'ignored'\"\n          class=\"checkbox-cell level level--{{ row.level }}\"\n        >\n          <mat-checkbox\n            (change)=\"toggleCheck(row.id)\"\n            [checked]=\"row.isSelected\"\n          >\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"title\">\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          mat-sort-header\n          [class.sticky-header]=\"(thereAreSelectedIssues$ | async) === true\"\n        >\n          <div class=\"button-group\">\n            <button\n              id=\"bulkMarkResolved\"\n              mat-flat-button\n              color=\"primary\"\n              (click)=\"bulkMarkResolved()\"\n              [disabled]=\"(thereAreSelectedIssues$ | async) === false\"\n            >\n              Mark as resolved\n            </button>\n            <button\n              mat-stroked-button\n              (click)=\"bulkMarkUnresolved()\"\n              [disabled]=\"(thereAreSelectedIssues$ | async) === false\"\n            >\n              Reopen\n            </button>\n            <button\n              mat-stroked-button\n              (click)=\"bulkMarkIgnored()\"\n              [disabled]=\"(thereAreSelectedIssues$ | async) === false\"\n            >\n              Ignore\n            </button>\n          </div>\n        </th>\n        <td\n          mat-cell\n          *matCellDef=\"let element\"\n          [class.resolved]=\"element.status === 'resolved'\"\n          [class.ignored]=\"element.status === 'ignored'\"\n          class=\"title-cell\"\n        >\n          <mat-icon\n            *ngIf=\"element.status === 'ignored'\"\n            inline=\"true\"\n            class=\"mute-icon\"\n          >\n            volume_off\n          </mat-icon>\n          <a [routerLink]=\"element.id\" queryParamsHandling=\"merge\">{{\n            element.title\n          }}</a>\n          <div class=\"other-cell-info mat-caption\">\n            {{ element.count | i18nPlural: eventCountPluralMapping }}\n          </div>\n          <div>\n            <span\n              class=\"mat-caption\"\n              *ngIf=\"(appliedProjectCount$ | async) !== 1\"\n            >\n              {{ element.projectSlug }}\n            </span>\n            <span class=\"mat-caption\" *ngIf=\"true\">\n              <ng-container *ngIf=\"(appliedProjectCount$ | async) !== 1\">\n                &mdash;\n              </ng-container>\n              <time\n                [dateTime]=\"element.firstSeen\"\n                [title]=\"element.firstSeen | date: 'medium'\"\n              >\n                {{ element.firstSeen | daysOld }},\n              </time>\n              seen\n              <time\n                *ngIf=\"element.firstSeen !== element.lastSeen\"\n                [dateTime]=\"element.lastSeen\"\n                [title]=\"element.lastSeen | date: 'medium'\"\n              >\n                {{ element.lastSeen | daysAgo }}\n              </time>\n            </span>\n            <span\n              class=\"mat-caption\"\n              *ngIf=\"element.type && element.type === 'csp'\"\n              ><span\n                *ngIf=\"(appliedProjectCount$ | async) !== 1 && element.type\"\n              >\n                &mdash; </span\n              >{{ element.type }} report</span\n            >\n          </div>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bulkProjectSelect\">\n        <td\n          mat-header-cell\n          *matHeaderCellDef\n          colspan=\"3\"\n          class=\"bulk-project-select__inner\"\n        >\n          <ng-container *ngIf=\"(showBulkSelectProject$ | async) === true\">\n            <ng-container\n              *ngIf=\"\n                (selectedProjectInfo$ | async | json) === '{}';\n                else deselect\n              \"\n              ><span class=\"bulk-project-select__text\"\n                >{{ numberOfSelectedIssues$ | async }} issues on this page\n                selected.</span\n              >\n              <button\n                id=\"bulkUpdateProject\"\n                mat-stroked-button\n                color=\"primary\"\n                (click)=\"bulkUpdateProject()\"\n              >\n                <ng-container *ngIf=\"searchHits$ | async as searchHits\"\n                  >Select all {{ searchHits }} issues that match this\n                  query</ng-container\n                >\n              </button></ng-container\n            ><ng-template #deselect\n              ><span class=\"bulk-project-select__text\"\n                >All {{ searchHits$ | async }} issues are currently\n                selected.</span\n              >\n              <button\n                mat-stroked-button\n                color=\"primary\"\n                (click)=\"clearBulkProjectUpdate()\"\n              >\n                Undo\n              </button></ng-template\n            ></ng-container\n          >\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"events\">\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          mat-sort-header\n          class=\"status-header-cell sticky-header\"\n          [class.sticky-header]=\"(thereAreSelectedIssues$ | async) === true\"\n        >\n          Events\n        </th>\n        <td\n          mat-cell\n          *matCellDef=\"let element\"\n          [class.resolved]=\"element.status === 'resolved'\"\n          [class.ignored]=\"element.status === 'ignored'\"\n          class=\"event-cell\"\n        >\n          <p>{{ element.count }}</p>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"pagination\">\n        <td\n          mat-footer-cell\n          *matFooterCellDef\n          [attr.colspan]=\"displayedColumns.length\"\n          class=\"footer\"\n        >\n          <ng-container *ngIf=\"(loading$ | async) === false\">\n            <button\n              [routerLink]=\"[]\"\n              [queryParams]=\"paginator.previousPageParams || {}\"\n              queryParamsHandling=\"merge\"\n              mat-button\n              [disabled]=\"paginator.hasPreviousPage === false\"\n            >\n              <mat-icon>keyboard_arrow_left</mat-icon>\n            </button>\n            <button\n              [routerLink]=\"[]\"\n              [queryParams]=\"paginator.nextPageParams || {}\"\n              queryParamsHandling=\"merge\"\n              mat-button\n              [disabled]=\"paginator.hasNextPage === false\"\n            >\n              <mat-icon>keyboard_arrow_right</mat-icon>\n            </button>\n          </ng-container>\n          <div *ngIf=\"loading$ | async\" class=\"spinner-container\">\n            <mat-progress-spinner\n              [diameter]=\"33\"\n              color=\"primary\"\n              mode=\"indeterminate\"\n            ></mat-progress-spinner>\n          </div>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"['actions']\"></tr>\n      <tr\n        mat-header-row\n        class=\"overlay\"\n        *matHeaderRowDef=\"displayedColumns\"\n        [class.u-hidden]=\"issues.length === 0\"\n      ></tr>\n      <tr\n        mat-header-row\n        *matHeaderRowDef=\"['bulkProjectSelect']\"\n        [class.bulk-project-select__hide]=\"\n          (showBulkSelectProject$ | async) === false\n        \"\n      ></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" [attr.colspan]=\"displayedColumns.length\">\n          <gt-issue-zero-states\n            *ngIf=\"paginator.initialLoadComplete\"\n          ></gt-issue-zero-states>\n        </td>\n      </tr>\n      <tr mat-footer-row *matFooterRowDef=\"['pagination']\"></tr>\n    </table>\n  </div>\n</section>\n"
        },
        {
            "name": "IssueZeroStatesComponent",
            "id": "component-IssueZeroStatesComponent-ca1bcdf99610dd3a52c0f15da35c1f16",
            "file": "src/app/issues/issue-zero-states/issue-zero-states.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-issue-zero-states",
            "styleUrls": [
                "./issue-zero-states.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./issue-zero-states.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationProjects$",
                    "defaultValue": "this.organizationsService\n    .activeOrganizationProjects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "activeOrganizationSlug$",
                    "defaultValue": "this.organizationsService.activeOrganizationSlug$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "activeProject$",
                    "defaultValue": "combineLatest([\n    this.projectsService.projects$,\n    this.activeProjectID$,\n  ]).pipe(\n    map(([projects, activeProjectID]) => {\n      if (projects && activeProjectID) {\n        const activeProject = projects.find(\n          (project) => project.id === activeProjectID\n        );\n        return activeProject ? activeProject : null;\n      }\n      return null;\n    }),\n    distinctUntilChanged()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "activeProjectID$",
                    "defaultValue": "combineLatest([\n    this.projectsFromParams$,\n    this.activeOrganizationProjects$,\n  ]).pipe(\n    map(([projectIDs, activeOrgProjects]) => {\n      if (projectIDs.length === 1) {\n        return projectIDs[0];\n      }\n      if (activeOrgProjects?.length === 1) {\n        return activeOrgProjects[0].id.toString();\n      }\n      return null;\n    }),\n    distinctUntilChanged()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "activeProjectPlatform$",
                    "defaultValue": "this.activeProject$.pipe(\n    map((project) => project?.platform)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "activeProjectPlatformName$",
                    "defaultValue": "this.activeProjectPlatform$.pipe(\n    map((id) => flattenedPlatforms.find((platform) => platform.id === id)?.name)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "activeProjectSlug$",
                    "defaultValue": "this.activeProject$.pipe(\n    map((project) => project?.slug)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "appliedProjectCount$",
                    "defaultValue": "this.projectsFromParams$.pipe(\n    map((projects) => {\n      if (Array.isArray(projects)) {\n        return projects.length;\n      }\n      return 0;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Corresponds to project picker/header nav/project IDs in the URL\nIf the count is zero, we show issues from all projects</p>\n",
                    "line": 100,
                    "rawdescription": "\n\nCorresponds to project picker/header nav/project IDs in the URL\nIf the count is zero, we show issues from all projects\n"
                },
                {
                    "name": "errors$",
                    "defaultValue": "this.issuesService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "firstProjectKey$",
                    "defaultValue": "combineLatest([\n    this.organizationsService.activeOrganizationSlug$,\n    this.activeProject$,\n  ]).pipe(\n    filter(\n      ([organizationSlug, activeProject]) =>\n        !!organizationSlug && !!activeProject\n    ),\n    distinctUntilChanged((x, y) => JSON.stringify(x) === JSON.stringify(y)),\n    switchMap(([organizationSlug, activeProject]) =>\n      this.projectKeysAPIService\n        .list(organizationSlug!, activeProject!.slug)\n        .pipe(map((keys) => keys[0]))\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "initialLoadComplete$",
                    "defaultValue": "combineLatest([\n    this.issuesService.initialLoadComplete$,\n    this.projectsService.initialLoadComplete$,\n  ]).pipe(map((loads) => loads.every((load) => !!load)))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "loading$",
                    "defaultValue": "combineLatest([\n    this.issuesService.loading$,\n    this.projectsService.loading$,\n  ]).pipe(map((loads) => loads.every((load) => !!load)))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "orgHasAProject$",
                    "defaultValue": "this.organizationsService.orgHasAProject$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "projectsFromParams$",
                    "defaultValue": "this.activatedRoute.queryParams.pipe(\n    map((params) => normalizeProjectParams(params.project))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "projectsWhereAdminIsNotOnTheTeam$",
                    "defaultValue": "combineLatest([\n    this.projectsFromParams$,\n    this.activeOrganizationProjects$,\n  ]).pipe(\n    map(([projectsFromParams, activeOrgProjects]) => {\n      if (!Array.isArray(projectsFromParams)) {\n        return [];\n      }\n      const projectsMatchedFromParams: OrganizationProject[] = [];\n      projectsFromParams.forEach((projectId) => {\n        const matchedProject = activeOrgProjects?.find(\n          (project) => project.id === parseInt(projectId, 10)\n        );\n        if (matchedProject) {\n          projectsMatchedFromParams.push(matchedProject);\n        }\n      });\n      return projectsMatchedFromParams.filter(\n        (project) => project.isMember === false\n      );\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "showOnboarding$",
                    "defaultValue": "this.activeProject$.pipe(\n    map((project) => !project?.firstEvent)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "singleProjectApplied$",
                    "defaultValue": "combineLatest([\n    this.appliedProjectCount$,\n    this.activeOrganizationProjects$,\n  ]).pipe(\n    map(\n      ([appliedProjectCount, activeOrganizationProjects]) =>\n        appliedProjectCount === 1 || activeOrganizationProjects?.length === 1\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Either a single project is applied with the picker, or there&#39;s only one\nproject in the org, which is functionally similar for some things</p>\n",
                    "line": 113,
                    "rawdescription": "\n\nEither a single project is applied with the picker, or there's only one\nproject in the org, which is functionally similar for some things\n"
                },
                {
                    "name": "userNotInSomeTeams$",
                    "defaultValue": "combineLatest([\n    this.projectsWhereAdminIsNotOnTheTeam$,\n    this.appliedProjectCount$,\n  ]).pipe(\n    map(\n      ([projectsWhereAdminIsNotOnTheTeam, appliedProjectCount]) =>\n        projectsWhereAdminIsNotOnTheTeam.length && appliedProjectCount > 1\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 146
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest } from \"rxjs\";\nimport { distinctUntilChanged, filter, map, switchMap } from \"rxjs/operators\";\n\nimport { IssuesService } from \"../issues.service\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { normalizeProjectParams } from \"../utils\";\nimport { OrganizationProject } from \"src/app/api/organizations/organizations.interface\";\nimport { ProjectsService } from \"src/app/projects/projects.service\";\nimport { ProjectKeysAPIService } from \"src/app/api/projects/project-keys-api.service\";\nimport { flattenedPlatforms } from \"src/app/settings/projects/platform-picker/platforms-for-picker\";\n\n@Component({\n  selector: \"gt-issue-zero-states\",\n  templateUrl: \"./issue-zero-states.component.html\",\n  styleUrls: [\"./issue-zero-states.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IssueZeroStatesComponent implements OnInit {\n  loading$ = combineLatest([\n    this.issuesService.loading$,\n    this.projectsService.loading$,\n  ]).pipe(map((loads) => loads.every((load) => !!load)));\n  initialLoadComplete$ = combineLatest([\n    this.issuesService.initialLoadComplete$,\n    this.projectsService.initialLoadComplete$,\n  ]).pipe(map((loads) => loads.every((load) => !!load)));\n  orgHasAProject$ = this.organizationsService.orgHasAProject$;\n  projectsFromParams$ = this.activatedRoute.queryParams.pipe(\n    map((params) => normalizeProjectParams(params.project))\n  );\n  activeOrganizationProjects$ = this.organizationsService\n    .activeOrganizationProjects$;\n  activeOrganizationSlug$ = this.organizationsService.activeOrganizationSlug$;\n  activeProjectID$ = combineLatest([\n    this.projectsFromParams$,\n    this.activeOrganizationProjects$,\n  ]).pipe(\n    map(([projectIDs, activeOrgProjects]) => {\n      if (projectIDs.length === 1) {\n        return projectIDs[0];\n      }\n      if (activeOrgProjects?.length === 1) {\n        return activeOrgProjects[0].id.toString();\n      }\n      return null;\n    }),\n    distinctUntilChanged()\n  );\n  activeProject$ = combineLatest([\n    this.projectsService.projects$,\n    this.activeProjectID$,\n  ]).pipe(\n    map(([projects, activeProjectID]) => {\n      if (projects && activeProjectID) {\n        const activeProject = projects.find(\n          (project) => project.id === activeProjectID\n        );\n        return activeProject ? activeProject : null;\n      }\n      return null;\n    }),\n    distinctUntilChanged()\n  );\n  showOnboarding$ = this.activeProject$.pipe(\n    map((project) => !project?.firstEvent)\n  );\n  activeProjectPlatform$ = this.activeProject$.pipe(\n    map((project) => project?.platform)\n  );\n  activeProjectSlug$ = this.activeProject$.pipe(\n    map((project) => project?.slug)\n  );\n  activeProjectPlatformName$ = this.activeProjectPlatform$.pipe(\n    map((id) => flattenedPlatforms.find((platform) => platform.id === id)?.name)\n  );\n\n  firstProjectKey$ = combineLatest([\n    this.organizationsService.activeOrganizationSlug$,\n    this.activeProject$,\n  ]).pipe(\n    filter(\n      ([organizationSlug, activeProject]) =>\n        !!organizationSlug && !!activeProject\n    ),\n    distinctUntilChanged((x, y) => JSON.stringify(x) === JSON.stringify(y)),\n    switchMap(([organizationSlug, activeProject]) =>\n      this.projectKeysAPIService\n        .list(organizationSlug!, activeProject!.slug)\n        .pipe(map((keys) => keys[0]))\n    )\n  );\n  errors$ = this.issuesService.errors$;\n\n  /**\n   * Corresponds to project picker/header nav/project IDs in the URL\n   * If the count is zero, we show issues from all projects\n   */\n  appliedProjectCount$ = this.projectsFromParams$.pipe(\n    map((projects) => {\n      if (Array.isArray(projects)) {\n        return projects.length;\n      }\n      return 0;\n    })\n  );\n\n  /**\n   * Either a single project is applied with the picker, or there's only one\n   * project in the org, which is functionally similar for some things\n   */\n  singleProjectApplied$ = combineLatest([\n    this.appliedProjectCount$,\n    this.activeOrganizationProjects$,\n  ]).pipe(\n    map(\n      ([appliedProjectCount, activeOrganizationProjects]) =>\n        appliedProjectCount === 1 || activeOrganizationProjects?.length === 1\n    )\n  );\n\n  projectsWhereAdminIsNotOnTheTeam$ = combineLatest([\n    this.projectsFromParams$,\n    this.activeOrganizationProjects$,\n  ]).pipe(\n    map(([projectsFromParams, activeOrgProjects]) => {\n      if (!Array.isArray(projectsFromParams)) {\n        return [];\n      }\n      const projectsMatchedFromParams: OrganizationProject[] = [];\n      projectsFromParams.forEach((projectId) => {\n        const matchedProject = activeOrgProjects?.find(\n          (project) => project.id === parseInt(projectId, 10)\n        );\n        if (matchedProject) {\n          projectsMatchedFromParams.push(matchedProject);\n        }\n      });\n      return projectsMatchedFromParams.filter(\n        (project) => project.isMember === false\n      );\n    })\n  );\n\n  userNotInSomeTeams$ = combineLatest([\n    this.projectsWhereAdminIsNotOnTheTeam$,\n    this.appliedProjectCount$,\n  ]).pipe(\n    map(\n      ([projectsWhereAdminIsNotOnTheTeam, appliedProjectCount]) =>\n        projectsWhereAdminIsNotOnTheTeam.length && appliedProjectCount > 1\n    )\n  );\n\n  constructor(\n    private issuesService: IssuesService,\n    private organizationsService: OrganizationsService,\n    private projectKeysAPIService: ProjectKeysAPIService,\n    private projectsService: ProjectsService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.projectsService.retrieveProjects();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n.empty-states {\n  padding: 1.5em 0 0.5em;\n}\n\n.not-on-team {\n  background: mat.get-color-from-palette($amaranth-palette, 50);\n  padding: 10px;\n  margin-top: 0;\n  margin-bottom: 20px;\n}\n\nmarkdown {\n  display: block;\n  margin-bottom: 40px;\n}\n\n.install-wrapper {\n  display: flex;\n\n  @media (max-width: $medium - 1) {\n    flex-direction: column;\n  }\n}\n\n.install-instructions {\n  width: calc(100% - 300px);\n  flex-shrink: 0;\n\n  @media (max-width: $large - 1) {\n    width: calc(100% - 250px);\n  }\n\n  @media (max-width: $medium - 1) {\n    width: 100%;\n  }\n}\n\n.dsn {\n  width: 300px;\n  padding-left: 30px;\n  flex-shrink: 0;\n\n  @media (max-width: $large - 1) {\n    width: 250px;\n  }\n\n  @media (max-width: $medium - 1) {\n    width: 100%;\n    padding-left: 0;\n    padding-top: 30px;\n  }\n\n  .mat-body-1 {\n    margin: 0;\n  }\n\n  .dsn-input {\n    width: 100%;\n    margin-bottom: 30px;\n  }\n}\n\n.dsn-area {\n  padding-top: 1em;\n}\n",
                    "styleUrl": "./issue-zero-states.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issuesService",
                        "type": "IssuesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectKeysAPIService",
                        "type": "ProjectKeysAPIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 154,
                "jsdoctags": [
                    {
                        "name": "issuesService",
                        "type": "IssuesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectKeysAPIService",
                        "type": "ProjectKeysAPIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"empty-states\">\n  <!-- Don't show any of this until loading state is resolved -->\n  <ng-container\n    *ngIf=\"\n      (initialLoadComplete$ | async) === true && (loading$ | async) === false\n    \"\n  >\n    <!-- If there are errors, only show the error -->\n    <ng-container *ngIf=\"(errors$ | async)?.length; else emptyState\">\n      <ng-container *ngIf=\"(errors$ | async)?.length === 1; else multipleErrors\"\n        ><h3 class=\"mat-display-1\">\n          There was an error processing your request\n        </h3></ng-container\n      ><ng-template #multipleErrors\n        ><h3 class=\"mat-display-1\">\n          There were errors while processing your request\n        </h3></ng-template\n      >\n      <ul>\n        <li *ngFor=\"let error of errors$ | async\">{{ error }}</li>\n      </ul>\n    </ng-container>\n\n    <!-- If there are no errors, show an empty state option -->\n    <ng-template #emptyState>\n      <!-- If there are zero projects -->\n      <ng-container\n        *ngIf=\"(orgHasAProject$ | async) === false; else hasProject\"\n      >\n        <h3 class=\"mat-display-1\">This organization has no projects.</h3>\n        <p class=\"mat-body-1\">\n          To add a project to this organization, press the\n          \"Add&nbsp;Project\"&nbsp;button.\n        </p>\n      </ng-container>\n\n      <ng-template #hasProject>\n        <!-- You're an admin, but you're not on the team -->\n        <ng-container\n          *ngIf=\"projectsWhereAdminIsNotOnTheTeam$ | async as notOnTeam\"\n        >\n          <ng-container *ngIf=\"notOnTeam.length > 0 && notOnTeam.length < 2\">\n            <p class=\"not-on-team\">\n              <ng-container\n                *ngIf=\"singleProjectApplied$ | async; else notOnTeamMultiple\"\n              >\n                You can't see issues for this project because you're not on the\n                team.\n              </ng-container>\n              <ng-template #notOnTeamMultiple>\n                Out of the projects you have selected, you are not a part of\n                that project's team for at least one of them.\n              </ng-template>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"notOnTeam.length > 2\"> </ng-container>\n        </ng-container>\n\n        <!-- If there is one project applied -->\n        <ng-container\n          *ngIf=\"singleProjectApplied$ | async; else multipleProjects\"\n        >\n          <!-- If no event has been sent -->\n          <ng-container *ngIf=\"showOnboarding$ | async; else noIssueMessaging\">\n            <div class=\"install-wrapper\">\n              <div\n                class=\"install-instructions\"\n                *ngIf=\"\n                  activeProjectPlatform$ | async as activeProjectPlatform;\n                  else noPlatform\n                \"\n              >\n                <ng-container\n                  *ngIf=\"\n                    activeProjectPlatform !== 'other' &&\n                      activeProjectPlatform !== '' &&\n                      (activeProjectPlatformName$ | async);\n                    else otherTemplate\n                  \"\n                >\n                  <h2 class=\"mat-display-1\">\n                    Connect your\n                    {{ activeProjectPlatformName$ | async }} project to\n                    GlitchTip\n                  </h2>\n\n                  <gt-lazy-markdown\n                    markdownSrc=\"/static/sdk-docs/{{\n                      activeProjectPlatform\n                    }}.md\"\n                  ></gt-lazy-markdown>\n                </ng-container>\n\n                <ng-template #otherTemplate>\n                  <h2 class=\"mat-display-1\">\n                    Connect your project to GlitchTip\n                  </h2>\n\n                  <gt-lazy-markdown\n                    markdownSrc=\"/static/sdk-docs/all-sdks.md\"\n                  ></gt-lazy-markdown>\n\n                  <gt-lazy-markdown\n                    markdownSrc=\"/static/sdk-docs/other.md\"\n                  ></gt-lazy-markdown>\n                </ng-template>\n              </div>\n\n              <ng-template #noPlatform>\n                <div class=\"install-instructions\">\n                  <h2 class=\"mat-display-1\">\n                    Connect your project to GlitchTip\n                  </h2>\n\n                  <gt-lazy-markdown\n                    markdownSrc=\"/static/sdk-docs/all-sdks.md\"\n                  ></gt-lazy-markdown>\n\n                  <p class=\"mat-body-1\">\n                    If you go to this project's\n                    <a\n                      [routerLink]=\"[\n                        '/',\n                        'settings',\n                        activeOrganizationSlug$ | async,\n                        'projects',\n                        activeProjectSlug$ | async\n                      ]\"\n                    >\n                      settings page</a\n                    >, you can pick a platform. If you do, you'll get more\n                    specific instructions about how to get started.\n                  </p>\n                </div>\n              </ng-template>\n              <div\n                class=\"dsn\"\n                *ngIf=\"firstProjectKey$ | async as firstProjectKey\"\n              >\n                <h2 class=\"mat-display-1\">DSN</h2>\n\n                <p class=\"mat-body-1\">\n                  Most instructions will have a spot that says \"your DSN here\".\n                  Copy the DSN and paste it into that spot.\n                </p>\n\n                <div class=\"dsn-area\">\n                  <gt-copy-input\n                    [value]=\"firstProjectKey.dsn.public\"\n                    placeholder=\"DSN\"\n                  ></gt-copy-input>\n                  <gt-copy-input\n                    [value]=\"firstProjectKey.dsn.security\"\n                    placeholder=\"Security Endpoint\"\n                  ></gt-copy-input>\n                </div>\n\n                <ng-container\n                  *ngIf=\"\n                    activeProjectPlatform$ | async as activeProjectPlatform\n                  \"\n                >\n                  <ng-container *ngIf=\"activeProjectPlatform !== 'other'\">\n                    <h2 class=\"mat-body-2\">What's this all about?</h2>\n\n                    <gt-lazy-markdown\n                      markdownSrc=\"/static/sdk-docs/all-sdks.md\"\n                    ></gt-lazy-markdown>\n\n                    <p class=\"mat-body-1\">\n                      This page is showing instructions on how to connect\n                      GlitchTip to your project based on the platform you\n                      specified.\n                    </p>\n                  </ng-container>\n                </ng-container>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-template #noIssueMessaging>\n            <!-- No issues match the filters, in general -->\n            <h3 class=\"mat-display-1\">No events match your filters.</h3>\n            <p class=\"mat-body-1\">\n              Try changing your search parameters to get something to show here.\n            </p>\n          </ng-template>\n        </ng-container>\n\n        <ng-template #multipleProjects>\n          <h3>No events match your filters.</h3>\n          <p class=\"mat-body-1\">\n            You have multiple projects selected. Select a single project to\n            learn more about why there's nothing here.\n          </p>\n        </ng-template>\n      </ng-template></ng-template\n    >\n  </ng-container>\n</div>\n"
        },
        {
            "name": "LazyMarkdownComponent",
            "id": "component-LazyMarkdownComponent-d021ace9b4d95a555894b521412a4f87",
            "file": "src/app/lazy-markdown/lazy-markdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-lazy-markdown",
            "styleUrls": [
                "./lazy-markdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lazy-markdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "markdownSrc",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string | null"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewEncapsulation,\n} from \"@angular/core\";\n\nimport \"node_modules/prismjs/prism.js\";\nimport \"node_modules/prismjs/components/prism-csharp.min.js\";\nimport \"node_modules/prismjs/components/prism-python.min.js\";\nimport \"node_modules/prismjs/components/prism-java.min.js\";\nimport \"node_modules/prismjs/components/prism-ruby.min.js\";\nimport \"node_modules/prismjs/components/prism-markup-templating.min.js\";\nimport \"node_modules/prismjs/components/prism-php.min.js\";\nimport \"node_modules/prismjs/components/prism-go.min.js\";\nimport \"node_modules/prismjs/components/prism-rust.min.js\";\n\n@Component({\n  selector: \"gt-lazy-markdown\",\n  templateUrl: \"./lazy-markdown.component.html\",\n  styleUrls: [\"./lazy-markdown.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LazyMarkdownComponent {\n  @Input() markdownSrc: string | null = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"prismjs/themes/prism.css\";\n",
                    "styleUrl": "./lazy-markdown.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<markdown #markdown *ngIf=\"markdownSrc\" [src]=\"markdownSrc\"></markdown>"
        },
        {
            "name": "LoadingButtonComponent",
            "id": "component-LoadingButtonComponent-19b16484607f4f6934e4d31b16120385",
            "file": "src/app/shared/loading-button/loading-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-loading-button",
            "styleUrls": [
                "./loading-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loading-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonStyle",
                    "defaultValue": "\"flat\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"flat\" | \"stroked\" | \"basic\""
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "fullWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "For fullWidth to work, you may need to set width: 100% to app-loading-button",
                    "description": "<p>For fullWidth to work, you may need to set width: 100% to app-loading-button</p>\n",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"gt-loading-button\",\n  templateUrl: \"./loading-button.component.html\",\n  styleUrls: [\"./loading-button.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoadingButtonComponent {\n  @Input() buttonText?: string;\n  @Input() icon?: string;\n  @Input() loading?: boolean;\n  @Input() disabled?: boolean;\n  /** For fullWidth to work, you may need to set width: 100% to app-loading-button */\n  @Input() fullWidth = false;\n  @Input() buttonStyle: \"flat\" | \"stroked\" | \"basic\" = \"flat\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: inline-block;\n  position: relative;\n  height: 36px;\n}\n\n.mat-icon {\n  font-size: 14px;\n  width: 14px;\n  height: 14px;\n  margin-right: 4px;\n}\n\n.spinner-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading {\n  color: transparent;\n}\n",
                    "styleUrl": "./loading-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"spinner-container\" *ngIf=\"loading\">\n  <mat-spinner diameter=\"24\"></mat-spinner>\n</div>\n<button\n  *ngIf=\"buttonStyle === 'flat'\"\n  [class.full-width]=\"fullWidth\"\n  mat-flat-button\n  color=\"primary\"\n  [disabled]=\"loading || disabled\"\n>\n  <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n  <span [class.loading]=\"loading\">{{ buttonText }}</span>\n</button>\n<button\n  *ngIf=\"buttonStyle === 'basic'\"\n  [class.full-width]=\"fullWidth\"\n  mat-button\n  color=\"primary\"\n  [disabled]=\"loading || disabled\"\n>\n  <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n  <span [class.loading]=\"loading\">{{ buttonText }}</span>\n</button>\n<button\n  *ngIf=\"buttonStyle === 'stroked'\"\n  mat-stroked-button\n  color=\"primary\"\n  [disabled]=\"loading || disabled\"\n>\n  <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n  <span [class.loading]=\"loading\">{{ buttonText }}</span>\n</button>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-bd92ab390de566d45a928a4012b1eb43",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "acceptInfo$",
                    "defaultValue": "this.acceptService.acceptInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "enableUserRegistration$",
                    "defaultValue": "this.settings.enableUserRegistration$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "error$",
                    "defaultValue": "this.loginService.error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.loginService.loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "requiresMFA$",
                    "defaultValue": "this.loginService.requiresMFA$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "socialApps$",
                    "defaultValue": "this.settings.socialApps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSocialApp",
                    "args": [
                        {
                            "name": "socialApp",
                            "type": "SocialApp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "socialApp",
                            "type": "SocialApp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { LoginService } from \"./login.service\";\nimport { GlitchTipOAuthService } from \"../api/oauth/oauth.service\";\nimport { SettingsService } from \"../api/settings.service\";\nimport { AcceptInviteService } from \"../api/accept/accept-invite.service\";\nimport { SocialApp } from \"../api/user/user.interfaces\";\n\n@Component({\n  selector: \"gt-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  loading$ = this.loginService.loading$;\n  error$ = this.loginService.error$;\n  requiresMFA$ = this.loginService.requiresMFA$;\n  form = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  socialApps$ = this.settings.socialApps$;\n  enableUserRegistration$ = this.settings.enableUserRegistration$;\n  acceptInfo$ = this.acceptService.acceptInfo$;\n\n  constructor(\n    private loginService: LoginService,\n    private oauthService: GlitchTipOAuthService,\n    private settings: SettingsService,\n    private acceptService: AcceptInviteService\n  ) {}\n\n  ngOnInit() {\n    this.acceptInfo$\n      .pipe(\n        tap((acceptInfo) => {\n          if (acceptInfo) {\n            this.form.patchValue({ email: acceptInfo.org_user.email });\n          }\n        })\n      )\n      .subscribe();\n    this.error$.subscribe((error) => {\n      if (error?.email) {\n        this.email?.setErrors({ serverError: error.email });\n      } else if (error?.password) {\n        this.password?.setErrors({ serverError: error.password });\n      }\n    });\n  }\n\n  get email() {\n    return this.form.get(\"email\");\n  }\n\n  get password() {\n    return this.form.get(\"password\");\n  }\n\n  onSocialApp(socialApp: SocialApp) {\n    if (socialApp.provider === \"github\") {\n      this.oauthService.initGithubLogin(socialApp.client_id);\n    } else if (socialApp.provider === \"gitlab\") {\n      this.oauthService.initGitlabLogin(socialApp.client_id);\n    } else if (socialApp.provider === \"google\") {\n      this.oauthService.initGoogleLogin(socialApp.client_id);\n    } else if (socialApp.provider === \"microsoft\") {\n      this.oauthService.initMicrosoftLogin(socialApp.client_id);\n    }\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loginService\n        .login(this.form.value.email, this.form.value.password)\n        .subscribe();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".or {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  text-align: center;\n}\n\n.margin {\n  margin-bottom: 8px;\n}\n\n.logo-container {\n  text-align: center;\n  img {\n    width: 150px;\n  }\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settings",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "acceptService",
                        "type": "AcceptInviteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settings",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "acceptService",
                        "type": "AcceptInviteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "",
                        "line": 61
                    }
                }
            },
            "templateData": "<div class=\"auth-form-wrapper\">\n  <mat-card class=\"auth-form\">\n    <div class=\"logo-container\">\n      <img src=\"static/assets/images/glitchtip-logo-v1.svg\" alt=\"GlitchTip\" />\n    </div>\n    <ng-container *ngIf=\"requiresMFA$ | async; else do_login\">\n      <gt-login-totp></gt-login-totp>\n    </ng-container>\n    <ng-template #do_login>\n      <h1>Login</h1>\n      <mat-card-content>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <gt-form-error [error]=\"error$ | async\"></gt-form-error>\n          <mat-form-field class=\"full-width\">\n            <input\n              matInput\n              autofocus\n              type=\"email\"\n              placeholder=\"Email\"\n              formControlName=\"email\"\n            />\n            <mat-error *ngIf=\"email?.errors\">\n              <span *ngIf=\"email?.errors?.required\"\n                >Your email is required to log in</span\n              >\n              <span *ngIf=\"email?.errors?.email\"\n                >Enter a valid email address</span\n              >\n              <span *ngIf=\"email?.errors?.serverError\">{{\n                email?.errors?.serverError\n              }}</span>\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field class=\"full-width\">\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"Password\"\n              formControlName=\"password\"\n            />\n            <mat-error *ngIf=\"password?.errors\">\n              <span *ngIf=\"password?.errors?.minlength\"\n                >Your password should be at least 8 characters long</span\n              >\n              <span *ngIf=\"password?.errors?.required\"\n                >Your password is required to log in</span\n              >\n            </mat-error>\n          </mat-form-field>\n          <button\n            id=\"submit\"\n            class=\"full-width\"\n            mat-flat-button\n            color=\"primary\"\n          >\n            Log in\n          </button>\n        </form>\n        <ng-container *ngIf=\"socialApps$ | async as socialApps\">\n          <div *ngIf=\"socialApps.length\" class=\"or\">\n            <span class=\"mat-body-strong mat-body-2\">or</span>\n          </div>\n          <div class=\"o-auth\">\n            <button\n              *ngFor=\"let socialApp of socialApps\"\n              mat-stroked-button\n              class=\"full-width margin\"\n              (click)=\"onSocialApp(socialApp)\"\n            >\n              <gt-auth-svg\n                source=\"auth\"\n                text=\"Log in with {{ socialApp.name }}\"\n                [provider]=\"socialApp.provider\"\n              ></gt-auth-svg>\n            </button>\n          </div>\n        </ng-container>\n        <div class=\"sign-up\">\n          <p *ngIf=\"enableUserRegistration$ | async\" class=\"mat-body-1\">\n            New to GlitchTip? <a routerLink=\"../register\">Sign Up</a>\n          </p>\n          <p class=\"mat-body-1\">\n            <a routerLink=\"/reset-password\">Reset Password</a>\n          </p>\n        </div>\n      </mat-card-content>\n    </ng-template>\n  </mat-card>\n</div>\n<div cdkFocusRegionEnd></div>\n"
        },
        {
            "name": "LoginTotpComponent",
            "id": "component-LoginTotpComponent-7013f6ef20400e2895a341e6849aeaa0",
            "file": "src/app/login/login-totp/login-totp.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-login-totp",
            "styleUrls": [
                "./login-totp.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-totp.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error$",
                    "defaultValue": "this.loginService.error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    code: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(16),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "hasFIDO2$",
                    "defaultValue": "this.loginService.hasFIDO2$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { LoginService } from \"../login.service\";\n\n@Component({\n  selector: \"gt-login-totp\",\n  templateUrl: \"./login-totp.component.html\",\n  styleUrls: [\"./login-totp.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginTotpComponent implements OnInit {\n  error$ = this.loginService.error$;\n  hasFIDO2$ = this.loginService.hasFIDO2$;\n  form = new FormGroup({\n    code: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(16),\n    ]),\n  });\n\n  constructor(private loginService: LoginService) {}\n\n  ngOnInit() {\n    this.error$.subscribe((error) => {\n      if (error?.code) {\n        this.code?.setErrors({ serverError: error.code });\n      }\n    });\n  }\n\n  get code() {\n    return this.form.get(\"code\");\n  }\n\n  onSubmit() {\n    if (this.form.valid && this.code) {\n      const code: string = this.code.value;\n      if (code.length === 6) {\n        this.loginService.authenticateTOTP(code).subscribe();\n      } else {\n        this.loginService.authenticateBackupCode(code).subscribe();\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".margin-set {\n    margin-left: 45px;\n    margin-right: 45px;\n    margin-bottom: 45px;\n}\n\n.contents-left {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin: 0;\n    width: 100%;\n}\n\n.instructions {\n    margin-top: 16px;\n    margin-bottom: 18px;\n}\n\n.error-center {\n    align-self: center;\n}\n\n.header-left {\n    text-align: left;\n}",
                    "styleUrl": "./login-totp.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "code": {
                    "name": "code",
                    "getSignature": {
                        "name": "code",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                }
            },
            "templateData": "<div class=\"margin-set\">\n  <h1 class=\"header-left\">Log in with authenticator app</h1>\n  <mat-card-content class=\"contents-left\">\n    <div class=\"instructions\">\n      Enter the code from the authenticator app on your mobile device. If you’ve\n      lost your device, you may enter one of your recovery codes.\n    </div>\n    <form class=\"contents-left\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <gt-form-error\n        class=\"error-center\"\n        [error]=\"error$ | async\"\n      ></gt-form-error>\n      <mat-form-field class=\"full-width\">\n        <mat-label>Verification Code</mat-label>\n        <input matInput formControlName=\"code\" />\n        <mat-error *ngIf=\"code?.invalid\">\n          <span *ngIf=\"code?.errors?.required\">Required</span>\n          <span *ngIf=\"code?.errors?.minlength || code?.errors?.maxlength\">\n            Code must be of length 6 or 16\n          </span>\n          <span *ngFor=\"let serverError of code?.errors?.serverError\">{{\n            serverError\n          }}</span>\n        </mat-error>\n      </mat-form-field>\n      <button id=\"submit\" mat-flat-button color=\"primary\">Login</button>\n    </form>\n\n    <a *ngIf=\"hasFIDO2$ | async\">User U2F device instead.</a>\n  </mat-card-content>\n</div>\n"
        },
        {
            "name": "MainNavComponent",
            "id": "component-MainNavComponent-5835112cd837a613142474062208ee6a",
            "file": "src/app/main-nav/main-nav/main-nav.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-main-nav",
            "styleUrls": [
                "./main-nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "this.organizationsService\n    .activeOrganizationDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "activeOrganizationLoaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "activeOrganizationSlug",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "billingEnabled$",
                    "defaultValue": "this.settingsService.billingEnabled$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isLoggedIn$",
                    "defaultValue": "this.auth.isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "mobileNav$",
                    "defaultValue": "this.mainNav.mobileNav$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "navOpen$",
                    "defaultValue": "this.mainNav.navOpen$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "organizations$",
                    "defaultValue": "this.organizationsService.organizations$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "organizationsInitialLoad$",
                    "defaultValue": "this.organizationsService.initialLoad$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "paidForGlitchTip$",
                    "defaultValue": "this.settingsService.paidForGlitchTip$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "trigger",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatMenuTrigger | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatMenuTrigger"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSideNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setOrganization",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSideNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ViewChild } from \"@angular/core\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { OrganizationsService } from \"../../api/organizations/organizations.service\";\nimport { AuthService } from \"src/app/api/auth/auth.service\";\nimport { MainNavService } from \"../main-nav.service\";\nimport { SettingsService } from \"src/app/api/settings.service\";\n\n@Component({\n  selector: \"gt-main-nav\",\n  templateUrl: \"./main-nav.component.html\",\n  styleUrls: [\"./main-nav.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MainNavComponent {\n  activeOrganizationLoaded = false;\n  activeOrganizationSlug = \"\";\n  /* TODO: Add primary color to mat-sidenav\n  https://stackoverflow.com/questions/54248944/angular-6-7-how-to-apply-default-theme-color-to-mat-sidenav-background */\n  activeOrganizationDetail$ = this.organizationsService\n    .activeOrganizationDetail$;\n  organizations$ = this.organizationsService.organizations$;\n  organizationsInitialLoad$ = this.organizationsService.initialLoad$;\n  isLoggedIn$ = this.auth.isLoggedIn;\n  navOpen$ = this.mainNav.navOpen$;\n  billingEnabled$ = this.settingsService.billingEnabled$;\n  paidForGlitchTip$ = this.settingsService.paidForGlitchTip$;\n  mobileNav$ = this.mainNav.mobileNav$;\n  @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger | undefined = undefined;\n\n  constructor(\n    private mainNav: MainNavService,\n    private organizationsService: OrganizationsService,\n    private auth: AuthService,\n    private settingsService: SettingsService\n  ) {\n    this.organizationsService.activeOrganizationLoaded$.subscribe(\n      (loaded) => (this.activeOrganizationLoaded = loaded)\n    );\n    this.activeOrganizationDetail$.subscribe(\n      (organization) =>\n        (this.activeOrganizationSlug = organization ? organization.slug : \"\")\n    );\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  toggleSideNav() {\n    this.mainNav.getToggleNav();\n  }\n\n  closeSideNav() {\n    this.mainNav.getClosedNav();\n    this.trigger?.closeMenu();\n  }\n\n  setOrganization(id: number) {\n    this.organizationsService.changeActiveOrganization(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n// This make the app cover the whole screen at all times\nmat-sidenav-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\nmat-sidenav {\n  width: 240px;\n}\n\n.logo-toolbar {\n  background-color: transparent;\n\n  .main-logo {\n    width: 115px;\n    cursor: pointer;\n  }\n}\n\n.sub-items {\n  display: none !important;\n\n  @media (max-width: $tablet - 1) {\n    display: block !important;\n    margin-left: 24px;\n    max-width: calc(100% - 24px);\n    color: mat.get-color-from-palette(mat.$gray-palette, 600);\n  }\n}\n\nmat-sidenav-content {\n  mat-toolbar {\n    display: none;\n    cursor: pointer; // The whole toolbar is clickable\n\n    @media (max-width: $tablet - 1) {\n      display: flex;\n      padding-left: 0;\n    }\n\n    .sidenav-toggle {\n      height: 100%;\n      transform: translateY(-1px);\n    }\n  }\n}\n\n.overflow {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-height: 40px;\n  line-height: 1.11111;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.down-caret {\n  transform: scale(1, 0.5);\n  margin-left: 8px;\n}\n\n.org-details-divider {\n  margin: 10px 0;\n}\n\n.org-dropdown-list-item ::ng-deep .mat-list-item-content {\n  justify-content: space-between;\n}\n\n.mat-nav-list > button.mat-menu-item,\n.no-org-create {\n  font-weight: 500;\n}\n\n.mat-list-item-disabled {\n  background-color: white;\n  color: mat.get-color-from-palette(mat.$gray-palette, 500) !important;\n}\n\n.subdued {\n  color: mat.get-color-from-palette(mat.$gray-palette, 700);\n  font-weight: 300;\n}\n\n.nagware {\n  margin: 10px;\n  font-size: 0.8em;\n\n  h3 {\n    font-size: 0.8em;\n    margin-bottom: 0.5em;\n  }\n\n  button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    appearance: none;\n    background: transparent;\n    border: 0;\n    border-radius: 0;\n    margin: 0;\n    padding: 5px;\n  }\n\n  ul {\n    padding-left: 15px;\n  }\n\n  li {\n    padding-left: 0;\n  }\n\n  mat-icon {\n    font-size: 20px;\n  }\n}\n",
                    "styleUrl": "./main-nav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "mainNav",
                        "type": "MainNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "mainNav",
                        "type": "MainNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-sidenav-container>\n  <mat-sidenav\n    #sidenav\n    *ngIf=\"isLoggedIn$ | async\"\n    class=\"mat-elevation-z4\"\n    [opened]=\"navOpen$ | async\"\n    (closed)=\"closeSideNav()\"\n    [mode]=\"(mobileNav$ | async) === true ? 'over' : 'side'\"\n  >\n    <mat-toolbar class=\"logo-toolbar\">\n      <img\n        class=\"main-logo\"\n        routerLink=\".\"\n        src=\"static/assets/images/glitchtip-logo-v1.svg\"\n        alt=\"GlitchTip\"\n      />\n    </mat-toolbar>\n    <mat-nav-list>\n      <ng-container\n        *ngIf=\"\n          (organizationsInitialLoad$ | async) &&\n            (organizations$ | async)?.length === 0;\n          else showOrgMenu\n        \"\n      >\n        <a\n          mat-menu-item\n          id=\"create-new-link\"\n          routerLink=\"/organizations/new\"\n          class=\"no-org-create\"\n        >\n          Create New Organization\n        </a>\n      </ng-container>\n      <ng-template #showOrgMenu>\n        <mat-list-item\n          id=\"org-dropdown\"\n          color=\"accent\"\n          [disabled]=\"(organizationsInitialLoad$ | async) === false\"\n          [matMenuTriggerFor]=\"menu\"\n          class=\"org-dropdown-list-item\"\n        >\n          <span class=\"overflow\">\n            {{ (activeOrganizationDetail$ | async)?.name }}\n          </span>\n          <span class=\"down-caret\">▼</span>\n        </mat-list-item>\n      </ng-template>\n      <mat-menu #menu=\"matMenu\">\n        <button\n          *ngFor=\"let organization of organizations$ | async\"\n          (click)=\"setOrganization(organization.id)\"\n          mat-menu-item\n        >\n          {{ organization.name }}\n        </button>\n        <mat-divider></mat-divider>\n        <a mat-menu-item id=\"create-new-link\" routerLink=\"/organizations/new\">\n          Create New Organization\n        </a>\n      </mat-menu>\n      <a\n        mat-list-item\n        [disabled]=\"!activeOrganizationLoaded\"\n        [routerLink]=\"[activeOrganizationSlug, 'projects']\"\n        routerLinkActive=\"active-route\"\n      >\n        Projects\n      </a>\n      <a\n        mat-list-item\n        [disabled]=\"!activeOrganizationLoaded\"\n        [routerLink]=\"[activeOrganizationSlug, 'issues']\"\n        routerLinkActive=\"active-route\"\n      >\n        Issues\n      </a>\n      <a\n        mat-list-item\n        [disabled]=\"!activeOrganizationLoaded\"\n        [routerLink]=\"[activeOrganizationSlug, 'performance']\"\n        routerLinkActive=\"active-route\"\n      >\n        Performance <span class=\"subdued\">&nbsp;(Beta)</span>\n      </a>\n      <a\n        data-test-settings\n        mat-list-item\n        [disabled]=\"!activeOrganizationLoaded\"\n        [routerLink]=\"[activeOrganizationSlug, 'settings']\"\n        routerLinkActive=\"active-route\"\n      >\n        Settings\n      </a>\n      <a\n        class=\"sub-items\"\n        mat-list-item\n        [disabled]=\"!activeOrganizationLoaded\"\n        [routerLink]=\"['/', activeOrganizationSlug, 'settings', 'projects']\"\n        routerLinkActive=\"active-route\"\n      >\n        Projects\n      </a>\n      <a\n        *ngIf=\"billingEnabled$ | async\"\n        class=\"sub-items\"\n        mat-list-item\n        [routerLink]=\"['/', activeOrganizationSlug, 'settings', 'subscription']\"\n        routerLinkActive=\"active-route\"\n      >\n        Subscription\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"['/', activeOrganizationSlug, 'settings', 'teams']\"\n        routerLinkActive=\"active-route\"\n        class=\"sub-items\"\n      >\n        Teams\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"['/', activeOrganizationSlug, 'settings', 'members']\"\n        routerLinkActive=\"active-route\"\n        class=\"sub-items\"\n      >\n        Members\n      </a>\n      <mat-divider class=\"org-details-divider\"></mat-divider>\n      <a\n        mat-list-item\n        [routerLink]=\"['/profile']\"\n        routerLinkActive=\"active-route\"\n      >\n        Profile\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"['/profile']\"\n        routerLinkActive=\"active-route\"\n        class=\"sub-items\"\n      >\n        Account\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"['/profile', 'multi-factor-auth']\"\n        routerLinkActive=\"active-route\"\n        class=\"sub-items\"\n      >\n        Multi-factor Authentication\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"['/profile', 'notifications']\"\n        routerLinkActive=\"active-route\"\n        class=\"sub-items\"\n      >\n        Notifications\n      </a>\n      <a\n        mat-list-item\n        [routerLink]=\"['/profile', 'auth-tokens']\"\n        routerLinkActive=\"active-route\"\n        class=\"sub-items\"\n      >\n        Auth Tokens\n      </a>\n      <button mat-menu-item (click)=\"this.logout()\">Log Out</button>\n    </mat-nav-list>\n\n    <mat-card *ngIf=\"(paidForGlitchTip$ | async) === false\" class=\"nagware\">\n      <mat-card-title>\n        <h3 class=\"mat-display-1\">Support GlitchTip</h3>\n      </mat-card-title>\n      <mat-card-content>\n        <ul>\n          <li>\n            Donate\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://liberapay.com/GlitchTip/donate\"\n              >via Liberapay</a\n            >\n          </li>\n          <li>\n            Switch to\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://app.glitchtip.com/register?mtm_campaign=selfhost_nagware\"\n              >Hosted GlitchTip</a\n            >\n          </li>\n          <li>\n            Purchase support:\n            <a\n              href=\"mailto:sales@glitchtip.com?subject=Purchase support inquiry\"\n              >sales@glitchtip.com</a\n            >\n          </li>\n        </ul>\n      </mat-card-content>\n    </mat-card>\n  </mat-sidenav>\n\n  <mat-sidenav-content\n    ><mat-toolbar\n      *ngIf=\"isLoggedIn$ | async\"\n      (click)=\"toggleSideNav()\"\n      color=\"primary\"\n    >\n      <button *ngIf=\"isLoggedIn$ | async\" mat-button class=\"sidenav-toggle\">\n        <mat-icon>menu</mat-icon></button\n      ><span\n        class=\"active-org\"\n        *ngIf=\"activeOrganizationDetail$ | async as orgDetails\"\n        >{{ orgDetails?.name }}</span\n      >\n    </mat-toolbar>\n\n    <div class=\"wrapper\">\n      <ng-content></ng-content>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"
        },
        {
            "name": "ManageEmailsComponent",
            "id": "component-ManageEmailsComponent-514357293c24897af1b3781ddbf14308",
            "file": "src/app/profile/manage-emails/manage-emails.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-manage-emails",
            "styleUrls": [
                "./manage-emails.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./manage-emails.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addEmailError$",
                    "defaultValue": "this.emailService.addEmailError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "deleteEmail",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "emailAddresses$",
                    "defaultValue": "this.emailService.emailAddressesSorted$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    email_address: new FormControl(\n      \"\",\n      [Validators.email, Validators.required],\n      this.matchesExistingValidator\n    ),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "formDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective",
                    "optional": false,
                    "description": "<p>To reset a form, the normal thing to do is this.form.reset(), but Material\ndoesn&#39;t allow this. So we do it another way, and we need this for that.\n<a href=\"https://github.com/angular/components/issues/4190\">https://github.com/angular/components/issues/4190</a></p>\n",
                    "line": 31,
                    "rawdescription": "\n\nTo reset a form, the normal thing to do is this.form.reset(), but Material\ndoesn't allow this. So we do it another way, and we need this for that.\nhttps://github.com/angular/components/issues/4190\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormGroupDirective"
                        }
                    ]
                },
                {
                    "name": "loadingStates$",
                    "defaultValue": "this.emailService.loadingStates$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "makePrimary",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "matchesExistingValidator",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Does the email address match something already on the list?\nIf so, throw an error.</p>\n",
                    "line": 39,
                    "rawdescription": "\n\nDoes the email address match something already on the list?\nIf so, throw an error.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 1188,
                            "end": 1239,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 330,
                            "tagName": {
                                "pos": 1189,
                                "end": 1194,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>The form control being validated</p>\n",
                            "name": {
                                "pos": 1195,
                                "end": 1202,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "control"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        }
                    ]
                },
                {
                    "name": "resendConfirmation",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "resetFormSubject",
                    "defaultValue": "this.emailService.resetFormSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormGroupDirective,\n  AbstractControl,\n} from \"@angular/forms\";\nimport { EmailService } from \"../../api/emails/email.service\";\nimport { map, first } from \"rxjs/operators\";\n\n@Component({\n  selector: \"gt-manage-emails\",\n  templateUrl: \"./manage-emails.component.html\",\n  styleUrls: [\"./manage-emails.component.scss\"],\n})\nexport class ManageEmailsComponent implements OnInit {\n  emailAddresses$ = this.emailService.emailAddressesSorted$;\n  loadingStates$ = this.emailService.loadingStates$;\n  addEmailError$ = this.emailService.addEmailError$;\n  resetFormSubject = this.emailService.resetFormSubject;\n\n  get email_address() {\n    return this.form.get(\"email_address\");\n  }\n  /**\n   * To reset a form, the normal thing to do is this.form.reset(), but Material\n   * doesn't allow this. So we do it another way, and we need this for that.\n   * https://github.com/angular/components/issues/4190\n   */\n  @ViewChild(FormGroupDirective) formDirective!: FormGroupDirective;\n\n  /**\n   * Does the email address match something already on the list?\n   * If so, throw an error.\n   *\n   * @param control The form control being validated\n   */\n  matchesExistingValidator = (control: AbstractControl) =>\n    this.emailAddresses$.pipe(\n      map((emails) => {\n        const matchedEmail = emails.find(\n          (email) => email.email === control.value\n        );\n        return matchedEmail ? { matchesExistingValidator: true } : null;\n      }),\n      first()\n    );\n\n  // tslint:disable:member-ordering\n  form = new FormGroup({\n    email_address: new FormControl(\n      \"\",\n      [Validators.email, Validators.required],\n      this.matchesExistingValidator\n    ),\n  });\n\n  constructor(private emailService: EmailService) {}\n\n  ngOnInit(): void {\n    this.emailService.retrieveEmailAddresses();\n    this.resetFormSubject.subscribe((_) => this.formDirective.resetForm());\n  }\n\n  deleteEmail = (email: string) => this.emailService.removeEmailAddress(email);\n  makePrimary = (email: string) => this.emailService.makeEmailPrimary(email);\n  resendConfirmation = (email: string) =>\n    this.emailService.resendConfirmation(email);\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.emailService.addEmailAddress(this.form.value.email_address);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.mat-list-base .mat-list-item {\n  height: auto;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n\n  ::ng-deep .mat-list-item-content {\n    padding-left: 0;\n    padding-right: 0;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n}\n\n.email-info {\n  padding-top: 8px;\n  margin-bottom: 4px;\n\n  span {\n    margin-right: 16px;\n  }\n}\n\n.email-actions {\n  margin-top: 4px;\n  padding-bottom: 8px;\n}\n\nmat-chip-list {\n  display: inline-block;\n  margin-right: 15px;\n  pointer-events: none;\n  user-select: none;\n}\n\nmat-chip {\n  font-size: 0.8em;\n  padding: 0 10px;\n  min-height: 24px;\n}\n\n.delete-spinner-container {\n  display: inline-flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  vertical-align: middle;\n}\n\n.add-email-form-ui {\n  display: flex;\n  padding-top: 7px;\n\n  @media (max-width: $small - 1) {\n    flex-direction: column;\n  }\n\n  .mat-form-field {\n    flex: 1;\n  }\n\n  ::ng-deep .mat-form-field-wrapper {\n    max-width: 400px;\n  }\n\n  gt-loading-button {\n    margin-top: 12px;\n    margin-left: 15px;\n\n    @media (max-width: $small - 1) {\n      margin-left: unset;\n      margin-top: 8px;\n    }\n  }\n}\n",
                    "styleUrl": "./manage-emails.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "emailService",
                        "type": "EmailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "emailService",
                        "type": "EmailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "email_address": {
                    "name": "email_address",
                    "getSignature": {
                        "name": "email_address",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                }
            },
            "templateData": "<mat-card>\n  <mat-card-title>Email Addresses</mat-card-title>\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    <mat-list>\n      <mat-list-item *ngFor=\"let email of emailAddresses$ | async\">\n        <div class=\"email-info\">\n          <span>{{ email.email }}</span>\n          <mat-chip-list\n            *ngIf=\"email.isPrimary || !email.isVerified\"\n            [selectable]=\"false\"\n          >\n            <mat-chip color=\"primary\" selected *ngIf=\"email.isPrimary\">\n              Primary\n            </mat-chip>\n            <mat-chip color=\"primary\" *ngIf=\"!email.isVerified\">\n              Unverified\n            </mat-chip>\n          </mat-chip-list>\n        </div>\n        <div class=\"email-actions\">\n          <gt-loading-button\n            *ngIf=\"!email.isVerified\"\n            buttonText=\"Resend confirmation\"\n            [loading]=\"\n              (loadingStates$ | async)?.resendConfirmation === email.email\n            \"\n            (click)=\"resendConfirmation(email.email)\"\n            buttonStyle=\"stroked\"\n          ></gt-loading-button>\n          <gt-loading-button\n            *ngIf=\"!email.isPrimary && email.isVerified\"\n            buttonText=\"Make primary\"\n            [loading]=\"(loadingStates$ | async)?.makePrimary === email.email\"\n            (click)=\"makePrimary(email.email)\"\n            buttonStyle=\"stroked\"\n          ></gt-loading-button>\n          <div\n            *ngIf=\"(loadingStates$ | async)?.delete === email.email\"\n            class=\"delete-spinner-container\"\n          >\n            <mat-progress-spinner\n              [diameter]=\"24\"\n              color=\"primary\"\n              mode=\"indeterminate\"\n            ></mat-progress-spinner>\n          </div>\n          <button\n            class=\"delete-button\"\n            *ngIf=\"\n              !email.isPrimary &&\n              (loadingStates$ | async)?.delete !== email.email\n            \"\n            mat-icon-button\n            aria-label=\"Remove email address\"\n            (click)=\"deleteEmail(email.email)\"\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n      </mat-list-item>\n    </mat-list>\n    <form\n      [formGroup]=\"form\"\n      (ngSubmit)=\"onSubmit()\"\n      id=\"add-email-form\"\n      class=\"add-email-form\"\n    >\n      <div class=\"add-email-form-ui\">\n        <mat-form-field>\n          <input\n            matInput\n            type=\"email\"\n            placeholder=\"Email Address\"\n            formControlName=\"email_address\"\n          />\n          <mat-error>\n            <span\n              *ngIf=\"\n                email_address?.errors?.required || email_address?.errors?.email\n              \"\n            >\n              Please enter a valid email address.\n            </span>\n            <span *ngIf=\"email_address?.errors?.matchesExistingValidator\">\n              This email address is already on the list.\n            </span>\n            <span *ngIf=\"email_address?.errors?.serverError\">\n              {{ email_address?.errors?.serverError }}\n            </span>\n          </mat-error>\n        </mat-form-field>\n        <gt-loading-button\n          buttonText=\"Add Email Address\"\n          [loading]=\"(loadingStates$ | async)?.add\"\n        ></gt-loading-button>\n      </div>\n      <mat-error class=\"server-error\" *ngIf=\"(addEmailError$ | async) !== ''\">\n        {{ addEmailError$ | async }}\n      </mat-error>\n    </form>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "MemberDetailComponent",
            "id": "component-MemberDetailComponent-bfd68fbb4fec7f3a5f524d03f715f79c",
            "file": "src/app/settings/members/member-detail/member-detail.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-member-detail",
            "styleUrls": [
                "./member-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./member-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    role: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "memberDetail$",
                    "defaultValue": "this.memberDetailService.memberDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "memberIdSlug$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => params.get(\"member-id\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "orgSlug$",
                    "defaultValue": "this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "routeParams$",
                    "defaultValue": "combineLatest([this.orgSlug$, this.memberIdSlug$])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "teams$",
                    "defaultValue": "this.organizationsService.organizationTeams$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "updateMemberError$",
                    "defaultValue": "this.memberDetailService.updateMemberError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "updateMemberLoading$",
                    "defaultValue": "this.memberDetailService.updateMemberLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { map } from \"rxjs/operators\";\nimport { combineLatest } from \"rxjs\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { MemberDetailService } from \"src/app/api/organizations/member-detail.service\";\n\n@Component({\n  selector: \"gt-member-detail\",\n  templateUrl: \"./member-detail.component.html\",\n  styleUrls: [\"./member-detail.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  memberDetail$ = this.memberDetailService.memberDetail$;\n  teams$ = this.organizationsService.organizationTeams$;\n  updateMemberError$ = this.memberDetailService.updateMemberError$;\n  updateMemberLoading$ = this.memberDetailService.updateMemberLoading$;\n  orgSlug$ = this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")));\n  memberIdSlug$ = this.route.paramMap.pipe(\n    map((params) => params.get(\"member-id\"))\n  );\n  routeParams$ = combineLatest([this.orgSlug$, this.memberIdSlug$]);\n  form = new FormGroup({\n    role: new FormControl(\"\"),\n  });\n\n  constructor(\n    public route: ActivatedRoute,\n    private organizationsService: OrganizationsService,\n    private memberDetailService: MemberDetailService\n  ) {}\n\n  ngOnInit(): void {\n    this.routeParams$\n      .pipe(\n        map(([organizationSlug, memberIdSlug]) => {\n          if (organizationSlug && memberIdSlug) {\n            this.memberDetailService\n              .retrieveMemberDetail(organizationSlug, memberIdSlug)\n              .toPromise();\n            this.organizationsService.retrieveOrganizationTeams(\n              organizationSlug\n            );\n          }\n        })\n      )\n      .subscribe();\n\n    this.memberDetail$.subscribe((data) => {\n      if (data) {\n        this.form.patchValue({\n          role: data.role,\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.memberDetailService.clearState();\n  }\n\n  onSubmit() {\n    const role = this.form.get(\"role\")?.value;\n    this.memberDetailService.updateMember(role);\n    // entire member object needs to be put to orgs/org-slug/members/member-id\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-card {\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  mat-card-content {\n    padding-top: 16px;\n  }\n}\n\n.basics-content {\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: $tablet - 1) {\n    flex-direction: column;\n    justify-content: center;\n    padding-left: 0;\n    padding-right: 0;\n\n    .column {\n      margin-top: 8px;\n      margin-bottom: 8px;\n    }\n  }\n}\n\nform {\n  text-align: center;\n\n  div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n}\n\nmat-radio-group {\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  mat-radio-button {\n    margin-right: 32px;\n  }\n}\n\nmat-list {\n  padding-top: 0;\n\n  .mat-list-item {\n    &:nth-last-child(n + 2) {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    }\n\n    ::ng-deep .mat-list-item-content {\n      padding-left: 0;\n      padding-right: 0;\n    }\n  }\n}\n",
                    "styleUrl": "./member-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "memberDetailService",
                        "type": "MemberDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "memberDetailService",
                        "type": "MemberDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"l-body\" *ngIf=\"memberDetail$ | async as member\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">\n      {{ member.email }}\n    </h1>\n    <a mat-flat-button [routerLink]=\"['..']\">\n      <mat-icon>keyboard_arrow_left</mat-icon>\n      Back to Members\n    </a>\n  </header>\n  <mat-card>\n    <mat-card-title>Basics</mat-card-title><mat-divider></mat-divider>\n    <mat-card-content class=\"basics-content\">\n      <div class=\"column\">\n        <div class=\"mat-body-strong\">Email</div>\n        <div>{{ member.email }}</div>\n      </div>\n      <div class=\"column\">\n        <div class=\"mat-body-strong\">Role</div>\n        <div>{{ member.roleName }}</div>\n      </div>\n      <div class=\"column\">\n        <div class=\"mat-body-strong\">Added</div>\n        <div>{{ member.dateCreated | date }}</div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Role</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <mat-error *ngIf=\"updateMemberError$ | async as error\">{{\n          error\n        }}</mat-error>\n        <div>\n          <mat-radio-group formControlName=\"role\">\n            <mat-radio-button value=\"member\">Member</mat-radio-button>\n            <mat-radio-button value=\"admin\">Admin</mat-radio-button>\n            <mat-radio-button value=\"manager\">Manager</mat-radio-button>\n            <mat-radio-button value=\"owner\">Owner</mat-radio-button>\n          </mat-radio-group>\n          <gt-loading-button\n            *ngIf=\"member.role !== form.get('role')?.value\"\n            [loading]=\"(updateMemberLoading$ | async) === true\"\n            buttonText=\"Update Member\"\n          ></gt-loading-button>\n        </div>\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Team(s)</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <ng-container *ngIf=\"member.teams.length === 0; else listMembers\">\n        <p class=\"center-text\">This user isn't on any teams.</p>\n      </ng-container>\n      <ng-template #listMembers>\n        <mat-list>\n          <mat-list-item *ngFor=\"let team of member?.teams\">\n            <a\n              mat-line\n              [routerLink]=\"['teams', team, 'members']\"\n              [relativeTo]=\"this.route.parent?.parent\"\n              >{{ team }}</a\n            >\n          </mat-list-item>\n        </mat-list></ng-template\n      >\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "MembersComponent",
            "id": "component-MembersComponent-f04f3a8104fa4185cc801d1da6302a0f",
            "file": "src/app/settings/members/members.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-members",
            "styleUrls": [
                "./members.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./members.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "this.organizationsService\n    .activeOrganizationDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "members$",
                    "defaultValue": "this.membersService.members$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeMember",
                    "args": [
                        {
                            "name": "member",
                            "type": "MemberSelector",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "member",
                            "type": "MemberSelector",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resendInvite",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, filter } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { MembersService } from \"src/app/api/organizations/members.service\";\nimport { MemberSelector } from \"src/app/api/organizations/organizations.interface\";\n\n@Component({\n  selector: \"gt-members\",\n  templateUrl: \"./members.component.html\",\n  styleUrls: [\"./members.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MembersComponent implements OnInit {\n  activeOrganizationDetail$ = this.organizationsService\n    .activeOrganizationDetail$;\n  members$ = this.membersService.members$;\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private membersService: MembersService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"] as string),\n        filter((slug) => !!slug)\n      )\n      .subscribe((slug) => {\n        this.organizationsService.retrieveOrganizationMembers(slug).toPromise();\n      });\n  }\n\n  resendInvite(memberId: number) {\n    this.membersService.resendInvite(memberId);\n  }\n\n  removeMember(member: MemberSelector) {\n    const message = member.isMe\n      ? `Are you sure you'd like to leave this organization?`\n      : `Are you sure you want to remove ${member.email} from this organization?`;\n    if (window.confirm(message)) {\n      this.membersService.removeMember(member);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".list {\n  width: 100%;\n\n  &--item {\n    width: 100%;\n    padding: 16px 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n\n    &:nth-last-child(n + 2) {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    }\n  }\n\n  .email {\n    flex: 1 1 0%;\n  }\n\n  .invite-status {\n    width: 180px;\n    padding-left: 16px;\n    padding-right: 16px;\n\n    .pending {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  .role {\n    width: 140px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n}\n\n.resend-invite {\n  height: auto;\n\n  &::ng-deep .mat-flat-button {\n    line-height: unset;\n    padding-top: 4px;\n    padding-bottom: 4px;\n  }\n}\n\n.remove-button ::ng-deep button {\n  width: 90px;\n}\n",
                    "styleUrl": "./members.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "membersService",
                        "type": "MembersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "membersService",
                        "type": "MembersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Organization Members</h1>\n    <a mat-flat-button color=\"primary\" [routerLink]=\"['new']\">Invite Member</a>\n  </header>\n  <mat-card>\n    <mat-card-title>\n      {{ (activeOrganizationDetail$ | async)?.name }}\n    </mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <div class=\"list\">\n        <div class=\"list--item\" *ngFor=\"let member of members$ | async\">\n          <a class=\"email\" mat-line [routerLink]=\"[member.id]\">{{\n            member.email\n          }}</a>\n\n          <div *ngIf=\"member.pending\" class=\"invite-status\">\n            <p class=\"pending\">Pending</p>\n            <gt-loading-button\n              *ngIf=\"!member.loadingResendInvite && !member.sentResendInvite\"\n              class=\"resend-invite\"\n              [loading]=\"member.loadingResendInvite\"\n              buttonText=\"Resend Invite\"\n              (click)=\"resendInvite(member.id)\"\n            >\n            </gt-loading-button>\n            <span *ngIf=\"member.sentResendInvite\">Invite Sent</span>\n          </div>\n\n          <div class=\"role\">{{ member.roleName }}</div>\n\n          <gt-loading-button\n            class=\"remove-button\"\n            (click)=\"removeMember(member)\"\n            [buttonText]=\"member.isMe ? 'Leave' : 'Remove'\"\n            buttonStyle=\"stroked\"\n          ></gt-loading-button>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "MultiFactorAuthComponent",
            "id": "component-MultiFactorAuthComponent-1a8fe4b6b0a2d713028623f9597dcb00",
            "file": "src/app/profile/multi-factor-auth/multi-factor-auth.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-multi-factor-auth",
            "styleUrls": [
                "./multi-factor-auth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-factor-auth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.service.initialLoad$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { MultiFactorAuthService } from \"./multi-factor-auth.service\";\n\n@Component({\n  selector: \"gt-multi-factor-auth\",\n  templateUrl: \"./multi-factor-auth.component.html\",\n  styleUrls: [\"./multi-factor-auth.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MultiFactorAuthComponent implements OnInit {\n  initialLoad$ = this.service.initialLoad$;\n  constructor(private service: MultiFactorAuthService) {}\n\n  ngOnInit() {\n    this.service.getUserKeys().subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./multi-factor-auth.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MultiFactorAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MultiFactorAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"l-body\" *ngIf=\"initialLoad$ | async\">\n  <gt-totp></gt-totp>\n  <gt-fido2></gt-fido2>\n</section>\n"
        },
        {
            "name": "NewMemberComponent",
            "id": "component-NewMemberComponent-3150af7482fa029beaa17af9e110a439",
            "file": "src/app/settings/members/new-member/new-member.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-new-member",
            "styleUrls": [
                "./new-member.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-member.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errors$",
                    "defaultValue": "this.organizationsService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "filteredOrganizationTeams$",
                    "defaultValue": "this.organizationsService\n    .filteredOrganizationTeams$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    email: new FormControl(\"\", [Validators.required, emailsValidator]),\n    role: new FormControl(\"\", [Validators.required]),\n    teams: new FormControl([]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.organizationsService.loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "organizationTeams$",
                    "defaultValue": "this.organizationsService.organizationTeams$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n} from \"@angular/forms\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\n\n/** Custom validator to vaildate emails separated by commas */\nfunction validateEmails(emails: string) {\n  return (\n    emails\n      .split(\",\")\n      .map((email) =>\n        Validators.email({\n          value: email.replace(/\\s/g, \"\"),\n        } as AbstractControl)\n      )\n      .find((email) => email !== null) === undefined\n  );\n}\n\nfunction emailsValidator(control: AbstractControl): ValidationErrors | null {\n  if (control.value === \"\" || !control.value || validateEmails(control.value)) {\n    return null;\n  }\n  return { invalidEmails: true };\n}\n\n@Component({\n  selector: \"gt-new-member\",\n  templateUrl: \"./new-member.component.html\",\n  styleUrls: [\"./new-member.component.scss\"],\n})\nexport class NewMemberComponent implements OnInit, OnDestroy {\n  organizationTeams$ = this.organizationsService.organizationTeams$;\n  filteredOrganizationTeams$ = this.organizationsService\n    .filteredOrganizationTeams$;\n  errors$ = this.organizationsService.errors$;\n  loading$ = this.organizationsService.loading$;\n  form = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, emailsValidator]),\n    role: new FormControl(\"\", [Validators.required]),\n    teams: new FormControl([]),\n  });\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params\n      .pipe(map((params) => params[\"org-slug\"] as string))\n      .subscribe((slug) => {\n        this.organizationsService.retrieveOrganizationTeams(slug);\n      });\n\n    this.form.patchValue({ role: \"member\" });\n  }\n\n  ngOnDestroy() {\n    this.organizationsService.clearErrorState();\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      const emails = this.form.get(\"email\")?.value;\n      const role = this.form.get(\"role\")?.value;\n      const teams = this.form.get(\"teams\")?.value;\n\n      emails.split(\",\").map((email: string) => {\n        this.organizationsService.inviteOrganizationMembers(\n          email.replace(/\\s/g, \"\"),\n          teams,\n          role\n        );\n      });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  mat-card-content {\n    padding-top: 16px;\n  }\n}\n\n.email-paragraph {\n  padding-top: 8px;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\nmat-radio-group {\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  mat-radio-button {\n    margin-right: 32px;\n  }\n}\n\nform > div {\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nmat-list {\n  padding-top: 0;\n\n  .mat-list-item {\n    &:nth-last-child(n + 2) {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    }\n\n    ::ng-deep .mat-list-item-content {\n      padding-left: 0;\n      padding-right: 0;\n    }\n  }\n}\n\n.server-error {\n  text-align: center;\n}\n",
                    "styleUrl": "./new-member.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"l-body\">\n  <mat-card>\n    <mat-card-title> Add Member to Organization </mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <mat-error\n          class=\"server-error\"\n          *ngIf=\"(errors$ | async)?.addOrganizationMember as error\"\n          >{{ error }}</mat-error\n        >\n        <div>\n          <h2>Email(s)</h2>\n          <p class=\"email-paragraph\">\n            Invite a member to join this organization via their email address.\n            If they do not already have an account, they will first be asked to\n            create one. Multiple emails delimited by commas.\n          </p>\n          <mat-form-field>\n            <input\n              matInput\n              type=\"email\"\n              placeholder=\"Email\"\n              formControlName=\"email\"\n            />\n            <mat-error *ngIf=\"form.get('email')?.errors\">\n              <span *ngIf=\"form.get('email')?.errors?.invalidEmails\">\n                Enter a valid email</span\n              >\n              <span *ngIf=\"form.get('email')?.errors?.required\"\n                >Enter at least one email</span\n              >\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <h2>Role</h2>\n          <mat-radio-group formControlName=\"role\">\n            <mat-radio-button value=\"member\">Member</mat-radio-button>\n            <mat-radio-button value=\"admin\">Admin</mat-radio-button>\n            <mat-radio-button value=\"manager\">Manager</mat-radio-button>\n            <mat-radio-button value=\"owner\">Owner</mat-radio-button>\n          </mat-radio-group>\n        </div>\n        <div>\n          <h2>Team</h2>\n          <mat-form-field>\n            <mat-label>Add Team</mat-label>\n            <mat-select multiple formControlName=\"teams\" disableOptionCentering>\n              <ng-container\n                *ngIf=\"(organizationTeams$ | async)?.length; else emptyState\"\n              >\n                <mat-option\n                  *ngFor=\"let team of organizationTeams$ | async\"\n                  [value]=\"team.slug\"\n                >\n                  {{ team.slug }}\n                </mat-option></ng-container\n              ><ng-template #emptyState>\n                <mat-option disabled>No Teams</mat-option>\n              </ng-template>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <gt-loading-button\n          buttonText=\"Add Member(s)\"\n          [loading]=\"(loading$ | async)?.addOrganizationMember\"\n        ></gt-loading-button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "NewOrganizationsComponent",
            "id": "component-NewOrganizationsComponent-4886eb06fb74a37724d45efb2d5ab832",
            "file": "src/app/new-organization/new-organization.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-new-organizations",
            "styleUrls": [
                "./new-organization.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-organization.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "enableUserRegistration$",
                    "defaultValue": "this.settingsService.enableUserRegistration$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    name: new FormControl(\"\", [Validators.required]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "organizationCount$",
                    "defaultValue": "this.organizationsService.organizationCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { tap, withLatestFrom } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { SettingsService } from \"../api/settings.service\";\n\n@Component({\n  selector: \"gt-new-organizations\",\n  templateUrl: \"./new-organization.component.html\",\n  styleUrls: [\"./new-organization.component.scss\"],\n})\nexport class NewOrganizationsComponent {\n  organizationCount$ = this.organizationsService.organizationCount$;\n  enableUserRegistration$ = this.settingsService.enableUserRegistration$;\n  loading = false;\n  error: string | undefined;\n  form = new FormGroup({\n    name: new FormControl(\"\", [Validators.required]),\n  });\n  constructor(\n    private organizationsService: OrganizationsService,\n    private settingsService: SettingsService,\n    private router: Router\n  ) {}\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loading = true;\n      this.organizationsService\n        .createOrganization(this.form.value.name)\n        .pipe(\n          withLatestFrom(this.settingsService.billingEnabled$),\n          tap(([organization, billingEnabled]) => {\n            if (billingEnabled) {\n              this.router.navigate([\n                organization.slug,\n                \"settings\",\n                \"subscription\",\n              ]);\n            } else {\n              this.router.navigate([\"/\"]);\n            }\n          })\n        )\n        .toPromise();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-form-field,\nbutton,\nmat-checkbox {\n  width: 100%;\n}\n\nmat-card {\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: $tablet) {\n    min-width: 480px;\n  }\n\n  @media screen and (max-width: $tablet - 1) {\n    width: 100%;\n    max-width: 480px;\n  }\n}\n\nform {\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\nbutton {\n  margin-top: 20px;\n}\n",
                    "styleUrl": "./new-organization.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"l-body\">\n  <mat-card>\n    <mat-card-content>\n      <ng-container *ngIf=\"enableUserRegistration$ | async; else elseBlock\">\n        <mat-card-title>Create a New Organization</mat-card-title>\n        <p *ngIf=\"(organizationCount$ | async) === 0\">\n          This is the first step to get started with GlitchTip.\n        </p>\n        <form\n          [formGroup]=\"form\"\n          (ngSubmit)=\"onSubmit()\"\n          id=\"create-organization-form\"\n        >\n          <mat-error *ngIf=\"error\">{{ error }}</mat-error>\n          <mat-form-field>\n            <input matInput formControlName=\"name\" placeholder=\"Name\" />\n          </mat-form-field>\n          <button id=\"submit\" mat-flat-button color=\"primary\">\n            Create Organization\n          </button>\n        </form>\n      </ng-container>\n      <ng-template #elseBlock>\n        Registration has been disabled on this instance of GlitchTip.\n        Contact an administrator to be invited into an existing organization.\n      </ng-template>\n    </mat-card-content>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "NewProjectComponent",
            "id": "component-NewProjectComponent-cf09de3b2cc6ffc4b4e933e01b57da02",
            "file": "src/app/settings/projects/new-project/new-project.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-new-project",
            "styleUrls": [
                "./new-project.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-project.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    name: new FormControl(\"\", [Validators.required]),\n    platform: new FormControl(\"\"),\n    team: new FormControl(\"\", [Validators.required]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "orgSlug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "teams$",
                    "defaultValue": "this.teamsService.teams$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCreateTeamDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EMPTY } from \"rxjs\";\nimport { map, filter, tap, exhaustMap, catchError } from \"rxjs/operators\";\nimport { TeamsService } from \"src/app/api/teams/teams.service\";\nimport { NewTeamComponent } from \"../../teams/new-team/new-team.component\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { ProjectSettingsService } from \"../project-settings.service\";\n\n@Component({\n  selector: \"gt-new-project\",\n  templateUrl: \"./new-project.component.html\",\n  styleUrls: [\"./new-project.component.scss\"],\n})\nexport class NewProjectComponent implements OnInit {\n  teams$ = this.teamsService.teams$;\n  loading = false;\n  error?: string;\n  orgSlug?: string;\n  form = new FormGroup({\n    name: new FormControl(\"\", [Validators.required]),\n    platform: new FormControl(\"\"),\n    team: new FormControl(\"\", [Validators.required]),\n  });\n\n  constructor(\n    private orgService: OrganizationsService,\n    private projectsService: ProjectSettingsService,\n    private teamsService: TeamsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {\n    this.teams$.subscribe((data) => {\n      if (data && data[0]) {\n        this.form.patchValue({\n          team: data[0].slug,\n        });\n      }\n    });\n  }\n\n  get name() {\n    return this.form.get(\"name\");\n  }\n\n  get team() {\n    return this.form.get(\"team\");\n  }\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"] as string),\n        filter((slug) => !!slug),\n        tap((slug) => (this.orgSlug = slug))\n      )\n      .subscribe((slug) => {\n        this.teamsService.retrieveTeamsByOrg(slug).toPromise();\n      });\n  }\n\n  openCreateTeamDialog() {\n    this.dialog.open(NewTeamComponent, {\n      maxWidth: \"500px\",\n      data: {\n        orgSlug: this.orgSlug,\n      },\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid && this.orgSlug) {\n      this.loading = true;\n      this.projectsService\n        .createProject(\n          {\n            name: this.form.value.name,\n            platform: this.form.value.platform,\n          },\n          this.form.value.team,\n          this.orgSlug\n        )\n        .pipe(\n          tap(() => (this.loading = false)),\n          exhaustMap((project) =>\n            this.orgService.refreshOrganizationDetail().pipe(\n              tap((organization) => {\n                this.snackBar.open(`${project.name} has been created`);\n                this.router.navigate([organization.slug, \"issues\"], {\n                  queryParams: { project: project.id },\n                });\n              })\n            )\n          ),\n          catchError((err) => {\n            this.loading = false;\n            this.error = `${err.statusText}: ${err.status}`;\n            return EMPTY;\n          })\n        )\n        .toPromise();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-center {\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.l-body {\n  max-width: 650px;\n}\n\nmat-form-field {\n  display: block;\n  width: 100%;\n}\n\n.teams {\n  display: flex;\n  align-items: center;\n}\n\n.project-name {\n  margin: 10px 0 30px;\n}\n",
                    "styleUrl": "./new-project.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                },
                "team": {
                    "name": "team",
                    "getSignature": {
                        "name": "team",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                }
            },
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Create a New Project</h1>\n  </header>\n  <mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-center\">\n          <mat-error *ngIf=\"error\">{{ error }}</mat-error>\n          <gt-platform-picker\n            formControlName=\"platform\"\n            template=\"buttons\"\n          ></gt-platform-picker>\n          <mat-form-field class=\"project-name\">\n            <input matInput formControlName=\"name\" placeholder=\"Project Name\" />\n            <mat-error>\n              <span *ngIf=\"name?.errors?.required\">Enter a project name</span>\n            </mat-error>\n          </mat-form-field>\n          <div class=\"teams\">\n            <mat-form-field *ngIf=\"teams$ | async as teams\">\n              <mat-select\n                (click)=\"teams.length ? undefined : openCreateTeamDialog()\"\n                [placeholder]=\"teams.length ? 'Assign a team' : 'Create a team'\"\n                formControlName=\"team\"\n              >\n                <mat-option *ngFor=\"let team of teams\" [value]=\"team.slug\">\n                  {{ team.slug }}\n                </mat-option>\n              </mat-select>\n              <mat-error\n                ><span *ngIf=\"name?.errors?.required\"\n                  >Add a team to this project</span\n                ></mat-error\n              >\n            </mat-form-field>\n\n            <button\n              mat-icon-button\n              color=\"primary\"\n              aria-label=\"Add a team\"\n              (click)=\"openCreateTeamDialog()\"\n              id=\"create-team-from-projects\"\n              matTooltip=\"Create a new team for this project\"\n              matTooltipPosition=\"above\"\n              type=\"button\"\n            >\n              <mat-icon>add_circle_outline</mat-icon>\n            </button>\n          </div>\n        </div>\n        <gt-loading-button\n          id=\"create-project-submit\"\n          [loading]=\"loading\"\n          buttonText=\"Create Project\"\n        >\n        </gt-loading-button>\n      </form> </mat-card-content\n  ></mat-card>\n</section>\n"
        },
        {
            "name": "NewRecipientComponent",
            "id": "component-NewRecipientComponent-8bf39939fe95283dfb13c4ad70234218",
            "file": "src/app/settings/projects/project-detail/project-alerts/new-recipient/new-recipient.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-new-recipient",
            "styleUrls": [
                "./new-recipient.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-recipient.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<NewRecipientComponent>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "emailSelected$",
                    "defaultValue": "this.alertsService.emailSelected$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "recipientDialogOpen$",
                    "defaultValue": "this.alertsService.recipientDialogOpen$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "recipientForm",
                    "defaultValue": "new FormGroup({\n    recipientType: new FormControl(\"\", [Validators.required]),\n    url: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "recipientOptions",
                    "defaultValue": "[\n    { viewValue: \"Email\", value: \"email\" },\n    { viewValue: \"General Webhook\", value: \"webhook\" },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "recipientType",
                    "defaultValue": "this.recipientForm.get(\"recipientType\") as FormControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "url",
                    "defaultValue": "this.recipientForm.get(\"url\") as FormControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectOptions",
                    "args": [
                        {
                            "name": "recipientOptions",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hideEmailOption",
                            "type": "boolean | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type[]",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "recipientOptions",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hideEmailOption",
                            "type": "boolean | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { RecipientType } from \"src/app/api/projects/project-alerts/project-alerts.interface\";\nimport { ProjectAlertsService } from \"../project-alerts.service\";\n\n@Component({\n  selector: \"gt-new-recipient\",\n  templateUrl: \"./new-recipient.component.html\",\n  styleUrls: [\"./new-recipient.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NewRecipientComponent implements OnInit {\n  recipientDialogOpen$ = this.alertsService.recipientDialogOpen$;\n  emailSelected$ = this.alertsService.emailSelected$;\n\n  recipientOptions = [\n    { viewValue: \"Email\", value: \"email\" },\n    { viewValue: \"General Webhook\", value: \"webhook\" },\n  ];\n\n  recipientForm = new FormGroup({\n    recipientType: new FormControl(\"\", [Validators.required]),\n    url: new FormControl(\"\"),\n  });\n\n  recipientType = this.recipientForm.get(\"recipientType\") as FormControl;\n  url = this.recipientForm.get(\"url\") as FormControl;\n\n  constructor(\n    public dialogRef: MatDialogRef<NewRecipientComponent>,\n    private alertsService: ProjectAlertsService\n  ) {\n    this.recipientDialogOpen$.subscribe(\n      (resp) => !resp && this.dialogRef.close()\n    );\n  }\n\n  ngOnInit(): void {\n    // Dynamically set \"url\" validators\n    this.recipientType.valueChanges.subscribe((type: RecipientType) => {\n      this.url.clearValidators();\n      if (type === \"webhook\") {\n        // https://stackoverflow.com/a/3809435/443457\n        const urlReg = new RegExp(\n          /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi\n        );\n        this.url.setValidators([\n          Validators.required,\n          Validators.pattern(urlReg),\n        ]);\n      }\n      this.url.updateValueAndValidity();\n    });\n  }\n\n  closeDialog() {\n    this.alertsService.closeRecipientDialog();\n  }\n\n  selectOptions(\n    recipientOptions: { viewValue: string; value: string }[],\n    hideEmailOption?: boolean | null\n  ): { viewValue: string; value: string }[] {\n    return hideEmailOption\n      ? this.recipientOptions.filter((option) => option.value !== \"email\")\n      : recipientOptions;\n  }\n\n  onSubmit() {\n    if (this.recipientForm.valid) {\n      this.alertsService.addAlertRecipient(this.recipientForm.value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.dialog-wrapper {\n  width: 500px;\n\n  @media screen and (max-width: $tablet - 1) {\n    width: 100%;\n  }\n\n  h1 {\n    margin-left: -24px;\n    margin-right: -24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  }\n}\n\n.error {\n  color: #f44336;\n  text-align: center;\n\n  span {\n    margin-left: 8px;\n    margin-right: 8px;\n  }\n}\n\n.switch {\n  margin-top: 32px;\n  margin-bottom: 32px;\n\n  .webhook {\n    width: 100%;\n\n    svg {\n      width: 24px;\n      height: 24px;\n      vertical-align: -5px;\n      margin-right: 8px;\n    }\n  }\n\n  .email {\n    text-align: center;\n  }\n\n  .default {\n    text-align: center;\n  }\n}\n\nmat-dialog-actions {\n  justify-content: flex-end;\n}\n",
                    "styleUrl": "./new-recipient.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<NewRecipientComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertsService",
                        "type": "ProjectAlertsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<NewRecipientComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertsService",
                        "type": "ProjectAlertsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"dialog-wrapper\">\n  <h1 mat-dialog-title>Add Alert Recipient</h1>\n  <form\n    [formGroup]=\"recipientForm\"\n    (ngSubmit)=\"onSubmit()\"\n    id=\"create-team-form\"\n  >\n    <mat-dialog-content class=\"mat-typography\">\n      <mat-form-field class=\"type\">\n        <mat-label>Recipient Type</mat-label>\n        <mat-select [formControl]=\"recipientType\">\n          <mat-option\n            *ngFor=\"\n              let recipient of selectOptions(\n                recipientOptions,\n                emailSelected$ | async\n              )\n            \"\n            [value]=\"recipient.value\"\n          >\n            {{ recipient.viewValue }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div [ngSwitch]=\"recipientType.value\" class=\"switch\">\n        <mat-form-field class=\"webhook\" *ngSwitchCase=\"'webhook'\">\n          <mat-label>Webhook URL</mat-label>\n          <svg matPrefix class=\"slack\">\n            <use xlink:href=\"#webhook\"></use>\n          </svg>\n          <input matInput type=\"url\" formControlName=\"url\" placeholder=\"URL\" />\n          <mat-error *ngIf=\"url?.errors\">\n            <span *ngIf=\"url?.errors?.required || url?.errors?.pattern\"\n              >Enter a valid URL</span\n            >\n          </mat-error>\n        </mat-form-field>\n        <p class=\"email\" *ngSwitchCase=\"'email'\">\n          An email will be sent to the members of this project.<br />\n          Select \"Add Recipient\" to continue.\n        </p>\n        <p class=\"default\" *ngSwitchDefault>\n          Select an alert type to get started.\n        </p>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <gt-loading-button type=\"submit\" buttonText=\"Add Recipient\">\n      </gt-loading-button>\n      <button type=\"button\" mat-flat-button (click)=\"closeDialog()\">\n        Cancel\n      </button>\n    </mat-dialog-actions>\n  </form>\n</div>\n"
        },
        {
            "name": "NewTeamComponent",
            "id": "component-NewTeamComponent-17c9cc4f5b35f16ae3620139657d1ed4",
            "file": "src/app/settings/teams/new-team/new-team.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-new-team",
            "styleUrls": [
                "./new-team.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-team.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<NewTeamComponent>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "errors",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    slug: new FormControl(\"\", [Validators.required]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "orgSlug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\n\n@Component({\n  selector: \"gt-new-team\",\n  templateUrl: \"./new-team.component.html\",\n  styleUrls: [\"./new-team.component.scss\"],\n})\nexport class NewTeamComponent {\n  loading = false;\n  errors: string[] = [];\n  form = new FormGroup({\n    slug: new FormControl(\"\", [Validators.required]),\n  });\n  orgSlug?: string;\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef<NewTeamComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { orgSlug: string }\n  ) {}\n\n  get slug() {\n    return this.form.get(\"slug\");\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loading = true;\n      this.organizationsService\n        .createTeam(this.form.value.slug, this.data.orgSlug)\n        .subscribe(\n          (team) => {\n            this.loading = false;\n            this.snackBar.open(`${team.slug} has been created`);\n            this.dialogRef.close();\n          },\n          (err) => {\n            this.loading = false;\n            if (err.error.slug?.length) {\n              this.errors = err.error.slug;\n            } else {\n              this.errors = [`${err.statusText}: ${err.status}`];\n            }\n          }\n        );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dialog-wrapper {\n  padding: 24px;\n}\n\n.error {\n  height: 40px;\n  display: flex;\n  align-items: center;\n}\n\n.description {\n  margin-bottom: 0;\n}\n\nmat-form-field {\n  margin-bottom: 16px;\n}\n\nmat-form-field {\n  width: 100%;\n}\nmat-dialog-actions {\n  display: flex;\n  justify-content: space-between;\n}\n",
                    "styleUrl": "./new-team.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<NewTeamComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<NewTeamComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "slug": {
                    "name": "slug",
                    "getSignature": {
                        "name": "slug",
                        "type": "",
                        "returnType": "",
                        "line": 27
                    }
                }
            },
            "templateData": "<div class=\"dialog-wrapper\">\n  <h1 mat-dialog-title>Create a New Team</h1>\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" id=\"create-team-form\">\n    <mat-dialog-content class=\"mat-typography\">\n      <p class=\"description\">\n        Your team slug can only consist of letters, numbers, underscores and/or\n        hyphens.\n      </p>\n      <mat-error class=\"error mat-caption\">\n        <span *ngFor=\"let error of errors\">{{ error }}</span>\n      </mat-error>\n      <mat-form-field>\n        <input matInput gtSlugify formControlName=\"slug\" placeholder=\"Slug\" />\n        <mat-error *ngIf=\"slug?.errors?.required\">\n          <span>Enter a valid slug to create a team</span>\n        </mat-error>\n      </mat-form-field>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <gt-loading-button\n        id=\"create-team-submit\"\n        buttonText=\"Create Team\"\n        [loading]=\"loading\"\n      >\n      </gt-loading-button>\n      <button type=\"button\" mat-flat-button (click)=\"closeDialog()\">\n        Cancel\n      </button>\n    </mat-dialog-actions>\n  </form>\n</div>\n"
        },
        {
            "name": "NewTokenComponent",
            "id": "component-NewTokenComponent-d79dd0ab20b4a5fb640683922ffa2287",
            "file": "src/app/profile/auth-tokens/new-token/new-token.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-new-token",
            "styleUrls": [
                "./new-token.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-token.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "createError$",
                    "defaultValue": "this.authTokensService.createError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "createErrorLabel$",
                    "defaultValue": "this.authTokensService.createErrorLabel$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "createErrorScopes$",
                    "defaultValue": "this.authTokensService.createErrorScopes$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "createLoading$",
                    "defaultValue": "this.authTokensService.createLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "scopeOptions",
                    "defaultValue": "[\n    \"project:read\",\n    \"project:write\",\n    \"project:admin\",\n    \"project:releases\",\n    \"team:read\",\n    \"team:write\",\n    \"team:admin\",\n    \"event:read\",\n    \"event:write\",\n    \"event:admin\",\n    \"org:read\",\n    \"org:write\",\n    \"org:admin\",\n    \"member:read\",\n    \"member:write\",\n    \"member:admin\",\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "getLabelFieldError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getScopesFieldError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateScopes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormArray,\n  FormControl,\n  Validators,\n  FormBuilder,\n} from \"@angular/forms\";\nimport { AuthTokensService } from \"../auth-tokens.service\";\n\n@Component({\n  selector: \"gt-new-token\",\n  templateUrl: \"./new-token.component.html\",\n  styleUrls: [\"./new-token.component.scss\"],\n})\nexport class NewTokenComponent implements OnDestroy {\n  createLoading$ = this.authTokensService.createLoading$;\n  createError$ = this.authTokensService.createError$;\n  createErrorLabel$ = this.authTokensService.createErrorLabel$;\n  createErrorScopes$ = this.authTokensService.createErrorScopes$;\n\n  form: FormGroup;\n  scopeOptions: string[] = [\n    \"project:read\",\n    \"project:write\",\n    \"project:admin\",\n    \"project:releases\",\n    \"team:read\",\n    \"team:write\",\n    \"team:admin\",\n    \"event:read\",\n    \"event:write\",\n    \"event:admin\",\n    \"org:read\",\n    \"org:write\",\n    \"org:admin\",\n    \"member:read\",\n    \"member:write\",\n    \"member:admin\",\n  ];\n\n  get scopes() {\n    return this.form.controls.scopes as FormArray;\n  }\n\n  get label() {\n    return this.form.controls.label as FormControl;\n  }\n\n  constructor(\n    private authTokensService: AuthTokensService,\n    private fb: FormBuilder\n  ) {\n    this.form = this.fb.group({\n      label: new FormControl(\"\", [Validators.required]),\n      scopes: new FormArray([]),\n    });\n\n    /* Set scopeOptions to scopes FormArray **/\n    this.scopeOptions.forEach(() => this.scopes.push(new FormControl(false)));\n  }\n\n  ngOnDestroy() {\n    this.authTokensService.clear();\n  }\n\n  getLabelFieldError() {\n    this.createErrorLabel$.subscribe((error) => {\n      if (error) {\n        return this.label.setErrors({\n          serverErrorLabel: error,\n        });\n      }\n    });\n  }\n\n  getScopesFieldError() {\n    this.createErrorScopes$.subscribe((error) => {\n      if (error) {\n        return this.scopes.setErrors({\n          serverErrorScopes: error,\n        });\n      }\n    });\n  }\n\n  validateScopes() {\n    /* Check to see if at least one scope is selected before submitting **/\n    const valueSelected = this.scopes.value.find(\n      (value: boolean) => value === true\n    );\n    if (!valueSelected) {\n      this.scopes.setErrors({\n        selectOne: true,\n      });\n    }\n  }\n\n  validateForm() {\n    this.validateScopes();\n    this.getLabelFieldError();\n    this.getScopesFieldError();\n  }\n\n  onSubmit() {\n    this.authTokensService.resetCreateErrors();\n\n    this.validateForm();\n\n    if (this.form.valid) {\n      const label = this.label.value;\n      const selectedScopes = this.form.value.scopes\n        .map((checked: boolean, index: number) =>\n          checked ? this.scopeOptions[index] : null\n        )\n        .filter((selected: string) => selected !== null);\n      this.authTokensService.createAuthToken(label, selectedScopes);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 12px;\n\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n\n  mat-card-title {\n    margin-bottom: 0;\n    margin-right: 8px;\n  }\n}\n\n.server-error {\n  padding-top: 16px;\n  text-align: center;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\nul {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax((150px), 1fr));\n  grid-gap: 8px 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n\n  li {\n    list-style-type: none;\n  }\n}\n\n.checkbox-error {\n  font-size: 75%;\n}\n\ngt-loading-button {\n  margin-top: 40px;\n}\n",
                    "styleUrl": "./new-token.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authTokensService",
                        "type": "AuthTokensService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "authTokensService",
                        "type": "AuthTokensService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "scopes": {
                    "name": "scopes",
                    "getSignature": {
                        "name": "scopes",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                },
                "label": {
                    "name": "label",
                    "getSignature": {
                        "name": "label",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                }
            },
            "templateData": "<section class=\"l-body\">\n  <mat-card>\n    <mat-card-header class=\"flex-space-between\">\n      <mat-card-title> Create New Token </mat-card-title>\n      <a\n        mat-flat-button\n        [routerLink]=\"['/profile', 'auth-tokens']\"\n        aria-label=\"Back to auth tokens\"\n      >\n        <mat-icon>keyboard_arrow_left</mat-icon>\n        Auth Tokens\n      </a>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-error class=\"server-error\"\n        ><span *ngIf=\"createError$ | async\">{{\n          createError$ | async\n        }}</span></mat-error\n      >\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <h2>Label</h2>\n        <p>Give your token a name, so you can easily identify it.</p>\n        <mat-form-field>\n          <mat-label>Label</mat-label>\n          <input matInput type=\"text\" formControlName=\"label\" />\n          <mat-error\n            ><span *ngIf=\"label?.errors?.required\"\n              >Create a label for your auth token</span\n            ><span *ngIf=\"label?.errors?.serverErrorLabel\">{{\n              label?.errors?.serverErrorLabel\n            }}</span></mat-error\n          >\n        </mat-form-field>\n        <h2>Scopes</h2>\n        <p>Set the kind of access you want this token to have to your app.</p>\n        <ul>\n          <li\n            formArrayName=\"scopes\"\n            *ngFor=\"let scope of scopes.controls; let i = index\"\n          >\n            <mat-checkbox [formControlName]=\"i\">\n              {{ scopeOptions[i] }}\n            </mat-checkbox>\n          </li>\n        </ul>\n\n        <mat-error class=\"checkbox-error\"\n          ><span *ngIf=\"scopes?.errors?.selectOne\"\n            >Select at least one scope</span\n          ><span *ngIf=\"scopes?.errors?.serverErrorScopes\">{{\n            scopes?.errors?.serverErrorScopes\n          }}</span></mat-error\n        >\n        <gt-loading-button\n          [loading]=\"(createLoading$ | async) === true\"\n          buttonText=\"Create Token\"\n        ></gt-loading-button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "NotificationsComponent",
            "id": "component-NotificationsComponent-8ccc6c892c89e339d66348736c29134e",
            "file": "src/app/profile/notifications/notifications.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-notifications",
            "styleUrls": [
                "./notifications.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notifications.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "groupedProjects$",
                    "defaultValue": "this.notificationsService.groupedProjects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "projectAlertLoading$",
                    "defaultValue": "this.notificationsService.projectAlertLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "projectAlertsError$",
                    "defaultValue": "this.notificationsService.projectAlertsError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "projectViewExpanded$",
                    "defaultValue": "this.notificationsService.projectViewExpanded$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "subscribeByDefault$",
                    "defaultValue": "this.notificationsService.subscribeByDefault$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "subscribeByDefaultError$",
                    "defaultValue": "this.notificationsService.subscribeByDefaultError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subscribeByDefaultLoading$",
                    "defaultValue": "this.notificationsService\n    .subscribeByDefaultLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDefaultNotifications",
                    "args": [
                        {
                            "name": "subscribe",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subscribe",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleProjectView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateUserAlertSettings",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "status",
                            "type": "NotificationStatus",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "status",
                            "type": "NotificationStatus",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { NotificationsService } from \"./notifications.service\";\nimport { NotificationStatus } from \"./notifications.interface\";\n\n@Component({\n  selector: \"gt-notifications\",\n  templateUrl: \"./notifications.component.html\",\n  styleUrls: [\"./notifications.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationsComponent implements OnInit {\n  subscribeByDefault$ = this.notificationsService.subscribeByDefault$;\n  projectViewExpanded$ = this.notificationsService.projectViewExpanded$;\n  subscribeByDefaultLoading$ = this.notificationsService\n    .subscribeByDefaultLoading$;\n  subscribeByDefaultError$ = this.notificationsService.subscribeByDefaultError$;\n  projectAlertLoading$ = this.notificationsService.projectAlertLoading$;\n  groupedProjects$ = this.notificationsService.groupedProjects$;\n  projectAlertsError$ = this.notificationsService.projectAlertsError$;\n\n  constructor(private notificationsService: NotificationsService) {}\n\n  ngOnInit(): void {\n    this.notificationsService.subscribeToEndpoints();\n  }\n\n  toggleDefaultNotifications(subscribe: boolean) {\n    this.notificationsService.notificationsUpdate(subscribe);\n  }\n\n  toggleProjectView() {\n    this.notificationsService.toggleProjectView();\n  }\n\n  updateUserAlertSettings(projectId: string, status: NotificationStatus) {\n    this.notificationsService.alertsUpdate(projectId, status);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"src/assets/styles/variables\";\n\nmat-card-content {\n  padding-top: 32px;\n}\n\n.default-settings {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.default-alerts {\n  margin-right: 16px;\n  max-width: 400px;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n}\n\n.button-group {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.button-and-loading {\n  display: flex;\n  align-items: center;\n\n  mat-spinner {\n    margin-right: 16px;\n  }\n}\n\nmat-error {\n  text-align: right;\n  padding-top: 4px;\n  line-height: 1.5;\n}\n\n.expand-button {\n  display: block;\n  margin-top: 16px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.org-name {\n  margin-bottom: 4px;\n  margin-top: 32px;\n}\n\n.border {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.mat-list-item {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n\n  &:first-child {\n    border-top: none;\n  }\n}\n\n.project {\n  width: 205px;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 0;\n    color: mat.get-color-from-palette(mat.$gray-palette, 700);\n  }\n  a {\n    text-decoration: none;\n  }\n}\n\n.underline {\n  &::ng-deep .mat-button-toggle-label-content {\n    text-decoration: underline;\n  }\n}\n",
                    "styleUrl": "./notifications.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "notificationsService",
                        "type": "NotificationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "notificationsService",
                        "type": "NotificationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"l-body\">\n  <mat-card>\n    <mat-card-title>Notifications</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <div class=\"default-settings\">\n        <div class=\"default-alerts\">\n          <p class=\"mat-body-strong\">Send me project alerts</p>\n          <p class=\"mat-body-1\">\n            This is the default setting for project alerts. You can change the\n            setting per project below.\n          </p>\n        </div>\n        <div class=\"button-group\">\n          <div class=\"button-and-loading\">\n            <mat-spinner\n              *ngIf=\"(subscribeByDefaultLoading$ | async) === true\"\n              diameter=\"24\"\n            ></mat-spinner>\n            <mat-button-toggle-group\n              name=\"defaultNotifications\"\n              aria-label=\"Default Notifications\"\n            >\n              <mat-button-toggle\n                value=\"onDefault\"\n                (change)=\"toggleDefaultNotifications(true)\"\n                [class.underline]=\"(subscribeByDefault$ | async) === true\"\n                [checked]=\"(subscribeByDefault$ | async) === true\"\n                >On</mat-button-toggle\n              >\n              <mat-button-toggle\n                value=\"offDefault\"\n                (change)=\"toggleDefaultNotifications(false)\"\n                [class.underline]=\"(subscribeByDefault$ | async) === false\"\n                [checked]=\"(subscribeByDefault$ | async) === false\"\n                >Off</mat-button-toggle\n              >\n            </mat-button-toggle-group>\n          </div>\n          <mat-error\n            *ngIf=\"subscribeByDefaultError$ | async as error\"\n            class=\"mat-small\"\n            >{{ error }}</mat-error\n          >\n        </div>\n      </div>\n      <button\n        *ngIf=\"(projectViewExpanded$ | async) === false\"\n        mat-flat-button\n        color=\"primary\"\n        class=\"expand-button\"\n        (click)=\"toggleProjectView()\"\n      >\n        <span>Edit By Project</span><mat-icon>keyboard_arrow_down</mat-icon>\n      </button>\n\n      <ng-container *ngIf=\"projectViewExpanded$ | async\">\n        <div *ngFor=\"let projects of groupedProjects$ | async | keyvalue\">\n          <div class=\"org-name mat-h3 mat-body-strong\">\n            {{ projects.value[0].organization.name }}\n          </div>\n          <div class=\"border\">\n            <div\n              class=\"mat-list-item\"\n              *ngFor=\"let project of projects.value; let i = index\"\n            >\n              <div class=\"project\">\n                <a\n                  [routerLink]=\"[\n                    '/',\n                    project.organization.slug,\n                    'settings',\n                    'projects',\n                    project.slug\n                  ]\"\n                  >{{ project.name }}</a\n                >\n              </div>\n              <div class=\"button-group\">\n                <div class=\"button-and-loading\">\n                  <mat-spinner\n                    *ngIf=\"(projectAlertLoading$ | async) === project.id\"\n                    diameter=\"24\"\n                  ></mat-spinner>\n                  <mat-button-toggle-group\n                    aria-label=\"`Notifications for ${project}`\"\n                  >\n                    <mat-button-toggle\n                      (change)=\"updateUserAlertSettings(project.id, 1)\"\n                      [class.underline]=\"project.alertStatus === 1\"\n                      [checked]=\"project.alertStatus === 1\"\n                      >On</mat-button-toggle\n                    >\n                    <mat-button-toggle\n                      (change)=\"updateUserAlertSettings(project.id, 0)\"\n                      [class.underline]=\"project.alertStatus === 0\"\n                      [checked]=\"project.alertStatus === 0\"\n                      >Off</mat-button-toggle\n                    >\n                    <mat-button-toggle\n                      (change)=\"updateUserAlertSettings(project.id, -1)\"\n                      [class.underline]=\"project.alertStatus === -1\"\n                      [checked]=\"project.alertStatus === -1\"\n                      >Default\n                      <span\n                        >({{\n                          (subscribeByDefault$ | async) === true ? \"On\" : \"Off\"\n                        }})</span\n                      ></mat-button-toggle\n                    >\n                  </mat-button-toggle-group>\n                </div>\n                <mat-error\n                  *ngIf=\"(projectAlertsError$ | async)?.id === project.id\"\n                  class=\"mat-small\"\n                  >{{ (projectAlertsError$ | async)?.error }}</mat-error\n                >\n              </div>\n            </div>\n          </div>\n        </div></ng-container\n      >\n\n      <button\n        *ngIf=\"(projectViewExpanded$ | async) === true\"\n        mat-flat-button\n        color=\"primary\"\n        class=\"expand-button\"\n        (click)=\"toggleProjectView()\"\n      >\n        <span>Hide Projects</span><mat-icon>keyboard_arrow_up</mat-icon>\n      </button>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "OrganizationComponent",
            "id": "component-OrganizationComponent-5ba5b893cfffc1f43a4c419dc4df5fab",
            "file": "src/app/settings/organization/organization.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-organization",
            "styleUrls": [
                "./organization.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./organization.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "this.organizationsService\n    .activeOrganizationDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "deleteError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "deleteLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    name: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "updateError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "updateLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeOrganization",
                    "args": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "slug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateOrganization",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { tap, take } from \"rxjs/operators\";\nimport { OrganizationsService } from \"../../api/organizations/organizations.service\";\nimport { OrganizationDetail } from \"src/app/api/organizations/organizations.interface\";\n\n@Component({\n  selector: \"gt-organization\",\n  templateUrl: \"./organization.component.html\",\n  styleUrls: [\"./organization.component.scss\"],\n})\nexport class OrganizationComponent implements OnInit {\n  activeOrganizationDetail$ = this.organizationsService\n    .activeOrganizationDetail$;\n  updateError = \"\";\n  updateLoading = false;\n  deleteError = \"\";\n  deleteLoading = false;\n  form = new FormGroup({\n    name: new FormControl(\"\"),\n  });\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    // Ignore first load, on subsequent inits refresh org data\n    this.organizationsService.initialLoad$\n      .pipe(\n        take(1),\n        tap((initialLoad) => {\n          if (initialLoad) {\n            this.organizationsService.retrieveOrganizations().toPromise();\n            this.organizationsService.refreshOrganizationDetail().subscribe();\n          }\n        })\n      )\n      .toPromise();\n    this.activeOrganizationDetail$.subscribe((data) =>\n      data ? this.form.patchValue({ name: data.name }) : undefined\n    );\n  }\n\n  get name() {\n    return this.form.get(\"name\");\n  }\n\n  updateOrganization() {\n    this.updateLoading = true;\n    this.organizationsService\n      .updateOrganization(this.form.value.name)\n      .subscribe(\n        (org: OrganizationDetail) => {\n          this.updateLoading = false;\n          this.snackBar.open(\n            `The name of your organization has been updated to ${org.name}`\n          );\n        },\n        (err) => {\n          this.updateLoading = false;\n          this.updateError = `${err.statusText}: ${err.status}`;\n        }\n      );\n  }\n\n  removeOrganization(slug: string, name: string) {\n    if (\n      window.confirm(\n        `Are you sure you want to remove ${name}? You will permanently lose all projects and teams associated with it.`\n      )\n    ) {\n      this.deleteLoading = true;\n      this.organizationsService.deleteOrganization(slug).subscribe(\n        () => {\n          this.deleteLoading = false;\n          this.snackBar.open(\n            `You have successfully deleted ${name} from your organizations`\n          );\n        },\n        (err) => {\n          this.deleteLoading = false;\n          this.deleteError = \"Error: \" + err.statusText;\n        }\n      );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-card {\n  margin-bottom: 36px;\n  margin-top: 36px;\n\n  mat-card-content {\n    padding-top: 16px;\n  }\n\n  form {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    @media (max-width: $tablet - 1) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    mat-form-field {\n      width: 100%;\n      margin-right: 48px;\n    }\n  }\n}\n\n.remove-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: $tablet - 1) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  p {\n    padding-right: 16px;\n  }\n}\n\ngt-loading-button ::ng-deep button {\n  width: 160px;\n}\n",
                    "styleUrl": "./organization.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                }
            },
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">General Settings</h1>\n  </header>\n  <ng-container *ngIf=\"activeOrganizationDetail$ | async as activeOrg\">\n    <mat-card>\n      <mat-card-title>General</mat-card-title>\n      <mat-divider></mat-divider>\n      <mat-card-content>\n        <form [formGroup]=\"form\" (ngSubmit)=\"updateOrganization()\">\n          <mat-form-field>\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\" [value]=\"activeOrg.name\" />\n            <mat-error *ngIf=\"updateError\">{{ updateError }}</mat-error>\n          </mat-form-field>\n          <gt-loading-button\n            [disabled]=\"name?.value === activeOrg.name\"\n            mat-flat-button\n            color=\"primary\"\n            buttonText=\"Update Name\"\n            id=\"update-org\"\n          >\n          </gt-loading-button>\n        </form>\n      </mat-card-content>\n    </mat-card>\n    <mat-card>\n      <mat-card-title>Delete Organization</mat-card-title>\n      <mat-divider></mat-divider>\n      <mat-card-content class=\"remove-content\">\n        <div>\n          <p>\n            By deleting this organization, you will lose all data including\n            projects and their associated events.\n          </p>\n          <mat-error *ngIf=\"deleteError\">{{ deleteError }}</mat-error>\n        </div>\n        <gt-loading-button\n          data-test\n          buttonText=\"Delete Organization\"\n          [loading]=\"deleteLoading\"\n          (click)=\"removeOrganization(activeOrg.slug, activeOrg.name)\"\n          id=\"delete-org\"\n        >\n        </gt-loading-button>\n      </mat-card-content>\n    </mat-card>\n  </ng-container>\n</section>\n"
        },
        {
            "name": "PaymentComponent",
            "id": "component-PaymentComponent-0b61e06a2137d2684e638461c76bb61e",
            "file": "src/app/settings/subscription/payment/payment.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-payment",
            "styleUrls": [
                "./payment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "billingEmail",
                    "defaultValue": "environment.billingEmail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "planOptions$",
                    "defaultValue": "this.subscriptionService.planOptionsWithShortNames$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "plan",
                            "type": "Plan",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectedIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "plan",
                            "type": "Plan",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { exhaustMap, filter, first, tap, withLatestFrom } from \"rxjs/operators\";\nimport { SubscriptionsService } from \"src/app/api/subscriptions/subscriptions.service\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { environment } from \"../../../../environments/environment\";\nimport { Plan } from \"src/app/api/subscriptions/subscriptions.interfaces\";\nimport { StripeService } from \"../stripe.service\";\n\n@Component({\n  selector: \"gt-payment\",\n  templateUrl: \"./payment.component.html\",\n  styleUrls: [\"./payment.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentComponent implements OnInit {\n  planOptions$ = this.subscriptionService.planOptionsWithShortNames$;\n  billingEmail = environment.billingEmail;\n  selectedSubscription: number | null = null;\n\n  constructor(\n    private subscriptionService: SubscriptionsService,\n    private organizationService: OrganizationsService,\n    private stripe: StripeService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.subscriptionService.retrieveSubscriptionPlans().subscribe();\n    this.organizationService.retrieveOrganizations().subscribe();\n  }\n\n  onSubmit(plan: Plan, selectedIndex: number) {\n    this.selectedSubscription = selectedIndex;\n    this.organizationService.activeOrganizationId$\n      .pipe(\n        first(),\n        filter((activeOrganizationId) => !!activeOrganizationId),\n        exhaustMap((activeOrganizationId) => {\n          if (plan.amount === 0) {\n            return this.subscriptionService\n              .createFreeSubscription(activeOrganizationId!, plan.id)\n              .pipe(\n                withLatestFrom(\n                  this.organizationService.activeOrganizationSlug$\n                ),\n                tap(([_, orgSlug]) => {\n                  this.selectedSubscription = null;\n                  this.router.navigate([orgSlug, \"issues\"]);\n                })\n              );\n          } else {\n            return this.stripe.redirectToSubscriptionCheckout(plan.id);\n          }\n        })\n      )\n      .toPromise();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n// THIS IS BEING SHARED WITH A MARKETING COMPONENT\n// Make sure edits work fine in both spots\n\n.plans {\n  @media (max-width: $large - 1) {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax((285px), 1fr));\n    grid-gap: 24px;\n    box-shadow: none !important;\n  }\n\n  @media (min-width: $large) {\n    display: flex;\n    border-radius: 4px;\n    background: white;\n  }\n\n  mat-card {\n    text-align: left;\n\n    @media (min-width: $large) {\n      flex: 1;\n      background: transparent;\n      border-right: 1px solid mat.get-color-from-palette(mat.$gray-palette, 300);\n      border-radius: 0;\n      box-shadow: none !important;\n\n      &:last-child {\n        border-right: 0;\n      }\n    }\n  }\n}\n\n.value-props {\n  margin: 0;\n  padding: 0;\n\n  li {\n    list-style: none;\n    font-size: 0.85em;\n    clear: both;\n  }\n\n  mat-icon {\n    width: 1em;\n    height: 1em;\n    margin: 0.07em 0.3em 0.5em 0;\n    font-size: 1em;\n    float: left;\n  }\n}\n",
                    "styleUrl": "./payment.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "subscriptionService",
                        "type": "SubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stripe",
                        "type": "StripeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "subscriptionService",
                        "type": "SubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stripe",
                        "type": "StripeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"plans mat-elevation-z1\">\n  <mat-card *ngFor=\"let product of planOptions$ | async; let i = index\">\n    <mat-card-content>\n      <mat-card-title>{{ product.name }}</mat-card-title>\n      <p>{{ product.description }}</p>\n      <ul class=\"value-props\">\n        <li>\n          <mat-icon color=\"primary\">check_circle</mat-icon>\n          Error tracking\n        </li>\n        <li>\n          <mat-icon color=\"primary\">check_circle</mat-icon>\n          Unlimited projects\n        </li>\n        <li>\n          <mat-icon color=\"primary\">check_circle</mat-icon>\n          Unlimited team members\n        </li>\n      </ul>\n      <p>\n        <span class=\"mat-display-1\">\n          ${{ product.plans[0].amount | number }}\n        </span>\n        / month\n      </p>\n      <gt-loading-button\n        buttonText=\"Select\"\n        [loading]=\"selectedSubscription === i\"\n        (click)=\"onSubmit(product.plans[0], i)\"\n      ></gt-loading-button>\n    </mat-card-content>\n  </mat-card>\n</div>\n<p class=\"mat-body-1\">\n  An <strong>event</strong> is when your project sends us data one time. For\n  example, if ten users trigger the same bug, GlitchTip will receive ten events.\n</p>\n<p class=\"mat-body-1\">\n  Questions about subscriptions? Need assistance, or a bigger plan? Contact us\n  at\n  <a href=\"mailto:{{ billingEmail }}\">{{ billingEmail }}</a\n  >.\n</p>\n<!-- TODO: add state for user who is not owner, since they cannot sign up for an org-->\n"
        },
        {
            "name": "PerformanceComponent",
            "id": "component-PerformanceComponent-1fe363afc3e04ccc4e3ae3e558b1cc8e",
            "file": "src/app/performance/performance.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-performance",
            "styleUrls": [
                "./performance.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./performance.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countMapping",
                    "defaultValue": "{\n    \"=1\": \"Transaction\",\n    other: \"Transactions\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\"transaction\", \"time\", \"date\", \"daysAgo\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "sub",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "transactions$",
                    "defaultValue": "this.service.transactionsWithDelta$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "paginator$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Paginator>",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "inheritance": {
                        "file": "PaginationBaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, Subscription } from \"rxjs\";\nimport { map, filter, distinctUntilChanged } from \"rxjs/operators\";\nimport { OrganizationsService } from \"../api/organizations/organizations.service\";\nimport { PaginationBaseComponent } from \"../shared/stateful-service/pagination-stateful-service\";\nimport { PerformanceState, PerformanceService } from \"./performance.service\";\n\n@Component({\n  selector: \"gt-performance\",\n  templateUrl: \"./performance.component.html\",\n  styleUrls: [\"./performance.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PerformanceComponent\n  extends PaginationBaseComponent<PerformanceState, PerformanceService>\n  implements OnDestroy {\n  displayedColumns = [\"transaction\", \"time\", \"date\", \"daysAgo\"];\n\n  sub: Subscription | null = null;\n  transactions$ = this.service.transactionsWithDelta$;\n\n  countMapping: { [k: string]: string } = {\n    \"=1\": \"Transaction\",\n    other: \"Transactions\",\n  };\n\n  constructor(\n    protected service: PerformanceService,\n    private organizationsService: OrganizationsService,\n    private route: ActivatedRoute\n  ) {\n    super(service);\n    this.sub = combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.route.queryParams,\n    ])\n      .pipe(\n        map(([slug, queryParams]) => {\n          const cursor: string | undefined = queryParams.cursor;\n          return { slug, cursor };\n        }),\n        filter(({ slug, cursor }) => !!slug),\n        distinctUntilChanged()\n      )\n      .subscribe(({ slug, cursor }) => {\n        this.service.getTransactions(slug!, cursor);\n      });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n    this.service.clearState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$iconWidth: 56px;\n\ntable {\n  width: 100%;\n\n  .footer {\n    text-align: right;\n\n    mat-icon {\n      font-size: 35px;\n      height: $iconWidth;\n      width: $iconWidth;\n      line-height: $iconWidth;\n    }\n  }\n}\n",
                    "styleUrl": "./performance.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "PerformanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "PerformanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationBaseComponent",
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<section class=\"l-body mat-elevation-z0\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Performance (Beta)</h1>\n  </header>\n\n  <ng-container *ngIf=\"paginator$ | async as paginator\">\n    <mat-toolbar color=\"primary\">\n      {{ paginator.count }} {{ paginator.hits | i18nPlural: countMapping }}\n    </mat-toolbar>\n\n    <ng-container *ngIf=\"transactions$ | async as transactions\">\n      <table mat-table [dataSource]=\"transactions$\" class=\"mat-elevation-z2\">\n        <ng-container matColumnDef=\"transaction\">\n          <th mat-header-cell *matHeaderCellDef>Transaction</th>\n          <td mat-cell *matCellDef=\"let transaction\">\n            <a [routerLink]=\"[transaction.eventId]\" queryParamsHandling=\"merge\">\n              {{ transaction.transaction }}\n            </a>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"time\">\n          <th mat-header-cell *matHeaderCellDef>Time</th>\n          <td mat-cell *matCellDef=\"let transaction\">\n            {{ transaction.delta }}ms\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef>Date</th>\n          <td mat-cell *matCellDef=\"let transaction\">\n            {{ transaction.startTimestamp | date: \"longDate\" }} at\n            {{ transaction.startTimestamp | date: \"shortTime\" }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"daysAgo\">\n          <th mat-header-cell *matHeaderCellDef>Days Ago</th>\n          <td mat-cell *matCellDef=\"let transaction\">\n            {{ transaction.startTimestamp | daysAgo }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"pagination\">\n          <td\n            mat-footer-cell\n            *matFooterCellDef\n            [attr.colSpan]=\"displayedColumns.length\"\n            class=\"footer\"\n          >\n            <ng-container *ngIf=\"(transactions$ | async)?.length\">\n              <button\n                [routerLink]=\"[]\"\n                [queryParams]=\"paginator.previousPageParams || {}\"\n                queryParamsHandling=\"merge\"\n                mat-button\n                [disabled]=\"paginator.hasPreviousPage === false\"\n              >\n                <mat-icon>keyboard_arrow_left</mat-icon>\n              </button>\n              <button\n                [routerLink]=\"[]\"\n                [queryParams]=\"paginator.nextPageParams || {}\"\n                queryParamsHandling=\"merge\"\n                mat-button\n                [disabled]=\"paginator.hasNextPage === false\"\n              >\n                <mat-icon>keyboard_arrow_right</mat-icon>\n              </button></ng-container\n            >\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        <tr mat-footer-row *matFooterRowDef=\"['pagination']\"></tr>\n      </table>\n    </ng-container>\n  </ng-container>\n</section>\n"
        },
        {
            "name": "PlatformPickerComponent",
            "id": "component-PlatformPickerComponent-f79b1db0e11c15c968371c62d82408d5",
            "file": "src/app/settings/projects/platform-picker/platform-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PlatformPickerComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "gt-platform-picker",
            "styleUrls": [
                "./platform-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./platform-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "template",
                    "defaultValue": "\"buttons\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"buttons\" | \"dropdown\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activePlatform",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "allTabIndex",
                    "defaultValue": "this.categoryList.length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "categoryList",
                    "defaultValue": "categoryList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "expansionPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatExpansionPanel",
                    "optional": true,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'expansionPanel', {static: false}"
                        }
                    ]
                },
                {
                    "name": "filteredPlatforms$",
                    "defaultValue": "this.filterPlatformInput.valueChanges.pipe(\n    startWith(\"\"),\n    map((value) => {\n      if (value === \"\") {\n        this.setSelected(this.lastSelected);\n        return this.platforms;\n      } else {\n        this.setSelected(this.allTabIndex);\n        return this.platforms.filter((platform) =>\n          platform.id.toLowerCase().includes(value.toLowerCase())\n        );\n      }\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Projects that are filtered via the text field form control</p>\n",
                    "line": 56,
                    "rawdescription": "\nProjects that are filtered via the text field form control"
                },
                {
                    "name": "filterInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filterInput', {static: false}"
                        }
                    ]
                },
                {
                    "name": "filterPlatformInput",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Used to filter project names</p>\n",
                    "line": 53,
                    "rawdescription": "\nUsed to filter project names"
                },
                {
                    "name": "lastSelected",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "platforms",
                    "defaultValue": "flattenedPlatforms.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    if (nameA < nameB) return -1;\n    if (nameA > nameB) return 1;\n    return 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "selected",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "setSelected",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74
                }
            ],
            "methodsClass": [
                {
                    "name": "focusPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPlatformId",
                    "args": [
                        {
                            "name": "platformFromCategoryList",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "platformFromCategoryList",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPlatformName",
                    "args": [
                        {
                            "name": "platformFromCategoryList",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "platformFromCategoryList",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "moveDown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "moveUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeydownHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "platform",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "platform",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "platform",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "toggle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nplatform picker uses buttons and they need to be toggle-able. False by\ndefault because Angular doesn't expect it to be there\n",
                    "description": "<p>platform picker uses buttons and they need to be toggle-able. False by\ndefault because Angular doesn&#39;t expect it to be there</p>\n",
                    "jsdoctags": [
                        {
                            "name": "platform",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": {
                                "pos": 2814,
                                "end": 2820,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "toggle"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "pos": 2808,
                                "end": 2813,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "param"
                            },
                            "comment": "<p>Added to boilerplate writeValue because one version of\nplatform picker uses buttons and they need to be toggle-able. False by\ndefault because Angular doesn&#39;t expect it to be there</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 128
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  forwardRef,\n  Input,\n  ViewChild,\n  ElementRef,\n  HostListener,\n} from \"@angular/core\";\nimport { MatExpansionPanel } from \"@angular/material/expansion\";\nimport { flattenedPlatforms } from \"./platforms-for-picker\";\nimport categoryList from \"./platform-categories\";\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from \"@angular/forms\";\nimport { map, startWith } from \"rxjs/operators\";\n\n@Component({\n  selector: \"gt-platform-picker\",\n  templateUrl: \"./platform-picker.component.html\",\n  styleUrls: [\"./platform-picker.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PlatformPickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class PlatformPickerComponent implements ControlValueAccessor {\n  @Input() template: \"buttons\" | \"dropdown\" = \"buttons\";\n\n  @ViewChild(\"expansionPanel\", { static: false })\n  expansionPanel?: MatExpansionPanel;\n\n  @ViewChild(\"filterInput\", { static: false })\n  filterInput?: ElementRef<HTMLInputElement>;\n\n  platforms = flattenedPlatforms.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    if (nameA < nameB) return -1;\n    if (nameA > nameB) return 1;\n    return 0;\n  });\n  activePlatform = \"\";\n  categoryList = categoryList;\n\n  /** Used to filter project names */\n  filterPlatformInput = new FormControl();\n\n  /** Projects that are filtered via the text field form control */\n  filteredPlatforms$ = this.filterPlatformInput.valueChanges.pipe(\n    startWith(\"\"),\n    map((value) => {\n      if (value === \"\") {\n        this.setSelected(this.lastSelected);\n        return this.platforms;\n      } else {\n        this.setSelected(this.allTabIndex);\n        return this.platforms.filter((platform) =>\n          platform.id.toLowerCase().includes(value.toLowerCase())\n        );\n      }\n    })\n  );\n\n  selected = 0;\n  lastSelected = 0;\n  allTabIndex = this.categoryList.length;\n  setSelected = (index: number) => {\n    if (this.selected !== this.allTabIndex) {\n      this.lastSelected = this.selected;\n    }\n    this.selected = index;\n  };\n\n  getPlatformId(platformFromCategoryList: string) {\n    const platformInfo = this.platforms.find(\n      (platform) => platform.id === platformFromCategoryList\n    );\n    return platformInfo ? platformInfo.id : \"other\";\n  }\n\n  getPlatformName(platformFromCategoryList: string) {\n    const platformInfo = this.platforms.find(\n      (platform) => platform.id === platformFromCategoryList\n    );\n    return platformInfo ? platformInfo.name : platformFromCategoryList;\n  }\n\n  constructor() {}\n\n  // Boilerplate for ControlValueAccessor\n  onChange = (platform: string) => {};\n  onTouched = () => {};\n  /**\n   * @param toggle Added to boilerplate writeValue because one version of\n   * platform picker uses buttons and they need to be toggle-able. False by\n   * default because Angular doesn't expect it to be there\n   */\n  writeValue(platform: string, toggle = false): void {\n    if (platform === this.activePlatform && toggle) {\n      this.activePlatform = \"\";\n      this.onChange(\"\");\n    } else {\n      this.activePlatform = platform;\n      this.onChange(platform);\n      if (this.expansionPanel?.expanded) {\n        this.expansionPanel.close();\n      }\n    }\n  }\n  registerOnChange(fn: (platform: string) => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  focusPanel() {\n    this.filterInput?.nativeElement.focus();\n  }\n\n  @HostListener(\"document:keydown\", [\"$event\"]) onKeydownHandler(\n    event: KeyboardEvent\n  ) {\n    if (this.expansionPanel?.expanded) {\n      if (event.key === \"ArrowDown\") {\n        event.preventDefault();\n        this.moveDown();\n      }\n      if (event.key === \"ArrowUp\") {\n        this.moveUp();\n      }\n    }\n  }\n\n  moveDown() {\n    const projectButtons = Array.from(\n      document.querySelectorAll(\".picker-button\")\n    ) as HTMLElement[];\n    // If the text box is focused, go to the first item\n    if (this.filterInput?.nativeElement.id === document.activeElement?.id) {\n      projectButtons[0]?.focus();\n    } else {\n      const indexOfActive = projectButtons.findIndex(\n        (button) => button.id === document.activeElement?.id\n      );\n      if (indexOfActive <= projectButtons.length - 2) {\n        // If we're in the list items, go to the next list item\n        projectButtons[indexOfActive + 1].focus();\n      } else {\n        // If we're in the last list item, go to the first item\n        projectButtons[0].focus();\n      }\n    }\n  }\n\n  moveUp() {\n    const projectButtons = Array.from(\n      document.querySelectorAll(\".picker-button\")\n    ) as HTMLElement[];\n    const indexOfActive = projectButtons.findIndex(\n      (button) => button.id === document.activeElement?.id\n    );\n    if (indexOfActive > 0) {\n      // If we're in the list items, go to the previous list item\n      projectButtons[indexOfActive - 1].focus();\n    } else {\n      // If we're in the first list item, go to the first item\n      this.filterInput?.nativeElement.focus();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n.heading {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media screen and (max-width: $tablet - 1) {\n    flex-direction: column;\n    align-items: unset;\n  }\n}\n\n.text-info {\n  padding-top: 5px;\n  padding-right: 10px;\n  text-align: left;\n\n  .mat-caption {\n    margin-top: 0;\n  }\n}\n\nmat-tab-group {\n  ::ng-deep .mat-tab-label {\n    min-width: 50px;\n  }\n\n  border-bottom: 1px solid mat.get-color-from-palette(mat.$gray-palette, 300);\n}\n\nul {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n}\n\nli {\n  list-style: none;\n  width: 33%;\n  padding: 5px 10px 5px 0;\n\n  @media screen and (min-width: $small) {\n    &:nth-child(3n) {\n      padding-right: 0;\n    }\n  }\n\n  @media screen and (max-width: $small - 1) {\n    width: 50%;\n\n    &:nth-child(2n) {\n      padding-right: 0;\n    }\n  }\n\n  button {\n    width: 100%;\n    padding-left: 0;\n    padding-right: 0;\n\n    &.active {\n      border: 1px solid $amaranth;\n    }\n  }\n}\n\n:host {\n  flex: 1;\n}\n\nmat-accordion {\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  height: 48px;\n  max-width: 400px;\n  margin: 5px 40px 20px 0;\n  z-index: 1;\n}\n\nmat-expansion-panel.mat-expansion-panel {\n  flex: 1;\n  &:first-of-type,\n  &:last-of-type {\n    border-radius: 0;\n  }\n\n  // ::ng-deep .mat-expansion-panel-body {\n  //   padding-left: 0;\n  //   padding-right: 0;\n  // }\n\n  mat-form-field {\n    width: 100%;\n  }\n}\n\nmat-list {\n  max-height: 300px;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.mat-list-base .mat-list-item ::ng-deep .mat-list-item-content {\n  padding: 0;\n}\n\n.list-item {\n  button {\n    // borrowed from some \"button unstyled\" classes I've done elsewhere\n    display: inline-block;\n    border: none;\n    border-radius: 0;\n    margin: 0;\n    padding: 12px 0;\n    -webkit-text-fill-color: currentColor;\n    background: transparent;\n    -webkit-appearance: none;\n    cursor: pointer;\n    color: inherit;\n    font-weight: inherit;\n\n    width: 100%;\n    text-align: left;\n\n    &:focus {\n      border: 1px solid $amaranth;\n    }\n  }\n}\n",
                    "styleUrl": "./platform-picker.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 93
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<ng-container *ngIf=\"template === 'buttons'\">\n  <div class=\"heading\">\n    <div class=\"text-info\">\n      <label for=\"project-picker\" class=\"mat-body-1\">Platform</label>\n      <p class=\"mat-caption\">\n        The primary platform for this project. Used for documentation.\n      </p>\n    </div>\n    <mat-form-field>\n      <input\n        #filterInput\n        type=\"text\"\n        placeholder=\"Filter platforms\"\n        aria-label=\"Filter platforms\"\n        [formControl]=\"filterPlatformInput\"\n        matInput\n      />\n    </mat-form-field>\n  </div>\n  <mat-tab-group\n    id=\"project-picker\"\n    [selectedIndex]=\"selected\"\n    (selectedIndexChange)=\"setSelected($event)\"\n  >\n    <mat-tab label=\"{{ category.name }}\" *ngFor=\"let category of categoryList\">\n      <ul>\n        <li *ngFor=\"let platform of category.platforms\">\n          <button\n            data-test\n            mat-stroked-button\n            type=\"button\"\n            (click)=\"writeValue(getPlatformId(platform), true)\"\n            [class.active]=\"activePlatform === getPlatformId(platform)\"\n            [color]=\"\n              activePlatform === getPlatformId(platform) ? 'primary' : ''\n            \"\n          >\n            {{ getPlatformName(platform) }}\n          </button>\n        </li>\n      </ul>\n    </mat-tab>\n    <mat-tab label=\"All\">\n      <ul>\n        <li *ngIf=\"(filteredPlatforms$ | async)?.length === 0\">\n          <button\n            mat-stroked-button\n            type=\"button\"\n            (click)=\"writeValue('other', true)\"\n            [class.active]=\"activePlatform === getPlatformId('other')\"\n          >\n            Other\n          </button>\n        </li>\n        <li *ngFor=\"let platform of filteredPlatforms$ | async\">\n          <button\n            mat-stroked-button\n            type=\"button\"\n            (click)=\"writeValue(platform.id, true)\"\n            [class.active]=\"activePlatform === getPlatformId(platform.id)\"\n          >\n            {{ platform.name }}\n          </button>\n        </li>\n      </ul>\n    </mat-tab>\n  </mat-tab-group>\n</ng-container>\n\n<ng-container *ngIf=\"template === 'dropdown'\">\n  <label class=\"mat-caption\">Platform</label>\n  <mat-accordion displayMode=\"flat\">\n    <mat-expansion-panel\n      #expansionPanel\n      class=\"mat-elevation-z1\"\n      (afterExpand)=\"focusPanel()\"\n    >\n      <mat-expansion-panel-header data-test-panel-header>\n        <mat-panel-title>\n          {{ getPlatformName(activePlatform) }}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <mat-form-field>\n        <input\n          #filterInput\n          type=\"text\"\n          placeholder=\"Filter platforms\"\n          aria-label=\"Filter platforms\"\n          [formControl]=\"filterPlatformInput\"\n          matInput\n        />\n      </mat-form-field>\n\n      <mat-list>\n        <mat-list-item\n          class=\"list-item\"\n          *ngIf=\"(filteredPlatforms$ | async)?.length === 0\"\n        >\n          <button\n            id=\"picker-button-other\"\n            type=\"button\"\n            (click)=\"writeValue('other')\"\n            class=\"mat-body-1 picker-button\"\n            [class.active]=\"activePlatform === getPlatformId('other')\"\n          >\n            Other\n          </button>\n        </mat-list-item>\n        <mat-list-item\n          class=\"list-item\"\n          *ngFor=\"let platform of filteredPlatforms$ | async\"\n        >\n          <button\n            data-test\n            id=\"picker-button-{{ platform.id }}\"\n            type=\"button\"\n            (click)=\"writeValue(platform.id)\"\n            class=\"mat-body-1 picker-button\"\n            [class.active]=\"activePlatform === getPlatformId(platform.id)\"\n          >\n            {{ platform.name }}\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </mat-expansion-panel>\n  </mat-accordion>\n</ng-container>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-aaca0a6c2e74ac4580af9bf89601ff3b",
            "file": "src/app/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "this.organizationService\n    .activeOrganizationDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isLoggedIn$",
                    "defaultValue": "this.auth.isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userService.userDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleSideNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { OrganizationsService } from \"../api/organizations/organizations.service\";\nimport { UserService } from \"../api/user/user.service\";\nimport { MainNavService } from \"../main-nav/main-nav.service\";\nimport { tap, filter, map } from \"rxjs/operators\";\n\n@Component({\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent {\n  user$ = this.userService.userDetails$;\n  isLoggedIn$ = this.auth.isLoggedIn;\n  activeOrganizationDetail$ = this.organizationService\n    .activeOrganizationDetail$;\n\n  constructor(\n    private userService: UserService,\n    private mainNav: MainNavService,\n    private auth: AuthService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationsService\n  ) {\n    this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"]),\n        filter((orgSlug: string) => orgSlug !== undefined),\n        tap((orgSlug) =>\n          this.organizationService.setActiveOrganizationFromRouteChange(orgSlug)\n        )\n      )\n      .subscribe();\n  }\n\n  toggleSideNav() {\n    this.mainNav.getToggleNav();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n$iconWidth: 56px;\n\nmat-drawer-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\nmat-drawer {\n  min-width: 200px;\n\n  @media (max-width: $tablet - 1) {\n    display: none;\n  }\n}\n\nmat-drawer-content {\n  mat-toolbar {\n    display: none;\n    padding-left: $iconWidth;\n    cursor: pointer;\n\n    @media (max-width: $tablet - 1) {\n      display: flex;\n    }\n\n    .sidenav-toggle {\n      padding: 0;\n      position: absolute;\n      left: 0;\n      top: 0;\n      margin: 0;\n      min-width: $iconWidth;\n    }\n\n    mat-icon {\n      font-size: 25px;\n      height: $iconWidth;\n      width: $iconWidth;\n      line-height: $iconWidth;\n      color: white;\n\n      @media (min-width: $small) {\n        height: 64px;\n        line-height: 64px;\n      }\n    }\n\n    .active-org {\n      margin-left: 8px;\n    }\n  }\n}\n\nh1 {\n  margin-bottom: 0;\n}\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mainNav",
                        "type": "MainNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mainNav",
                        "type": "MainNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-drawer-container>\n  <mat-drawer class=\"mat-elevation-z2\" mode=\"side\" opened>\n    <nav>\n      <mat-nav-list>\n        <a\n          mat-list-item\n          routerLink=\"/profile\"\n          routerLinkActive=\"active-route\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          >Account</a\n        >\n        <a\n          mat-list-item\n          routerLink=\"./multi-factor-auth\"\n          routerLinkActive=\"active-route\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          >Multi-factor Authentication</a\n        >\n        <a\n          mat-list-item\n          routerLink=\"./notifications\"\n          routerLinkActive=\"active-route\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          >Notifications</a\n        >\n        <a\n          mat-list-item\n          routerLink=\"./auth-tokens\"\n          routerLinkActive=\"active-route\"\n          >Auth Tokens</a\n        >\n      </mat-nav-list>\n    </nav>\n  </mat-drawer>\n  <mat-drawer-content>\n    <mat-toolbar color=\"primary\" (click)=\"toggleSideNav()\">\n      <button *ngIf=\"isLoggedIn$ | async\" mat-button class=\"sidenav-toggle\">\n        <mat-icon>menu</mat-icon></button\n      ><span\n        class=\"active-org\"\n        *ngIf=\"activeOrganizationDetail$ | async as orgDetails\"\n        >{{ orgDetails?.name }}</span\n      >\n    </mat-toolbar>\n    <section class=\"l-body\">\n      <header class=\"page-header\">\n        <h1 class=\"mat-display-1\">User Profile</h1>\n        <p class=\"mat-body-1 subtitle\" *ngIf=\"user$ | async as user\">\n          {{ user.email }}\n        </p>\n      </header>\n      <router-outlet></router-outlet>\n    </section>\n  </mat-drawer-content>\n</mat-drawer-container>\n"
        },
        {
            "name": "ProjectAlertsComponent",
            "id": "component-ProjectAlertsComponent-204cc3d4fcfb9378df1177875a7819e3",
            "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-project-alerts",
            "styleUrls": [
                "./project-alerts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project-alerts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "deleteRecipientLoading$",
                    "defaultValue": "this.alertsService.deleteRecipientLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.alertsService.initialLoad$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "initialLoadError$",
                    "defaultValue": "this.alertsService.initialLoadError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "newAlertError$",
                    "defaultValue": "this.alertsService.newAlertError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "newAlertLoading$",
                    "defaultValue": "this.alertsService.newAlertLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "newAlertOpen$",
                    "defaultValue": "this.alertsService.newAlertOpen$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "newAlertRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertFormComponent",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'newAlert'"
                        }
                    ]
                },
                {
                    "name": "newProjectAlertRecipients$",
                    "defaultValue": "this.alertsService.newProjectAlertRecipients$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "projectAlerts$",
                    "defaultValue": "this.alertsService.projectAlert$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "recipientDialogOpen$",
                    "defaultValue": "this.alertsService.recipientDialogOpen$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "recipientError$",
                    "defaultValue": "this.alertsService.recipientError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "removeAlertError$",
                    "defaultValue": "this.alertsService.removeAlertError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "removeAlertLoading$",
                    "defaultValue": "this.alertsService.removeAlertLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "updateTimespanQuantityError$",
                    "defaultValue": "this.alertsService\n    .updateTimespanQuantityError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "updateTimespanQuantityLoading$",
                    "defaultValue": "this.alertsService\n    .updateTimespanQuantityLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "closeNewAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "newAlertTimespanQuantity",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCreateRecipientDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openNewAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openUpdateRecipientDialog",
                    "args": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAlert",
                    "args": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pk",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAlertRecipient",
                    "args": [
                        {
                            "name": "recipient",
                            "type": "AlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "recipient",
                            "type": "AlertRecipient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeNewAlertRecipient",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitCreateAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateTimespanQuantity",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alert",
                            "type": "ProjectAlert",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\nimport {\n  AlertRecipient,\n  ProjectAlert,\n} from \"src/app/api/projects/project-alerts/project-alerts.interface\";\nimport { ProjectAlertsService } from \"./project-alerts.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { NewRecipientComponent } from \"./new-recipient/new-recipient.component\";\nimport { AlertFormComponent } from \"./alert-form/alert-form.component\";\n\n@Component({\n  selector: \"gt-project-alerts\",\n  templateUrl: \"./project-alerts.component.html\",\n  styleUrls: [\"./project-alerts.component.scss\"],\n})\nexport class ProjectAlertsComponent implements OnInit, OnDestroy {\n  @ViewChild(\"newAlert\") newAlertRef?: AlertFormComponent;\n  projectAlerts$ = this.alertsService.projectAlert$;\n  newProjectAlertRecipients$ = this.alertsService.newProjectAlertRecipients$;\n  initialLoad$ = this.alertsService.initialLoad$;\n  initialLoadError$ = this.alertsService.initialLoadError$;\n  removeAlertLoading$ = this.alertsService.removeAlertLoading$;\n  removeAlertError$ = this.alertsService.removeAlertError$;\n  updateTimespanQuantityLoading$ = this.alertsService\n    .updateTimespanQuantityLoading$;\n  updateTimespanQuantityError$ = this.alertsService\n    .updateTimespanQuantityError$;\n  deleteRecipientLoading$ = this.alertsService.deleteRecipientLoading$;\n  recipientError$ = this.alertsService.recipientError$;\n  newAlertOpen$ = this.alertsService.newAlertOpen$;\n  recipientDialogOpen$ = this.alertsService.recipientDialogOpen$;\n  newAlertLoading$ = this.alertsService.newAlertLoading$;\n  newAlertError$ = this.alertsService.newAlertError$;\n\n  constructor(\n    private alertsService: ProjectAlertsService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.alertsService.listProjectAlerts();\n\n    this.recipientDialogOpen$.subscribe(\n      (resp) => resp && this.dialog.open(NewRecipientComponent)\n    );\n  }\n\n  ngOnDestroy() {\n    this.alertsService.clearState();\n  }\n\n  openNewAlert() {\n    this.alertsService.openNewAlert();\n  }\n\n  removeNewAlertRecipient(url: string) {\n    this.alertsService.removeNewAlertRecipient(url);\n  }\n\n  openUpdateRecipientDialog(alert: ProjectAlert) {\n    this.alertsService.openUpdateRecipientDialog(alert);\n  }\n\n  openCreateRecipientDialog() {\n    this.alertsService.openCreateRecipientDialog();\n  }\n\n  closeNewAlert() {\n    this.alertsService.closeNewAlert();\n  }\n\n  removeAlert(pk: number) {\n    if (window.confirm(\"Are you sure you want to remove this notification?\")) {\n      this.alertsService.deleteProjectAlert(pk);\n    }\n  }\n\n  updateTimespanQuantity(\n    event: {\n      timespan_minutes: number;\n      quantity: number;\n    },\n    alert: ProjectAlert\n  ): void {\n    if (alert.pk) {\n      this.alertsService.updateTimespanQuantity(\n        event.timespan_minutes,\n        event.quantity,\n        alert.pk,\n        alert.alertRecipients\n      );\n    }\n  }\n\n  removeAlertRecipient(recipient: AlertRecipient, alert: ProjectAlert) {\n    this.alertsService.deleteAlertRecipient(recipient, alert);\n  }\n\n  newAlertTimespanQuantity(event: {\n    timespan_minutes: number;\n    quantity: number;\n  }) {\n    this.alertsService.createNewAlert(event);\n  }\n\n  submitCreateAlert() {\n    this.newAlertRef?.onSubmit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\nmat-card-header {\n  padding-bottom: 12px;\n}\n\nmat-card-title {\n  margin-left: -16px;\n}\n\n.mat-card-title {\n  margin-bottom: 0;\n}\n\n.error {\n  color: #f44336;\n  text-align: center;\n\n  span {\n    margin-left: 8px;\n    margin-right: 8px;\n  }\n}\n\n.new-alert {\n  background-color: mat.get-color-from-palette(mat.$gray-palette, 100);\n  margin-left: -16px;\n  margin-right: -16px;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 16px;\n}\n\n.new-alert-error {\n  margin-top: -10px;\n  margin-bottom: -10px;\n}\n\n.new-alert-actions {\n  display: flex;\n  justify-content: flex-end;\n\n  gt-loading-button {\n    margin-right: 16px;\n  }\n}\n\n.no-alerts {\n  text-align: center;\n  padding-top: 24px;\n  padding-bottom: 16px;\n  margin-left: 16px;\n  margin-right: 16px;\n}\n\n.alert {\n  padding-bottom: 24px;\n}\n\n.alert-error {\n  margin-bottom: -21px;\n  padding-top: 16px;\n}\n\n.alert-header {\n  padding-top: 16px;\n}\n\n.alert-form-error {\n  margin-top: -21px;\n  margin-bottom: 0;\n}\n\n// Move to global styles if we decide to implement in other places in app\n.tooltip {\n  text-decoration: underline;\n  text-decoration-style: dotted;\n  text-decoration-color: mat.get-color-from-palette(mat.$gray-palette, 500);\n  cursor: help;\n}\n\n.recipients-error {\n  text-align: left;\n  margin-top: -14px;\n  margin-bottom: -7px;\n}\n\n.no-recipients {\n  width: 50%;\n  padding: 8px 16px;\n  background-color: mat.get-color-from-palette(mat.$gray-palette, 100);\n}\n\n.no-recipients-new {\n  background-color: #ffffff;\n}\n\n.recipients {\n  display: inline-block;\n  width: 50%;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  padding: 8px 0;\n\n  &.border-top {\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\n  }\n\n  .alert-type {\n    margin-left: 0;\n    margin-right: 8px;\n    font-size: 20px;\n    width: 20px;\n    height: 20px;\n  }\n\n  svg {\n    width: 24px;\n    height: 24px;\n    margin-right: 8px;\n  }\n\n  .trash {\n    margin-left: 16px;\n    width: 28px;\n    height: 28px;\n    line-height: 28px;\n\n    mat-icon {\n      font-size: 24px;\n      width: 24px;\n      height: 24px;\n    }\n  }\n}\n\n.initial-loading {\n  padding-top: 200px;\n  padding-bottom: 200px;\n\n  mat-progress-spinner {\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n\n.initial-load-error {\n  margin: unset;\n  padding: 24px 24px 8px 24px;\n}\n\n// .mat-stroked-button:hover {\n//   background-color: whitesmoke;\n//   opacity: 1;\n// }\n\n.mat-button.mat-primary .mat-button-focus-overlay {\n  background-color: transparent;\n}\n",
                    "styleUrl": "./project-alerts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertsService",
                        "type": "ProjectAlertsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "alertsService",
                        "type": "ProjectAlertsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<mat-card>\n  <mat-card-header class=\"flex-common\">\n    <mat-card-title>Project Alerts</mat-card-title>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"openNewAlert()\"\n      [disabled]=\"(newAlertOpen$ | async) === true\"\n    >\n      Create New Alert\n    </button>\n  </mat-card-header>\n  <mat-divider></mat-divider>\n\n  <mat-card-content>\n    <ng-container *ngIf=\"(initialLoad$ | async) === true\">\n      <!-- New Alert -->\n      <div *ngIf=\"(newAlertOpen$ | async) === true\" class=\"new-alert\">\n        <div class=\"alert-header\">\n          <h3>New Alert</h3>\n        </div>\n        <p\n          *ngIf=\"newAlertError$ | async as error\"\n          class=\"error new-alert-error\"\n        >\n          {{ error }}\n        </p>\n        <gt-alert-form\n          #newAlert\n          [newAlert]=\"true\"\n          (alertSubmit)=\"newAlertTimespanQuantity($event)\"\n        ></gt-alert-form>\n        <h4 class=\"mat-body-strong\">Recipients:</h4>\n        <p\n          *ngIf=\"(newProjectAlertRecipients$ | async)?.length === 0\"\n          class=\"no-recipients no-recipients-new\"\n        >\n          This alert isn't being sent anywhere. Select \"Add An Alert Recipient\"\n          below to get started.\n        </p>\n        <ul>\n          <li\n            *ngFor=\"\n              let recipient of newProjectAlertRecipients$ | async;\n              let recipientIndex = index\n            \"\n          >\n            <div class=\"recipients\" [class.border-top]=\"recipientIndex === 0\">\n              <div class=\"flex-common\">\n                <div class=\"flex-common\">\n                  <span\n                    *ngIf=\"recipient.recipientType === 'email'\"\n                    class=\"flex-common\"\n                    ><mat-icon class=\"alert-type\">email</mat-icon>\n                    Send an email to team members on this project.\n                  </span>\n                  <span\n                    *ngIf=\"recipient.recipientType === 'webhook'\"\n                    class=\"flex-common\"\n                    ><svg class=\"slack\">\n                      <use xlink:href=\"#webhook\"></use>\n                    </svg>\n                    {{ recipient.url }}\n                  </span>\n                </div>\n                <button\n                  class=\"trash\"\n                  mat-icon-button\n                  color=\"primary\"\n                  attr.aria-label=\"Delete Alert For {{ recipient.url }}\"\n                  (click)=\"removeNewAlertRecipient(recipient.url)\"\n                >\n                  <mat-icon>delete_outline</mat-icon>\n                </button>\n              </div>\n            </div>\n          </li>\n        </ul>\n        <button\n          mat-stroked-button\n          color=\"primary\"\n          (click)=\"openCreateRecipientDialog()\"\n        >\n          <mat-icon>add</mat-icon>\n          Add An Alert Recipient\n        </button>\n        <div class=\"new-alert-actions\">\n          <gt-loading-button\n            buttonText=\"submit\"\n            [loading]=\"(newAlertLoading$ | async) === true\"\n            (click)=\"submitCreateAlert()\"\n            >Submit</gt-loading-button\n          >\n          <button (click)=\"closeNewAlert()\" mat-stroked-button>Cancel</button>\n        </div>\n      </div>\n      <ng-container\n        *ngIf=\"\n          (projectAlerts$ | async)?.length === 0 &&\n            (newAlertOpen$ | async) === false;\n          else showAlerts\n        \"\n        ><p class=\"no-alerts\">\n          You don't have any alerts set up. Click \"Create New Alert\" on the top\n          right of this card to get started.\n        </p></ng-container\n      ><ng-template #showAlerts>\n        <div\n          *ngFor=\"let alert of projectAlerts$ | async; let i = index\"\n          class=\"alert\"\n        >\n          <mat-divider *ngIf=\"i !== 0\"></mat-divider>\n\n          <p\n            *ngIf=\"(removeAlertError$ | async)?.pk === alert.pk\"\n            class=\"error alert-error\"\n          >\n            {{ (removeAlertError$ | async)?.error }}\n          </p>\n          <div class=\"flex-common alert-header\">\n            <h3>Alert {{ i + 1 }}</h3>\n            <gt-loading-button\n              [buttonText]=\"'Remove Alert ' + (i + 1)\"\n              buttonStyle=\"stroked\"\n              (click)=\"removeAlert(alert.pk)\"\n              [loading]=\"(removeAlertLoading$ | async) === alert.pk\"\n            >\n            </gt-loading-button>\n          </div>\n          <p\n            *ngIf=\"(updateTimespanQuantityError$ | async)?.pk === alert.pk\"\n            class=\"error alert-form-error\"\n          >\n            {{ (updateTimespanQuantityError$ | async)?.error }}\n          </p>\n          <gt-alert-form\n            [newAlert]=\"false\"\n            [loading]=\"(updateTimespanQuantityLoading$ | async) === alert.pk\"\n            [timespan]=\"alert.timespan_minutes\"\n            [quantity]=\"alert.quantity\"\n            (alertSubmit)=\"updateTimespanQuantity($event, alert)\"\n          ></gt-alert-form>\n          <h4 class=\"mat-body-strong\">Recipients:</h4>\n          <p\n            *ngIf=\"recipientError$ | async as error\"\n            class=\"error recipients-error\"\n          >\n            {{ error }}\n          </p>\n          <p *ngIf=\"alert.alertRecipients.length === 0\" class=\"no-recipients\">\n            This alert isn't being sent anywhere. Select \"Add An Alert\n            Recipient\" below to get started.\n          </p>\n          <ul>\n            <li\n              *ngFor=\"\n                let recipient of alert.alertRecipients;\n                let recipientIndex = index\n              \"\n            >\n              <div class=\"recipients\" [class.border-top]=\"recipientIndex === 0\">\n                <div class=\"flex-common\">\n                  <div class=\"flex-common\">\n                    <span\n                      *ngIf=\"recipient.recipientType === 'email'\"\n                      class=\"flex-common\"\n                      ><mat-icon class=\"alert-type\">email</mat-icon>\n                      Send an email to team members on this project.\n                    </span>\n                    <span\n                      *ngIf=\"recipient.recipientType === 'webhook'\"\n                      class=\"flex-common\"\n                      ><svg class=\"slack\">\n                        <use xlink:href=\"#webhook\"></use>\n                      </svg>\n                      {{ recipient.url }}\n                    </span>\n                  </div>\n                  <ng-container\n                    *ngIf=\"\n                      (deleteRecipientLoading$ | async) === recipient.pk;\n                      else notLoading\n                    \"\n                  >\n                    <mat-progress-spinner\n                      [diameter]=\"20\"\n                      color=\"primary\"\n                      mode=\"indeterminate\"\n                    ></mat-progress-spinner></ng-container\n                  ><ng-template #notLoading>\n                    <button\n                      class=\"trash\"\n                      mat-icon-button\n                      color=\"primary\"\n                      attr.aria-label=\"Delete Alert {{ i + 0 }}\"\n                      (click)=\"removeAlertRecipient(recipient, alert)\"\n                    >\n                      <mat-icon>delete_outline</mat-icon>\n                    </button>\n                  </ng-template>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <button\n            mat-stroked-button\n            color=\"primary\"\n            (click)=\"openUpdateRecipientDialog(alert)\"\n          >\n            <mat-icon>add</mat-icon>\n            Add An Alert Recipient\n          </button>\n        </div></ng-template\n      ></ng-container\n    ><ng-container *ngIf=\"(initialLoad$ | async) === false\">\n      <div class=\"initial-loading\">\n        <mat-progress-spinner\n          [diameter]=\"40\"\n          color=\"primary\"\n          mode=\"indeterminate\"\n        ></mat-progress-spinner></div\n    ></ng-container>\n    <ng-container *ngIf=\"initialLoadError$ | async as error\">\n      <div class=\"error initial-load-error\">\n        {{ error }}\n      </div></ng-container\n    >\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "ProjectCardComponent",
            "id": "component-ProjectCardComponent-ee0720893d08dc5f88470523ba471a45",
            "file": "src/app/shared/project-card/project-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-project-card",
            "styleUrls": [
                "./project-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cardLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string | []"
                },
                {
                    "name": "cardLinkQueryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "literal type"
                },
                {
                    "name": "descriptionList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]"
                },
                {
                    "name": "isMember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "primaryButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "ProjectCardButtonWithQuery"
                },
                {
                    "name": "sampleCard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "secondaryButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "ProjectCardButton"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.sample-card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  HostBinding,\n} from \"@angular/core\";\nimport type {\n  ProjectCardButtonWithQuery,\n  ProjectCardButton,\n} from \"../shared.interfaces\";\n\n@Component({\n  selector: \"gt-project-card\",\n  templateUrl: \"./project-card.component.html\",\n  styleUrls: [\"./project-card.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectCardComponent {\n  @Input() cardLink?: string | unknown[];\n  @Input() cardLinkQueryParams?: { [k: string]: unknown };\n  @Input() title?: string;\n  @Input() descriptionList?: { key: string; value: string }[];\n  @Input() isMember?: boolean;\n\n  @Input() primaryButton?: ProjectCardButtonWithQuery;\n  @Input() secondaryButton?: ProjectCardButton;\n\n  @Input() sampleCard = false;\n\n  @HostBinding(\"class.sample-card\") get isSampleCard() {\n    return this.sampleCard;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\nmat-card {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\na {\n  text-decoration: none;\n  color: mat.get-color-from-palette(mat.$gray-palette, 900);\n  font-weight: 400;\n}\n\n.mat-card-content {\n  padding-top: 24px;\n  padding-bottom: 2px;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .key {\n    margin-top: 24px;\n\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n}\n\n.mat-card-actions {\n  display: flex;\n  justify-content: space-between;\n\n  .action-button {\n    mat-icon {\n      font-size: 16px;\n      width: 16px;\n      height: 16px;\n    }\n\n    .icon {\n      &__warning {\n        margin-right: 8px;\n      }\n\n      &__settings {\n        margin-right: 3px;\n      }\n    }\n  }\n}\n\n:host.sample-card {\n  pointer-events: none;\n  opacity: 0.6;\n\n  ::ng-deep {\n    mat-card-title span,\n    p span,\n    .mat-button-wrapper span {\n      background-color: #eee;\n      color: #eee;\n    }\n    .action-button .mat-icon {\n      background-color: #eee;\n      color: #eee;\n    }\n  }\n}\n",
                    "styleUrl": "./project-card.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isSampleCard": {
                    "name": "isSampleCard",
                    "getSignature": {
                        "name": "isSampleCard",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                }
            },
            "templateData": "<mat-card>\n  <a\n    [routerLink]=\"isMember ? cardLink : secondaryButton?.link\"\n    [queryParams]=\"isMember ? cardLinkQueryParams || {} : {}\"\n    [tabIndex]=\"sampleCard && -1\"\n  >\n    <mat-card-title>\n      <span>{{ title }}</span>\n    </mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <ng-container *ngFor=\"let description of descriptionList\">\n        <p class=\"mat-small key\">\n          <span>{{ description.key | uppercase }}</span>\n        </p>\n        <p>\n          <span>{{ description.value }}</span>\n        </p>\n      </ng-container>\n    </mat-card-content>\n  </a>\n  <mat-card-actions>\n    <a\n      *ngIf=\"primaryButton && primaryButton.text && primaryButton.link\"\n      class=\"action-button\"\n      mat-stroked-button\n      [disabled]=\"!isMember\"\n      [matTooltip]=\"\n        isMember\n          ? ''\n          : 'To view issues for this project, add yourself to the corresponding team.'\n      \"\n      matTooltipPosition=\"right\"\n      color=\"primary\"\n      [routerLink]=\"isMember ? cardLink : undefined\"\n      [queryParams]=\"isMember ? primaryButton.query || {} : {}\"\n    >\n      <mat-icon\n        *ngIf=\"primaryButton.icon\"\n        class=\"icon__warning\"\n        aria-hidden=\"true\"\n        >{{ primaryButton.icon }}</mat-icon\n      >\n      <span>{{ primaryButton.text }}</span>\n    </a>\n    <a\n      *ngIf=\"secondaryButton && secondaryButton.text && secondaryButton.link\"\n      class=\"action-button\"\n      mat-button\n      color=\"primary\"\n      [routerLink]=\"secondaryButton.link\"\n      [disabled]=\"sampleCard\"\n    >\n      <mat-icon\n        *ngIf=\"secondaryButton.icon\"\n        class=\"icon__settings\"\n        aria-hidden=\"true\"\n        >{{ secondaryButton.icon }}</mat-icon\n      >\n      <span>{{ secondaryButton.text }}</span>\n    </a>\n  </mat-card-actions>\n</mat-card>\n"
        },
        {
            "name": "ProjectDetailComponent",
            "id": "component-ProjectDetailComponent-aab8c5a9ce70cbff1f0e4bfb57638698",
            "file": "src/app/settings/projects/project-detail/project-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-project-detail",
            "styleUrls": [
                "./project-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeProject$",
                    "defaultValue": "this.projectsService.activeProject$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "deleteError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "deleteLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "formDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroupDirective | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormGroupDirective"
                        }
                    ]
                },
                {
                    "name": "getPlatformName",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "nameForm",
                    "defaultValue": "new FormGroup({\n    name: new FormControl(\"\", [Validators.required]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "orgSlug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "platformForm",
                    "defaultValue": "new FormGroup({\n    platform: new FormControl(\"\"),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "projectKeys$",
                    "defaultValue": "this.projectsService.projectKeys$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "projectSlug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "updateNameError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "updateNameLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "updatePlatformError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "updatePlatformLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePlatform",
                    "args": [
                        {
                            "name": "projectName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormGroupDirective,\n} from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { filter, first, map, tap } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { flattenedPlatforms } from \"src/app/settings/projects/platform-picker/platforms-for-picker\";\nimport { ProjectDetail } from \"src/app/api/projects/projects-api.interfaces\";\nimport { ProjectSettingsService } from \"../project-settings.service\";\n\n@Component({\n  selector: \"gt-project-detail\",\n  templateUrl: \"./project-detail.component.html\",\n  styleUrls: [\"./project-detail.component.scss\"],\n})\nexport class ProjectDetailComponent implements OnInit, OnDestroy {\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective | undefined;\n\n  projectKeys$ = this.projectsService.projectKeys$;\n  activeProject$ = this.projectsService.activeProject$;\n\n  orgSlug: string | undefined;\n  projectSlug: string | undefined;\n\n  deleteLoading = false;\n  deleteError = \"\";\n  updateNameLoading = false;\n  updateNameError = \"\";\n  updatePlatformLoading = false;\n  updatePlatformError = \"\";\n\n  nameForm = new FormGroup({\n    name: new FormControl(\"\", [Validators.required]),\n  });\n\n  platformForm = new FormGroup({\n    platform: new FormControl(\"\"),\n  });\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private projectsService: ProjectSettingsService,\n    private snackBar: MatSnackBar,\n    private orgService: OrganizationsService\n  ) {}\n\n  ngOnDestroy() {\n    this.projectsService.clearActiveProject();\n  }\n\n  get name() {\n    return this.nameForm.get(\"name\");\n  }\n\n  get platform() {\n    return this.platformForm.get(\"platform\");\n  }\n\n  getPlatformName = (id: string) =>\n    flattenedPlatforms.find((platform) => platform.id === id)?.name || id;\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .pipe(\n        map((params) => {\n          const orgSlug: string | undefined = params[\"org-slug\"];\n          const projectSlug: string | undefined = params[\"project-slug\"];\n          this.orgSlug = orgSlug;\n          this.projectSlug = projectSlug;\n          return { orgSlug, projectSlug };\n        })\n      )\n      .subscribe(({ orgSlug, projectSlug }) => {\n        if (orgSlug && projectSlug) {\n          this.projectsService.retrieveProjectDetail(orgSlug, projectSlug);\n          this.projectsService.retrieveCurrentProjectClientKeys(orgSlug);\n        }\n      });\n    this.activeProject$\n      .pipe(\n        filter((data) => !!data),\n        first(),\n        tap((data) => {\n          this.nameForm.patchValue({\n            name: data!.name,\n          });\n          this.platformForm.patchValue({\n            platform: data!.platform,\n          });\n        })\n      )\n      .subscribe();\n  }\n\n  deleteProject() {\n    if (\n      window.confirm(\"Are you sure you want to delete this project?\") &&\n      this.orgSlug &&\n      this.projectSlug\n    ) {\n      this.deleteLoading = true;\n      this.projectsService\n        .deleteProject(this.orgSlug, this.projectSlug)\n        .subscribe(\n          () => {\n            this.deleteLoading = false;\n            this.orgService.refreshOrganizationDetail().subscribe();\n            this.snackBar.open(\"Your project has been sucessfully deleted\");\n            this.router.navigate([this.orgSlug, \"settings\", \"projects\"]);\n          },\n          (err) => {\n            this.deleteLoading = false;\n            this.deleteError = `${err.statusText}: ${err.status}`;\n          }\n        );\n    }\n  }\n\n  updateName() {\n    this.updateNameLoading = true;\n    if (this.orgSlug && this.projectSlug) {\n      this.projectsService\n        .updateProjectName(\n          this.orgSlug,\n          this.projectSlug,\n          this.nameForm.value.name\n        )\n        .subscribe(\n          (resp: ProjectDetail) => {\n            this.updateNameLoading = false;\n            if (this.updateNameError) {\n              this.updateNameError = \"\";\n            }\n            this.snackBar.open(\n              `The name of your project has been updated to ${resp.name}`\n            );\n          },\n          (err) => {\n            this.updateNameError = `${err.statusText}: ${err.status}`;\n          }\n        );\n    }\n  }\n\n  updatePlatform(projectName: string) {\n    this.updatePlatformLoading = true;\n    if (this.orgSlug && this.projectSlug) {\n      this.projectsService\n        .updateProjectPlatform(\n          this.orgSlug,\n          this.projectSlug,\n          this.platformForm.value.platform,\n          projectName\n        )\n        .subscribe(\n          (resp: ProjectDetail) => {\n            this.updatePlatformLoading = false;\n            if (this.updatePlatformError) {\n              this.updatePlatformError = \"\";\n            }\n            this.snackBar.open(\n              `Your project platform has been updated to ${this.getPlatformName(\n                resp.platform\n              )}.`\n            );\n            this.platformForm.setValue({ platform: resp.platform });\n          },\n          (err) => {\n            this.updatePlatformError = `${err.statusText}: ${err.status}`;\n          }\n        );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-card {\n  margin-top: 20px;\n  margin-bottom: 20px;\n\n  mat-card-content {\n    padding-top: 16px;\n  }\n\n  .note-padding {\n    padding-top: 0;\n  }\n}\n\n.project-form {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 8px;\n\n  @media (max-width: $medium - 1) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  mat-form-field {\n    width: 100%;\n    margin-right: 40px;\n\n    @media (max-width: $medium - 1) {\n      margin-right: 0;\n    }\n  }\n}\n\n.platform-form {\n  display: flex;\n\n  @media (min-width: $large) {\n    align-items: center;\n\n    .documentation-link {\n      margin-right: 40px;\n    }\n  }\n\n  @media (max-width: $large - 1) {\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 75px 50px;\n    grid-template-areas:\n      \"topLeft rightCol\"\n      \"bottomLeft rightCol\";\n    column-gap: 0;\n    row-gap: 20px;\n    padding-top: 15px;\n\n    gt-platform-picker {\n      grid-area: topLeft;\n    }\n\n    .documentation-link {\n      grid-area: bottomLeft;\n    }\n\n    gt-loading-button {\n      grid-area: rightCol;\n      margin-top: 25px;\n    }\n  }\n\n  @media (max-width: $medium - 1) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 0;\n  }\n}\n\n.remove-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: $tablet - 1) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  p {\n    padding-right: 16px;\n  }\n}\n\n.server-error {\n  display: block;\n}\n\ngt-loading-button ::ng-deep button {\n  width: 140px;\n}\n",
                    "styleUrl": "./project-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                },
                "platform": {
                    "name": "platform",
                    "getSignature": {
                        "name": "platform",
                        "type": "",
                        "returnType": "",
                        "line": 61
                    }
                }
            },
            "templateData": "<section class=\"l-body\" *ngIf=\"activeProject$ | async as project\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Settings for {{ project.name }}</h1>\n  </header>\n  <mat-card *ngIf=\"project.isMember === false\"\n    ><mat-card-content class=\"note-padding\">\n      <p class=\"mat-body-strong\">Note</p>\n      <p>\n        Because you are an admin for {{ project.organization.name }}, you have\n        access to all of its projects. However, if you want to view issues for\n        {{ project.name }}, you must be a member of one of its teams.\n      </p></mat-card-content\n    ></mat-card\n  >\n  <mat-card>\n    <mat-card-title>Update Project</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-error class=\"server-error\" *ngIf=\"updateNameError\">{{\n        updateNameError\n      }}</mat-error>\n      <form\n        [formGroup]=\"nameForm\"\n        (ngSubmit)=\"updateName()\"\n        class=\"project-form\"\n      >\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\" [value]=\"project.name\" />\n          <mat-error>\n            <span *ngIf=\"name?.errors?.required\"\n              >Enter a project name</span\n            ></mat-error\n          >\n        </mat-form-field>\n        <gt-loading-button\n          [disabled]=\"name?.value === project.name\"\n          buttonText=\"Update Name\"\n          id=\"update-project-name\"\n        >\n        </gt-loading-button>\n      </form>\n      <mat-error class=\"server-error\" *ngIf=\"updatePlatformError\">\n        {{ updatePlatformError }}\n      </mat-error>\n      <form\n        [formGroup]=\"platformForm\"\n        (ngSubmit)=\"updatePlatform(project.name)\"\n        class=\"platform-form\"\n      >\n        <gt-platform-picker\n          formControlName=\"platform\"\n          template=\"dropdown\"\n        ></gt-platform-picker>\n        <a\n          *ngIf=\"platform && platform.value !== ''\"\n          href=\"https://glitchtip.com/sdkdocs/{{ platform.value }}\"\n          target=\"_blank\"\n          class=\"documentation-link\"\n        >\n          Platform Documentation\n        </a>\n        <gt-loading-button\n          [disabled]=\"platform?.value === project.platform\"\n          buttonText=\"Update Platform\"\n          id=\"update-project-platform\"\n        >\n        </gt-loading-button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <mat-card *ngFor=\"let projectKey of (projectKeys$ | async) || []\">\n    <mat-card-title>Client Keys (DSN)</mat-card-title>\n    <p class=\"mat-caption\">\n      Data Source Name: The code that connects your project to GlitchTip.\n      Install a library into your project, then configure it with the DSN so\n      that it knows how to send errors to your GlitchTip account.\n    </p>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <gt-copy-input\n        [value]=\"projectKey.dsn.public\"\n        placeholder=\"DSN\"\n      ></gt-copy-input>\n      <gt-copy-input\n        [value]=\"projectKey.dsn.security\"\n        placeholder=\"Security Endpoint\"\n      ></gt-copy-input>\n    </mat-card-content>\n  </mat-card>\n\n  <gt-project-environments></gt-project-environments>\n\n  <gt-project-alerts></gt-project-alerts>\n\n  <mat-card>\n    <mat-card-title>Personal Project Notifications</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content class=\"remove-content\">\n      <div>\n        <p>\n          Edit whether or not you want to receive notifications for this project\n        </p>\n      </div>\n      <div>\n        <a mat-flat-button color=\"primary\" routerLink=\"/profile/notifications\">\n          Edit Preferences\n        </a>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Delete Project</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content class=\"remove-content\">\n      <div>\n        <p>\n          By deleting your project, you will lose all associated data. This\n          cannot be undone.\n        </p>\n        <mat-error *ngIf=\"deleteError\">{{ deleteError }}</mat-error>\n      </div>\n      <gt-loading-button\n        buttonText=\"Delete Project\"\n        [loading]=\"deleteLoading\"\n        (click)=\"deleteProject()\"\n        id=\"delete-project\"\n      >\n      </gt-loading-button>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "ProjectEnvironmentsComponent",
            "id": "component-ProjectEnvironmentsComponent-3c1d3deec3dcf519bfb9b699bb6b2d19",
            "file": "src/app/settings/projects/project-detail/project-environments/project-environments.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-project-environments",
            "styleUrls": [
                "./project-environments.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project-environments.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "error$",
                    "defaultValue": "this.environmentsService.error$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "initialLoad$",
                    "defaultValue": "this.environmentsService.initialLoad$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sortedEnvironments$",
                    "defaultValue": "this.environmentsService.sortedEnvironments$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "toggleHiddenloading$",
                    "defaultValue": "this.environmentsService.toggleHiddenLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleHidden",
                    "args": [
                        {
                            "name": "environment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environment",
                            "type": "ProjectEnvironment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnDestroy } from \"@angular/core\";\nimport { ProjectEnvironment } from \"src/app/api/organizations/organizations.interface\";\nimport { ProjectEnvironmentsService } from \"./project-environments.service\";\n\n@Component({\n  selector: \"gt-project-environments\",\n  templateUrl: \"./project-environments.component.html\",\n  styleUrls: [\"./project-environments.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectEnvironmentsComponent implements OnDestroy {\n  initialLoad$ = this.environmentsService.initialLoad$;\n  toggleHiddenloading$ = this.environmentsService.toggleHiddenLoading$;\n  error$ = this.environmentsService.error$;\n  sortedEnvironments$ = this.environmentsService.sortedEnvironments$;\n\n  constructor(private environmentsService: ProjectEnvironmentsService) {\n    this.environmentsService.retrieveEnvironments().subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.environmentsService.clearState();\n  }\n\n  toggleHidden(environment: ProjectEnvironment) {\n    this.environmentsService\n      .updateEnvironment({\n        ...environment,\n        isHidden: !environment.isHidden,\n      })\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin-bottom: 20px;\n}\n\nh1 {\n  margin-bottom: 0;\n}\n\nh2 {\n  margin: 0;\n  padding-top: 18px;\n  font-size: 1.2em;\n  font-weight: 500;\n}\n\n.loading {\n  height: 180px;\n}\n\n.mat-body-1 {\n  padding: 15px 0 0;\n}\n\nmat-list {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n\nmat-list-item ::ng-deep .mat-list-item-content {\n  display: flex;\n  justify-content: space-between;\n}\n\ngt-loading-button ::ng-deep button {\n  width: 100px;\n}\n",
                    "styleUrl": "./project-environments.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "environmentsService",
                        "type": "ProjectEnvironmentsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "environmentsService",
                        "type": "ProjectEnvironmentsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<section>\n  <mat-card>\n    <h1>\n      <mat-card-title>Environments</mat-card-title>\n    </h1>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <ng-container *ngIf=\"(initialLoad$ | async) === false; else afterLoad\">\n        <div class=\"loading\"></div>\n      </ng-container>\n      <ng-template #afterLoad>\n        <ng-container\n          *ngIf=\"\n            sortedEnvironments$ | async as sortedEnvironments;\n            else noEnvironments\n          \"\n        >\n          <ng-container *ngFor=\"let sortedEnvironment of sortedEnvironments\">\n            <h2>{{ sortedEnvironment.heading }}</h2>\n            <mat-list>\n              <ng-container\n                *ngFor=\"let environment of sortedEnvironment.environments\"\n              >\n                <mat-list-item>\n                  <span>\n                    {{ environment.name }}\n                  </span>\n                  <gt-loading-button\n                    (click)=\"toggleHidden(environment)\"\n                    [loading]=\"\n                      environment.id === (toggleHiddenloading$ | async)\n                    \"\n                    [buttonText]=\"environment.isHidden ? 'Show' : 'Hide'\"\n                    buttonStyle=\"stroked\"\n                  ></gt-loading-button>\n                </mat-list-item>\n              </ng-container>\n            </mat-list>\n          </ng-container>\n        </ng-container>\n      </ng-template>\n      <ng-template #noEnvironments>\n        <p class=\"mat-body-1\">\n          If you initialize an open-source Sentry SDK with an environment, it\n          will tag events with that environment and GlitchTip will keep a record\n          of them. The environments persist even if the event that reported it\n          is deleted, which is why hiding is an option.\n        </p>\n      </ng-template>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "ProjectListComponent",
            "id": "component-ProjectListComponent-beae2facc470fa76ee8ed953ca950506",
            "file": "src/app/shared/project-list/project-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-project-list",
            "styleUrls": [
                "./project-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./project-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeOrgOnly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "this.organizationsService\n    .activeOrganizationDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "organizations$",
                    "defaultValue": "this.organizationsService.organizations$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "orgsAndProjects$",
                    "defaultValue": "combineLatest([this.organizations$, this.projects$]).pipe(\n    map(([organizations, projects]) =>\n      organizations.map((organization) => ({\n        ...organization,\n        projects: projects\n          ? projects.filter(\n              (project) => project.organization.id === organization.id\n            )\n          : [],\n      }))\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "projects$",
                    "defaultValue": "this.projectsService.projects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n} from \"@angular/core\";\nimport { combineLatest } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { ProjectsService } from \"src/app/projects/projects.service\";\n\n@Component({\n  selector: \"gt-project-list\",\n  templateUrl: \"./project-list.component.html\",\n  styleUrls: [\"./project-list.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectListComponent implements OnInit {\n  @Input() activeOrgOnly = false;\n\n  activeOrganizationDetail$ = this.organizationsService\n    .activeOrganizationDetail$;\n  projects$ = this.projectsService.projects$;\n  organizations$ = this.organizationsService.organizations$;\n  orgsAndProjects$ = combineLatest([this.organizations$, this.projects$]).pipe(\n    map(([organizations, projects]) =>\n      organizations.map((organization) => ({\n        ...organization,\n        projects: projects\n          ? projects.filter(\n              (project) => project.organization.id === organization.id\n            )\n          : [],\n      }))\n    )\n  );\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private projectsService: ProjectsService\n  ) {}\n\n  ngOnInit() {\n    this.projectsService.retrieveProjects();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.org-projects-section {\n  margin-bottom: 70px;\n}\n\n.page-header {\n  flex-wrap: wrap;\n\n  @media screen and (max-width: $small - 1) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  h2 {\n    margin-right: 16px;\n    margin-bottom: 10px;\n  }\n}\n",
                    "styleUrl": "./project-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectsService",
                        "type": "ProjectsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"l-body\">\n  <mat-card\n    *ngIf=\"\n      (projects$ | async)?.length === 0 &&\n      (activeOrganizationDetail$ | async) === undefined\n    \"\n  >\n    <mat-card-content>\n      <p class=\"mat-body-1\">\n        In order to use GlitchTip, you'll need to create an organization.\n      </p>\n      <a\n        mat-flat-button\n        color=\"primary\"\n        [routerLink]=\"['/organizations', 'new']\"\n      >\n        Create New Organization\n      </a>\n    </mat-card-content>\n  </mat-card>\n\n  <ng-container *ngFor=\"let organization of orgsAndProjects$ | async\">\n    <section\n      class=\"org-projects-section\"\n      *ngIf=\"\n        !activeOrgOnly ||\n        (activeOrgOnly &&\n          organization.id === (activeOrganizationDetail$ | async)?.id)\n      \"\n    >\n      <header class=\"page-header\">\n        <h2 class=\"mat-display-1\">\n          {{ activeOrgOnly ? \"Projects\" : organization.name }}\n        </h2>\n        <a\n          mat-stroked-button\n          color=\"primary\"\n          [routerLink]=\"['/', organization.slug, 'settings', 'projects', 'new']\"\n        >\n          Create New Project in {{ organization.name }}\n        </a>\n      </header>\n      <gt-empty-projects\n        *ngIf=\"organization.projects.length === 0\"\n        [activeOrgOnly]=\"activeOrgOnly\"\n      ></gt-empty-projects>\n\n      <div>\n        <div class=\"card-wrapper\">\n          <ng-container *ngFor=\"let project of organization.projects\">\n            <gt-project-card\n              [cardLink]=\"['/', project.organization.slug, 'issues']\"\n              [cardLinkQueryParams]=\"{ project: project.id }\"\n              [title]=\"project.name\"\n              [descriptionList]=\"[\n                { key: 'organization', value: project.organization.name },\n                { key: 'date created', value: (project.dateCreated | date)! }\n              ]\"\n              [isMember]=\"project.isMember\"\n              [primaryButton]=\"{\n                text: 'Issues',\n                icon: 'warning',\n                query: { project: project.id },\n                link: [project.organization.slug, 'issues']\n              }\"\n              [secondaryButton]=\"{\n                text: 'Settings',\n                icon: 'settings',\n                link: [\n                  '/',\n                  project.organization.slug,\n                  'settings',\n                  'projects',\n                  project.slug\n                ]\n              }\"\n            ></gt-project-card>\n          </ng-container>\n        </div>\n      </div>\n    </section>\n  </ng-container>\n</section>\n"
        },
        {
            "name": "ProjectsComponent",
            "id": "component-ProjectsComponent-7ae3a859880fdbf371f3831e2e49d29f",
            "file": "src/app/projects/projects.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-projects",
            "styleUrls": [],
            "styles": [],
            "template": "<gt-project-list [activeOrgOnly]=\"true\"></gt-project-list>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\n@Component({\n  selector: \"gt-projects\",\n  template: `<gt-project-list [activeOrgOnly]=\"true\"></gt-project-list>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProjectsComponent",
            "id": "component-ProjectsComponent-24bf72022e548633e093da327860feb8-1",
            "file": "src/app/settings/projects/projects.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./projects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "projects$",
                    "defaultValue": "this.organizationsService.activeOrganizationProjects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "projectsForActiveOrg$",
                    "defaultValue": "this.projectSettingsService.projects$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { distinct, filter, tap } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { ProjectSettingsService } from \"./project-settings.service\";\n\n@Component({\n  templateUrl: \"./projects.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectsComponent implements OnInit, OnDestroy {\n  subscription?: Subscription;\n  projects$ = this.organizationsService.activeOrganizationProjects$;\n  projectsForActiveOrg$ = this.projectSettingsService.projects$;\n\n  constructor(\n    private organizationsService: OrganizationsService,\n    private projectSettingsService: ProjectSettingsService\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.organizationsService.activeOrganizationSlug$\n      .pipe(\n        distinct(),\n        filter((slug) => !!slug),\n        tap((slug) => this.projectSettingsService.retrieveProjects(slug!))\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectSettingsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectSettingsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProjectsComponent-1",
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Projects</h1>\n    <a mat-flat-button [routerLink]=\"['new']\" color=\"primary\">\n      Create New Project\n    </a>\n  </header>\n  <div *ngIf=\"projectsForActiveOrg$ | async as projects\">\n    <gt-empty-projects\n      *ngIf=\"projects.length === 0\"\n      [activeOrgOnly]=\"true\"\n    ></gt-empty-projects>\n  </div>\n\n  <div class=\"card-wrapper\">\n    <gt-project-card\n      *ngFor=\"let project of projectsForActiveOrg$ | async\"\n      [cardLink]=\"project.slug\"\n      [title]=\"project.name\"\n      [descriptionList]=\"[\n        { key: 'organization', value: project.organization.name },\n        { key: 'date created', value: (project.dateCreated | date)! }\n      ]\"\n      [isMember]=\"project.isMember\"\n      [secondaryButton]=\"{\n        link: project.slug,\n        icon: 'settings',\n        text: 'Settings'\n      }\"\n    ></gt-project-card>\n  </div>\n</section>\n"
        },
        {
            "name": "RateLimitBannerComponent",
            "id": "component-RateLimitBannerComponent-d73afbe5ef42f13feb5a971fb22f03bd",
            "file": "src/app/rate-limit-banner/rate-limit-banner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-rate-limit-banner",
            "styleUrls": [
                "./rate-limit-banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rate-limit-banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrgSlug$",
                    "defaultValue": "this.organizationsService.activeOrganizationSlug$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "bannerVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isAcceptingEvents$",
                    "defaultValue": "this.organizationsService.activeOrganization$.pipe(\n    map((activeOrganization) => activeOrganization?.isAcceptingEvents)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "hideBanner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\nimport { OrganizationsService } from \"../api/organizations/organizations.service\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"gt-rate-limit-banner\",\n  templateUrl: \"./rate-limit-banner.component.html\",\n  styleUrls: [\"./rate-limit-banner.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RateLimitBannerComponent {\n  isAcceptingEvents$ = this.organizationsService.activeOrganization$.pipe(\n    map((activeOrganization) => activeOrganization?.isAcceptingEvents)\n  );\n  activeOrgSlug$ = this.organizationsService.activeOrganizationSlug$;\n  bannerVisible = true;\n\n  constructor(private organizationsService: OrganizationsService) {}\n\n  hideBanner() {\n    this.bannerVisible = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin: 20px 25px 40px;\n}\n\n.mat-card-content {\n  margin-bottom: 0;\n}\n\nbutton {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n}\n",
                    "styleUrl": "./rate-limit-banner.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-card *ngIf=\"(isAcceptingEvents$ | async) === false && bannerVisible\">\n  <mat-card-title> Missing some errors? </mat-card-title>\n  <mat-card-content>\n    You've reached the maximum number of events that your plan allows for this\n    billing period. You can\n    <a [routerLink]=\"[activeOrgSlug$ | async, 'settings', 'subscription']\">\n      change your subscription</a\n    >\n    if you'd like to get things moving again.\n  </mat-card-content>\n  <button mat-icon-button (click)=\"hideBanner()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-card>\n"
        },
        {
            "name": "RawStacktraceComponent",
            "id": "component-RawStacktraceComponent-76fcfada463710cdfea0321325cdc95c",
            "file": "src/app/issues/issue-detail/event-detail/entry-exception/raw-stacktrace/raw-stacktrace.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-raw-stacktrace",
            "styleUrls": [
                "./raw-stacktrace.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raw-stacktrace.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "eventPlatform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | null | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkStacktraceInterface",
                    "defaultValue": "isStacktrace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "rawStacktraceValues$",
                    "defaultValue": "this.issueService.rawStacktraceValues$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\nimport { isStacktrace } from \"src/app/issues/utils\";\nimport { IssueDetailService } from \"../../../issue-detail.service\";\n\n@Component({\n  selector: \"gt-raw-stacktrace\",\n  templateUrl: \"./raw-stacktrace.component.html\",\n  styleUrls: [\"./raw-stacktrace.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RawStacktraceComponent {\n  @Input() eventPlatform: string | null | undefined;\n  rawStacktraceValues$ = this.issueService.rawStacktraceValues$;\n\n  constructor(private issueService: IssueDetailService) {}\n\n  checkStacktraceInterface = isStacktrace;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@angular/material' as mat;\n@import \"variables\";\n\n.wrapper {\n  padding: 8px;\n  border: 1px solid mat.get-color-from-palette(mat.$gray-palette, 300);\n  border-radius: 4px;\n  overflow-x: auto;\n}\n\n.spacer {\n  margin-left: 8px;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.indent {\n  margin-left: 24px;\n  padding-left: 24px;\n  text-indent: -24px;\n}\n\ndiv {\n  font-family: $font-mono;\n}\n",
                    "styleUrl": "./raw-stacktrace.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div *ngFor=\"let value of rawStacktraceValues$ | async\" class=\"wrapper\">\n  <p>\n    <ng-container *ngIf=\"eventPlatform === 'java'; else defaultTitle\">\n      <ng-container *ngIf=\"value.module\"\n        >{{ value.module }}.<ng-container\n          >{{ value.type }}&#58; {{ value.value }}</ng-container\n        >\n      </ng-container>\n    </ng-container>\n    <ng-template #defaultTitle>{{ value.type }}:{{ value.value }}</ng-template>\n  </p>\n  <ng-container *ngIf=\"checkStacktraceInterface(value.stacktrace)\">\n    <div\n      class=\"indent\"\n      *ngFor=\"let frame of value.stacktrace.frames; let i = index\"\n      [ngSwitch]=\"frame.platform || eventPlatform\"\n    >\n      <ng-container *ngSwitchCase=\"'javascript'\">\n        <ng-container *ngIf=\"frame.function; else notJSFunction\"\n          >&ensp;at {{ frame.function }} &#40;</ng-container\n        >\n        <ng-template #notJSFunction>&ensp;at ? &#40;</ng-template>\n        <ng-container *ngIf=\"frame.filename\">{{ frame.filename }}</ng-container>\n        <ng-container *ngIf=\"!frame.filename && frame.module\">{{\n          frame.module\n        }}</ng-container>\n        <ng-container *ngIf=\"frame.lineNo && frame.lineNo > 0\"\n          >&#58;{{ frame.lineNo }}</ng-container\n        >\n        <ng-container *ngIf=\"frame.colNo && frame.colNo > 0\"\n          >&#58;{{ frame.colNo }}</ng-container\n        >&#41;\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"'ruby'\"\n        >&ensp;from\n        <ng-container *ngIf=\"frame.filename; else rubyModule\">{{\n          frame.filename\n        }}</ng-container>\n        <ng-template #rubyModule>\n          <ng-container *ngIf=\"frame.module; else rubyElse\"\n            >&#40;{{ frame.module }}&#41;</ng-container\n          >\n        </ng-template>\n        <ng-template #rubyElse>?</ng-template>\n\n        <ng-container *ngIf=\"frame.lineNo && frame.lineNo > 0\"\n          >&#58;{{ frame.lineNo }}</ng-container\n        >\n        <ng-container *ngIf=\"frame.colNo && frame.colNo > 0\"\n          >&#58;{{ frame.colNo }}</ng-container\n        >\n        <ng-container *ngIf=\"frame.function\"\n          >&#58;in &#96;{{ frame.function }}&apos;</ng-container\n        >\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"'php'\"\n        >&#96;{{ i }} {{ frame.filename || frame.module }}&#40;{{\n          frame.lineNo\n        }}&#41;&#58;\n        {{ frame.function ? frame.function : \"&#123;main&#125;\" }}</ng-container\n      >\n\n      <ng-container *ngSwitchCase=\"'java'\"\n        >&nbsp;&nbsp;&nbsp;&nbsp;at\n        <ng-container *ngIf=\"frame.module\"> {{ frame.module }}.</ng-container>\n        <ng-container *ngIf=\"frame.function\">{{ frame.function }}</ng-container>\n        <ng-container *ngIf=\"frame.filename\"\n          >&#40;{{ frame.filename\n          }}<ng-container *ngIf=\"frame.lineNo && frame.lineNo > 0\"\n            >&#58;{{ frame.lineNo }}</ng-container\n          >&#41;\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngSwitchCase=\"'objc' || 'cocoa'\">\n        <!-- fallthrough -->\n      </ng-container>\n\n      <!--TODO: Add ljust and trim logic https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/interfaces/rawStacktraceContent.jsx#L105 -->\n      <ng-container *ngSwitchCase=\"'native'\"\n        >&ensp;\n        <ng-container *ngIf=\"frame.package\">{{ frame.package }} </ng-container>\n        <ng-container *ngIf=\"frame.instructionAddr\"\n          >{{ frame.instructionAddr }}\n        </ng-container>\n        <ng-container> {{ frame.function || frame.symbolAddr }}</ng-container>\n        <ng-container *ngIf=\"frame.filename\">\n          &#40;{{ frame.filename\n          }}<ng-container *ngIf=\"frame.lineNo && frame.lineNo > 0\"\n            >&#58;{{ frame.lineNo }}</ng-container\n          >&#41;</ng-container\n        >\n      </ng-container>\n\n      <ng-container *ngSwitchDefault>\n        <ng-container *ngIf=\"frame.filename; else defaultModule\"\n          >File \"{{ frame.filename }}\"</ng-container\n        >\n        <ng-template #defaultModule>\n          <ng-container *ngIf=\"frame.module; else defaultElse\"\n            >Module \"{{ frame.module }}\"</ng-container\n          >\n        </ng-template>\n        <ng-template #defaultElse> ?</ng-template>\n\n        <ng-container *ngIf=\"frame.lineNo && frame.lineNo > 0\"\n          >, line {{ frame.lineNo }}</ng-container\n        >\n        <ng-container *ngIf=\"frame.colNo && frame.colNo > 0\"\n          >, col {{ frame.colNo }}</ng-container\n        >\n        <ng-container *ngIf=\"frame.function\"\n          >, in {{ frame.function }}</ng-container\n        >\n        <ng-container *ngIf=\"frame.context\">\n          <ng-container *ngFor=\"let context of frame.context\">\n            <ng-container *ngIf=\"context[0] === frame.lineNo\">\n              <div *ngIf=\"context[1]\">\n                &nbsp;&nbsp;&nbsp;&nbsp;{{ context[1] }}\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container></ng-container\n      >\n    </div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-4f0c81b5d797b6f3e14a9d993589e1d4",
            "file": "src/app/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "acceptInfo$",
                    "defaultValue": "this.acceptService.acceptInfo$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "error",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password1: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    password2: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "socialApps$",
                    "defaultValue": "this.settings.socialApps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSocialApp",
                    "args": [
                        {
                            "name": "socialApp",
                            "type": "SocialApp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "socialApp",
                            "type": "SocialApp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { tap } from \"rxjs/operators\";\nimport { RegisterService } from \"./register.service\";\nimport { AcceptInviteService } from \"../api/accept/accept-invite.service\";\nimport { SettingsService } from \"../api/settings.service\";\nimport { SocialApp } from \"../api/user/user.interfaces\";\nimport { GlitchTipOAuthService } from \"../api/oauth/oauth.service\";\n\n@Component({\n  selector: \"gt-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.scss\"],\n})\nexport class RegisterComponent implements OnInit {\n  socialApps$ = this.settings.socialApps$;\n  loading = false;\n  error = \"\";\n  form = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password1: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    password2: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n  acceptInfo$ = this.acceptService.acceptInfo$;\n\n  constructor(\n    private registerService: RegisterService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private acceptService: AcceptInviteService,\n    private settings: SettingsService,\n    private oauthService: GlitchTipOAuthService\n  ) {}\n\n  ngOnInit() {\n    this.acceptInfo$\n      .pipe(\n        tap((acceptInfo) => {\n          if (acceptInfo) {\n            this.form.patchValue({ email: acceptInfo.org_user.email });\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  get email() {\n    return this.form.get(\"email\");\n  }\n\n  get password1() {\n    return this.form.get(\"password1\");\n  }\n\n  get password2() {\n    return this.form.get(\"password2\");\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.loading = true;\n      this.error = \"\";\n      this.registerService\n        .register(\n          this.form.value.email,\n          this.form.value.password1,\n          this.form.value.password2\n        )\n        .subscribe(\n          () => {\n            const query = this.route.snapshot.queryParamMap;\n            const next = query.get(\"next\");\n            if (next) {\n              this.router.navigateByUrl(next);\n            } else {\n              this.router.navigate([\"organizations\", \"new\"]);\n            }\n          },\n          (err) => {\n            this.loading = false;\n            if (err.status === 400 && err.error.non_field_errors) {\n              this.error = err.error.non_field_errors;\n            } else if (err.status === 400 && err.error.email) {\n              this.email?.setErrors({ serverError: err.error.email });\n            } else if (err.status === 400 && err.error.password1) {\n              this.password1?.setErrors({ serverError: err.error.password1 });\n            } else if (err.status === 400 && err.error.password2) {\n              this.password2?.setErrors({ serverError: err.error.password2 });\n            } else {\n              this.error = `${err.statusText}: ${err.status}`;\n            }\n          }\n        );\n    }\n  }\n\n  onSocialApp(socialApp: SocialApp) {\n    if (socialApp.provider === \"github\") {\n      this.oauthService.initGithubLogin(socialApp.client_id);\n    } else if (socialApp.provider === \"gitlab\") {\n      this.oauthService.initGitlabLogin(socialApp.client_id);\n    } else if (socialApp.provider === \"google\") {\n      this.oauthService.initGoogleLogin(socialApp.client_id);\n    } else if (socialApp.provider === \"microsoft\") {\n      this.oauthService.initMicrosoftLogin(socialApp.client_id);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".or {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  text-align: center;\n}\n\n.margin {\n  margin-bottom: 8px;\n}\n\n.disabled-messaging {\n  padding-top: 30px;\n}\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "acceptService",
                        "type": "AcceptInviteService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settings",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "acceptService",
                        "type": "AcceptInviteService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settings",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "",
                        "line": 54
                    }
                },
                "password1": {
                    "name": "password1",
                    "getSignature": {
                        "name": "password1",
                        "type": "",
                        "returnType": "",
                        "line": 58
                    }
                },
                "password2": {
                    "name": "password2",
                    "getSignature": {
                        "name": "password2",
                        "type": "",
                        "returnType": "",
                        "line": 62
                    }
                }
            },
            "templateData": "<div class=\"auth-form-wrapper\">\n  <mat-card class=\"auth-form\">\n    <h1>Register</h1>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <mat-error *ngIf=\"error\">{{ error }}</mat-error>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            autofocus\n            type=\"email\"\n            placeholder=\"Email\"\n            formControlName=\"email\"\n          />\n          <mat-error>\n            <span *ngIf=\"email?.errors?.required\"\n              >Your email is required to sign up</span\n            >\n            <span *ngIf=\"email?.errors?.email\"\n              >Enter a valid email address</span\n            >\n            <span *ngIf=\"email?.errors?.serverError\">{{\n              email?.errors?.serverError\n            }}</span>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"password\"\n            placeholder=\"Password\"\n            formControlName=\"password1\"\n          />\n          <mat-error>\n            <span *ngIf=\"password1?.errors\"\n              >Your password should be at least 8 characters long</span\n            >\n            <span *ngIf=\"password1?.errors?.required\"\n              >A password is required to sign up</span\n            >\n            <span *ngIf=\"password1?.errors?.serverError\">{{\n              password1?.errors?.serverError\n            }}</span>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            formControlName=\"password2\"\n            gtInputMatcher=\"password1\"\n          />\n\n          <mat-error>\n            <span *ngIf=\"password2?.errors?.required\"\n              >A password is required to sign up</span\n            >\n            <span *ngIf=\"password2?.errors?.notEqual\"\n              >Your passwords don't match</span\n            >\n            <span *ngIf=\"password2?.errors?.serverError\">{{\n              password2?.errors?.serverError\n            }}</span>\n          </mat-error>\n        </mat-form-field>\n        <button id=\"submit\" class=\"full-width\" mat-flat-button color=\"primary\">\n          Register\n        </button>\n      </form>\n      <ng-container *ngIf=\"socialApps$ | async as socialApps\">\n        <div *ngIf=\"socialApps.length\" class=\"or\">\n          <span class=\"mat-body-strong mat-body-2\">or</span>\n        </div>\n        <div class=\"o-auth\">\n          <button\n            *ngFor=\"let socialApp of socialApps\"\n            mat-stroked-button\n            class=\"full-width margin\"\n            (click)=\"onSocialApp(socialApp)\"\n          >\n            <gt-auth-svg\n              source=\"auth\"\n              text=\"Register with {{ socialApp.name }}\"\n              [provider]=\"socialApp.provider\"\n            ></gt-auth-svg>\n          </button>\n        </div>\n      </ng-container>\n    </mat-card-content>\n    <p class=\"mat-body-1 sign-up\">\n      Already have an account? <a routerLink=\"../login\">Log In</a>\n    </p>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "ResetPasswordComponent",
            "id": "component-ResetPasswordComponent-d463897cd59baf7a6d4485145e1299bf",
            "file": "src/app/reset-password/reset-password.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-reset-password",
            "styleUrls": [
                "./reset-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reset-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "sendResetEmailError$",
                    "defaultValue": "this.resetService.sendResetEmailError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sendResetEmailLoading$",
                    "defaultValue": "this.resetService.sendResetEmailLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sendResetEmailSuccess$",
                    "defaultValue": "this.resetService.sendResetEmailSuccess$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ResetPasswordService } from \"../api/reset-password/reset-password.service\";\n\n@Component({\n  selector: \"gt-reset-password\",\n  templateUrl: \"./reset-password.component.html\",\n  styleUrls: [\"./reset-password.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResetPasswordComponent {\n  sendResetEmailError$ = this.resetService.sendResetEmailError$;\n  sendResetEmailLoading$ = this.resetService.sendResetEmailLoading$;\n  sendResetEmailSuccess$ = this.resetService.sendResetEmailSuccess$;\n  form = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n  });\n\n  constructor(private resetService: ResetPasswordService) {}\n\n  get email() {\n    return this.form.get(\"email\");\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.resetService.sendResetEmail(this.form.value.email);\n    }\n  }\n\n  reset() {\n    this.resetService.clearState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin-top: 24px;\n}\n\n.success {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.reset {\n  margin-top: 8px;\n}\n",
                    "styleUrl": "./reset-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "resetService",
                        "type": "ResetPasswordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "resetService",
                        "type": "ResetPasswordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"auth-form-wrapper\">\n  <mat-card class=\"auth-form\">\n    <h1>Reset Password</h1>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"server-error\">\n          <p *ngIf=\"sendResetEmailSuccess$ | async as success\" class=\"success\">\n            {{ success }}\n          </p>\n          <mat-error *ngIf=\"sendResetEmailError$ | async as error\">{{\n            error\n          }}</mat-error>\n        </div>\n        <mat-form-field class=\"full-width\">\n          <input\n            [readonly]=\"(sendResetEmailSuccess$ | async) !== ''\"\n            matInput\n            type=\"email\"\n            placeholder=\"Email\"\n            formControlName=\"email\"\n          />\n          <mat-error *ngIf=\"email?.errors\">\n            <span *ngIf=\"email?.errors?.required || email?.errors?.email\">\n              Enter a valid email address\n            </span>\n            <span *ngIf=\"email?.errors?.serverError\">\n              {{ email?.errors?.serverError }}\n            </span>\n          </mat-error>\n        </mat-form-field>\n        <gt-loading-button\n          class=\"full-width\"\n          buttonText=\"Send Reset Password Email\"\n          [fullWidth]=\"true\"\n          [loading]=\"(sendResetEmailLoading$ | async) === true\"\n          [disabled]=\"(sendResetEmailSuccess$ | async) !== ''\"\n          id=\"submit\"\n        >\n        </gt-loading-button>\n        <button\n          *ngIf=\"(sendResetEmailSuccess$ | async) !== ''\"\n          (click)=\"reset()\"\n          mat-stroked-button\n          color=\"primary\"\n          class=\"reset full-width\"\n          type=\"button\"\n          id=\"reset\"\n        >\n          Reset\n        </button>\n      </form>\n      <div class=\"sign-up\">\n        <p class=\"mat-body-1\">\n          <a routerLink=\"/login\">Log in</a>\n        </p>\n        <p class=\"mat-body-1\">\n          <a routerLink=\"/register\">Register</a>\n        </p>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "SetNewPasswordComponent",
            "id": "component-SetNewPasswordComponent-bb1fcc8a6e7da0c03a047ec568d89949",
            "file": "src/app/reset-password/set-new-password/set-new-password.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-set-new-password",
            "styleUrls": [
                "./set-new-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./set-new-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    new_password1: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    new_password2: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "params$",
                    "defaultValue": "this.activatedRoute.params.pipe(\n    map((params) => ({ uid: params.uidb64, token: params.token }))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "setNewPasswordError$",
                    "defaultValue": "this.resetService.setNewPasswordError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "setnewPasswordLoading$",
                    "defaultValue": "this.resetService.setNewPasswordLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ResetPasswordService } from \"src/app/api/reset-password/reset-password.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"gt-set-new-password\",\n  templateUrl: \"./set-new-password.component.html\",\n  styleUrls: [\"./set-new-password.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SetNewPasswordComponent implements OnInit {\n  params$ = this.activatedRoute.params.pipe(\n    map((params) => ({ uid: params.uidb64, token: params.token }))\n  );\n  setNewPasswordError$ = this.resetService.setNewPasswordError$;\n  setnewPasswordLoading$ = this.resetService.setNewPasswordLoading$;\n  form = new FormGroup({\n    new_password1: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    new_password2: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  });\n\n  get new_password1() {\n    return this.form.get(\"new_password1\");\n  }\n\n  get new_password2() {\n    return this.form.get(\"new_password2\");\n  }\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private resetService: ResetPasswordService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.params$\n        .pipe(\n          map((params) => {\n            this.resetService.setNewPassword(\n              this.form.value.new_password1,\n              this.form.value.new_password2,\n              params.uid,\n              params.token\n            );\n          })\n        )\n        .subscribe();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin-top: 24px;\n}\n",
                    "styleUrl": "./set-new-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resetService",
                        "type": "ResetPasswordService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resetService",
                        "type": "ResetPasswordService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "new_password1": {
                    "name": "new_password1",
                    "getSignature": {
                        "name": "new_password1",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                },
                "new_password2": {
                    "name": "new_password2",
                    "getSignature": {
                        "name": "new_password2",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                }
            },
            "templateData": "<div class=\"auth-form-wrapper\">\n  <mat-card class=\"auth-form\">\n    <h1>Set New Password</h1>\n    <mat-card-content>\n      <form\n        [formGroup]=\"form\"\n        (ngSubmit)=\"onSubmit()\"\n        id=\"change-password-form\"\n      >\n        <div class=\"server-error\">\n          <mat-error *ngIf=\"setNewPasswordError$ | async as error\">{{\n            error\n          }}</mat-error>\n        </div>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"password\"\n            placeholder=\"New Password\"\n            formControlName=\"new_password1\"\n          />\n          <mat-error>\n            <span\n              *ngIf=\"new_password1?.errors && new_password1?.errors?.required\"\n            >\n              Your password should be at least 8 characters long\n            </span>\n            <span *ngIf=\"new_password1?.errors?.required\">\n              Type in your new password\n            </span>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"password\"\n            placeholder=\"Confirm New Password\"\n            formControlName=\"new_password2\"\n            gtInputMatcher=\"new_password1\"\n          />\n\n          <mat-error>\n            <span *ngIf=\"new_password2?.errors?.required\">\n              Type in your new password\n            </span>\n            <span *ngIf=\"new_password2?.errors?.notEqual\">\n              Your passwords don't match\n            </span>\n          </mat-error>\n        </mat-form-field>\n        <gt-loading-button\n          class=\"full-width\"\n          buttonText=\"Change Password\"\n          [loading]=\"(setnewPasswordLoading$ | async) === true\"\n          [fullWidth]=\"true\"\n        >\n          Set New Password\n        </gt-loading-button>\n      </form>\n      <div class=\"sign-up\">\n        <p class=\"mat-body-1\">\n          <a routerLink=\"/login\">Log in</a>\n        </p>\n        <p class=\"mat-body-1\">\n          <a routerLink=\"/register\">Register</a>\n        </p>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "SettingsComponent",
            "id": "component-SettingsComponent-fa276e0d2933c8cb29df5cb5a463d8ae",
            "file": "src/app/settings/settings/settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-settings",
            "styleUrls": [
                "./settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationDetail$",
                    "defaultValue": "this.organizationService\n    .activeOrganizationDetail$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "billingEnabled$",
                    "defaultValue": "this.service.billingEnabled$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isLoggedIn$",
                    "defaultValue": "this.auth.isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "organizationSlug$",
                    "defaultValue": "this.organizationService.activeOrganizationSlug$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleSideNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { tap, filter, map } from \"rxjs/operators\";\nimport { SettingsService } from \"src/app/api/settings.service\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { AuthService } from \"src/app/api/auth/auth.service\";\nimport { MainNavService } from \"src/app/main-nav/main-nav.service\";\n\n@Component({\n  selector: \"gt-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.scss\"],\n})\nexport class SettingsComponent {\n  billingEnabled$ = this.service.billingEnabled$;\n  organizationSlug$ = this.organizationService.activeOrganizationSlug$;\n  isLoggedIn$ = this.auth.isLoggedIn;\n  activeOrganizationDetail$ = this.organizationService\n    .activeOrganizationDetail$;\n\n  constructor(\n    private service: SettingsService,\n    private organizationService: OrganizationsService,\n    private auth: AuthService,\n    private mainNav: MainNavService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"]),\n        filter((orgSlug: string) => orgSlug !== undefined),\n        tap((orgSlug) =>\n          this.organizationService.setActiveOrganizationFromRouteChange(orgSlug)\n        )\n      )\n      .subscribe();\n  }\n\n  toggleSideNav() {\n    this.mainNav.getToggleNav();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n$iconWidth: 56px;\n\nbutton {\n  display: block;\n  margin: 20px;\n}\n\nmat-drawer-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\nmat-drawer {\n  min-width: 200px;\n\n  @media (max-width: $tablet - 1) {\n    display: none;\n  }\n}\n\nmat-drawer-content {\n  mat-toolbar {\n    display: none;\n    padding-left: $iconWidth;\n    cursor: pointer;\n\n    @media (max-width: $tablet - 1) {\n      display: flex;\n    }\n\n    .sidenav-toggle {\n      padding: 0;\n      position: absolute;\n      left: 0;\n      top: 0;\n      margin: 0;\n      min-width: $iconWidth;\n    }\n\n    mat-icon {\n      font-size: 25px;\n      height: $iconWidth;\n      width: $iconWidth;\n      line-height: $iconWidth;\n      color: white;\n\n      @media (min-width: $small) {\n        height: 64px;\n        line-height: 64px;\n      }\n    }\n\n    .active-org {\n      margin-left: 8px;\n    }\n  }\n}\n",
                    "styleUrl": "./settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mainNav",
                        "type": "MainNavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mainNav",
                        "type": "MainNavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-drawer-container>\n  <mat-drawer class=\"mat-elevation-z2\" mode=\"side\" opened>\n    <nav>\n      <mat-nav-list>\n        <a\n          mat-list-item\n          routerLink=\"./\"\n          routerLinkActive=\"active-route\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          General Settings\n        </a>\n        <a\n          mat-list-item\n          routerLink=\"./projects\"\n          routerLinkActive=\"active-route\"\n        >\n          Projects\n        </a>\n        <a\n          *ngIf=\"billingEnabled$ | async\"\n          mat-list-item\n          routerLink=\"./subscription\"\n          routerLinkActive=\"active-route\"\n        >\n          Subscription\n        </a>\n        <a mat-list-item routerLink=\"./teams\" routerLinkActive=\"active-route\">\n          Teams\n        </a>\n        <a mat-list-item routerLink=\"./members\" routerLinkActive=\"active-route\">\n          Members\n        </a>\n      </mat-nav-list>\n    </nav>\n  </mat-drawer>\n  <mat-drawer-content>\n    <mat-toolbar color=\"primary\" (click)=\"toggleSideNav()\">\n      <button *ngIf=\"isLoggedIn$ | async\" mat-button class=\"sidenav-toggle\">\n        <mat-icon>menu</mat-icon></button\n      ><span\n        class=\"active-org\"\n        *ngIf=\"activeOrganizationDetail$ | async as orgDetails\"\n        >{{ orgDetails?.name }}</span\n      >\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n"
        },
        {
            "name": "SocialAuthComponent",
            "id": "component-SocialAuthComponent-27387c046cfc0e31edfc2735db1a3b00",
            "file": "src/app/profile/social-auth/social-auth.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-social-auth",
            "styleUrls": [
                "./social-auth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./social-auth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "account",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "disconnectLoading$",
                    "defaultValue": "this.userService.disconnectLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "socialApps$",
                    "defaultValue": "this.settingsService.socialApps$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userService.userDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "addAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "disconnect",
                    "args": [
                        {
                            "name": "socialAccountId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "socialAccountId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { GlitchTipOAuthService } from \"src/app/api/oauth/oauth.service\";\nimport { SettingsService } from \"src/app/api/settings.service\";\nimport { UserService } from \"src/app/api/user/user.service\";\nimport { SocialApp } from \"../../api/user/user.interfaces\";\n\n@Component({\n  selector: \"gt-social-auth\",\n  templateUrl: \"./social-auth.component.html\",\n  styleUrls: [\"./social-auth.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SocialAuthComponent implements OnInit {\n  user$ = this.userService.userDetails$;\n  disconnectLoading$ = this.userService.disconnectLoading$;\n  socialApps$ = this.settingsService.socialApps$;\n  account = new FormControl();\n\n  constructor(\n    private userService: UserService,\n    private oauthService: GlitchTipOAuthService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.getUserDetails();\n  }\n\n  addAccount() {\n    // No connection for GitHub because it doesn't allow for multiple redirect URI's\n    // Can connect to GitHub on the log in page\n    const socialApp: SocialApp = this.account.value;\n    switch (socialApp.provider) {\n      case \"gitlab\":\n        return this.oauthService.initGitlabLogin(socialApp.client_id);\n      case \"google\":\n        return this.oauthService.initGoogleLogin(socialApp.client_id);\n      case \"microsoft\":\n        return this.oauthService.initMicrosoftLogin(socialApp.client_id);\n      case \"github\":\n        return this.oauthService.initGithubLogin(socialApp.client_id);\n    }\n  }\n\n  disconnect(socialAccountId: number) {\n    this.userService.disconnectSocialAccount(socialAccountId);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\nmat-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n\n  mat-form-field {\n    margin-top: -5px;\n\n    @media (max-width: $small - 1) {\n      width: 100%;\n    }\n  }\n}\n\n.empty-auth {\n  padding-top: 16px;\n  text-align: center;\n}\n\n.button-wrapper {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax((334px), 1fr));\n  grid-gap: 0 24px;\n  padding-top: 16px;\n\n  @media (max-width: $tablet - 1) {\n    grid-template-columns: auto;\n  }\n\n  .margin {\n    margin-bottom: 8px;\n  }\n}\n",
                    "styleUrl": "./social-auth.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "oauthService",
                        "type": "GlitchTipOAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "settingsService",
                        "type": "SettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container\n  *ngIf=\"(socialApps$ | async)?.length || (user$ | async)?.identities?.length\"\n>\n  <mat-card *ngIf=\"user$ | async as user\">\n    <mat-card-header>\n      <mat-card-title>Social Auth Accounts</mat-card-title>\n      <ng-container *ngIf=\"(socialApps$ | async)?.length\">\n        <mat-form-field *ngIf=\"socialApps$ | async as socialApps\">\n          <mat-label>Add Account</mat-label>\n          <mat-select (selectionChange)=\"addAccount()\" [formControl]=\"account\">\n            <mat-option\n              *ngFor=\"let socialApp of socialApps\"\n              [value]=\"socialApp\"\n            >\n              <gt-auth-svg\n                source=\"dropdown\"\n                [provider]=\"socialApp.provider\"\n                [text]=\"socialApp.name\"\n              ></gt-auth-svg>\n            </mat-option>\n          </mat-select> </mat-form-field\n      ></ng-container>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n    <mat-card-content\n      ><ng-container\n        *ngIf=\"(user$ | async)?.identities?.length === 0; else authAccountsList\"\n      >\n        <p class=\"empty-auth\">\n          You haven't connected any social auth accounts.\n        </p>\n      </ng-container>\n      <ng-template #authAccountsList>\n        <div class=\"button-wrapper\">\n          <ng-container\n            *ngFor=\"\n              let socialAccount of (user$ | async)?.identities;\n              let i = index\n            \"\n          >\n            <button\n              mat-stroked-button\n              class=\"full-width margin\"\n              (click)=\"disconnect(socialAccount.id)\"\n              [disabled]=\"(disconnectLoading$ | async) === socialAccount.id\"\n            >\n              <gt-auth-svg\n                [loading]=\"(disconnectLoading$ | async) === socialAccount.id\"\n                source=\"disconnect\"\n                text=\"Disconnect\n            {{\n                  socialAccount.username\n                    ? socialAccount.username\n                    : socialAccount.email\n                }}\"\n                [provider]=\"socialAccount.provider\"\n              ></gt-auth-svg></button\n          ></ng-container></div\n      ></ng-template>\n    </mat-card-content>\n  </mat-card>\n</ng-container>\n"
        },
        {
            "name": "SubscriptionComponent",
            "id": "component-SubscriptionComponent-d0544521d23ec8adb6cbb19316fd7502",
            "file": "src/app/settings/subscription/subscription.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./subscription.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./subscription.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganizationSlug$",
                    "defaultValue": "this.orgService.activeOrganizationSlug$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "billingEmail",
                    "defaultValue": "environment.billingEmail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "eventsCount$",
                    "defaultValue": "this.service.eventsCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "eventsPercent$",
                    "defaultValue": "combineLatest([\n    this.totalEventsAllowed$,\n    this.eventsCount$,\n  ]).pipe(\n    filter(([eventsAllowed, events]) => !!eventsAllowed && !!events),\n    map(([eventsAllowed, events]) => (events! / eventsAllowed!) * 100)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "projectsCount$",
                    "defaultValue": "this.orgService.projectsCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "routerSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "subscription$",
                    "defaultValue": "this.service.subscription$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "totalEventsAllowed$",
                    "defaultValue": "this.subscription$.pipe(\n    map((subscription) =>\n      subscription && subscription.plan.product.metadata\n        ? parseInt(subscription.plan.product.metadata.events, 10)\n        : null\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "manageSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, Subscription } from \"rxjs\";\nimport { map, filter } from \"rxjs/operators\";\nimport { SubscriptionsService } from \"src/app/api/subscriptions/subscriptions.service\";\nimport { environment } from \"../../../environments/environment\";\nimport { StripeService } from \"./stripe.service\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\n\n@Component({\n  templateUrl: \"./subscription.component.html\",\n  styleUrls: [\"./subscription.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SubscriptionComponent implements OnDestroy {\n  subscription$ = this.service.subscription$;\n  eventsCount$ = this.service.eventsCount$;\n  activeOrganizationSlug$ = this.orgService.activeOrganizationSlug$;\n  projectsCount$ = this.orgService.projectsCount$;\n  routerSubscription: Subscription;\n  billingEmail = environment.billingEmail;\n  totalEventsAllowed$ = this.subscription$.pipe(\n    map((subscription) =>\n      subscription && subscription.plan.product.metadata\n        ? parseInt(subscription.plan.product.metadata.events, 10)\n        : null\n    )\n  );\n  eventsPercent$ = combineLatest([\n    this.totalEventsAllowed$,\n    this.eventsCount$,\n  ]).pipe(\n    filter(([eventsAllowed, events]) => !!eventsAllowed && !!events),\n    map(([eventsAllowed, events]) => (events! / eventsAllowed!) * 100)\n  );\n\n  constructor(\n    private service: SubscriptionsService,\n    private route: ActivatedRoute,\n    private stripe: StripeService,\n    private orgService: OrganizationsService\n  ) {\n    this.routerSubscription = this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"] as string),\n        filter((slug) => !!slug)\n      )\n      .subscribe((slug) => {\n        this.service.retrieveSubscription(slug).toPromise();\n        this.service.retrieveSubscriptionCount(slug).toPromise();\n      });\n  }\n\n  manageSubscription() {\n    this.stripe.redirectToBillingPortal();\n  }\n\n  ngOnDestroy() {\n    this.routerSubscription.unsubscribe();\n    this.service.clearState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin-top: 24px;\n  margin-bottom: 24px;\n}\n\n.progress-bar {\n  position: relative;\n  margin: -10px 0 20px;\n  font-size: 0.9em;\n  font-weight: 500;\n\n  mat-progress-bar {\n    margin: 5px 0;\n  }\n}\n\n.total-events {\n  text-align: right;\n}\n\n.event-count {\n  display: inline-block;\n  position: relative;\n  transform: translateX(-50%);\n\n  &--left {\n    transform: translateX(0);\n  }\n\n  &--right {\n    transform: translateX(-100%);\n  }\n}\n",
                    "styleUrl": "./subscription.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "SubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stripe",
                        "type": "StripeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "SubscriptionsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stripe",
                        "type": "StripeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orgService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h2 class=\"mat-display-1\">Subscription</h2>\n  </header>\n  <ng-container *ngIf=\"subscription$ | async as subscription\">\n    <mat-card>\n      <mat-card-content>\n        <div>\n          <ng-container\n            *ngIf=\"\n              subscription.status === 'active' ||\n                subscription.status === 'trialing' ||\n                subscription.status === 'past_due';\n              else noSubscription\n            \"\n          >\n            <p *ngIf=\"subscription.status === 'active'\" class=\"mat-body-1\">\n              <ng-container\n                *ngIf=\"\n                  subscription.plan.amount === '0.00';\n                  else paidSubscription\n                \"\n                >You have selected the free plan. Please consider making a\n                monthly\n                <a href=\"https://liberapay.com/GlitchTip/donate\" target=\"_blank\"\n                  >donation</a\n                >\n                to help keep open source development sustainable. Thank you for\n                choosing GlitchTip!</ng-container\n              ><ng-template #paidSubscription\n                >This organization has an active subscription to GlitchTip.\n                Thank you!</ng-template\n              >\n            </p>\n            <p *ngIf=\"subscription.status === 'trialing'\" class=\"mat-body-1\">\n              This organization has a trial subscription to GlitchTip.\n            </p>\n            <p *ngIf=\"subscription.status === 'past_due'\" class=\"mat-body-1\">\n              This organization has a subscription to GlitchTip, but the payment\n              is past due.\n            </p>\n            <ng-container>\n              <mat-card-subtitle>Details</mat-card-subtitle>\n              <h3>{{ subscription.plan.product.name }}</h3>\n\n              <div\n                class=\"progress-bar\"\n                *ngIf=\"eventsPercent$ | async as eventsPercent\"\n              >\n                <div class=\"total-events\">\n                  {{ totalEventsAllowed$ | async }}\n                </div>\n                <mat-progress-bar [value]=\"eventsPercent\"></mat-progress-bar>\n                <div\n                  class=\"event-count\"\n                  [class.event-count--left]=\"eventsPercent < 25\"\n                  [class.event-count--right]=\"eventsPercent > 75\"\n                  style=\"left: {{ eventsPercent < 100 ? eventsPercent : 100 }}%\"\n                >\n                  {{ eventsCount$ | async }}\n                </div>\n              </div>\n\n              {{ subscription.plan.product.description }}\n\n              <ul>\n                <li class=\"mat-body-1\">\n                  Start date for this plan: {{ subscription.start_date | date }}\n                </li>\n                <li class=\"mat-body-1\">\n                  Plan cost: {{ subscription.plan?.amount | currency }}\n                </li>\n                <li class=\"mat-body-1\">\n                  Billing:\n                  <ng-container\n                    *ngIf=\"\n                      subscription.collection_method === 'charge_automatically'\n                    \"\n                  >\n                    Automatic\n                  </ng-container>\n                  <ng-container\n                    *ngIf=\"subscription.collection_method === 'send_invoice'\"\n                  >\n                    Send invoice\n                  </ng-container>\n                </li>\n                <li class=\"mat-body-1\">\n                  Billing period:\n                  {{ subscription.current_period_start | date }} to\n                  {{ subscription.current_period_end | date }}\n                </li>\n                <li>\n                  Events used in billing period: {{ eventsCount$ | async }}\n                </li>\n              </ul>\n            </ng-container>\n            <p class=\"mat-body-1\">\n              If you have questions about your subscription, please contact us\n              at\n              <a href=\"mailto:{{ billingEmail }}\">{{ billingEmail }}</a\n              >.\n            </p>\n            <button\n              mat-flat-button\n              color=\"primary\"\n              (click)=\"manageSubscription()\"\n            >\n              Manage Subscription\n            </button>\n          </ng-container>\n          <ng-template #noSubscription>\n            <p class=\"mat-body-1\">\n              This organization does not have an active subscription to\n              GlitchTip. Pick a plan to get started.\n            </p>\n          </ng-template>\n        </div>\n        <div *ngIf=\"(subscription$ | async) === null as subscription\">\n          <p class=\"mat-body-1\">\n            This organization does not have an active subscription to GlitchTip.\n          </p>\n          <a [routerLink]=\"['/payment']\">Subscription Options</a>\n          <p class=\"mat-body-1\">\n            If you would like to purchase a subscription, please contact us at\n            <a href=\"mailto:{{ billingEmail }}\">{{ billingEmail }}</a\n            >.\n          </p>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <mat-card\n      *ngIf=\"\n        (projectsCount$ | async) === 0 &&\n        subscription.status !== null &&\n        subscription.status !== 'canceled'\n      \"\n    >\n      <mat-card-content>\n        <p>\n          Now that you have an organization and a subscription, create a\n          project.\n        </p>\n        <a\n          *ngIf=\"activeOrganizationSlug$ | async as slug\"\n          mat-flat-button\n          [routerLink]=\"['/', slug, 'settings', 'projects', 'new']\"\n          color=\"primary\"\n        >\n          Create New Project\n        </a>\n      </mat-card-content>\n    </mat-card>\n    <gt-payment\n      *ngIf=\"subscription.status === null || subscription.status === 'canceled'\"\n    ></gt-payment>\n  </ng-container>\n</section>\n"
        },
        {
            "name": "TeamDetailsComponent",
            "id": "component-TeamDetailsComponent-fdcc94ff7df3f53ba64156c2aabc5a45",
            "file": "src/app/settings/teams/team-details/team-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-team-details",
            "styleUrls": [
                "./team-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./team-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navLinks",
                    "defaultValue": "[\n    {\n      path: \"members\",\n      label: \"Members\",\n    },\n    {\n      path: \"projects\",\n      label: \"Projects\",\n    },\n    {\n      path: \"settings\",\n      label: \"Settings\",\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "orgSlug$",
                    "defaultValue": "this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "teamSlug$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => params.get(\"team-slug\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"gt-team-details\",\n  templateUrl: \"./team-details.component.html\",\n  styleUrls: [\"./team-details.component.scss\"],\n})\nexport class TeamDetailsComponent {\n  teamSlug$ = this.route.paramMap.pipe(\n    map((params) => params.get(\"team-slug\"))\n  );\n  orgSlug$ = this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")));\n  navLinks = [\n    {\n      path: \"members\",\n      label: \"Members\",\n    },\n    {\n      path: \"projects\",\n      label: \"Projects\",\n    },\n    {\n      path: \"settings\",\n      label: \"Settings\",\n    },\n  ];\n  constructor(private route: ActivatedRoute) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./team-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">#{{ teamSlug$ | async }}</h1>\n    <a mat-flat-button [routerLink]=\"['/settings', orgSlug$ | async, 'teams']\">\n      <mat-icon>keyboard_arrow_left</mat-icon>\n      Back to Teams\n    </a>\n  </header>\n\n  <nav mat-tab-nav-bar>\n    <a\n      *ngFor=\"let link of navLinks\"\n      mat-tab-link\n      [routerLink]=\"link.path\"\n      routerLinkActive\n      [active]=\"rla.isActive\"\n      #rla=\"routerLinkActive\"\n      >{{ link.label }}\n    </a>\n  </nav>\n\n  <router-outlet></router-outlet>\n</section>\n"
        },
        {
            "name": "TeamMembersComponent",
            "id": "component-TeamMembersComponent-17942d3d380632b301e3c67148871d0c",
            "file": "src/app/settings/teams/team-members/team-members.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-team-members",
            "styleUrls": [
                "./team-members.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./team-members.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addMemberError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "filteredAddTeamMembers$",
                    "defaultValue": "this.organizationsService.filteredAddTeamMembers$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "member",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "orgSlug",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "removeMemberError",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selectedTeamMember",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "teamMembers$",
                    "defaultValue": "this.teamsService.teamMembers$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "teamSlug",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "userTeamRole$",
                    "defaultValue": "this.teamsService.userTeamRole$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "addTeamMember",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeTeamMember",
                    "args": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "memberEmail",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "memberId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "memberEmail",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { TeamsService } from \"src/app/api/teams/teams.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { Member } from \"src/app/api/organizations/organizations.interface\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { UserService } from \"src/app/api/user/user.service\";\nimport { FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"gt-team-members\",\n  templateUrl: \"./team-members.component.html\",\n  styleUrls: [\"./team-members.component.scss\"],\n})\nexport class TeamMembersComponent implements OnInit {\n  teamMembers$ = this.teamsService.teamMembers$;\n  filteredAddTeamMembers$ = this.organizationsService.filteredAddTeamMembers$;\n  userTeamRole$ = this.teamsService.userTeamRole$;\n\n  member = new FormControl();\n  orgSlug = \"\";\n  teamSlug = \"\";\n  addMemberError = \"\";\n  removeMemberError = \"\";\n  loading = false;\n  selectedTeamMember: number | null = null;\n\n  constructor(\n    private teamsService: TeamsService,\n    private organizationsService: OrganizationsService,\n    public route: ActivatedRoute,\n    private snackBar: MatSnackBar,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        map((params) => {\n          const orgSlug: string = params[\"org-slug\"];\n          const teamSlug: string = params[\"team-slug\"];\n          this.teamSlug = teamSlug;\n          this.orgSlug = orgSlug;\n          return { orgSlug, teamSlug };\n        })\n      )\n      .subscribe(({ orgSlug, teamSlug }) => {\n        if (orgSlug && teamSlug) {\n          this.teamsService.retrieveTeamMembers(orgSlug, teamSlug).toPromise();\n          this.organizationsService\n            .retrieveOrganizationMembers(orgSlug)\n            .toPromise();\n        }\n      });\n    this.userService.getUserDetails();\n  }\n\n  addTeamMember() {\n    this.loading = true;\n    this.organizationsService\n      .addTeamMember(this.member.value, this.orgSlug, this.teamSlug)\n      .subscribe(\n        (team) => {\n          /** Had some issues with FormControl's value being typed as `any` */\n          const member: Member = this.member.value;\n          this.loading = false;\n          this.snackBar.open(`${member.email} has been added to #${team.slug}`);\n        },\n        (err) => {\n          this.loading = false;\n          this.addMemberError = `${err.statusText}: ${err.status}`;\n        }\n      );\n  }\n\n  removeTeamMember(memberId: number, memberEmail: string) {\n    this.selectedTeamMember = memberId;\n    this.organizationsService\n      .removeTeamMember(memberId, this.teamSlug)\n      .subscribe(\n        (resp) => {\n          this.selectedTeamMember = null;\n          this.snackBar.open(\n            `${memberEmail} has been removed from #${resp.slug}`\n          );\n        },\n        (err) => {\n          this.selectedTeamMember = null;\n          this.removeMemberError = `${err.statusText}: ${err.status}`;\n        }\n      );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.mat-card {\n  margin: 24px 8px 8px 8px;\n}\n\nmat-card-header {\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n}\n\n.center-text {\n  text-align: center;\n}\n\nmat-card-content {\n  margin-top: 16px;\n\n  mat-list {\n    padding-top: 0;\n\n    .mat-list-item {\n      &:nth-last-child(n + 2) {\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n      }\n\n      ::ng-deep .mat-list-item-content {\n        padding-left: 0;\n        padding-right: 0;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./team-members.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header class=\"card-header\">\n    <mat-card-title>Members</mat-card-title>\n    <mat-form-field *ngIf=\"(userTeamRole$ | async) !== 'member'\">\n      <mat-label>Add Member</mat-label>\n      <mat-select (selectionChange)=\"addTeamMember()\" [formControl]=\"member\">\n        <ng-container\n          *ngIf=\"(filteredAddTeamMembers$ | async)?.length; else emptyState\"\n        >\n          <mat-option\n            *ngFor=\"let orgMember of filteredAddTeamMembers$ | async\"\n            [value]=\"orgMember\"\n          >\n            {{ orgMember.email }}\n          </mat-option></ng-container\n        ><ng-template #emptyState>\n          <mat-option disabled>No members</mat-option>\n        </ng-template>\n      </mat-select>\n      <mat-error *ngIf=\"addMemberError\">{{ addMemberError }}</mat-error>\n    </mat-form-field>\n  </mat-card-header>\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    <ng-container\n      *ngIf=\"(teamMembers$ | async)?.length === 0; else listMembers\"\n    >\n      <p class=\"center-text\">This team doesn't have any members</p>\n    </ng-container>\n    <ng-template #listMembers>\n      <mat-list>\n        <mat-error *ngIf=\"removeMemberError\" class=\"center-text\">{{\n          removeMemberError\n        }}</mat-error>\n        <mat-list-item *ngFor=\"let teamMember of teamMembers$ | async\">\n          <a\n            mat-line\n            [routerLink]=\"['../', 'members', teamMember.id]\"\n            [relativeTo]=\"route.parent?.parent\"\n            >{{ teamMember.email }}</a\n          >\n          <gt-loading-button\n            buttonText=\"Remove\"\n            buttonStyle=\"stroked\"\n            [loading]=\"selectedTeamMember === teamMember.id\"\n            (click)=\"removeTeamMember(teamMember.id, teamMember.email)\"\n            id=\"remove-team-member\"\n          ></gt-loading-button>\n        </mat-list-item> </mat-list\n    ></ng-template>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "TeamProjectsComponent",
            "id": "component-TeamProjectsComponent-d99b86468dc1e5aa8bd434d3bd09635e",
            "file": "src/app/settings/teams/team-projects/team-projects.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-team-projects",
            "styleUrls": [
                "./team-projects.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./team-projects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errors$",
                    "defaultValue": "this.projectsService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.projectsService.addRemoveLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "orgSlug$",
                    "defaultValue": "this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "project",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "projectsNotOnTeam$",
                    "defaultValue": "this.projectsService.projectsNotOnTeam$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "projectsOnTeam$",
                    "defaultValue": "this.projectsService.projectsOnTeam$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "teamSlug$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => params.get(\"team-slug\"))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "userTeamRole$",
                    "defaultValue": "this.teamsService.userTeamRole$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "addProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeProject",
                    "args": [
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectSlug",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\nimport { combineLatest } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { TeamsService } from \"src/app/api/teams/teams.service\";\nimport { ProjectSettingsService } from \"../../projects/project-settings.service\";\n\n@Component({\n  selector: \"gt-team-projects\",\n  templateUrl: \"./team-projects.component.html\",\n  styleUrls: [\"./team-projects.component.scss\"],\n})\nexport class TeamProjectsComponent implements OnInit {\n  userTeamRole$ = this.teamsService.userTeamRole$;\n  projectsOnTeam$ = this.projectsService.projectsOnTeam$;\n  projectsNotOnTeam$ = this.projectsService.projectsNotOnTeam$;\n  loading$ = this.projectsService.addRemoveLoading$;\n  errors$ = this.projectsService.errors$;\n  project = new FormControl();\n  teamSlug$ = this.route.paramMap.pipe(\n    map((params) => params.get(\"team-slug\"))\n  );\n  orgSlug$ = this.route.paramMap.pipe(map((params) => params.get(\"org-slug\")));\n\n  constructor(\n    private projectsService: ProjectSettingsService,\n    private teamsService: TeamsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([this.orgSlug$, this.teamSlug$])\n      .pipe(\n        map(([orgSlug, teamSlug]) => {\n          if (orgSlug && teamSlug) {\n            this.projectsService.retrieveProjectsOnTeam(orgSlug, teamSlug);\n            this.projectsService.retrieveProjectsNotOnTeam(orgSlug, teamSlug);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  addProject() {\n    const projectSlug = this.project.value;\n    combineLatest([this.orgSlug$, this.teamSlug$])\n      .pipe(\n        map(([orgSlug, teamSlug]) => {\n          if (orgSlug && teamSlug) {\n            this.projectsService.addProjectToTeam(\n              orgSlug,\n              teamSlug,\n              projectSlug\n            );\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  removeProject(projectSlug: string) {\n    combineLatest([this.orgSlug$, this.teamSlug$])\n      .pipe(\n        map(([orgSlug, teamSlug]) => {\n          if (orgSlug && teamSlug) {\n            this.projectsService.removeProjectFromTeam(\n              orgSlug,\n              teamSlug,\n              projectSlug\n            );\n          }\n        })\n      )\n      .subscribe(() => this.project.reset());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.mat-card {\n  margin: 24px 8px 8px 8px;\n}\n\nmat-card-header {\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n}\n\n.center-text {\n  text-align: center;\n}\n\nmat-card-content {\n  margin-top: 16px;\n\n  mat-list {\n    padding-top: 0;\n\n    .mat-list-item {\n      &:nth-last-child(n + 2) {\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n      }\n\n      ::ng-deep .mat-list-item-content {\n        padding-left: 0;\n        padding-right: 0;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./team-projects.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "projectsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "projectsService",
                        "type": "ProjectSettingsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header class=\"card-header\">\n    <mat-card-title>Projects</mat-card-title>\n    <mat-error *ngIf=\"(errors$ | async)?.addProjectToTeam\">{{\n      (errors$ | async)?.addProjectToTeam\n    }}</mat-error>\n    <div>\n      <mat-form-field *ngIf=\"(userTeamRole$ | async) !== 'member'\">\n        <mat-label>Add Project</mat-label>\n        <mat-select (selectionChange)=\"addProject()\" [formControl]=\"project\">\n          <ng-container\n            *ngIf=\"(projectsNotOnTeam$ | async)?.length; else emptyState\"\n          >\n            <mat-option\n              *ngFor=\"let project of projectsNotOnTeam$ | async\"\n              [value]=\"project.slug\"\n            >\n              {{ project.name }}\n            </mat-option></ng-container\n          ><ng-template #emptyState>\n            <mat-option disabled>No projects</mat-option>\n          </ng-template>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </mat-card-header>\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    <ng-container\n      *ngIf=\"(projectsOnTeam$ | async)?.length === 0; else listMembers\"\n    >\n      <p class=\"center-text\">This team doesn't have any projects</p>\n    </ng-container>\n    <ng-template #listMembers>\n      <mat-list>\n        <mat-error\n          *ngIf=\"(errors$ | async)?.removeProjectFromTeam\"\n          class=\"center-text\"\n          >{{ (errors$ | async)?.removeProjectFromTeam }}</mat-error\n        >\n        <mat-list-item *ngFor=\"let project of projectsOnTeam$ | async\">\n          <a\n            mat-line\n            [routerLink]=\"['/', project.organization.slug, 'issues']\"\n            [queryParams]=\"{ project: project.id }\"\n            >{{ project.name }}</a\n          >\n          <gt-loading-button\n            buttonText=\"Remove\"\n            buttonStyle=\"stroked\"\n            [loading]=\"\n              project.slug === (loading$ | async)?.removeProjectFromTeam\n            \"\n            (click)=\"removeProject(project.slug)\"\n            id=\"remove-team-member\"\n          ></gt-loading-button>\n        </mat-list-item> </mat-list\n    ></ng-template>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "TeamsComponent",
            "id": "component-TeamsComponent-ca193afe720a323397381256ca92b99d",
            "file": "src/app/settings/teams/teams.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-teams",
            "styleUrls": [
                "./teams.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOrganization$",
                    "defaultValue": "this.organizationsService.activeOrganization$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "errors$",
                    "defaultValue": "this.organizationsService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.organizationsService.loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "memberCountPluralMapping",
                    "defaultValue": "{\n    \"=1\": \"1 Member\",\n    other: \"# Members\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "orgSlug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "otherTeams$",
                    "defaultValue": "this.activeOrganization$.pipe(\n    map((orgDetails) => orgDetails?.teams?.filter((team) => !team.isMember))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "yourTeams$",
                    "defaultValue": "this.activeOrganization$.pipe(\n    map((orgDetails) => orgDetails?.teams?.filter((team) => team.isMember))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "joinTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "leaveTeam",
                    "args": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "team",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCreateTeamDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { TeamsService } from \"src/app/api/teams/teams.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, filter, tap } from \"rxjs/operators\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { NewTeamComponent } from \"./new-team/new-team.component\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\n\n@Component({\n  selector: \"gt-teams\",\n  templateUrl: \"./teams.component.html\",\n  styleUrls: [\"./teams.component.scss\"],\n})\nexport class TeamsComponent implements OnInit {\n  activeOrganization$ = this.organizationsService.activeOrganization$;\n  yourTeams$ = this.activeOrganization$.pipe(\n    map((orgDetails) => orgDetails?.teams?.filter((team) => team.isMember))\n  );\n  otherTeams$ = this.activeOrganization$.pipe(\n    map((orgDetails) => orgDetails?.teams?.filter((team) => !team.isMember))\n  );\n  errors$ = this.organizationsService.errors$;\n  loading$ = this.organizationsService.loading$;\n  orgSlug?: string;\n\n  memberCountPluralMapping: { [k: string]: string } = {\n    \"=1\": \"1 Member\",\n    other: \"# Members\",\n  };\n\n  constructor(\n    private teamsService: TeamsService,\n    private organizationsService: OrganizationsService,\n    private route: ActivatedRoute,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        map((params) => params[\"org-slug\"] as string),\n        filter((slug) => !!slug),\n        tap((slug) => (this.orgSlug = slug))\n      )\n      .subscribe((slug) => {\n        this.teamsService.retrieveTeamsByOrg(slug).toPromise();\n      });\n  }\n\n  openCreateTeamDialog() {\n    this.dialog.open(NewTeamComponent, {\n      maxWidth: \"500px\",\n      data: {\n        orgSlug: this.orgSlug,\n      },\n    });\n  }\n\n  leaveTeam(team: string) {\n    this.organizationsService.leaveTeam(team).subscribe();\n  }\n\n  joinTeam(team: string) {\n    this.organizationsService.joinTeam(team).subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  mat-card-content {\n    padding-top: 16px;\n  }\n}\n\nmat-list {\n  width: 100%;\n  padding-top: 0;\n}\n\nmat-error {\n  display: block;\n}\n\n.center-text {\n  text-align: center;\n}\n\n.mat-list-item {\n  display: flex;\n  justify-content: space-between;\n\n  &:nth-last-child(n + 2) {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  }\n\n  ::ng-deep .mat-list-item-content {\n    width: 100%;\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\ngt-loading-button ::ng-deep button {\n  width: 110px;\n}\n",
                    "styleUrl": "./teams.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Teams</h1>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      (click)=\"openCreateTeamDialog()\"\n      id=\"new-team\"\n    >\n      Create Team\n    </button>\n  </header>\n  <mat-card>\n    <mat-card-title>Your Teams</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-list *ngIf=\"(yourTeams$ | async)?.length; else noTeams\">\n        <mat-error class=\"center-text\" *ngIf=\"errors$ | async as error\">{{\n          error.removeTeamMember\n        }}</mat-error>\n        <mat-list-item *ngFor=\"let yourTeam of yourTeams$ | async\">\n          <a mat-line [routerLink]=\"[yourTeam.slug, 'members']\">\n            #{{ yourTeam.slug }}\n          </a>\n          <p mat-line>\n            {{ yourTeam.memberCount | i18nPlural: memberCountPluralMapping }}\n          </p>\n          <gt-loading-button\n            buttonText=\"Leave Team\"\n            buttonStyle=\"stroked\"\n            [loading]=\"(loading$ | async)?.removeTeamMember === yourTeam.slug\"\n            (click)=\"leaveTeam(yourTeam.slug)\"\n            id=\"leave-team\"\n          ></gt-loading-button>\n        </mat-list-item>\n      </mat-list>\n      <ng-template #noTeams>\n        <p *ngIf=\"(otherTeams$ | async)?.length; else noTeamsInOrg\">\n          You aren't part of any teams. Join a team below or press the \"Create\n          Team\" button in the upper right.\n        </p>\n        <ng-template #noTeamsInOrg>\n          <p>\n            You don't have any teams set up. Teams determine which users have\n            access to projects in your organization.\n          </p>\n          <p>\n            To create a new team, press the \"Create Team\" button in the upper\n            right.\n          </p>\n        </ng-template>\n      </ng-template>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card *ngIf=\"(otherTeams$ | async)?.length\">\n    <mat-card-title>Other Teams</mat-card-title>\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <mat-list>\n        <mat-error class=\"center-text\" *ngIf=\"errors$ | async as error\">{{\n          error.addTeamMember\n        }}</mat-error>\n        <mat-list-item *ngFor=\"let otherTeam of otherTeams$ | async\">\n          <a mat-line [routerLink]=\"[otherTeam.slug, 'members']\">\n            #{{ otherTeam.slug }}\n          </a>\n          <p mat-line>\n            {{ otherTeam.memberCount | i18nPlural: memberCountPluralMapping }}\n          </p>\n          <gt-loading-button\n            buttonText=\"Join Team\"\n            buttonStyle=\"stroked\"\n            [loading]=\"(loading$ | async)?.addTeamMember === otherTeam.slug\"\n            (click)=\"joinTeam(otherTeam.slug)\"\n            id=\"leave-team\"\n          ></gt-loading-button>\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "TeamSettingsComponent",
            "id": "component-TeamSettingsComponent-e9f053d8f651279cf7250d1dfb29e912",
            "file": "src/app/settings/teams/team-settings/team-settings.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-team-settings",
            "styleUrls": [
                "./team-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./team-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errors$",
                    "defaultValue": "this.teamsService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    slug: new FormControl(\"\", [Validators.required]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.teamsService.loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "routeSlugs$",
                    "defaultValue": "this.route.paramMap.pipe(\n    map((params) => [params.get(\"org-slug\"), params.get(\"team-slug\")])\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "team$",
                    "defaultValue": "this.teamsService.team$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteTeam",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { FormControl, Validators, FormGroup } from \"@angular/forms\";\nimport { TeamsService } from \"src/app/api/teams/teams.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, take } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\n\n@Component({\n  selector: \"gt-team-settings\",\n  templateUrl: \"./team-settings.component.html\",\n  styleUrls: [\"./team-settings.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TeamSettingsComponent implements OnInit {\n  team$ = this.teamsService.team$;\n  loading$ = this.teamsService.loading$;\n  errors$ = this.teamsService.errors$;\n  form = new FormGroup({\n    slug: new FormControl(\"\", [Validators.required]),\n  });\n  routeSlugs$ = this.route.paramMap.pipe(\n    map((params) => [params.get(\"org-slug\"), params.get(\"team-slug\")])\n  );\n\n  constructor(\n    private teamsService: TeamsService,\n    private organizationsService: OrganizationsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.routeSlugs$\n      .pipe(\n        map(([orgSlug, teamSlug]) => {\n          if (orgSlug && teamSlug) {\n            this.teamsService.retrieveSingleTeam(orgSlug, teamSlug);\n            this.form.patchValue({ slug: teamSlug });\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  onSubmit() {\n    const newSlug = this.form.value.slug;\n    this.routeSlugs$\n      .pipe(\n        take(1),\n        map(([orgSlug, teamSlug]) => {\n          if (orgSlug && teamSlug) {\n            this.teamsService\n              .updateTeamSlug(orgSlug, teamSlug, newSlug)\n              .subscribe((resp) => {\n                this.organizationsService.updateTeam(resp.id, resp.slug);\n              });\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  deleteTeam() {\n    if (window.confirm(\"Are you sure you want to delete this team?\")) {\n      this.routeSlugs$\n        .pipe(\n          map(([orgSlug, teamSlug]) => {\n            if (orgSlug && teamSlug) {\n              this.teamsService\n                .deleteTeam(orgSlug, teamSlug)\n                .subscribe(() =>\n                  this.organizationsService.deleteTeam(teamSlug)\n                );\n            }\n          })\n        )\n        .toPromise();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"variables\";\n\n.mat-card {\n  margin: 24px 8px 8px 8px;\n\n  mat-card-header {\n    &::ng-deep .mat-card-header-text {\n      margin-left: 0;\n    }\n  }\n\n  mat-card-content {\n    padding-top: 16px;\n  }\n}\n\nform {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 8px;\n\n  @media (max-width: $tablet - 1) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  mat-form-field {\n    width: 100%;\n    margin-right: 40px;\n\n    @media (max-width: $tablet - 1) {\n      margin-right: 0;\n    }\n  }\n}\n\n.remove-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: $tablet - 1) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  p {\n    padding-right: 16px;\n  }\n}\n\n.server-error {\n  display: block;\n}\n\n.center-text {\n  text-align: center;\n}\n\ngt-loading-button ::ng-deep button {\n  width: 120px;\n}\n",
                    "styleUrl": "./team-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "teamsService",
                        "type": "TeamsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card *ngIf=\"team$ | async as team\">\n  <mat-card-title>Settings</mat-card-title>\n\n  <mat-divider></mat-divider>\n  <mat-card-content>\n    <mat-error\n      *ngIf=\"(errors$ | async)?.updateName\"\n      class=\"server-error center-text\"\n      >{{ (errors$ | async)?.updateName }}</mat-error\n    >\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field>\n        <mat-label>Slug</mat-label>\n        <input matInput formControlName=\"slug\" [value]=\"team.slug\" />\n        <mat-error>\n          <span *ngIf=\"this.form.get('slug')?.errors?.required\"\n            >Enter a team name</span\n          ></mat-error\n        >\n      </mat-form-field>\n      <gt-loading-button\n        [disabled]=\"this.form.get('slug')?.value === team.slug\"\n        [loading]=\"(loading$ | async)?.updateName\"\n        buttonText=\"Update Name\"\n        id=\"update-project-name\"\n      >\n      </gt-loading-button>\n    </form>\n  </mat-card-content>\n</mat-card>\n<mat-card>\n  <mat-card-title>Delete Team</mat-card-title>\n  <mat-divider></mat-divider>\n  <mat-card-content class=\"remove-content\">\n    <div>\n      <p>\n        By deleting your team, you will lose all associated data. This cannot be\n        undone.\n      </p>\n      <mat-error></mat-error>\n    </div>\n    <gt-loading-button\n      buttonText=\"Delete Team\"\n      [loading]=\"(loading$ | async)?.deleteTeam\"\n      (click)=\"deleteTeam()\"\n    >\n    </gt-loading-button>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "ToDoItemComponent",
            "id": "component-ToDoItemComponent-ea91c5d8463ce9be41d7ad72f1d5440d",
            "file": "src/app/shared/to-do-item/to-do-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-to-do-item",
            "styleUrls": [
                "./to-do-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./to-do-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isDone",
                    "defaultValue": "\"false\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"false\" | \"doing\" | \"true\""
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Useful for multi step (wizard) interfaces\n<a href=\"https://www.figma.com/file/TUL7whJuANdvdLt3nejXPt/GlitchTip-Common-Library?node-id=422%3A513\">https://www.figma.com/file/TUL7whJuANdvdLt3nejXPt/GlitchTip-Common-Library?node-id=422%3A513</a></p>\n",
            "rawdescription": "\n\nUseful for multi step (wizard) interfaces\nhttps://www.figma.com/file/TUL7whJuANdvdLt3nejXPt/GlitchTip-Common-Library?node-id=422%3A513\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from \"@angular/core\";\n\n/**\n * Useful for multi step (wizard) interfaces\n * https://www.figma.com/file/TUL7whJuANdvdLt3nejXPt/GlitchTip-Common-Library?node-id=422%3A513\n */\n@Component({\n  selector: \"gt-to-do-item\",\n  templateUrl: \"./to-do-item.component.html\",\n  styleUrls: [\"./to-do-item.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToDoItemComponent {\n  @Input() title = \"\";\n  @Input() isDone: \"false\" | \"doing\" | \"true\" = \"false\";\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".todo-list-item {\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 16pt;\n}\n\n.icon-align {\n  display: flex;\n  align-items: center;\n}\n\nspan {\n  font-weight: bold;\n}\n\n.is-not-done {\n  color: #e22a46;\n}\n\n.is-done {\n  color: #54A65A;\n}\n",
                    "styleUrl": "./to-do-item.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"todo-list-item\">\n  <span\n    [class.is-not-done]=\"isDone === 'false'\"\n    [class.is-doing]=\"isDone === 'doing'\"\n    [class.is-done]=\"isDone === 'true'\"\n  >\n    <div class=\"icon-align\">{{ title }}\n      <mat-icon *ngIf=\"isDone === 'true'\">checkbox</mat-icon>\n    </div>\n  </span>\n</div>\n"
        },
        {
            "name": "TOTPComponent",
            "id": "component-TOTPComponent-d6cedbe735c09c1a17c6e5aec3676b1f",
            "file": "src/app/profile/multi-factor-auth/totp/totp.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-totp",
            "styleUrls": [
                "./totp.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./totp.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backupCodeForm",
                    "defaultValue": "new FormGroup({\n    code: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(16),\n      Validators.maxLength(16),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "canvas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'canvas', {static: false}"
                        }
                    ]
                },
                {
                    "name": "codeForm",
                    "defaultValue": "new FormGroup({\n    code: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(6),\n    ]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "copiedCodes$",
                    "defaultValue": "this.service.copiedCodes$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "error$",
                    "defaultValue": "this.service.serverError$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "step$",
                    "defaultValue": "this.service.setupTOTPStage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "TOTP$",
                    "defaultValue": "this.service.totp$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "TOTPKey$",
                    "defaultValue": "this.service.TOTPKey$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "copyCodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "decrementStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteKey",
                    "args": [
                        {
                            "name": "keyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "keyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadCodes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enableTOTP",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "generateQRCode",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStepIsDone",
                    "args": [
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentStep",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"false\" | \"doing\" | \"true\"",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentStep",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "incrementStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verifyBackupCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n} from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as QRCode from \"qrcode\";\nimport { combineLatest } from \"rxjs\";\nimport { delay, filter, take, tap } from \"rxjs/operators\";\nimport { MultiFactorAuthService } from \"../multi-factor-auth.service\";\n\n@Component({\n  selector: \"gt-totp\",\n  templateUrl: \"./totp.component.html\",\n  styleUrls: [\"./totp.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TOTPComponent implements OnInit, OnDestroy {\n  @ViewChild(\"canvas\", { static: false }) canvas: ElementRef | undefined;\n  TOTPKey$ = this.service.TOTPKey$;\n  TOTP$ = this.service.totp$;\n  step$ = this.service.setupTOTPStage$;\n  error$ = this.service.serverError$;\n  copiedCodes$ = this.service.copiedCodes$;\n  codeForm = new FormGroup({\n    code: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(6),\n    ]),\n  });\n  backupCodeForm = new FormGroup({\n    code: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(16),\n      Validators.maxLength(16),\n    ]),\n  });\n\n  constructor(private service: MultiFactorAuthService) {}\n\n  get code() {\n    return this.codeForm.get(\"code\");\n  }\n\n  ngOnInit() {\n    combineLatest([this.service.totp$, this.step$])\n      .pipe(\n        filter(([totp, step]) => step === 3 && totp !== null),\n        delay(0),\n        tap(([totp, _]) => this.generateQRCode(totp!.provisioning_uri))\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.service.clearState();\n  }\n\n  incrementStep() {\n    this.service.incrementTOTPStage();\n  }\n\n  decrementStep() {\n    this.service.decrementTOTPStage();\n  }\n\n  enableTOTP() {\n    if (this.codeForm.valid) {\n      const code = this.code;\n      if (code) {\n        this.service.enableTOTP(code.value).pipe().subscribe();\n      }\n    }\n  }\n\n  deleteKey(keyId: number) {\n    this.service.deleteKey(keyId).subscribe();\n  }\n\n  getStepIsDone(step: number, currentStep: number) {\n    if (currentStep < step) {\n      return \"false\";\n    } else if (currentStep === step) {\n      return \"doing\";\n    }\n    return \"true\";\n  }\n\n  generateQRCode(value: string) {\n    if (this.canvas) {\n      QRCode.toCanvas(this.canvas.nativeElement, value);\n    }\n  }\n\n  copyCodes() {\n    this.service.backupCodes$.pipe(take(1)).subscribe((codes) => {\n      if (codes) {\n        navigator.clipboard.writeText(codes.join(\"\\n\"));\n        this.service.setCopiedCodes();\n      }\n    });\n  }\n\n  downloadCodes() {\n    this.service.backupCodes$.pipe(take(1)).subscribe((codes) => {\n      if (codes) {\n        this.download(\"glitchtip-backup.txt\", codes.join(\"\\n\"));\n        this.service.setCopiedCodes();\n      }\n    });\n  }\n\n  verifyBackupCode() {\n    const code = this.backupCodeForm.get(\"code\")?.value;\n    if (this.backupCodeForm.valid && code) {\n      this.service.verifyBackupCode(code).subscribe();\n    }\n  }\n\n  private download(filename: string, text: string) {\n    var element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n    );\n    element.setAttribute(\"download\", filename);\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card {\n    margin-top: 20px;\n    margin-bottom: 20px;\n\n    mat-card-content {\n        padding-top: 16px;\n    }\n}\n\nmat-form-field {\n    margin-right: 10px;\n}\n\n::ng-deep .mat-body-strong {\n    margin-bottom: 0px;\n}\n\n::ng-deep .mat-flat-button {\n    margin-top: 5px;\n    margin-bottom: 10px;\n    margin-right: 10px;\n}\n\n#canvas {\n    margin-left: -13px;\n    margin-top: -13px;\n}\n\n.totp-string {\n    word-break: break-word;\n}\n",
                    "styleUrl": "./totp.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MultiFactorAuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MultiFactorAuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "code": {
                    "name": "code",
                    "getSignature": {
                        "name": "code",
                        "type": "",
                        "returnType": "",
                        "line": 45
                    }
                }
            },
            "templateData": "<mat-card>\n  <mat-card-title>TOTP authentication</mat-card-title>\n  <mat-card-content>\n    <ng-container *ngIf=\"TOTPKey$ | async as TOTPKey; else TOTPDisabled\">\n      <p>TOTP authentication is currently enabled on your account.</p>\n      <button mat-flat-button color=\"primary\" (click)=\"deleteKey(TOTPKey.id)\">\n        Disable two-factor authentication\n      </button>\n    </ng-container>\n    <ng-template #TOTPDisabled>\n      <p class=\"mat-h3\">\n        Make your account more secure by requiring a time-based one time\n        password (TOTP) code after you log in.\n      </p>\n      <p class=\"mat-body-1\">\n        If you ever lose access to your codes, you can recover your account with\n        your <strong>backup code</strong>.\n      </p>\n\n      <div class=\"totp-process\" *ngIf=\"step$ | async as step\">\n        <div *ngIf=\"step === 1\">\n          <button mat-flat-button color=\"primary\" (click)=\"incrementStep()\">\n            Get Started\n          </button>\n        </div>\n        <gt-to-do-item\n          [isDone]=\"getStepIsDone(2, step)\"\n          title=\"Download authenticator app\"\n        ></gt-to-do-item>\n        <div>\n          <div *ngIf=\"step === 2\">\n            <div class=\"mat-h3\">\n              Download\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://authy.com/download/\"\n                >Authy</a\n              >,\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\"\n                >Google Authenticator</a\n              >,\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://play.google.com/store/apps/details?id=me.jmh.authenticatorpro\"\n                >Authenticator Pro</a\n              >, or your favorite TOTP app on your mobile device.\n            </div>\n            <div class=\"mat-h4\">\n              Once you have the app running, proceed to the next step.\n            </div>\n            <div>\n              <button mat-flat-button color=\"primary\" (click)=\"incrementStep()\">\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n        <gt-to-do-item\n          [isDone]=\"getStepIsDone(3, step)\"\n          title=\"Save backup codes\"\n        ></gt-to-do-item>\n        <div *ngIf=\"step === 3\">\n          <p class=\"mat-h3\">\n            Download or copy a list of backup codes. If you ever lose your\n            phone, each of these recovery codes can be used one time to regain\n            access to your account. Print it out or save it someplace safe.\n          </p>\n          <button mat-flat-button color=\"primary\" (click)=\"downloadCodes()\">\n            Download\n          </button>\n          <button mat-flat-button color=\"primary\" (click)=\"copyCodes()\">\n            Copy\n          </button>\n          <p class=\"mat-body-strong\">\n            Enter one of the backup codes to confirm that you have saved them:\n          </p>\n          <form [formGroup]=\"backupCodeForm\">\n            <mat-form-field>\n              <mat-label>Backup code</mat-label>\n              <input matInput formControlName=\"code\" />\n              <mat-error *ngIf=\"code?.invalid\">\n                <span *ngIf=\"code?.errors?.required\">Required</span>\n                <span *ngIf=\"code?.errors?.minlength || code?.errors?.maxlength\">\n                  Code must be 16 characters\n                </span>\n                <span *ngFor=\"let serverError of code?.errors?.serverError\">{{\n                  serverError\n                }}</span>\n              </mat-error>\n            </mat-form-field>\n            <button\n              mat-flat-button\n              color=\"primary\"\n              [disabled]=\"!(copiedCodes$ | async)\"\n              (click)=\"verifyBackupCode()\"\n            >\n              Next\n            </button>\n          </form>\n        </div>\n        <gt-to-do-item\n          [isDone]=\"getStepIsDone(4, step)\"\n          title=\"Activate TOTP\"\n        ></gt-to-do-item>\n        <div *ngIf=\"step === 4\">\n          <div>\n            <p class=\"mat-h3\">\n              Scan the QR Code in your authenticator app or enter the code\n              below:\n            </p>\n          </div>\n          <canvas #canvas id=\"canvas\"></canvas>\n          <div *ngIf=\"TOTP$ | async as TOTP\">\n            <span class=\"totp-string\">{{ TOTP.secret_key }}</span>\n          </div>\n          <form [formGroup]=\"codeForm\" (ngSubmit)=\"enableTOTP()\">\n            <div>\n              <p class=\"mat-body-strong\">\n                Enter a six-digit password generated by your authenticator\n                app and submit this form to enable TOTP authentication:\n              </p>\n            </div>\n            <gt-form-error [error]=\"error$ | async\"></gt-form-error>\n            <mat-form-field>\n              <mat-label>6-digit Code</mat-label>\n              <input\n                matInput\n                formControlName=\"code\"\n                pattern=\"\\d*\"\n                maxlength=\"6\"\n              />\n              <mat-error *ngIf=\"code?.invalid\">\n                <span *ngIf=\"code?.errors?.required\">Required</span>\n                <span *ngIf=\"code?.errors?.minlength || code?.errors?.maxlength\"\n                  >Code must be 6 digits</span\n                >\n              </mat-error>\n            </mat-form-field>\n            <div>\n              <button id=\"submit\" mat-flat-button color=\"primary\">\n                Enable TOTP authentication\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </ng-template>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "TransactionDetailComponent",
            "id": "component-TransactionDetailComponent-29c22d2e02bd918599c04507336d076f",
            "file": "src/app/performance/transaction-detail/transaction-detail.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./transaction-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "sub",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "transaction$",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TransactionWithDelta> | null",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, Observable, Subscription } from \"rxjs\";\nimport { distinctUntilChanged, filter, map, mergeMap } from \"rxjs/operators\";\nimport { OrganizationsService } from \"src/app/api/organizations/organizations.service\";\nimport { TransactionWithDelta } from \"src/app/api/transactions/transactions.interfaces\";\nimport { TransactionsService } from \"src/app/api/transactions/transactions.service\";\n\n@Component({\n  templateUrl: \"./transaction-detail.component.html\",\n  styleUrls: [\"./transaction-detail.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionDetailComponent implements OnInit, OnDestroy {\n  sub: Subscription | null = null;\n  transaction$: Observable<TransactionWithDelta> | null = null;\n  constructor(\n    private transactionsService: TransactionsService,\n    public route: ActivatedRoute,\n    private organizationsService: OrganizationsService\n  ) {}\n\n  ngOnInit() {\n    this.transaction$ = combineLatest([\n      this.organizationsService.activeOrganizationSlug$,\n      this.route.paramMap,\n    ]).pipe(\n      map(([slug, params]) => [slug, params.get(\"event-id\")]),\n      filter(([slug, eventId]) => !!slug && !!eventId),\n      distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n      mergeMap(([slug, eventId]) =>\n        this.transactionsService.retrieve(slug!, eventId!).pipe(\n          map((resp) => {\n            return {\n              ...resp,\n              delta:\n                new Date(resp.timestamp).getTime() -\n                new Date(resp.startTimestamp).getTime(),\n            };\n          })\n        )\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n    this.transaction$ = null;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-card-header {\n  &::ng-deep .mat-card-header-text {\n    margin-left: 0;\n  }\n}\n\nmat-card-content {\n  margin-top: 24px;\n}\n",
                    "styleUrl": "./transaction-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transactionsService",
                        "type": "TransactionsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "transactionsService",
                        "type": "TransactionsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationsService",
                        "type": "OrganizationsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"l-body\">\n  <header class=\"page-header\">\n    <h1 class=\"mat-display-1\">Transaction Detail</h1>\n    <a\n      mat-stroked-button\n      class=\"project-issues-link\"\n      [routerLink]=\"['..']\"\n      [relativeTo]=\"route\"\n      queryParamsHandling=\"merge\"\n    >\n      <mat-icon>keyboard_arrow_left</mat-icon>\n      Back to Performance\n    </a>\n  </header>\n  <mat-card *ngIf=\"transaction$ | async as transaction\">\n    <mat-card-header class=\"flex-space-between\">\n      <mat-card-title>{{ transaction.transaction }}</mat-card-title>\n      <mat-card-subtitle>{{\n        transaction.eventId\n      }}</mat-card-subtitle></mat-card-header\n    >\n    <mat-divider></mat-divider>\n    <mat-card-content>\n      <gt-entry-data\n        key=\"Timestamp\"\n        [value]=\"transaction.timestamp | date: 'full'\"\n      ></gt-entry-data>\n      <gt-entry-data\n        key=\"Start Timestamp\"\n        [value]=\"transaction.startTimestamp | date: 'full'\"\n      ></gt-entry-data>\n      <gt-entry-data\n        key=\"Time\"\n        [value]=\"transaction.delta + 'ms'\"\n      ></gt-entry-data>\n    </mat-card-content>\n  </mat-card>\n</section>\n"
        },
        {
            "name": "UserReportsIssueComponent",
            "id": "component-UserReportsIssueComponent-be1de393784c42b0946f8839bda151d0",
            "file": "src/app/issues/user-reports-issue/user-reports-issue.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gt-user-reports-issue",
            "styleUrls": [
                "./user-reports-issue.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-reports-issue.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorReports$",
                    "defaultValue": "this.userReportService.errors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "issueId$",
                    "defaultValue": "this.issueService.issue$.pipe(map((issue) => issue?.id))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "reports$",
                    "defaultValue": "this.userReportService.reports$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "routerEventSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "paginator$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Paginator>",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "inheritance": {
                        "file": "PaginationBaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, tap } from \"rxjs/operators\";\nimport { Subscription, combineLatest } from \"rxjs\";\nimport { IssueDetailService } from \"../issue-detail/issue-detail.service\";\nimport {\n  UserReportsState,\n  UserReportsService,\n} from \"src/app/api/user-reports/user-reports.service\";\nimport { PaginationBaseComponent } from \"src/app/shared/stateful-service/pagination-stateful-service\";\n\n@Component({\n  selector: \"gt-user-reports-issue\",\n  templateUrl: \"./user-reports-issue.component.html\",\n  styleUrls: [\"./user-reports-issue.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserReportsIssueComponent\n  extends PaginationBaseComponent<UserReportsState, UserReportsService>\n  implements OnDestroy {\n  issueId$ = this.issueService.issue$.pipe(map((issue) => issue?.id));\n  reports$ = this.userReportService.reports$;\n  errorReports$ = this.userReportService.errors$;\n\n  routerEventSubscription: Subscription;\n\n  constructor(\n    private issueService: IssueDetailService,\n    private userReportService: UserReportsService,\n    private route: ActivatedRoute\n  ) {\n    super(userReportService);\n    this.routerEventSubscription = combineLatest([\n      this.route.queryParams,\n      this.issueId$,\n    ])\n      .pipe(\n        map(([queryParams, issueId]) => {\n          const cursor: string | undefined = queryParams.cursor;\n          return { issueId, cursor };\n        }),\n        tap(({ issueId, cursor }) => {\n          if (issueId) {\n            this.userReportService.getReportsForIssue(issueId, cursor);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.routerEventSubscription.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".reports {\n  div {\n    padding: 8px 0;\n\n    &:first-of-type {\n      padding-top: 0;\n    }\n\n    &:last-of-type ~ mat-divider {\n      display: none;\n    }\n  }\n}\n\n.name {\n  margin-bottom: 0;\n}\n\n.date {\n  font-size: 0.8em;\n  margin: 0 0 1em;\n}\n\n.spinner-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0 40px;\n}\n\n.nav-arrows {\n  display: flex;\n  justify-content: flex-end;\n}\n",
                    "styleUrl": "./user-reports-issue.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userReportService",
                        "type": "UserReportsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "issueService",
                        "type": "IssueDetailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userReportService",
                        "type": "UserReportsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "PaginationBaseComponent",
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<p class=\"mat-body-1\" *ngIf=\"errorReports$ | async\">\n  {{ errorReports$ | async }}\n</p>\n\n<mat-card *ngIf=\"(reports$ | async)?.length === 0\" class=\"mat-elevation-z0\">\n  <mat-card-content>\n    <p>No user reports have been submitted.</p>\n    <p>\n      To enable user reports, take a look at `showReportDialog` in the JS SDK.\n    </p>\n  </mat-card-content>\n</mat-card>\n\n<div class=\"reports\">\n  <ng-container *ngFor=\"let report of reports$ | async\">\n    <div class=\"report\">\n      <p class=\"name\">{{ report.name }} ({{ report.email }})</p>\n      <p class=\"date\">{{ report.dateCreated | date: \"medium\" }}</p>\n      <p>{{ report.comments }}</p>\n    </div>\n    <mat-divider></mat-divider>\n  </ng-container>\n</div>\n\n<ng-container *ngIf=\"paginator$ | async as paginator\">\n  <div class=\"nav-arrows\" *ngIf=\"paginator.loading === false\">\n    <a\n      [routerLink]=\"[]\"\n      [queryParams]=\"paginator.previousPageParams || {}\"\n      queryParamsHandling=\"merge\"\n      mat-button\n      [disabled]=\"paginator.hasPreviousPage === false\"\n    >\n      <mat-icon>keyboard_arrow_left</mat-icon>\n    </a>\n    <a\n      [routerLink]=\"[]\"\n      [queryParams]=\"paginator.nextPageParams || {}\"\n      queryParamsHandling=\"merge\"\n      mat-button\n      [disabled]=\"paginator.hasNextPage === false\"\n    >\n      <mat-icon>keyboard_arrow_right</mat-icon>\n    </a>\n  </div>\n  <div *ngIf=\"paginator.loading\" class=\"spinner-container\">\n    <mat-progress-spinner\n      [diameter]=\"33\"\n      color=\"primary\"\n      mode=\"indeterminate\"\n    ></mat-progress-spinner>\n  </div>\n\n</ng-container>"
        }
    ],
    "modules": [
        {
            "name": "AcceptModule",
            "id": "module-AcceptModule-0e4deec8b69c899fffef851592c9d543",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/accept/accept.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AcceptInviteComponent } from \"./accept-invite/accept-invite.component\";\nimport { AcceptRoutingModule } from \"./accept-routing.module\";\nimport { MaterialModule } from \"../shared/material.module\";\n\n@NgModule({\n  declarations: [AcceptInviteComponent],\n  imports: [CommonModule, AcceptRoutingModule, MaterialModule],\n})\nexport class AcceptModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AcceptInviteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AcceptRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AcceptRoutingModule",
            "id": "module-AcceptRoutingModule-07eaa85e77baafc5fb176847fc3caf84",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/accept/accept-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AcceptInviteComponent } from \"./accept-invite/accept-invite.component\";\n\nconst routes: Routes = [{ path: \"\", component: AcceptInviteComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AcceptRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-793e9037db98619afb80e99b1e4c2e3f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, ErrorHandler } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport {\n  HttpClientModule,\n  HttpClientXsrfModule,\n  HTTP_INTERCEPTORS,\n} from \"@angular/common/http\";\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from \"@angular/material/snack-bar\";\nimport * as Sentry from \"@sentry/angular\";\n\nimport { AppComponent } from \"./app.component\";\nimport { TokenInterceptor } from \"./api/auth/token.interceptor\";\n\n// Modules\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AuthModule } from \"./api/auth/auth.module\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { MainNavModule } from \"./main-nav/main-nav.module\";\nimport { RateLimitBannerComponent } from \"./rate-limit-banner/rate-limit-banner.component\";\n\nlet snackBarDuration = 4000;\nif ((window as any).Cypress) {\n  // Speed up cypress tests\n  snackBarDuration = 100;\n}\n\n@NgModule({\n  declarations: [AppComponent, RateLimitBannerComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: \"csrftoken\",\n      headerName: \"X-CSRFTOKEN\",\n    }),\n    MainNavModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: snackBarDuration },\n    },\n    { provide: ErrorHandler, useValue: Sentry.createErrorHandler() },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "TokenInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "RateLimitBannerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AuthModule"
                        },
                        {
                            "name": "MainNavModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-1384868c6a466a61742eef5502633b3e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { IsLoggedInGuard } from \"./guards/is-logged-in.guard\";\nimport { AlreadyLoggedInGuard } from \"./guards/already-logged-in.guard\";\n\nexport const routes: Routes = [\n  {\n    path: \"\",\n    loadChildren: () => \"import(\\\"./home/home.module\\\").then((m) => m.HomeModule)\",\n    pathMatch: \"full\",\n    canActivate: [IsLoggedInGuard],\n  },\n  {\n    path: \"organizations/new\",\n    loadChildren: () =>\n      \"import(\\\"./new-organization/new-organization.module\\\").then(\\\n        (m) => m.NewOrganizationModule\\\n      )\",\n    canActivate: [IsLoggedInGuard],\n    data: {\n      title: \"Create New Organization\",\n    },\n  },\n  {\n    path: \"login\",\n    loadChildren: () =>\n      \"import(\\\"./login/login.module\\\").then((m) => m.LoginModule)\",\n    canActivate: [AlreadyLoggedInGuard],\n    data: {\n      title: \"Log In\",\n    },\n  },\n  {\n    path: \"profile\",\n    loadChildren: () =>\n      \"import(\\\"./profile/profile.module\\\").then((m) => m.ProfileModule)\",\n    canActivate: [IsLoggedInGuard],\n    data: {\n      title: \"Profile\",\n    },\n  },\n  {\n    path: \"register\",\n    loadChildren: () =>\n      \"import(\\\"./register/register.module\\\").then((m) => m.RegisterModule)\",\n    canActivate: [AlreadyLoggedInGuard],\n    data: {\n      title: \"Register\",\n    },\n  },\n  {\n    path: \"reset-password\",\n    loadChildren: () =>\n      \"import(\\\"./reset-password/reset-password.module\\\").then(\\\n        (m) => m.ResetPasswordModule\\\n      )\",\n    data: {\n      title: \"Reset Password\",\n    },\n  },\n  {\n    path: \"auth\",\n    loadChildren: () => \"import(\\\"./auth/auth.module\\\").then((m) => m.AuthModule)\",\n  },\n  {\n    path: \"accept/:memberId/:token\",\n    loadChildren: () =>\n      \"import(\\\"./accept/accept.module\\\").then((m) => m.AcceptModule)\",\n  },\n  // Sentry OSS compat redirect\n  {\n    path: \":org-slug/:project-slug/issues/:id\",\n    redirectTo: \":org-slug/issues/:id\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \":org-slug\",\n    canActivate: [IsLoggedInGuard],\n    children: [\n      {\n        path: \"issues\",\n        loadChildren: () =>\n          \"import(\\\"./issues/issues.module\\\").then((m) => m.IssuesModule)\",\n        data: {\n          title: \"Issues\",\n        },\n      },\n      {\n        path: \"projects\",\n        loadChildren: () =>\n          \"import(\\\"./projects/projects.module\\\").then((m) => m.ProjectsModule)\",\n        data: {\n          title: \"Projects\",\n        },\n      },\n      {\n        path: \"settings\",\n        loadChildren: () =>\n          \"import(\\\"./settings/settings.module\\\").then((m) => m.SettingsModule)\",\n        data: {\n          title: \"Settings\",\n        },\n      },\n      {\n        path: \"performance\",\n        loadChildren: () =>\n          \"import(\\\"./performance/performance.module\\\").then(\\\n            (m) => m.PerformanceModule\\\n          )\",\n        data: {\n          title: \"Performance\",\n        },\n      },\n    ],\n  },\n  {\n    path: \"**\",\n    redirectTo: \"\",\n    pathMatch: \"full\",\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: \"reload\",\n      scrollPositionRestoration: \"enabled\",\n      relativeLinkResolution: \"corrected\",\n      paramsInheritanceStrategy: \"always\",\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-21ab03c9a5c55fd0600b0fc2a0e8a748",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { AuthComponent } from \"./auth.component\";\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [CommonModule, AuthRoutingModule],\n})\nexport class AuthModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-fe637307c5975ba084dea9c90b987cce-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/api/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, MatSnackBarModule]\n})\nexport class AuthModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-cf863b44d8feeffc42777ba75e7846ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AuthComponent } from \"./auth.component\";\nconst routes: Routes = [{ path: \":provider\", component: AuthComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-420155314c7fcc73aae40bf01c0cad2a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { HomeRoutingModule } from \"./home-routing.module\";\nimport { HomeComponent } from \"./home.component\";\nimport { SharedModule } from \"../shared/shared.module\";\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, HomeRoutingModule, SharedModule],\n})\nexport class HomeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRoutingModule",
            "id": "module-HomeRoutingModule-29f96bc91814c8b8ed2bb9946daf9936",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomeComponent } from \"./home.component\";\n\nconst routes: Routes = [{ path: \"\", component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IssuesModule",
            "id": "module-IssuesModule-f67a3de4bedb0ff38404196eb72d9ddd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/issues/issues.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatBadgeModule } from \"@angular/material/badge\";\nimport { MarkdownModule } from \"ngx-markdown\";\n\nimport { IssuesRoutingModule } from \"./issues-routing.module\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { LazyMarkdownModule } from \"../lazy-markdown/lazy-markdown.module\";\n\n// Components\nimport { IssuesPageComponent } from \"./issues-page/issues-page.component\";\nimport { IssueDetailComponent } from \"./issue-detail/issue-detail.component\";\nimport { EventDetailComponent } from \"./issue-detail/event-detail/event-detail.component\";\nimport { EntryRequestComponent } from \"./issue-detail/event-detail/entry-request/entry-request.component\";\nimport { HeaderNavComponent } from \"./header-nav/header-nav.component\";\nimport { EntryCSPComponent } from \"./issue-detail/event-detail/entry-csp/entry-csp.component\";\nimport { EntryMessageComponent } from \"./issue-detail/event-detail/entry-message/entry-message.component\";\nimport { EntryExceptionComponent } from \"./issue-detail/event-detail/entry-exception/entry-exception.component\";\nimport { IssueDetailTitleComponent } from \"./issue-detail/issue-detail-title/issue-detail-title.component\";\nimport { FrameTitleComponent } from \"./issue-detail/event-detail/entry-exception/frame-title/frame-title.component\";\nimport { FrameExpandedComponent } from \"./issue-detail/event-detail/entry-exception/frame-expanded/frame-expanded.component\";\nimport { RawStacktraceComponent } from \"./issue-detail/event-detail/entry-exception/raw-stacktrace/raw-stacktrace.component\";\nimport { UserReportsIssueComponent } from \"./user-reports-issue/user-reports-issue.component\";\nimport { ContextsComponent } from \"./issue-detail/event-detail/context/contexts.component\";\nimport { IssueZeroStatesComponent } from \"./issue-zero-states/issue-zero-states.component\";\nimport { EntryBreadcrumbsComponent } from \"./issue-detail/event-detail/entry-breadcrumbs/entry-breadcrumbs.component\";\nimport { IssueDetailTagsComponent } from \"./issue-detail/issue-detail-tags/issue-detail-tags.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IssuesRoutingModule,\n    SharedModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MarkdownModule,\n    LazyMarkdownModule,\n  ],\n  declarations: [\n    IssuesPageComponent,\n    IssueDetailComponent,\n    EventDetailComponent,\n    EntryRequestComponent,\n    EntryCSPComponent,\n    EntryMessageComponent,\n    HeaderNavComponent,\n    EntryExceptionComponent,\n    IssueDetailTitleComponent,\n    FrameTitleComponent,\n    FrameExpandedComponent,\n    RawStacktraceComponent,\n    UserReportsIssueComponent,\n    ContextsComponent,\n    IssueZeroStatesComponent,\n    EntryBreadcrumbsComponent,\n    IssueDetailTagsComponent,\n  ],\n})\nexport class IssuesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContextsComponent"
                        },
                        {
                            "name": "EntryBreadcrumbsComponent"
                        },
                        {
                            "name": "EntryCSPComponent"
                        },
                        {
                            "name": "EntryExceptionComponent"
                        },
                        {
                            "name": "EntryMessageComponent"
                        },
                        {
                            "name": "EntryRequestComponent"
                        },
                        {
                            "name": "EventDetailComponent"
                        },
                        {
                            "name": "FrameExpandedComponent"
                        },
                        {
                            "name": "FrameTitleComponent"
                        },
                        {
                            "name": "HeaderNavComponent"
                        },
                        {
                            "name": "IssueDetailComponent"
                        },
                        {
                            "name": "IssueDetailTagsComponent"
                        },
                        {
                            "name": "IssueDetailTitleComponent"
                        },
                        {
                            "name": "IssueZeroStatesComponent"
                        },
                        {
                            "name": "IssuesPageComponent"
                        },
                        {
                            "name": "RawStacktraceComponent"
                        },
                        {
                            "name": "UserReportsIssueComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IssuesRoutingModule"
                        },
                        {
                            "name": "LazyMarkdownModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IssuesRoutingModule",
            "id": "module-IssuesRoutingModule-6fe9c90b64af98e2192d3d5cbb347f3c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/issues/issues-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { IssuesPageComponent } from \"./issues-page/issues-page.component\";\nimport { IssueDetailComponent } from \"./issue-detail/issue-detail.component\";\nimport { EventDetailComponent } from \"./issue-detail/event-detail/event-detail.component\";\nimport { UserReportsIssueComponent } from \"./user-reports-issue/user-reports-issue.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: IssuesPageComponent },\n  {\n    path: \":issue-id\",\n    component: IssueDetailComponent,\n    children: [\n      { path: \"\", component: EventDetailComponent },\n      { path: \"user-reports\", component: UserReportsIssueComponent },\n      { path: \"events/:event-id\", component: EventDetailComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IssuesRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LazyMarkdownModule",
            "id": "module-LazyMarkdownModule-dd318d144a86b382a1fa3b9af1350d7c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/lazy-markdown/lazy-markdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MarkdownModule } from \"ngx-markdown\";\nimport { LazyMarkdownComponent } from \"./lazy-markdown.component\";\n\n@NgModule({\n  declarations: [LazyMarkdownComponent],\n  imports: [CommonModule, MarkdownModule.forRoot({})],\n  exports: [LazyMarkdownComponent],\n})\nexport class LazyMarkdownModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LazyMarkdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LazyMarkdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-42b0f84af16edaa6478004e82014e21e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatPseudoCheckboxModule } from \"@angular/material/core\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { LoginComponent } from \"./login.component\";\nimport { LoginRoutingModule } from \"./login-routing.module\";\nimport { AuthModule } from \"../api/auth/auth.module\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { LoginTotpComponent } from \"./login-totp/login-totp.component\";\n\n@NgModule({\n  declarations: [LoginComponent, LoginTotpComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    AuthModule,\n    MatInputModule,\n    MatPseudoCheckboxModule,\n    SharedModule,\n  ],\n})\nexport class LoginModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "LoginTotpComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthModule"
                        },
                        {
                            "name": "LoginRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginRoutingModule",
            "id": "module-LoginRoutingModule-c39c79c112ea469ea9dd452a5f5590fa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/login/login-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from \"./login.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: LoginComponent },\n  { path: \":provider\", component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MainNavModule",
            "id": "module-MainNavModule-3e0c0bca4b62cc301adcf2a065a6fb87",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/main-nav/main-nav.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { MainNavComponent } from \"./main-nav/main-nav.component\";\nimport { MaterialModule } from \"../shared/material.module\";\n\n@NgModule({\n  declarations: [MainNavComponent],\n  imports: [CommonModule, RouterModule, MaterialModule],\n  exports: [MainNavComponent]\n})\nexport class MainNavModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MainNavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MainNavComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-d2b3ecf1c63108d0f301d3f59e6bfccd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/material.module.ts",
            "methods": [],
            "sourceCode": "/**\n * Convienence module for Material modules used everywhere\n * Before adding a new module, consider if you can add it just to one or two lazy\n * loaded modules instead\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { ClipboardModule } from \"@angular/cdk/clipboard\";\nimport { LessAnnoyingErrorStateMatcher } from \"./less-annoying-error-state-matcher\";\n\nexport const COMPONENTS = [\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n  ClipboardModule,\n];\n\n@NgModule({\n  imports: COMPONENTS,\n  exports: COMPONENTS,\n  providers: [\n    { provide: ErrorStateMatcher, useClass: LessAnnoyingErrorStateMatcher },\n  ],\n})\nexport class MaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewOrganizationModule",
            "id": "module-NewOrganizationModule-bb12726c79cf06815b24f14f43cfb786",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/new-organization/new-organization.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MaterialModule } from \"../shared/material.module\";\n\nimport { NewOrganizationRoutingModule } from \"./new-organization-routing.module\";\nimport { NewOrganizationsComponent } from \"./new-organization.component\";\n\n@NgModule({\n  declarations: [NewOrganizationsComponent],\n  imports: [\n    CommonModule,\n    NewOrganizationRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ]\n})\nexport class NewOrganizationModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewOrganizationsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "NewOrganizationRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewOrganizationRoutingModule",
            "id": "module-NewOrganizationRoutingModule-bc751461ea90242d4395d36126c82014",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/new-organization/new-organization-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { NewOrganizationsComponent } from \"./new-organization.component\";\n\nconst routes: Routes = [{ path: \"\", component: NewOrganizationsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewOrganizationRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PerformanceModule",
            "id": "module-PerformanceModule-2c4fa3cc0f9ff6d9218e55c79f99e6f1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/performance/performance.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTableModule } from \"@angular/material/table\";\n\nimport { PerformanceRoutingModule } from \"./performance-routing.module\";\nimport { PerformanceComponent } from \"./performance.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { TransactionDetailComponent } from \"./transaction-detail/transaction-detail.component\";\n\n@NgModule({\n  declarations: [PerformanceComponent, TransactionDetailComponent],\n  imports: [\n    SharedModule,\n    CommonModule,\n    PerformanceRoutingModule,\n    MatTableModule,\n  ],\n})\nexport class PerformanceModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PerformanceComponent"
                        },
                        {
                            "name": "TransactionDetailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PerformanceRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PerformanceRoutingModule",
            "id": "module-PerformanceRoutingModule-4ec67fdc7b0b3a07cb207f917f2ee6a0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/performance/performance-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { PerformanceComponent } from \"./performance.component\";\nimport { TransactionDetailComponent } from \"./transaction-detail/transaction-detail.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: PerformanceComponent,\n  },\n  {\n    path: \":event-id\",\n    component: TransactionDetailComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PerformanceRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProfileModule",
            "id": "module-ProfileModule-3a27dd158d9a07654423b919d2c94d1a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/profile/profile.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { ProfileRoutingModule } from \"./profile-routing.module\";\nimport { ProfileComponent } from \"./profile.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\nimport { ManageEmailsComponent } from \"./manage-emails/manage-emails.component\";\nimport { ConfirmEmailComponent } from \"./confirm-email/confirm-email.component\";\nimport { NotificationsComponent } from \"./notifications/notifications.component\";\nimport { AuthTokensComponent } from \"./auth-tokens/auth-tokens.component\";\nimport { NewTokenComponent } from \"./auth-tokens/new-token/new-token.component\";\nimport { SocialAuthComponent } from \"./social-auth/social-auth.component\";\nimport { AccountComponent } from \"./account/account.component\";\nimport { MultiFactorAuthComponent } from \"./multi-factor-auth/multi-factor-auth.component\";\nimport { TOTPComponent } from \"./multi-factor-auth/totp/totp.component\";\nimport { Fido2Component } from \"./multi-factor-auth/fido2/fido2.component\";\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    ChangePasswordComponent,\n    ManageEmailsComponent,\n    ConfirmEmailComponent,\n    NotificationsComponent,\n    AuthTokensComponent,\n    NewTokenComponent,\n    SocialAuthComponent,\n    AccountComponent,\n    MultiFactorAuthComponent,\n    TOTPComponent,\n    Fido2Component,\n  ],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class ProfileModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "AuthTokensComponent"
                        },
                        {
                            "name": "ChangePasswordComponent"
                        },
                        {
                            "name": "ConfirmEmailComponent"
                        },
                        {
                            "name": "Fido2Component"
                        },
                        {
                            "name": "ManageEmailsComponent"
                        },
                        {
                            "name": "MultiFactorAuthComponent"
                        },
                        {
                            "name": "NewTokenComponent"
                        },
                        {
                            "name": "NotificationsComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "SocialAuthComponent"
                        },
                        {
                            "name": "TOTPComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProfileRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProfileRoutingModule",
            "id": "module-ProfileRoutingModule-499fff5eb2a2681a2c8dad9dc7cbf1cc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/profile/profile-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ProfileComponent } from \"./profile.component\";\nimport { ConfirmEmailComponent } from \"./confirm-email/confirm-email.component\";\nimport { AuthTokensComponent } from \"./auth-tokens/auth-tokens.component\";\nimport { NewTokenComponent } from \"./auth-tokens/new-token/new-token.component\";\nimport { NotificationsComponent } from \"./notifications/notifications.component\";\nimport { AccountComponent } from \"./account/account.component\";\nimport { MultiFactorAuthComponent } from \"./multi-factor-auth/multi-factor-auth.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ProfileComponent,\n    children: [\n      { path: \"auth-tokens\", component: AuthTokensComponent },\n      { path: \"auth-tokens/new\", component: NewTokenComponent },\n\n      { path: \"\", component: AccountComponent },\n      { path: \"notifications\", component: NotificationsComponent },\n      { path: \"multi-factor-auth\", component: MultiFactorAuthComponent },\n    ],\n  },\n  {\n    path: \"confirm-email/:key\",\n    component: ConfirmEmailComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProjectsModule",
            "id": "module-ProjectsModule-f49046810c787c8ba113c782e8d87367",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/projects/projects.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ProjectsRoutingModule } from \"./projects-routing.module\";\nimport { ProjectsComponent } from \"./projects.component\";\nimport { SharedModule } from \"../shared/shared.module\";\n\n@NgModule({\n  declarations: [ProjectsComponent],\n  imports: [CommonModule, ProjectsRoutingModule, SharedModule],\n})\nexport class ProjectsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProjectsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProjectsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProjectsRoutingModule",
            "id": "module-ProjectsRoutingModule-8f5b5ab6f6672a184cb2a01232ce7827",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/projects/projects-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ProjectsComponent } from \"./projects.component\";\n\nconst routes: Routes = [{ path: \"\", component: ProjectsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProjectsRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterModule",
            "id": "module-RegisterModule-8f0b5400af5a5310adf44156158b27b1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/register/register.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RegisterComponent } from \"./register.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { RegisterRoutingModule } from \"./register-routing.module\";\nimport { SharedModule } from \"../shared/shared.module\";\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RegisterRoutingModule,\n    SharedModule,\n  ],\n})\nexport class RegisterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RegisterRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterRoutingModule",
            "id": "module-RegisterRoutingModule-8c4d7d4c110bfff017a40dad8c864430",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/register/register-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { RegisterComponent } from \"./register.component\";\n\nconst routes: Routes = [{ path: \"\", component: RegisterComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ResetPasswordModule",
            "id": "module-ResetPasswordModule-d88d454fa57061938a5ff786c2de8784",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/reset-password/reset-password.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { ResetPasswordRoutingModule } from \"./reset-password-routing.module\";\nimport { SetNewPasswordComponent } from \"./set-new-password/set-new-password.component\";\n\n@NgModule({\n  declarations: [ResetPasswordComponent, SetNewPasswordComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ResetPasswordRoutingModule,\n    SharedModule,\n  ],\n})\nexport class ResetPasswordModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ResetPasswordComponent"
                        },
                        {
                            "name": "SetNewPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ResetPasswordRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ResetPasswordRoutingModule",
            "id": "module-ResetPasswordRoutingModule-9e508c632ea453e907ba35641be0ddc3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/reset-password/reset-password-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { SetNewPasswordComponent } from \"./set-new-password/set-new-password.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ResetPasswordComponent,\n  },\n  {\n    path: \"set-new-password/:uidb64/:token\",\n    component: SetNewPasswordComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SettingsModule",
            "id": "module-SettingsModule-5084a3000b1d6278902c028e0b09eb34",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/settings/settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\n\n// Material\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatRadioModule } from \"@angular/material/radio\";\n\n// Components\nimport { ProjectsComponent } from \"./projects/projects.component\";\nimport { NewProjectComponent } from \"./projects/new-project/new-project.component\";\nimport { ProjectDetailComponent } from \"./projects/project-detail/project-detail.component\";\nimport { OrganizationComponent } from \"./organization/organization.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { TeamsComponent } from \"./teams/teams.component\";\nimport { NewTeamComponent } from \"./teams/new-team/new-team.component\";\nimport { TeamProjectsComponent } from \"./teams/team-projects/team-projects.component\";\nimport { TeamDetailsComponent } from \"./teams/team-details/team-details.component\";\nimport { TeamMembersComponent } from \"./teams/team-members/team-members.component\";\nimport { MembersComponent } from \"./members/members.component\";\nimport { MemberDetailComponent } from \"./members/member-detail/member-detail.component\";\nimport { NewMemberComponent } from \"./members/new-member/new-member.component\";\nimport { TeamSettingsComponent } from \"./teams/team-settings/team-settings.component\";\nimport { ProjectAlertsComponent } from \"./projects/project-detail/project-alerts/project-alerts.component\";\nimport { ProjectEnvironmentsComponent } from \"./projects/project-detail/project-environments/project-environments.component\";\nimport { PlatformPickerComponent } from \"./projects/platform-picker/platform-picker.component\";\nimport { SlugifyDirective } from \"./teams/new-team/slugify.directive\";\nimport { AlertFormComponent } from \"./projects/project-detail/project-alerts/alert-form/alert-form.component\";\nimport { NewRecipientComponent } from \"./projects/project-detail/project-alerts/new-recipient/new-recipient.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SettingsRoutingModule,\n    SharedModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatRadioModule,\n  ],\n  declarations: [\n    ProjectsComponent,\n    NewProjectComponent,\n    ProjectDetailComponent,\n    OrganizationComponent,\n    SettingsComponent,\n    TeamsComponent,\n    NewTeamComponent,\n    TeamMembersComponent,\n    MembersComponent,\n    MemberDetailComponent,\n    NewMemberComponent,\n    TeamProjectsComponent,\n    TeamDetailsComponent,\n    TeamSettingsComponent,\n    ProjectAlertsComponent,\n    PlatformPickerComponent,\n    SlugifyDirective,\n    ProjectEnvironmentsComponent,\n    AlertFormComponent,\n    NewRecipientComponent,\n  ],\n})\nexport class SettingsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertFormComponent"
                        },
                        {
                            "name": "MemberDetailComponent"
                        },
                        {
                            "name": "MembersComponent"
                        },
                        {
                            "name": "NewMemberComponent"
                        },
                        {
                            "name": "NewProjectComponent"
                        },
                        {
                            "name": "NewRecipientComponent"
                        },
                        {
                            "name": "NewTeamComponent"
                        },
                        {
                            "name": "OrganizationComponent"
                        },
                        {
                            "name": "PlatformPickerComponent"
                        },
                        {
                            "name": "ProjectAlertsComponent"
                        },
                        {
                            "name": "ProjectDetailComponent"
                        },
                        {
                            "name": "ProjectEnvironmentsComponent"
                        },
                        {
                            "name": "ProjectsComponent"
                        },
                        {
                            "name": "SettingsComponent"
                        },
                        {
                            "name": "SlugifyDirective"
                        },
                        {
                            "name": "TeamDetailsComponent"
                        },
                        {
                            "name": "TeamMembersComponent"
                        },
                        {
                            "name": "TeamProjectsComponent"
                        },
                        {
                            "name": "TeamSettingsComponent"
                        },
                        {
                            "name": "TeamsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SettingsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SettingsRoutingModule",
            "id": "module-SettingsRoutingModule-71ac283d1ea7df622fa838fb3d75cf71",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/settings/settings-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ProjectsComponent } from \"./projects/projects.component\";\nimport { NewProjectComponent } from \"./projects/new-project/new-project.component\";\nimport { ProjectDetailComponent } from \"./projects/project-detail/project-detail.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { OrganizationComponent } from \"./organization/organization.component\";\nimport { TeamsComponent } from \"./teams/teams.component\";\nimport { TeamMembersComponent } from \"./teams/team-members/team-members.component\";\nimport { MembersComponent } from \"./members/members.component\";\nimport { MemberDetailComponent } from \"./members/member-detail/member-detail.component\";\nimport { NewMemberComponent } from \"./members/new-member/new-member.component\";\nimport { TeamProjectsComponent } from \"./teams/team-projects/team-projects.component\";\nimport { TeamDetailsComponent } from \"./teams/team-details/team-details.component\";\nimport { TeamSettingsComponent } from \"./teams/team-settings/team-settings.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    children: [\n      { path: \"\", component: OrganizationComponent },\n      { path: \"projects\", component: ProjectsComponent },\n      { path: \"projects/new\", component: NewProjectComponent },\n      { path: \"projects/:project-slug\", component: ProjectDetailComponent },\n      {\n        path: \"subscription\",\n        loadChildren: () =>\n          \"import(\\\"./subscription/subscription.module\\\").then(\\\n            (m) => m.SubscriptionModule\\\n          )\",\n      },\n      {\n        path: \"teams\",\n        children: [\n          { path: \"\", component: TeamsComponent },\n          {\n            path: \":team-slug\",\n            component: TeamDetailsComponent,\n            children: [\n              { path: \"members\", component: TeamMembersComponent },\n              { path: \"projects\", component: TeamProjectsComponent },\n              { path: \"settings\", component: TeamSettingsComponent },\n            ],\n          },\n        ],\n      },\n      {\n        path: \"members\",\n        children: [\n          { path: \"\", component: MembersComponent },\n          { path: \"new\", component: NewMemberComponent },\n          { path: \":member-id\", component: MemberDetailComponent },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-eea1beabca6fc22ea9c6f1ffedb395a7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "/**\n * Common modules used in many places. This module is still lazy loaded.\n * SharedModule depends on MaterialModule.\n * You should import only MaterialModule if you don't need SharedModule\n * Importing SharedModule also imports MaterialModule. Do not explicitly import both.\n */\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { MaterialModule } from \"./material.module\";\nimport { DaysAgoPipe, DaysOldPipe } from \"./days-ago.pipe\";\nimport { ProjectCardComponent } from \"./project-card/project-card.component\";\nimport { EntryDataComponent } from \"./entry-data/entry-data.component\";\nimport { EmptyProjectsComponent } from \"./project-card/empty-projects/empty-projects.component\";\nimport { InputMatcherDirective } from \"./input-matcher.directive\";\nimport { LoadingButtonComponent } from \"./loading-button/loading-button.component\";\nimport { AuthSvgComponent } from \"./auth-svg/auth-svg.component\";\nimport { ProjectListComponent } from \"./project-list/project-list.component\";\nimport { CopyInputComponent } from \"./copy-input/copy-input.component\";\nimport { ToDoItemComponent } from \"./to-do-item/to-do-item.component\";\nimport { FormErrorComponent } from \"./forms/form-error/form-error.component\";\n\n@NgModule({\n  imports: [CommonModule, MaterialModule, RouterModule, ReactiveFormsModule],\n  declarations: [\n    DaysAgoPipe,\n    DaysOldPipe,\n    ProjectCardComponent,\n    EntryDataComponent,\n    EmptyProjectsComponent,\n    InputMatcherDirective,\n    LoadingButtonComponent,\n    AuthSvgComponent,\n    ProjectListComponent,\n    CopyInputComponent,\n    ToDoItemComponent,\n    FormErrorComponent,\n  ],\n  exports: [\n    DaysAgoPipe,\n    DaysOldPipe,\n    ProjectCardComponent,\n    EntryDataComponent,\n    EmptyProjectsComponent,\n    MaterialModule,\n    InputMatcherDirective,\n    LoadingButtonComponent,\n    AuthSvgComponent,\n    ProjectListComponent,\n    CopyInputComponent,\n    ToDoItemComponent,\n    FormErrorComponent,\n  ],\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthSvgComponent"
                        },
                        {
                            "name": "CopyInputComponent"
                        },
                        {
                            "name": "DaysAgoPipe"
                        },
                        {
                            "name": "DaysOldPipe"
                        },
                        {
                            "name": "EmptyProjectsComponent"
                        },
                        {
                            "name": "EntryDataComponent"
                        },
                        {
                            "name": "FormErrorComponent"
                        },
                        {
                            "name": "InputMatcherDirective"
                        },
                        {
                            "name": "LoadingButtonComponent"
                        },
                        {
                            "name": "ProjectCardComponent"
                        },
                        {
                            "name": "ProjectListComponent"
                        },
                        {
                            "name": "ToDoItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthSvgComponent"
                        },
                        {
                            "name": "CopyInputComponent"
                        },
                        {
                            "name": "DaysAgoPipe"
                        },
                        {
                            "name": "DaysOldPipe"
                        },
                        {
                            "name": "EmptyProjectsComponent"
                        },
                        {
                            "name": "EntryDataComponent"
                        },
                        {
                            "name": "FormErrorComponent"
                        },
                        {
                            "name": "InputMatcherDirective"
                        },
                        {
                            "name": "LoadingButtonComponent"
                        },
                        {
                            "name": "MaterialModule"
                        },
                        {
                            "name": "ProjectCardComponent"
                        },
                        {
                            "name": "ProjectListComponent"
                        },
                        {
                            "name": "ToDoItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SubscriptionModule",
            "id": "module-SubscriptionModule-6335094624bf9b5af6fcaf3dcd8c1e5d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/settings/subscription/subscription.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\n\nimport { SubscriptionRoutingModule } from \"./subscription-routing.module\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { PaymentComponent } from \"./payment/payment.component\";\n\n@NgModule({\n  declarations: [SubscriptionComponent, PaymentComponent],\n  imports: [\n    CommonModule,\n    SubscriptionRoutingModule,\n    SharedModule,\n    MatProgressBarModule,\n  ],\n})\nexport class SubscriptionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaymentComponent"
                        },
                        {
                            "name": "SubscriptionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SubscriptionRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SubscriptionRoutingModule",
            "id": "module-SubscriptionRoutingModule-62d46c9c657cd1fc2364a4345a2b8e3b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/settings/subscription/subscription-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { SubscriptionComponent } from \"./subscription.component\";\n\nconst routes: Routes = [{ path: \"\", component: SubscriptionComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "authTokens",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/auth-tokens/auth-tokens.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const authTokenData = [\n    {\n      scopes: [\"project:read\"],\n      dateCreated: \"2020-12-08T14:55:29.700718Z\",\n      label: \"Test Token\",\n      token: \"2254a159205830ca3d033617546b1c4634ef1f58\",\n      id: 26,\n    },\n    {\n      scopes: [\n        \"project:read\",\n        \"project:write\",\n        \"project:admin\",\n        \"project:releases\",\n        \"team:read\",\n        \"team:write\",\n        \"team:admin\",\n        \"event:read\",\n        \"event:write\",\n        \"event:admin\",\n        \"org:read\",\n        \"org:write\",\n        \"org:admin\",\n        \"member:read\",\n        \"member:write\",\n        \"member:admin\",\n      ],\n      dateCreated: \"2020-12-08T14:55:17.320799Z\",\n      label:\n        \"Token with a really long that probably should not happen normally but it could because that's an option we have\",\n      token: \"a389e813ea6920ba93fa3416e4792c68988e5991\",\n      id: 25,\n    },\n    {\n      scopes: [\"team:write\", \"event:write\", \"member:write\"],\n      dateCreated: \"2020-12-08T14:54:41.443359Z\",\n      label: \"Write Token\",\n      token: \"f36c969bb5adb240b8a50d01fe653807719bf662\",\n      id: 24,\n    },\n  ];\n  const statesOptions = {\n    empty: [],\n    hasTokens: authTokenData,\n  };\n  return {\n    component: AuthTokensComponent,\n    props: {\n      authTokens$: of(select(\"States\", statesOptions as any, [])),\n      deleteLoading$: of(\n        select(\n          \"loading\",\n          { first: 24, second: 25, third: 26, none: null },\n          null\n        )\n      ),\n      initialLoad$: of(boolean(\"Initial Load\", true)),\n    },\n  };\n}"
            },
            {
                "name": "autoplayError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"EvalError\",\n        value:\n          'MDN says \"EvalError is not used in the current ECMAScript specification and will thus not be thrown by the runtime. However, the object itself remains for backwards compatibility with earlier versions of the specification.\"',\n        stacktrace: {\n          frames: [\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"HTMLButtonElement.globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"ZoneTask.invokeTask [as invoke]\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"Zone.runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"ZoneDelegate.invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"Object.onInvokeTask\",\n              in_app: true,\n              lineno: 47780,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"ZoneDelegate.invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"HTMLButtonElement.sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"HTMLButtonElement.<anonymous>\",\n              in_app: true,\n              lineno: 53584,\n            },\n            {\n              colno: 22,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34527,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34492,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_14_listener\",\n              in_app: true,\n              lineno: 203,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent.throwEvalError\",\n              in_app: true,\n              lineno: 143,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: \"7a9d061a477b4f1f9363dc9eb078d5ab\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617247433.425,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"96824092a8c6f343\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"891daa720ccb4171b0fd1f41344ee961\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617247424.183,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617247424.186,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617247424.201,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617247424.208,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617247424202\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\",\n    },\n  },\n}"
            },
            {
                "name": "backend",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  \"csharp\",\n  \"elixir\",\n  \"go\",\n  \"go-http\",\n  \"java-appengine\",\n  \"java\",\n  \"java-log4j\",\n  \"java-log4j2\",\n  \"java-logback\",\n  \"java-logging\",\n  \"native\",\n  \"node\",\n  \"node-express\",\n  \"node-koa\",\n  \"node-connect\",\n  \"php\",\n  \"php-laravel\",\n  \"php-monolog\",\n  \"php-symfony2\",\n  \"python\",\n  \"python-django\",\n  \"python-flask\",\n  \"python-sanic\",\n  \"python-celery\",\n  \"python-bottle\",\n  \"python-pylons\",\n  \"python-pyramid\",\n  \"python-tornado\",\n  \"python-rq\",\n  \"python-pythonawslambda\",\n  \"ruby\",\n  \"ruby-rails\",\n  \"ruby-rack\",\n  \"rust\",\n]"
            },
            {
                "name": "baseUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"/api/0\""
            },
            {
                "name": "baseUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/login/login.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"/rest-auth\""
            },
            {
                "name": "baseUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/register/register.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"/rest-auth\""
            },
            {
                "name": "baseUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/change-password/password.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "\"/rest-auth/password\""
            },
            {
                "name": "breadcrumbError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/breadcrumb-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"5fe7c33003844db6a0c36a10be8bc8ee\",\n  id: \"5fe7c33003844db6a0c36a10be8bc8ee\",\n  issue: 234,\n  context: null,\n  contexts: {\n    os: { name: \"Linux\" },\n    device: { family: \"Other\" },\n    browser: { name: \"Chrome\", version: \"87.0.4280\" },\n  },\n  culprit: \"AppComponent.throwGenericError(http://localhost:4201/main.js)\",\n  dateCreated: \"2020-12-18T18:19:07.565111Z\",\n  dateReceived: \"2020-12-18T18:19:10.568103Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"Error\",\n            value: \"Bulk Generic Error! 29573c\",\n            mechanism: { type: \"generic\", handled: true },\n            stacktrace: {\n              frames: [\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"HTMLButtonElement.globalZoneAwareCallback\",\n                  inApp: false,\n                  colNo: 21,\n                  lineNo: 1660,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"invokeTask\",\n                  inApp: false,\n                  colNo: 18,\n                  lineNo: 1634,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneTask.invokeTask [as invoke]\",\n                  inApp: false,\n                  colNo: 38,\n                  lineNo: 493,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"Zone.runTask\",\n                  inApp: false,\n                  colNo: 51,\n                  lineNo: 180,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 40,\n                  lineNo: 411,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"Object.onInvokeTask\",\n                  inApp: false,\n                  colNo: 33,\n                  lineNo: 35341,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 35,\n                  lineNo: 412,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"HTMLButtonElement.sentryWrapped\",\n                  inApp: false,\n                  colNo: 23,\n                  lineNo: 48163,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"HTMLButtonElement.<anonymous>\",\n                  inApp: false,\n                  colNo: 38,\n                  lineNo: 40340,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n                  inApp: false,\n                  colNo: 22,\n                  lineNo: 22655,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"executeListenerWithErrorHandling\",\n                  inApp: false,\n                  colNo: 16,\n                  lineNo: 22620,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"AppComponent_Template_button_click_28_listener\",\n                  inApp: false,\n                  colNo: 146,\n                  lineNo: 226,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"AppComponent.throwMultipleErrors\",\n                  inApp: false,\n                  colNo: 24,\n                  lineNo: 130,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"globalZoneAwareCallback\",\n                  inApp: false,\n                  colNo: 25,\n                  lineNo: 1671,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"invokeTask\",\n                  inApp: false,\n                  colNo: 18,\n                  lineNo: 1634,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneTask.invokeTask [as invoke]\",\n                  inApp: false,\n                  colNo: 38,\n                  lineNo: 493,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"Zone.runTask\",\n                  inApp: false,\n                  colNo: 51,\n                  lineNo: 180,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 40,\n                  lineNo: 411,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"Object.onInvokeTask\",\n                  inApp: false,\n                  colNo: 33,\n                  lineNo: 35341,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 35,\n                  lineNo: 412,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"sentryWrapped\",\n                  inApp: false,\n                  colNo: 23,\n                  lineNo: 48163,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"?\",\n                  inApp: false,\n                  colNo: 22,\n                  lineNo: 166,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"AppComponent.throwGenericError\",\n                  inApp: false,\n                  colNo: 15,\n                  lineNo: 156,\n                  context: [],\n                },\n              ],\n            },\n          },\n        ],\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"console\",\n            level: \"info\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n              ],\n            },\n            message:\n              \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:47.841276Z\",\n          },\n          {\n            category: \"navigation\",\n            level: \"info\",\n            event_id: null,\n            data: { to: \"/\", from: \"/\" },\n            message: null,\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:47.846091Z\",\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            data: null,\n            message: \"body > app-root > ol > li > button\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:47.866141Z\",\n          },\n          {\n            category: \"xhr\",\n            level: \"info\",\n            event_id: null,\n            data: {\n              url: \"http://localhost:4201/sockjs-node/info?t=1608314987866\",\n              method: \"GET\",\n              status_code: 200,\n            },\n            message: null,\n            type: \"http\",\n            timestamp: \"2020-12-18T18:09:47.876906Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"dc0bace5a9424510a883dfb1fe788a2f\",\n            data: null,\n            message: \"A Generic Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.493806Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"12b7ae492dca4531b6624572d68642b8\",\n            data: null,\n            message: \"A Generic Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.501181Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: { logger: \"console\", arguments: [\"A Generic Error \"] },\n            message: \"A Generic Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.503061Z\",\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            data: null,\n            message: \"body > app-root > ol > li > button\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.504631Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"info\",\n            event_id: \"f292f013b3684bab905efbe878278095\",\n            data: null,\n            message: \"Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.079361Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2ba3bdf6a8a2451b85d2da6ff2d5efdb\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 6eeab5\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.106146Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"46ace78f941545b984ef46b17012ea9c\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 6eeab5\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.111711Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 6eeab5\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 6eeab5\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 6eeab5\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.114976Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"96ced40509374a27bba7aaa71b80aaee\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 35bc8e\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.127321Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"01c872f45f9e4eb4b8e0d84d9858db3c\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 35bc8e\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.133191Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 35bc8e\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 35bc8e\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 35bc8e\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.136436Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"aa77666f1307404fafff4a8ba851dde3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 104670\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.149811Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"f3e6e8bba95d45d783f8a85bbef6ccbd\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 104670\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.154931Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 104670\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 104670\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 104670\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.157671Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2df16ce68e8c4dfbad48f57e347dcd52\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 089a90\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.170501Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"e76cfe0a855f41ee816439509e5addc0\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 089a90\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.176826Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 089a90\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 089a90\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 089a90\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.179231Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"cd4643bdbe894d7d9245297393cb3a88\",\n            data: null,\n            message: \"Error: Bulk Generic Error! cc17af\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.196466Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"6e74f914e3e14b7d9ea9eca37e27c100\",\n            data: null,\n            message: \"Error: Bulk Generic Error! cc17af\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.202191Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! cc17af\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! cc17af\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! cc17af\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.204731Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"30a1d68966c8466f9041639f48256f63\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 82c402\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.219456Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"0b502c797f704420a9dde2e75b4ccf54\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 82c402\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.227096Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 82c402\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 82c402\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 82c402\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.230251Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2e7fc17726d345aa862f1f67ee2c3587\",\n            data: null,\n            message: \"Error: Bulk Generic Error! ce7395\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.250811Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"dbb5c060a2784456b8396c1eeb5aa1ab\",\n            data: null,\n            message: \"Error: Bulk Generic Error! ce7395\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.260116Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! ce7395\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! ce7395\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! ce7395\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.263946Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"52224a03602b45b594c2cc46eda3f5e3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 159209\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.281326Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"d4419aaa3c36492a9f54b70794934294\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 159209\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.292326Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 159209\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 159209\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 159209\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.295531Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"3706de7ffaf04c899ba24c715efdd8d6\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 157f9a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.308371Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"fe7f106864244e7fb5eb06463d92f9fd\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 157f9a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.326941Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 157f9a\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 157f9a\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 157f9a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.330316Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"9e71f228024843529ef80c011af5a8f9\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 71490b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.354151Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2801ca771fc448ecbde22848d8b43d0d\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 71490b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.360801Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 71490b\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 71490b\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 71490b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.364131Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"7338b66e437e4c188b391ca62ebc167e\",\n            data: null,\n            message: \"Error: Bulk Generic Error! adef1b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.377856Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"8ea531e0f35e45cb9e4c362b442514fb\",\n            data: null,\n            message: \"Error: Bulk Generic Error! adef1b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.386486Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! adef1b\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! adef1b\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! adef1b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.389606Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"fcbba99113034b499d00e7faca1c3b95\",\n            data: null,\n            message: \"Error: Bulk Generic Error! d0f93b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.405331Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2c89404472334ce4ae0b02970bcf82e8\",\n            data: null,\n            message: \"Error: Bulk Generic Error! d0f93b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.411846Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! d0f93b\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! d0f93b\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! d0f93b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.417446Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"25e48beb914e4f9ebdaa3321142dbebe\",\n            data: null,\n            message: \"Error: Bulk Generic Error! f3cb64\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.433276Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"1ad7984674fd467c9aa1409009d7e2e3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! f3cb64\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.442131Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! f3cb64\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! f3cb64\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! f3cb64\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.449136Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"385852bc1147466594eb218797407ec2\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 14554f\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.464691Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"b19c5ae5a69e4ed997baefb5271d513d\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 14554f\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.472576Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 14554f\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 14554f\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 14554f\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.478936Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"3942ae3655bb4d3fbb77ff3d0caad7b1\",\n            data: null,\n            message: \"Error: Bulk Generic Error! a7bd45\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.497921Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"e6e51a12cf5748368293da2bfc747479\",\n            data: null,\n            message: \"Error: Bulk Generic Error! a7bd45\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.508751Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! a7bd45\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! a7bd45\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! a7bd45\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.514046Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"acbf8fabb51b4be3b7729f4f5f11eb1c\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 25201a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.523961Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"81a49b78f5474698afde3fdf58e62b58\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 25201a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.527626Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 25201a\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 25201a\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 25201a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.530551Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"0243092e0d414d51ba48828cf9d860c2\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 7cc942\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.537861Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"1c38832a2af94451a57556a0628314e3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 7cc942\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.542071Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 7cc942\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 7cc942\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 7cc942\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.543496Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"bec18d45353a4c99831920a30995d928\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 98ea2a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.550176Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"175d0b7ef2c24ec8999d4e34ce7f1265\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 98ea2a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.558196Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 98ea2a\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 98ea2a\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 98ea2a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.559986Z\",\n          },\n        ],\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        url: \"http://localhost:4201/\",\n        headers: [\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\",\n          ],\n        ],\n        inferredContentType: null,\n      },\n    },\n  ],\n  message: \"\",\n  metadata: {\n    type: \"Error\",\n    value: \"Bulk Generic Error! 29573c\",\n    filename: \"http://localhost:4201/main.js\",\n    function: \"AppComponent.throwGenericError\",\n  },\n  packages: null,\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    version: \"5.20.1\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.20.1\" }],\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n    ],\n  },\n  tags: [\n    { key: \"browser.name\", value: \"Chrome\", _meta: null },\n    { key: \"os.name\", value: \"Linux\", _meta: null },\n    { key: \"browser\", value: \"Chrome 87.0.4280\", _meta: null },\n  ],\n  title: \"Error: Bulk Generic Error! 29573c\",\n  type: \"error\",\n  user: null,\n  projectID: 40,\n  userReport: null,\n  nextEventID: null,\n  previousEventID: \"87dff1c6f2f8432b9c9b7e69a2f31cc5\",\n}"
            },
            {
                "name": "BreadcrumbsLong",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: EntryBreadcrumbsComponent,\n    props: {\n      breadcrumbs$: of(breadcrumbError.entries[1].data),\n    },\n  };\n}"
            },
            {
                "name": "BreadcrumbsMedium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const mediumLength: any = {\n    values: [\n      {\n        category: \"console\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.476Z\",\n        data: {\n          logger: \"console\",\n          extra: {\n            arguments: [\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            ],\n          },\n        },\n        message:\n          \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n        type: \"default\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.548Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"xhr\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.569Z\",\n        data: {\n          url: \"http://localhost:4200/sockjs-node/info?t=1580242793552\",\n          status_code: 200,\n          method: \"GET\",\n        },\n        message: null,\n        type: \"http\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:55.949Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"console\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.476Z\",\n        data: {\n          logger: \"console\",\n          extra: {\n            arguments: [\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            ],\n          },\n        },\n        message:\n          \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n        type: \"default\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.548Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"xhr\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.569Z\",\n        data: {\n          url: \"http://localhost:4200/sockjs-node/info?t=1580242793552\",\n          status_code: 200,\n          method: \"GET\",\n        },\n        message: null,\n        type: \"http\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:55.949Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"console\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.476Z\",\n        data: {\n          logger: \"console\",\n          extra: {\n            arguments: [\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            ],\n          },\n        },\n        message:\n          \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n        type: \"default\",\n      },\n    ],\n  };\n  return {\n    component: EntryBreadcrumbsComponent,\n    props: {\n      breadcrumbs$: of(mediumLength),\n    },\n  };\n}"
            },
            {
                "name": "BreadcrumbsShort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: EntryBreadcrumbsComponent,\n    props: {\n      breadcrumbs$: of(databaseStackError.entries[1].data),\n    },\n  };\n}"
            },
            {
                "name": "browserPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(name: string, extension = \"svg\"): string => {\n  if (extension === \"svg\") {\n    return `static/assets/images/browser-svgs/${name}/${name}.${extension}`;\n  } else {\n    return `static/assets/images/browser-svgs/${name}/${name}_48x48.${extension}`;\n  }\n}",
                "rawdescription": "Paths to different icon asset locations",
                "description": "<p>Paths to different icon asset locations</p>\n"
            },
            {
                "name": "categoryList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: \"popular\", name: \"Popular\", platforms: popular },\n  { id: \"browser\", name: \"Browser\", platforms: frontend },\n  { id: \"server\", name: \"Server\", platforms: backend },\n  { id: \"mobile\", name: \"Mobile\", platforms: mobile },\n  { id: \"desktop\", name: \"Desktop\", platforms: desktop },\n]"
            },
            {
                "name": "changePassword",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/users.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  incorrect_password: \"bananas7\",\n  new_password1: \"drawmark47\",\n  new_password2: \"drawmark47\",\n}"
            },
            {
                "name": "changepw",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const loadingBoolean = boolean(\"Loading\", false);\n  const errorText = text(\"Server Error Message\", \"\");\n  const user = {\n    username: \"rain@bow.com\",\n    lastLogin: \"2020-11-24T20:52:03.864975Z\",\n    isSuperuser: true,\n    emails: [],\n    identities: [],\n    id: \"1\",\n    isActive: true,\n    name: \"\",\n    dateJoined: \"2020-08-18T13:18:51.432490Z\",\n    hasPasswordAuth: boolean(\"Has Password Auth\", true),\n    email: \"rain@bow.com\",\n  };\n  return {\n    component: ChangePasswordComponent,\n    props: {\n      loading: loadingBoolean,\n      error: errorText,\n      user$: of(user),\n    },\n  };\n}"
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  template: `\n  <section class=\"mat-typography\">\n    <p class=\"mat-h1\">Sometimes you will want to customize the colors you are using. For this, refer to $amaranth-palette in _variables.scss</p>\n    <p>Use mat-color($amaranth-palette, 50) to get a color from the palette: <a href=\"https://v5.material.angular.io/guide/theming-your-components#using-colors-from-a-palette\" target=\"_blank\">Material Reference</a></p>\n    <div style=\"width: 100%; height: 100px; background-color: #fce8ed\"></div>\n    <p style=\"margin-top: 50px\">Use mat-contrast($amaranth-palette, 50) to get the contrasting color:</p>\n    <div style=\"width: 100%; height: 100px; background-color: #000000\"></div>\n    <p style=\"margin-top: 50px\">To use a gray color, use mat-color($mat-gray, 500): <a target=\"_blank\" href=\"https://material.io/design/color/the-color-system.html#tools-for-picking-colors\">Material Reference</a></p>\n    <div style=\"width: 100%; height: 100px; background-color: #9E9E9E\"></div>\n  </section>\n  `,\n})"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n  ClipboardModule,\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context(\"./\", true, /\\.spec\\.ts$/)"
            },
            {
                "name": "contexts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const options = [];\n  let user = boolean(\"User\", true);\n  user\n    ? options.push({\n        title: \"em@jay.com\",\n        subtitle: \"EmJay117\",\n        key: \"Username\",\n        type: \"user\",\n        icon: null,\n        matIcon: \"account_circle\",\n      })\n    : null;\n\n  let browser = boolean(\"Browser\", true);\n  browser\n    ? options.push({\n        title: \"FireFox\",\n        subtitle: \"11.7\",\n        key: \"Version\",\n        type: \"browser\",\n        icon: \"static/assets/images/browser-svgs/firefox/firefox.svg\",\n        matIcon: null,\n      })\n    : null;\n\n  let runtime = boolean(\"Runtime\", true);\n  runtime\n    ? options.push({\n        title: \"CPython\",\n        subtitle: \"3.8.0\",\n        key: \"Version\",\n        type: \"runtime\",\n        icon: \"static/assets/images/logos/48x48/cpython.png\",\n        matIcon: null,\n      })\n    : null;\n\n  let os = boolean(\"OS\", true);\n  os\n    ? options.push({\n        title: \"Ubuntu\",\n        subtitle: \"20.0.4\",\n        key: \"Version\",\n        type: \"os\",\n        icon: \"static/assets/images/os-logos/ubuntu.png\",\n        matIcon: null,\n      })\n    : null;\n\n  let device = boolean(\"Device\", true);\n  device\n    ? options.push({\n        title: \"Red Ryder\",\n        subtitle: \"amd64\",\n        key: \"Arch\",\n        type: \"device\",\n        icon: null,\n        matIcon: \"devices_other\",\n      })\n    : null;\n\n  let gpu = boolean(\"GPU\", true);\n  gpu\n    ? options.push({\n        title: \"Graphic\",\n        subtitle: \"a vendor\",\n        key: \"Vendor\",\n        type: \"gpu\",\n        icon: null,\n        matIcon: null,\n      })\n    : null;\n\n  return {\n    component: ContextsComponent,\n    props: {\n      specialContexts$: of(options),\n    },\n  };\n}"
            },
            {
                "name": "copyInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: CopyInputComponent,\n    props: {\n      value: \"Some copying value\",\n      placeholder: \"placeholder\",\n    },\n  };\n}"
            },
            {
                "name": "criticalMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  message: \"Critical Error\",\n  level: \"critical\",\n  event_id: \"96de7b91117842b2b13d45bbed6924f2\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617248494.277,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"90e4a530f0e1c9d1\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"eb14ef60cb5649dca86ebd8ba968f330\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617248490.962,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617248490.966,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617248490.979,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617248490.994,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617248490979\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617248492.899,\n      category: \"sentry.event\",\n      event_id: \"e3acf095b9ac405f823b5eb633cdaacf\",\n      level: \"info\",\n      message: \"A user actually clicked this thing\",\n    },\n    {\n      timestamp: 1617248492.903,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "cspError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/csp-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"aaa83b555096427390ae2a5edb1c42ba\",\n  dist: null,\n  userReport: null,\n  projectID: \"1388394\",\n  previousEventID: \"c41fcae5f26440e7b7382659c2ebcd46\",\n  message: \"Blocked 'connect' from 'adtracker.com'\",\n  id: \"aaa83b555096427390ae2a5edb1c42ba\",\n  size: 4784,\n  errors: [],\n  culprit:\n    \"connect-src https://*.website.com https://*.companysite.com https://*.ecommsite.com localhost:* *.analyticssite.com *.analyticssite.io socialmediasite.com glitchtip.com *.marketingsite.com locatorsite.io *.locatorsite.com www.analytics-site...\",\n  title: \"Blocked 'connect' from 'adtracker.com'\",\n  sdkUpdates: [],\n  platform: \"other\",\n  location: \"adtracker.com\",\n  nextEventID: null,\n  type: \"csp\",\n  metadata: {\n    message: \"Blocked 'connect' from 'adtracker.com'\",\n    uri: \"adtracker.com\",\n    directive: \"connect-src\",\n  },\n  groupingConfig: {\n    enhancements: \"cJybzDhxY05qemJypZWRgaGlroGxrqHRBABbEwcC\",\n    id: \"legacy:2019-03-12\",\n  },\n  crashFile: null,\n  tags: [\n    { value: \"https://searchengine.com\", key: \"blocked-uri\", _meta: null },\n    { value: \"Google 101.0.303750572\", key: \"browser\", _meta: null },\n    { value: \"Google\", key: \"browser.name\", _meta: null },\n    { value: \"iOS 13.2\", key: \"client_os\", _meta: null },\n    { value: \"iOS\", key: \"client_os.name\", _meta: null },\n    { value: \"iPhone\", key: \"device\", _meta: null },\n    { value: \"iPhone\", key: \"device.family\", _meta: null },\n    { value: \"connect-src\", key: \"effective-directive\", _meta: null },\n    { value: \"production\", key: \"environment\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"csp\", key: \"logger\", _meta: null },\n    {\n      value: \"https://www.website.com/about-us/our-story\",\n      key: \"url\",\n      _meta: null,\n    },\n    {\n      query: 'user.ip:\"99.251.88.88\"',\n      value: \"ip:99.251.88.88\",\n      key: \"user\",\n      _meta: null,\n    },\n  ],\n  dateCreated: \"2020-04-10T16:09:45.860455Z\",\n  dateReceived: \"2020-04-10T16:09:45.860455Z\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"99.251.88.88\",\n    email: null,\n    data: null,\n    id: null,\n  },\n  entries: [\n    {\n      type: \"message\",\n      data: { formatted: \"Blocked 'connect' from 'adtracker.com'\" },\n    },\n    {\n      type: \"csp\",\n      data: {\n        line_number: 1,\n        blocked_uri: \"https://adtracker.com\",\n        status_code: 0,\n        violated_directive:\n          \"connect-src https://*.website.com https://*.companysite.com https://*.ecommsite.com localhost:* *.analyticssite.com *.analyticssite.io socialmediasite.com glitchtip.com *.marketingsite.com locatorsite.io *.locatorsite.com www.google-analytics.com www.socialmediasite.com wss://ws2.analyticssite.com\",\n        column_number: 25315,\n        document_uri: \"https://www.website.com/about-us/our-story\",\n        original_policy:\n          \"default-src 'self'; connect-src https://*.website.com https://*.companysite.com https://*.ecommsite.com localhost:* *.analyticssite.com *.analyticssite.io socialmediasite.com glitchtip.com *.marketingsite.com locatorsite.io *.locatorsite.com www.socialmediasite.com wss://ws2.analyticssite.com; font-src 'self' *.marketingsite.com; frame-src 'self' www.socialmediasite.com\",\n        source_file: \"https://adtracker.com\",\n        referrer: \"https://www.google.com/\",\n        effective_directive: \"connect-src\",\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: null,\n        cookies: [],\n        inferredContentType: null,\n        env: null,\n        headers: [\n          [\"Referer\", \"https://www.google.com/\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/101.0.303750571 Mobile/15E148 Safari/604.1\",\n          ],\n        ],\n        url: \"https://www.website.com/about-us/our-story\",\n        query: [],\n        data: null,\n        method: null,\n      },\n    },\n  ],\n  packages: {},\n  sdk: null,\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    device: {\n      brand: \"Apple\",\n      type: \"device\",\n      model: \"iPhone\",\n      family: \"iPhone\",\n    },\n    browser: { version: \"101.0.303750571\", type: \"browser\", name: \"Google\" },\n    client_os: { version: \"13.2\", type: \"os\", name: \"iOS\" },\n  },\n  fingerprints: [\"5dbf7ab1823094ca25bfeb21e4f44669\"],\n  context: {},\n  release: null,\n  groupID: \"2563601466\",\n}"
            },
            {
                "name": "databaseError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/database-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"2eab5c723f11485eb4d9c36829b96aeb\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: \"40c612dbc706448c8b097d75adf2b9cf\",\n  message:\n    \"get User.DoesNotExist User matching query does not exist. django/db/models/query.py /database-error/\",\n  id: \"12\",\n  size: 11766,\n  errors: [],\n  culprit: \"/database-error/\",\n  title: \"User.DoesNotExist: User matching query does not exist.\",\n  platform: \"python\",\n  location: \"django/db/models/query.py\",\n  nextEventID: \"9b2c3a66777b4ee9ac572c80f090e6b3\",\n  type: \"error\",\n  metadata: {\n    function: \"get\",\n    type: \"User.DoesNotExist\",\n    value: \"User matching query does not exist.\",\n    filename: \"django/db/models/query.py\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/database-error/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/database-error/\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-01-27T19:18:36.900Z\",\n  dateReceived: \"2020-01-27T19:18:36.941Z\",\n  user: {\n    id: \"117\",\n    name: \"EmJay\",\n    username: \"emjay20\",\n    email: \"em@jay.com\",\n    ip_address: \"208.45.234\",\n  },\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    exc: \"DoesNotExist('User matching query does not exist.')\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\",\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\",\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseErrorView, args=(), kwargs={}, url_name=database_error, app_names=[], namespaces=[], route=database-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    callback: \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    wrapped_callback:\n                      \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\",\n                    ],\n                    [120, \"                view_name = callback.__name__\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseErrorView, args=(), kwargs={}, url_name=database_error, app_names=[], namespaces=[], route=database-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    callback: \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    wrapped_callback:\n                      \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.DatabaseErrorView object at 0x7f9c50143fd0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.DatabaseErrorView'>\",\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\",\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__',\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\",\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseErrorView object at 0x7f9c50143fd0>\",\n                    handler:\n                      \"<bound method DatabaseErrorView.get of <errors.views.DatabaseErrorView object at 0x7f9c50143fd0>>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    args: [],\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\",\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\",\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\",\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\",\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\",\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseErrorView object at 0x7f9c50143fd0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 17,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [12, \"        0/0\"],\n                    [13, \"\"],\n                    [14, \"\"],\n                    [15, \"class DatabaseErrorView(View):\"],\n                    [16, \"    def get(self, request, *args, **kwargs):\"],\n                    [17, '        User.objects.get(id=\"9999999\")'],\n                    [18, \"\"],\n                    [19, \"\"],\n                    [20, \"class PostErrorView(View):\"],\n                    [21, \"    def post(self, request, *args, **kwargs):\"],\n                    [22, '        request.POST[\"nope\"]'],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"manager_method\",\n                  colNo: null,\n                  vars: {\n                    self: \"[Filtered]\",\n                    args: [],\n                    name: \"'get'\",\n                    kwargs: { id: \"'9999999'\" },\n                  },\n                  symbol: null,\n                  module: \"django.db.models.manager\",\n                  lineNo: 82,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/manager.py\",\n                  platform: null,\n                  context: [\n                    [77, \"\"],\n                    [78, \"    @classmethod\"],\n                    [79, \"    def _get_queryset_methods(cls, queryset_class):\"],\n                    [80, \"        def create_method(name, method):\"],\n                    [\n                      81,\n                      \"            def manager_method(self, *args, **kwargs):\",\n                    ],\n                    [\n                      82,\n                      \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\",\n                    ],\n                    [\n                      83,\n                      \"            manager_method.__name__ = method.__name__\",\n                    ],\n                    [84, \"            manager_method.__doc__ = method.__doc__\"],\n                    [85, \"            return manager_method\"],\n                    [86, \"\"],\n                    [87, \"        new_methods = {}\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    clone:\n                      \"<QuerySet from django.db.models.query at 0x7f9c50143d60>\",\n                    args: [],\n                    num: \"0\",\n                    limit: \"21\",\n                    kwargs: { id: \"'9999999'\" },\n                    self:\n                      \"<QuerySet from django.db.models.query at 0x7f9c50143c10>\",\n                  },\n                  symbol: null,\n                  module: \"django.db.models.query\",\n                  lineNo: 415,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/query.py\",\n                  platform: null,\n                  context: [\n                    [410, \"            clone.query.set_limits(high=limit)\"],\n                    [411, \"        num = len(clone)\"],\n                    [412, \"        if num == 1:\"],\n                    [413, \"            return clone._result_cache[0]\"],\n                    [414, \"        if not num:\"],\n                    [415, \"            raise self.model.DoesNotExist(\"],\n                    [\n                      416,\n                      '                \"%s matching query does not exist.\" %',\n                    ],\n                    [417, \"                self.model._meta.object_name\"],\n                    [418, \"            )\"],\n                    [419, \"        raise self.model.MultipleObjectsReturned(\"],\n                    [\n                      420,\n                      \"            'get() returned more than one %s -- it returned %s!' % (\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false,\n            },\n            module: \"django.contrib.auth.models\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"User matching query does not exist.\",\n            type: \"User.DoesNotExist\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"query\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-27T19:18:36.897Z\",\n            data: null,\n            message: \"[Filtered]\",\n            type: \"default\",\n          },\n        ],\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\",\n          ],\n        ],\n        url: \"http://localhost:8001/database-error/\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\",\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\",\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"8144a4e652f8bdce\",\n      trace_id: \"fbe7cbd1d08d48958fa84139e91a939a\",\n      span_id: \"9f4cd5ea58ab9758\",\n      type: \"default\",\n      op: \"django.middleware\",\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"fcb5a20863c5c53702766d5f857f1e55\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"3\",\n}"
            },
            {
                "name": "databaseStackError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/database-stack-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"96152e3aebb94c54803a35a4ffa513a2\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: null,\n  message:\n    \"get User.DoesNotExist User matching query does not exist. django/db/models/query.py /database-stack-error/\",\n  id: \"5\",\n  size: 12720,\n  errors: [],\n  culprit: \"/database-stack-error/\",\n  title: \"User.DoesNotExist: User matching query does not exist.\",\n  platform: \"python\",\n  location: \"django/db/models/query.py\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"get\",\n    type: \"User.DoesNotExist\",\n    value: \"User matching query does not exist.\",\n    filename: \"django/db/models/query.py\"\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/database-stack-error/\", key: \"transaction\", _meta: null },\n    {\n      value: \"http://localhost:8001/database-stack-error/\",\n      key: \"url\",\n      _meta: null\n    }\n  ],\n  dateCreated: \"2020-01-27T19:17:51.356Z\",\n  dateReceived: \"2020-01-27T19:17:51.592Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f500f0a8580>>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    exc: \"DoesNotExist('User matching query does not exist.')\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\"\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\"\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseStackErrorView, args=(), kwargs={}, url_name=database_stack_error, app_names=[], namespaces=[], route=database-stack-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f500e257a60>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f500f0a8580>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    wrapped_callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\"\n                    ],\n                    [120, \"                view_name = callback.__name__\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseStackErrorView, args=(), kwargs={}, url_name=database_stack_error, app_names=[], namespaces=[], route=database-stack-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f500e257a60>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f500f0a8580>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    wrapped_callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.DatabaseStackErrorView'>\"\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\"\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__'\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\"\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    handler:\n                      \"<bound method DatabaseStackErrorView.get of <errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    args: [],\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\"\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\"\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\"\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\"\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\"\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\"\n                    ]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    users:\n                      \"<QuerySet from django.db.models.query at 0x7f500e1660a0>\",\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 28,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [23, \"\"],\n                    [24, \"\"],\n                    [25, \"class DatabaseStackErrorView(View):\"],\n                    [26, \"    def get(self, request, *args, **kwargs):\"],\n                    [27, \"        users = User.objects.all()\"],\n                    [28, \"        self.make_error(users)\"],\n                    [29, \"\"],\n                    [30, \"    def make_error(self, users):\"],\n                    [31, \"        User.objects.get(id=users.count() + 10000)\"],\n                    [32, \"\"],\n                    [33, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"make_error\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    users:\n                      \"<QuerySet from django.db.models.query at 0x7f500e1660a0>\"\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 31,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [26, \"    def get(self, request, *args, **kwargs):\"],\n                    [27, \"        users = User.objects.all()\"],\n                    [28, \"        self.make_error(users)\"],\n                    [29, \"\"],\n                    [30, \"    def make_error(self, users):\"],\n                    [31, \"        User.objects.get(id=users.count() + 10000)\"],\n                    [32, \"\"],\n                    [33, \"\"],\n                    [34, \"class TemplateErrorView(TemplateView):\"],\n                    [35, '    template_name = \"template_error.html\"'],\n                    [36, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"manager_method\",\n                  colNo: null,\n                  vars: {\n                    self: \"[Filtered]\",\n                    args: [],\n                    name: \"'get'\",\n                    kwargs: { id: \"10000\" }\n                  },\n                  symbol: null,\n                  module: \"django.db.models.manager\",\n                  lineNo: 82,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/manager.py\",\n                  platform: null,\n                  context: [\n                    [77, \"\"],\n                    [78, \"    @classmethod\"],\n                    [79, \"    def _get_queryset_methods(cls, queryset_class):\"],\n                    [80, \"        def create_method(name, method):\"],\n                    [\n                      81,\n                      \"            def manager_method(self, *args, **kwargs):\"\n                    ],\n                    [\n                      82,\n                      \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\"\n                    ],\n                    [\n                      83,\n                      \"            manager_method.__name__ = method.__name__\"\n                    ],\n                    [84, \"            manager_method.__doc__ = method.__doc__\"],\n                    [85, \"            return manager_method\"],\n                    [86, \"\"],\n                    [87, \"        new_methods = {}\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    clone:\n                      \"<QuerySet from django.db.models.query at 0x7f500e156a90>\",\n                    args: [],\n                    num: \"0\",\n                    limit: \"21\",\n                    kwargs: { id: \"10000\" },\n                    self:\n                      \"<QuerySet from django.db.models.query at 0x7f500e166400>\"\n                  },\n                  symbol: null,\n                  module: \"django.db.models.query\",\n                  lineNo: 415,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/query.py\",\n                  platform: null,\n                  context: [\n                    [410, \"            clone.query.set_limits(high=limit)\"],\n                    [411, \"        num = len(clone)\"],\n                    [412, \"        if num == 1:\"],\n                    [413, \"            return clone._result_cache[0]\"],\n                    [414, \"        if not num:\"],\n                    [415, \"            raise self.model.DoesNotExist(\"],\n                    [\n                      416,\n                      '                \"%s matching query does not exist.\" %'\n                    ],\n                    [417, \"                self.model._meta.object_name\"],\n                    [418, \"            )\"],\n                    [419, \"        raise self.model.MultipleObjectsReturned(\"],\n                    [\n                      420,\n                      \"            'get() returned more than one %s -- it returned %s!' % (\"\n                    ]\n                  ],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: \"django.contrib.auth.models\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"User matching query does not exist.\",\n            type: \"User.DoesNotExist\"\n          }\n        ],\n        excOmitted: null,\n        hasSystemFrames: false\n      }\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"query\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-27T19:17:51.349Z\",\n            data: null,\n            message: \"[Filtered]\",\n            type: \"default\"\n          },\n          {\n            category: \"query\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-27T19:17:51.352Z\",\n            data: null,\n            message: \"[Filtered]\",\n            type: \"default\"\n          }\n        ]\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\"\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\n          ]\n        ],\n        url: \"http://localhost:8001/database-stack-error/\",\n        query: [],\n        data: null,\n        method: \"GET\"\n      }\n    }\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\"\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" }\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\"\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"8389073c493a6c42\",\n      trace_id: \"6be83775186f443e8a98307ea2aad108\",\n      span_id: \"b058a47b707ea888\",\n      type: \"default\",\n      op: \"django.middleware\"\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" }\n  },\n  fingerprints: [\"4ddcc5b498f08c9d703a5816c7c76ecd\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"5\"\n}"
            },
            {
                "name": "debugMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  message: \"Debug message\",\n  level: \"debug\",\n  event_id: \"dd08d8f04fe841d4b44f6fc294251979\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617247994.923,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"807000baccc94ed1\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"f7c369c07e014b05a5751aa06afd8ab9\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617247992.853,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617247992.857,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617247992.876,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617247992.913,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617247992878\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "desktop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\"cocoa\", \"csharp\", \"java\", \"electron\", \"minidump\", \"native\"]"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    TOTPKey$: of(null),\n  },\n})"
            },
            {
                "name": "Doing",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/to-do-item/to-do-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    title: \"Doing it now\",\n    isDone: \"doing\",\n  },\n})"
            },
            {
                "name": "Done",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/to-do-item/to-do-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    title: \"You did it\",\n    isDone: \"true\",\n  },\n})"
            },
            {
                "name": "emptyStacktrace",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/empty-stacktrace.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"64b48dd6880446b882cb0da3949d6563\",\n  id: \"64b48dd6880446b882cb0da3949d6563\",\n  issue: 106,\n  context: null,\n  contexts: {\n    os: { name: \"Ubuntu\" },\n    device: { family: \"Other\" },\n    browser: { name: \"Firefox\", version: \"82.0\" },\n  },\n  culprit: \"redacted\",\n  dateCreated: \"2020-11-01T00:00:00Z\",\n  dateReceived: \"2020-11-20T19:04:10.554312Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"Error\",\n            value:\n              \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n            mechanism: { type: \"onunhandledrejection\", handled: false },\n            stacktrace: {},\n          },\n        ],\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        url: \"redacted\",\n        headers: [\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:82.0) Gecko/20100101 Firefox/82.0\",\n          ],\n        ],\n        inferredContentType: null,\n      },\n    },\n  ],\n  message: \"\",\n  metadata: {\n    type: \"Error\",\n    value:\n      \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n  },\n  packages: null,\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    version: \"5.26.0\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.26.0\" }],\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"RewriteFrames\",\n    ],\n  },\n  tags: [\n    { key: \"browser.name\", value: \"Firefox\" },\n    { key: \"os.name\", value: \"Ubuntu\" },\n  ],\n  title:\n    \"Error: NotAllowedError: The play method is not allowed by the user agent or the platform in the current con…\",\n  type: \"error\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"redacted\",\n    email: null,\n    data: {},\n    id: null,\n  },\n  projectID: 149,\n  userReport: null,\n  nextEventID: null,\n  previousEventID: null,\n}"
            },
            {
                "name": "Enabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    TOTPKey$: of(totpUserKey),\n  },\n})"
            },
            {
                "name": "EntryCSP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: EntryCSPComponent,\n    props: {\n      eventEntryCSP$: of(cspError.entries[1].data),\n    },\n  };\n}"
            },
            {
                "name": "entryData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  component: EntryDataComponent,\n  props: {\n    key: \"Accept-Encoding\",\n    value: \"gzip, deflate, br\",\n  },\n})"
            },
            {
                "name": "EntryException",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const errorOptions = [\n    \"Database Error\",\n    \"Database Stack Error\",\n    \"Post Error\",\n    \"Template Error\",\n    \"Zero Division Error\",\n    \"Zero Division Dotnet\",\n    \"String Error\",\n    \"SocialApp.DoesNotExist\",\n    \"Test with Undefined Stacktrace\",\n  ];\n  const selectedError = select(\"Error Type\", errorOptions, errorOptions[0]);\n  let error: any = databaseError.entries[0].data;\n  let title: string = databaseError.title;\n  let platform: string = databaseError.platform;\n\n  switch (selectedError) {\n    case \"Database Error\":\n      error = databaseError.entries[0].data;\n      title = databaseError.title;\n      platform = databaseError.platform;\n      break;\n    case \"Database Stack Error\":\n      error = databaseStackError.entries[0].data;\n      title = databaseStackError.title;\n      platform = databaseStackError.platform;\n      break;\n    case \"Post Error\":\n      error = postError.entries[0].data;\n      title = postError.title;\n      platform = postError.platform;\n      break;\n    case \"Template Error\":\n      error = templateError.entries[0].data;\n      title = templateError.title;\n      platform = templateError.platform;\n      break;\n    case \"Zero Division Error\":\n      error = zeroDivisionError.entries[0].data;\n      title = zeroDivisionError.title;\n      platform = zeroDivisionError.platform;\n      break;\n    case \"Zero Division Dotnet\":\n      error = zeroDivisionDotnet.entries[1].data;\n      title = zeroDivisionDotnet.title;\n      platform = zeroDivisionDotnet.platform;\n      break;\n    case \"String Error\":\n      error = stringError.entries[0].data;\n      title = stringError.title;\n      platform = stringError.platform;\n      break;\n    case \"SocialApp.DoesNotExist\":\n      error = socialApp.entries[0].data;\n      title = socialApp.title;\n      platform = socialApp.platform;\n      break;\n    case \"Test with Undefined Stacktrace\":\n      error = stacktraceUndefined.entries[0].data;\n      title = stacktraceUndefined.title;\n      platform = databaseError.platform;\n      break;\n  }\n  return {\n    component: EntryExceptionComponent,\n    props: {\n      eventEntryException$: of(error),\n      eventTitle: title,\n      eventPlatform: platform,\n    },\n  };\n}"
            },
            {
                "name": "EntryMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: EntryMessageComponent,\n    props: {\n      eventEntryMessage$: of(cspError.entries[0].data),\n    },\n  };\n}"
            },
            {
                "name": "EntryRequest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const errorOptions = [\n    \"Post Error\",\n    \"Database Error\",\n    \"Database Stack Error\",\n    \"Template Error\",\n    \"Zero Division Error\",\n    \"String Error\",\n    \"CSP Error\",\n    \"Page Not Found\",\n    \"SocialApp.DoesNotExist\",\n  ];\n\n  const selectedError = select(\"Error Type\", errorOptions, errorOptions[0]);\n  let stackError: any = postError.entries[1].data;\n  let error: any = {\n    ...stackError,\n    domainName: \"localhost\",\n    path: \"/database-stack-error/\",\n  };\n  let bodyData: any = [\n    [\n      \"csrfmiddlewaretoken\",\n      \"184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z\",\n    ],\n    [\"param1\", \"val\"],\n  ];\n\n  switch (selectedError) {\n    case \"Database Error\":\n      stackError = databaseError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/database-error/\",\n      };\n      bodyData = null;\n      break;\n    case \"Database Stack Error\":\n      stackError = databaseStackError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/database-stack-error/\",\n      };\n      bodyData = null;\n      break;\n    case \"Post Error\":\n      stackError = postError.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/database-stack-error/\",\n      };\n      bodyData = [\n        [\n          \"csrfmiddlewaretoken\",\n          \"184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z\",\n        ],\n        [\"param1\", \"val\"],\n      ];\n      break;\n    case \"Template Error\":\n      stackError = templateError.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/template-error/\",\n      };\n      bodyData = null;\n      break;\n    case \"Zero Division Error\":\n      stackError = zeroDivisionError.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/divide-zero/\",\n      };\n      bodyData = null;\n      break;\n    case \"String Error\":\n      stackError = stringError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/\",\n      };\n      bodyData = null;\n      break;\n    case \"CSP Error\":\n      stackError = cspError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"www.website.com\",\n        path: \"/about-us/our-staff\",\n      };\n      bodyData = null;\n      break;\n    case \"Page Not Found\":\n      stackError = pageNotFound.entries[0].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/message/\",\n      };\n      break;\n    case \"SocialApp.DoesNotExist\":\n      stackError = socialApp.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"staging.glitchtip.com\",\n        path: \"/rest-auth/gitlab/\",\n      };\n      bodyData = [\n        [\n          \"access_token\",\n          \"7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007\",\n        ],\n      ];\n      break;\n  }\n\n  return {\n    component: EntryRequestComponent,\n    props: {\n      eventEntryRequest$: of(error),\n      requestDataArray$: of(bodyData),\n    },\n  };\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  billingEmail: \"sales@glitchtip.com\",\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  billingEmail: \"sales@glitchtip.com\",\n}"
            },
            {
                "name": "environments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Environment",
                "defaultValue": "{\n  production: \"production\",\n  staging: \"staging\",\n  development: \"development\",\n}"
            },
            {
                "name": "evalError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  message:\n    \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n  exception: {\n    values: [\n      {\n        value:\n          \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n        type: \"Error\",\n        mechanism: { handled: false, type: \"onunhandledrejection\" },\n      },\n    ],\n  },\n  tags: { transaction: \"/autoplay\", \"DOMException.code\": \"0\" },\n  level: \"error\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  event_id: \"c7b2b791d2f24512b20de453a0d28396\",\n  timestamp: 1617247530.337,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"a33222d43851a661\",\n      status: \"internal_error\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"e20a6bf912744b368a21893469c42675\",\n    },\n  },\n  breadcrumbs: [\n    {\n      timestamp: 1617247530.309,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617247530.317,\n      category: \"navigation\",\n      data: { from: \"/autoplay\", to: \"/autoplay\" },\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/autoplay\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "flattenedPlatforms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FlatPlatform[]",
                "defaultValue": "[...platforms, otherPlatform]\n  .map((platform) => {\n    const flatPlatforms: FlatPlatform[] = platform.integrations.map(\n      (integration) => ({ ...integration, language: platform.id })\n    );\n    return flatPlatforms;\n  })\n  // converts array of arrays to a single array\n  // https://stackoverflow.com/a/18307218\n  .reduce((a, b) => a.concat(b))"
            },
            {
                "name": "FrameTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const frameTestData: any = {\n    function: select(\"function\", { NotNull: \"inner\", Null: null }, \"inner\"),\n    colNo: select(\"colNo\", { NotNull: 18, Zero: 0, Null: null }, 18),\n    vars: {\n      get_response:\n        \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n      request: \"<WSGIRequest: GET '/divide-zero/'>\",\n      exc: \"ZeroDivisionError('division by zero')\",\n    },\n    symbol: null,\n    module: select(\n      \"module\",\n      { NotNull: \"django.core.handlers.exception\", Null: null },\n      \"django.core.handlers.exception\"\n    ),\n    lineNo: select(\"lineNo\", { NotNull: 34, Null: null }, 34),\n    trust: null,\n    errors: null,\n    package: \"1.0.7\",\n    absPath: select(\n      \"absPath\",\n      {\n        NotNull: \"/code/errors/views.py\",\n        MatchFilename: \"django/core/handlers/exception.py\",\n        MatchModule: \"django.core.handlers.exception\",\n        IsURL: \"http://bing.com\",\n        maliciousUrl: \"javascript:alert('attack!')\",\n        Null: null,\n      },\n      null\n    ),\n    inApp: false,\n    instructionAddr:\n      \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n    filename: select(\n      \"filename\",\n      { NotNull: \"django/core/handlers/exception.py\", Null: null },\n      \"django/core/handlers/exception.py\"\n    ),\n    platform: select(\n      \"platform\",\n      { Python: \"python\", Java: \"java\", Null: null },\n      null\n    ),\n    context: [\n      [33, \" try:\"],\n      [\n        select(\n          \"contextLineNo\",\n          { ThirtyFour: 34, AnotherNumber: 117, Null: null },\n          34\n        ),\n        \" response = get_response(request)\",\n      ],\n    ],\n    symbolAddr: null,\n  };\n\n  return {\n    component: FrameTitleComponent,\n    props: {\n      frame: frameTestData,\n    },\n  };\n}"
            },
            {
                "name": "frontend",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  \"javascript\",\n  \"javascript-react\",\n  \"javascript-angular\",\n  \"javascript-angularjs\",\n  \"javascript-backbone\",\n  \"javascript-ember\",\n  \"javascript-vue\",\n]"
            },
            {
                "name": "generateErrors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(url: string, count: number) => {\n  for (let i = 0; i < count; i++) {\n    cy.request(\"POST\", url, jsError());\n  }\n}"
            },
            {
                "name": "generateIssues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(url: string, count: number) => {\n  for (let i = 0; i < count; i++) {\n    cy.request(\"POST\", url, uniqueInfoLog());\n  }\n}"
            },
            {
                "name": "getDSN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/integration/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(dsn: string) => {\n  const key = dsn.split(\"@\")[0].split(\"//\")[1];\n  const id = dsn.split(\"@\")[1].split(\"/\")[1];\n  const url = `/api/${id}/store/?sentry_key=${key}&sentry_version=7`;\n  return url;\n}"
            },
            {
                "name": "getOAuthConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/oauth/social.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(provider: OAuthProvider) =>\n  oAuthConfigs.find((config) => config.name === provider)"
            },
            {
                "name": "headerNav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/header-nav/header-nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  component: HeaderNavComponent,\n  props: {\n    projects$: of(sampleProjects),\n    appliedProjectIds: [1, 2, 5],\n  },\n})"
            },
            {
                "name": "iconDictionary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  /** Browsers */\n  chrome: browserPath(\"chrome\"),\n  firefox: browserPath(\"firefox\"),\n  opera: browserPath(\"opera\"),\n  safari: browserPath(\"safari\", \"png\"),\n  mobilesafari: browserPath(\"safari-ios\"),\n  edge: browserPath(\"edge\"),\n  chromium: browserPath(\"chromium\"),\n  chromemobile: browserPath(\"chrome\"),\n  chromemobileios: browserPath(\"chrome\"),\n  qqbrowser: localPath(\"qqbrowser\"),\n  playstation: osPath(\"playstation\"),\n  internetexplorer: browserPath(\"internet-explorer-tile_10-11\"),\n\n  /** Operating Systems */\n  ubuntu: osPath(\"ubuntu\"),\n  linux: osPath(\"linux\"),\n  windows: osPath(\"windows\"),\n  android: osPath(\"android\"),\n  darwin: osPath(\"mac\"),\n  ios: osPath(\"ios\"),\n  macos: osPath(\"mac\"),\n  tvos: osPath(\"mac\"),\n  macosx: osPath(\"mac\"),\n  mac: osPath(\"mac\"),\n  apple: osPath(\"mac\"),\n  watchos: osPath(\"mac\"),\n  androidtablet: osPath(\"android\"),\n  androidphone: osPath(\"android\"),\n  watch: osPath(\"mac\"),\n  appletv: osPath(\"apple-tv\"),\n  ipod: osPath(\"mac\"),\n  iphone: osPath(\"mac\"),\n  ipad: osPath(\"mac\"),\n  redhat: osPath(\"red-hat\"),\n  fedora: osPath(\"fedora\"),\n  debian: osPath(\"debian\"),\n\n  /** Frameworks */\n  php: localPath(\"php\", \"jpg\"),\n  mono: localPath(\"mono\"),\n  netcore: localPath(\"dotnetcore\"),\n  netframework: localPath(\"dotnetframework\"),\n  electron: localPath(\"electron\"),\n  nvidia: localPath(\"nvidia\"),\n  amd: localPath(\"amd\"),\n  arm: localPath(\"arm\", \"jpg\"),\n  cpython: localPath(\"cpython\"),\n  python: localPath(\"python\"),\n  go: localPath(\"go\"),\n}"
            },
            {
                "name": "IconPaths",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const iconMarkup = Object.keys(iconDictionary).map(\n    (icon) => `\n    <div style=\"border: 1px solid lightgray; margin: 5px; padding: 0 10px 10px;\">\n      <p style=\"font-size: 0.75em\">${icon}</p>\n      <img\n        style=\"width: 50px; height: 50px;\"\n        class=\"image\"\n        src=\"${generateIconPath(icon)}\"\n      />\n    </div>\n  `\n  );\n\n  return {\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap;\">\n        ${iconMarkup.join(\"\")}\n      </div>\n    `,\n  };\n}"
            },
            {
                "name": "icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  template: `\n  <section class=\"mat-typography\">\n    <h1>Icons</h1>\n    <p>Angular material has a bunch of icons. You can find a pretty exhaustive list of them <a href=\"https://www.angularjswiki.com/angular/angular-material-icons-list-mat-icon-list/\" target=\"_blank\">here</a>\n    <p>Also, <a href=\"https://material.angular.io/components/icon/overview\" target=\"_blank\">here's</a> Angular's documentation on icons</p>\n    <p>Make sure to add the appropriate aria classes for accessibility!</p>\n    <mat-divider></mat-divider>\n    <mat-icon>delete</mat-icon>\n    <p aria-hidden=\"false\" aria-label=\"this is trash\">This is an icon</p>\n    <button mat-icon-button color=\"accent\" aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <p>This is a button icon</p>\n    <button mat-flat-button color=\"primary\">\n      <mat-icon aria-hidden=\"true\">done</mat-icon>\n      Resolve\n    </button>\n    <p>If the icon is purely decorative, you can make aria hidden true</p>\n  </section>\n  <section class=\"mat-typography\">\n    <h1>Custom Icons</h1>\n    <p>In addition to Angular's icons, we have added custom ones in 'index.html'</p>\n    <div style=\"display: flex; align-items: center; margin: 16px\">\n      <div>#gitlab:</div>\n      <svg style=\"width: 32px; height: 32px; margin-left: 8px; margin-right: 32px\"><use xlink:href=\"#gitlab\"></use></svg>\n      <div>#google:</div>\n      <svg style=\"width: 32px; height: 32px; margin-left: 8px; margin-right: 32px\"><use xlink:href=\"#google\"></use></svg>\n      <div>#microsoft:</div>\n      <svg style=\"width: 32px; height: 32px; margin-left: 8px; margin-right: 32px\"><use xlink:href=\"#microsoft\"></use></svg>\n    </div>\n  </section>\n  `,\n})"
            },
            {
                "name": "infoMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  message: \"A user actually clicked this thing\",\n  level: \"info\",\n  event_id: \"e3acf095b9ac405f823b5eb633cdaacf\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617248492.895,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"90e4a530f0e1c9d1\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"eb14ef60cb5649dca86ebd8ba968f330\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617248490.962,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617248490.966,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617248490.979,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617248490.994,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617248490979\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "initialNewAlertState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  newAlertOpen: false,\n  newProjectAlertRecipients: null,\n  newAlertLoading: false,\n  newAlertError: null,\n}"
            },
            {
                "name": "initialPaginationState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PaginationState",
                "defaultValue": "{\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n}"
            },
            {
                "name": "initialRecipientDialogState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  recipientError: null,\n  recipientDialogOpen: false,\n  activeAlert: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/settings.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SettingsState",
                "defaultValue": "{\n  socialApps: [],\n  billingEnabled: false,\n  iPaidForGlitchTip: null,\n  enableUserRegistration: false,\n  matomoURL: null,\n  matomoSiteId: null,\n  chatwootWebsiteToken: null,\n  stripePublicKey: null,\n  sentryDSN: null,\n  sentryTracesSampleRate: null,\n  environment: null,\n  version: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issues.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IssuesState",
                "defaultValue": "{\n  issues: [],\n  selectedIssues: [],\n  pagination: initialPaginationState,\n  organizationEnvironments: [],\n  selectedProjectInfo: {},\n  areIssuesForProjectSelected: false,\n  errors: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/login/login.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "LoginState",
                "defaultValue": "{\n  loading: false,\n  error: null,\n  validAuth: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/main-nav/main-nav.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MainNavState",
                "defaultValue": "{\n  navOpen: true,\n  mobileNav: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/performance/performance.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PerformanceState",
                "defaultValue": "{\n  transactions: [],\n  pagination: initialPaginationState,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/projects/projects.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProjectsState",
                "defaultValue": "{\n  projects: null,\n  initialLoadComplete: false,\n  loading: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/accept/accept-invite.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AcceptState",
                "defaultValue": "{\n  acceptInfo: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/auth/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthState",
                "defaultValue": "{\n  isLoggedIn: false,\n  redirectUrl: \"\",\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/emails/email.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EmailState",
                "defaultValue": "{\n  emailAddresses: [],\n  loadingStates: {\n    add: false,\n    delete: null,\n    makePrimary: null,\n    resendConfirmation: null,\n  },\n  addEmailError: \"\",\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/organizations/member-detail.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MemberDetailState",
                "defaultValue": "{\n  memberDetail: null,\n  updateMemberError: \"\",\n  updateMemberLoading: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/organizations/members.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MembersState",
                "defaultValue": "{\n  loadingResendInvite: null,\n  sentResendInvite: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/organizations/organizations.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OrganizationsState",
                "defaultValue": "{\n  organizations: [],\n  activeOrganizationId: null,\n  activeOrganization: null,\n  organizationMembers: [],\n  organizationTeams: [],\n  errors: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: \"\",\n  },\n  loading: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: false,\n  },\n  initialLoad: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/reset-password/reset-password.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResetPasswordState",
                "defaultValue": "{\n  setNewPasswordError: \"\",\n  setNewPasswordLoading: false,\n  sendResetEmailError: \"\",\n  sendResetEmailLoading: false,\n  sendResetEmailSuccess: \"\",\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/subscriptions/subscriptions.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SubscriptionsState",
                "defaultValue": "{\n  subscription: null,\n  eventsCount: null,\n  products: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/teams/teams.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TeamsState",
                "defaultValue": "{\n  teams: null,\n  team: null,\n  teamMembers: [],\n  errors: { updateName: \"\", deleteTeam: \"\" },\n  loading: { updateName: false, deleteTeam: false },\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/user/user.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserState",
                "defaultValue": "{\n  user: null,\n  disconnectLoading: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/user-reports/user-reports.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserReportsState",
                "defaultValue": "{\n  reports: null,\n  errors: null,\n  pagination: initialPaginationState,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/issue-detail.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IssueDetailState",
                "defaultValue": "{\n  issue: null,\n  event: null,\n  tags: null,\n  isReversed: true,\n  showShowMore: false,\n  issueLoading: false,\n  issueInitialLoadComplete: false,\n  eventLoading: false,\n  eventInitialLoadComplete: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/auth-tokens/auth-tokens.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthTokensState",
                "defaultValue": "{\n  apiTokens: [],\n  loading: {\n    apiTokens: false,\n    create: false,\n    delete: null,\n  },\n  createError: \"\",\n  createErrorLabel: \"\",\n  createErrorScopes: \"\",\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MFAState",
                "defaultValue": "{\n  userKeys: [],\n  initialLoad: false,\n  setupTOTPStage: 1,\n  TOTPResponse: null,\n  serverError: {},\n  backupCodes: null,\n  copiedCodes: false,\n  enteredCode: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/notifications/notifications.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "NotificationsState",
                "defaultValue": "{\n  projectViewExpanded: false,\n  subscribeByDefault: true,\n  subscribeByDefaultLoading: false,\n  subscribeByDefaultError: \"\",\n  groupedProjects: [],\n  projectAlertLoading: \"\",\n  projectAlertError: { error: \"\", id: \"\" },\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/project-settings.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProjectSettingsState",
                "defaultValue": "{\n  projects: null,\n  projectsOnTeam: [],\n  projectsNotOnTeam: [],\n  projectDetail: null,\n  projectKeys: null,\n  loading: { addProjectToTeam: false, removeProjectFromTeam: \"\" },\n  errors: { addProjectToTeam: \"\", removeProjectFromTeam: \"\" },\n  pagination: initialPaginationState,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProjectAlertState",
                "defaultValue": "{\n  initialLoad: false,\n  initialLoadError: null,\n  projectAlerts: null,\n  newAlertState: initialNewAlertState,\n  recipientDialogState: initialRecipientDialogState,\n  // current alerts\n  removeAlertLoading: null,\n  removeAlertError: null,\n  updateTimespanQuantityLoading: null,\n  updateTimespanQuantityError: null,\n  deleteRecipientLoading: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProjectsState",
                "defaultValue": "{\n  initialLoad: false,\n  toggleHiddenLoading: null,\n  error: \"\",\n  environments: [],\n}"
            },
            {
                "name": "IssueDetailTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/issue-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const issueMetadata: any = {\n    directive: \"metadata directive\",\n    function: \"metadata function\",\n    message: \"metadata message\",\n    origin: \"metadata origin\",\n    title: \"metadata title\",\n    type: \"metadata type\",\n    uri: \"metadata uri\",\n    value: \"metadata value\",\n  };\n  return {\n    component: IssueDetailTitleComponent,\n    props: {\n      issueType: select(\n        \"Issue Type\",\n        {\n          Error: \"error\",\n          CSP: \"csp\",\n          expectct: \"expectct\",\n          Default: \"whatever\",\n        },\n        \"whatever\"\n      ),\n      culprit: select(\n        \"Culprit\",\n        { Culprit: \"this is the culprit\", Empty: \"\" },\n        \"this is the culprit\"\n      ),\n      metadata: issueMetadata,\n    },\n  };\n}"
            },
            {
                "name": "IssueEventList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-by-issue-test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Event[]",
                "defaultValue": "[\n  {\n    eventID: \"a58902b72e3e45f58ab9ecfb08297fd1\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:25:31Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"a58902b72e3e45f58ab9ecfb08297fd1\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"f750f067686d4bf78e7512c8dfe47089\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:25:27Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"f750f067686d4bf78e7512c8dfe47089\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"47f42c33f3ed46da8499385273952a7c\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:24:50Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"47f42c33f3ed46da8499385273952a7c\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"00ad4149b92043f29d591e74f4167f90\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:24:28Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"00ad4149b92043f29d591e74f4167f90\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"59211189118c4133b4d2e1917d4fe845\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:23:36Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"59211189118c4133b4d2e1917d4fe845\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"32bebb93704c4cd3886f22c47b2df3c4\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:22:51Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"32bebb93704c4cd3886f22c47b2df3c4\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n]"
            },
            {
                "name": "issueList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issues-page/issues-test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Issue[]",
                "defaultValue": "[\n  {\n    lastSeen: \"2021-02-19T18:56:01.952Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-fatal/\",\n    title: \"fatal custom level\",\n    id: 240,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"fatal custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: false,\n    shortId: \"DJANGO-G\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:56:01.952Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"fatal\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n  {\n    lastSeen: \"2021-02-19T18:55:59.366Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-error/\",\n    title: \"error custom level\",\n    id: 239,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"error custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: false,\n    shortId: \"DJANGO-F\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:55:59.366Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"error\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n  {\n    lastSeen: \"2021-02-19T18:55:56.932Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-warning/\",\n    title: \"warning custom level\",\n    id: 238,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"warning custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: true,\n    shortId: \"DJANGO-E\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:55:56.932Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"warning\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n  {\n    lastSeen: \"2021-02-19T18:55:53.808Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-info/\",\n    title: \"info custom level\",\n    id: 237,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"info custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: false,\n    shortId: \"DJANGO-D\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:55:53.808Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"info\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n]"
            },
            {
                "name": "issueListItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issues-page/issue-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const statesDefaultValue = \"normal\";\n  const statesOptions = {\n    \"Normal, all projects\": statesDefaultValue,\n    \"Normal, one project applied\": \"normalOneProjectApplied\",\n    \"Initial Load\": \"initialLoad\",\n    \"Loading with URL params (page change is a common use case)\": \"loading\",\n    \"Loading without URL Params (should only be happening when issue length is 0)\":\n      \"loadingWithoutParams\",\n    \"Normal, some issues selected (checkboxes for issues won't check in storybook)\":\n      \"normalIssuesSelected\",\n    \"Normal, all issues selected (checkboxes for issues won't check in storybook)\":\n      \"normalIssuesAllSelected\",\n    \"Organization Has No Projects\": \"orgHasNoProjects\",\n    \"No Issues because there are URL params (for example, search query is applied)\":\n      \"noIssuesUrlParams\",\n    \"No Issues\": \"noIssues\",\n    \"No Issues, multiple projects\": \"noIssuesMultipleProjects\",\n    \"No Issues because you're not on the team, single project\":\n      \"noIssuesNotOnTeamSingleProject\",\n    \"No Issues because you're not on the team, multiple projects\":\n      \"noIssuesNotOnTeamMultipleProjects\",\n    \"Some issues show, but you're not on the team for some of the projects\":\n      \"someIssuesButNotOnTeamForAll\",\n  };\n  const states = select(\"States\", statesOptions, statesDefaultValue);\n\n  const sensibleDefaults = {\n    initialLoadComplete: true,\n    loading: false,\n    issueLength: issueList.length,\n    orgHasAProject: true,\n    appliedProjectCount: 0,\n    urlHasParam: false,\n    projectsWhereAdminIsNotOnTheTeam: [],\n    thereAreSelectedIssues: false,\n    areAllSelected: false,\n    userNotInSomeTeams: false,\n  };\n\n  const pageStateConfig: any = {\n    normal: {\n      ...sensibleDefaults,\n    },\n    normalOneProjectApplied: {\n      ...sensibleDefaults,\n      appliedProjectCount: 1,\n    },\n    normalIssuesSelected: {\n      ...sensibleDefaults,\n      thereAreSelectedIssues: true,\n    },\n    normalIssuesAllSelected: {\n      ...sensibleDefaults,\n      thereAreSelectedIssues: true,\n      areAllSelected: true,\n    },\n    initialLoad: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      initialLoadComplete: false,\n      loading: true,\n    },\n    loading: {\n      ...sensibleDefaults,\n      initialLoadComplete: false,\n      loading: true,\n      urlHasParam: true,\n    },\n    loadingWithoutParams: {\n      ...sensibleDefaults,\n      initialLoadComplete: false,\n      loading: true,\n      issueLength: 0,\n    },\n    orgHasNoProjects: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      orgHasAProject: false,\n    },\n    noIssues: {\n      ...sensibleDefaults,\n      issueLength: 0,\n    },\n    noIssuesMultipleProjects: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      appliedProjectCount: 4,\n    },\n    noIssuesUrlParams: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      urlHasParam: true,\n    },\n    noIssuesNotOnTeamSingleProject: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      projectsWhereAdminIsNotOnTheTeam: [sampleProjects[1]],\n    },\n    noIssuesNotOnTeamMultipleProjects: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      appliedProjectCount: 4,\n      projectsWhereAdminIsNotOnTheTeam: [sampleProjects[1], sampleProjects[4]],\n    },\n    someIssuesButNotOnTeamForAll: {\n      ...sensibleDefaults,\n      issueLength: 4,\n      userNotInSomeTeams: true,\n    },\n  };\n\n  return {\n    component: IssuesPageComponent,\n    props: {\n      // initialLoadComplete$: of(pageStateConfig[states].initialLoadComplete),\n      loading$: of(pageStateConfig[states].loading),\n      appliedProjectCount$: of(pageStateConfig[states].appliedProjectCount),\n      areAllSelected$: of(pageStateConfig[states].areAllSelected),\n      thereAreSelectedIssues$: of(\n        pageStateConfig[states].thereAreSelectedIssues\n      ),\n      // orgHasAProject$: of(pageStateConfig[states].orgHasAProject),\n      projectsFromParams$: of([2, 3, 4]),\n      // projectsWhereAdminIsNotOnTheTeam$: of(\n      //   pageStateConfig[states].projectsWhereAdminIsNotOnTheTeam\n      // ),\n      issues$: of(issueList.slice(0, pageStateConfig[states].issueLength)),\n      // userNotInSomeTeams$: of(pageStateConfig[states].userNotInSomeTeams),\n    },\n  };\n}"
            },
            {
                "name": "jsError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  message: \"A Generic Error\",\n  exception: {\n    values: [\n      {\n        value: \"A Generic Error\",\n        type: \"Error\",\n        mechanism: { synthetic: true, handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: Date.now() / 1000,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"8e2b111ba056f7b5\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"1179b08e3ec14455836d323ab9af1d86\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617135472.93,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617135472.935,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617135472.946,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617135472.975,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617135472946\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: { \"User-Agent\": randomUserAgent() },\n  },\n})"
            },
            {
                "name": "jsRangeError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"RangeError\",\n        value: \"The number must be between 0 and 10.\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 209,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_17_listener\",\n              in_app: true,\n              lineno: 209,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"checkRange\",\n              in_app: true,\n              lineno: 147,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119801.843,\n  environment: environments.production,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "jsReferenceError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"ReferenceError\",\n        value: \"undefinedVariable is not defined\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 215,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_20_listener\",\n              in_app: true,\n              lineno: 215,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"throwReferenceError\",\n              in_app: true,\n              lineno: 152,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119948.811,\n  environment: environments.staging,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      status: \"cancelled\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n        visibilitychange: \"document.hidden\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617119801.846,\n      category: \"sentry.event\",\n      event_id: \"2dd83f0e558c43be8f74b6ac310e3cd7\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.849,\n      category: \"sentry.event\",\n      event_id: \"984c336e2767438da5cd62f26ad88862\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.851,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"The number must be between 0 and 10.\",\n            name: \"RangeError\",\n            stack:\n              \"checkRange@http://localhost:4201/main.js:147:19\\nAppComponent_Template_button_click_17_listener@http://localhost:4201/main.js:209:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:209:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.852,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "jsSyntaxError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"ReferenceError\",\n        value: \"nope is not defined\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 221,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_23_listener\",\n              in_app: true,\n              lineno: 221,\n            },\n            {\n              colno: 9,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"throwSyntaxError\",\n              in_app: true,\n              lineno: 155,\n            },\n            {\n              filename: \"http://localhost:4201/main.js\",\n              function: \"eval\",\n              in_app: true,\n              lineno: 155,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119974.697,\n  environment: environments.development,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      status: \"cancelled\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n        visibilitychange: \"document.hidden\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617119801.846,\n      category: \"sentry.event\",\n      event_id: \"2dd83f0e558c43be8f74b6ac310e3cd7\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.849,\n      category: \"sentry.event\",\n      event_id: \"984c336e2767438da5cd62f26ad88862\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.851,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"The number must be between 0 and 10.\",\n            name: \"RangeError\",\n            stack:\n              \"checkRange@http://localhost:4201/main.js:147:19\\nAppComponent_Template_button_click_17_listener@http://localhost:4201/main.js:209:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:209:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.852,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n    {\n      timestamp: 1617119948.814,\n      category: \"sentry.event\",\n      event_id: \"76879380a28f49c3af3dc5ab09f3f688\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.818,\n      category: \"sentry.event\",\n      event_id: \"d1d28a88ed8a49c2b5169399bd01fe4d\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.82,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"undefinedVariable is not defined\",\n            name: \"ReferenceError\",\n            stack:\n              \"throwReferenceError@http://localhost:4201/main.js:152:17\\nAppComponent_Template_button_click_20_listener@http://localhost:4201/main.js:215:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:215:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.822,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "jsUriError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"URIError\",\n        value: \"malformed URI sequence\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 227,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_26_listener\",\n              in_app: true,\n              lineno: 227,\n            },\n            {\n              colno: 27,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"throwUriError\",\n              in_app: true,\n              lineno: 158,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119993.442,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      status: \"cancelled\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n        visibilitychange: \"document.hidden\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617119801.846,\n      category: \"sentry.event\",\n      event_id: \"2dd83f0e558c43be8f74b6ac310e3cd7\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.849,\n      category: \"sentry.event\",\n      event_id: \"984c336e2767438da5cd62f26ad88862\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.851,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"The number must be between 0 and 10.\",\n            name: \"RangeError\",\n            stack:\n              \"checkRange@http://localhost:4201/main.js:147:19\\nAppComponent_Template_button_click_17_listener@http://localhost:4201/main.js:209:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:209:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.852,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n    {\n      timestamp: 1617119948.814,\n      category: \"sentry.event\",\n      event_id: \"76879380a28f49c3af3dc5ab09f3f688\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.818,\n      category: \"sentry.event\",\n      event_id: \"d1d28a88ed8a49c2b5169399bd01fe4d\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.82,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"undefinedVariable is not defined\",\n            name: \"ReferenceError\",\n            stack:\n              \"throwReferenceError@http://localhost:4201/main.js:152:17\\nAppComponent_Template_button_click_20_listener@http://localhost:4201/main.js:215:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:215:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.822,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n    {\n      timestamp: 1617119974.699,\n      category: \"sentry.event\",\n      event_id: \"0a1c63f986d8476fb88d4efa5382c7af\",\n      level: \"error\",\n      message: \"ReferenceError: nope is not defined\",\n    },\n    {\n      timestamp: 1617119974.705,\n      category: \"sentry.event\",\n      event_id: \"7dcf0e7f62b54ebdb0fb9938a0501d09\",\n      level: \"error\",\n      message: \"ReferenceError: nope is not defined\",\n    },\n    {\n      timestamp: 1617119974.708,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"nope is not defined\",\n            name: \"ReferenceError\",\n            stack:\n              \"@http://localhost:4201/main.js line 155 > eval:1:1\\nthrowSyntaxError@http://localhost:4201/main.js:155:9\\nAppComponent_Template_button_click_23_listener@http://localhost:4201/main.js:221:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:221:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"ReferenceError: nope is not defined\",\n    },\n    {\n      timestamp: 1617119974.71,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "loadingButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: LoadingButtonComponent,\n    props: {\n      buttonText: text(\"Button Text\", \"ClickMe\"),\n      loading: boolean(\"Loading\", false),\n    },\n  };\n}"
            },
            {
                "name": "localPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(name: string, type?: string): string =>\n  `static/assets/images/logos/48x48/${name}.${type ? type : \"png\"}`"
            },
            {
                "name": "logging",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/django-events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  level: \"warning\",\n  logger: \"errors.views\",\n  logentry: { message: \"Server warning: better have a look\", params: [] },\n  extra: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  event_id: \"78d24ed7495c46fc8dbde72c1f20679b\",\n  timestamp: \"2020-04-24T18:23:02.950832Z\",\n  breadcrumbs: [],\n  transaction: \"/warning/\",\n  contexts: {\n    trace: {\n      trace_id: \"1022e5e9d8e44d2ebafddfa839b58c5f\",\n      span_id: \"9d329137b651e5ce\",\n      parent_span_id: \"b18a82b300d6699d\",\n      op: \"django.middleware\",\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n    },\n    runtime: {\n      name: \"CPython\",\n      version: \"3.8.2\",\n      build: \"3.8.2 (default, Feb 26 2020, 15:09:34) \\n[GCC 8.3.0]\",\n    },\n  },\n  modules: {\n    wheel: \"0.34.2\",\n    webencodings: \"0.5.1\",\n    wcwidth: \"0.1.8\",\n    urllib3: \"1.25.8\",\n    \"typed-ast\": \"1.4.1\",\n    traitlets: \"4.3.3\",\n    tomlkit: \"0.5.11\",\n    toml: \"0.10.0\",\n    sqlparse: \"0.3.1\",\n    six: \"1.14.0\",\n    appdirs: \"1.4.3\",\n  },\n  request: {\n    url: \"http://localhost:8001/warning/\",\n    query_string: \"\",\n    method: \"GET\",\n    env: { SERVER_NAME: \"5949a3cc0cd4\", SERVER_PORT: \"8001\" },\n    headers: {\n      \"Content-Length\": \"\",\n      \"Content-Type\": \"text/plain\",\n      Host: \"localhost:8001\",\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\",\n      Accept:\n        \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n      \"Accept-Language\": \"en-US,en;q=0.5\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      Referer: \"http://localhost:8001/\",\n      Connection: \"keep-alive\",\n      Cookie: \"\",\n      \"Upgrade-Insecure-Requests\": \"1\",\n      \"Cache-Control\": \"max-age=0\",\n    },\n  },\n  server_name: \"5949a3cc0cd4\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.14.2\",\n    packages: [{ name: \"pypi:sentry-sdk\", version: \"0.14.2\" }],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\",\n    ],\n  },\n  platform: \"python\",\n  _meta: {\n    request: {\n      headers: { Cookie: { \"\": { rem: [[\"!config\", \"x\", 0, 1110]] } } },\n    },\n  },\n}"
            },
            {
                "name": "Many",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/forms/form-error/form-error.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    error: {\n      non_field_errors: [\n        \"Something went wrong\",\n        \"Another thing went wrong too\",\n      ],\n    },\n  },\n})"
            },
            {
                "name": "mobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  \"cocoa-objc\",\n  \"cocoa-swift\",\n  \"java-android\",\n  \"cordova\",\n  \"react-native\",\n]"
            },
            {
                "name": "newProject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: \"newcypresstestproject\",\n  platform: \"newcypresstestplatform\",\n}"
            },
            {
                "name": "newTeam",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  slug: \"newcypresstestteam\",\n}"
            },
            {
                "name": "noReverseMatch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/django-events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  level: \"error\",\n  exception: {\n    values: [\n      {\n        module: \"django.urls.exceptions\",\n        type: \"NoReverseMatch\",\n        value:\n          \"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n        mechanism: {\n          type: \"django\",\n          handled: false,\n        },\n        stacktrace: {\n          frames: [\n            {\n              filename: \"django/core/handlers/exception.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n              function: \"inner\",\n              module: \"django.core.handlers.exception\",\n              lineno: 34,\n              pre_context: [\n                \"    can rely on getting a response instead of an exception.\",\n                '    \"\"\"',\n                \"    @wraps(get_response)\",\n                \"    def inner(request):\",\n                \"        try:\",\n              ],\n              context_line: \"            response = get_response(request)\",\n              post_context: [\n                \"        except Exception as exc:\",\n                \"            response = response_for_exception(request, exc)\",\n                \"        return response\",\n                \"    return inner\",\n                \"\",\n              ],\n              vars: {\n                request: \"<WSGIRequest: GET '/template-error/'>\",\n                exc:\n                  \"NoReverseMatch(\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\")\",\n                get_response:\n                  \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7fc14cb6efa0>>\",\n              },\n            },\n            {\n              filename: \"django/core/handlers/base.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n              function: \"_get_response\",\n              module: \"django.core.handlers.base\",\n              lineno: 145,\n              pre_context: [\n                \"                    )\",\n                \"\",\n                \"            try:\",\n                \"                response = response.render()\",\n                \"            except Exception as e:\",\n              ],\n              context_line:\n                \"                response = self.process_exception_by_middleware(e, request)\",\n              post_context: [\n                \"\",\n                \"        return response\",\n                \"\",\n                \"    def process_exception_by_middleware(self, exception, request):\",\n                '        \"\"\"',\n              ],\n              vars: {\n                self:\n                  \"<django.core.handlers.wsgi.WSGIHandler object at 0x7fc14cb6efa0>\",\n                request: \"<WSGIRequest: GET '/template-error/'>\",\n                response:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                resolver:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                resolver_match:\n                  \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                callback: \"<function TemplateErrorView at 0x7fc14c63f940>\",\n                callback_args: [],\n                callback_kwargs: {},\n                middleware_method:\n                  \"<function CsrfViewMiddleware.process_view at 0x7fc14bc8ce50>\",\n                wrapped_callback:\n                  \"<function TemplateErrorView at 0x7fc14c63f940>\",\n              },\n            },\n            {\n              filename: \"django/core/handlers/base.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n              function: \"_get_response\",\n              module: \"django.core.handlers.base\",\n              lineno: 143,\n              pre_context: [\n                '                        \"HttpResponse object. It returned None instead.\"',\n                \"                        % (middleware_method.__self__.__class__.__name__)\",\n                \"                    )\",\n                \"\",\n                \"            try:\",\n              ],\n              context_line: \"                response = response.render()\",\n              post_context: [\n                \"            except Exception as e:\",\n                \"                response = self.process_exception_by_middleware(e, request)\",\n                \"\",\n                \"        return response\",\n                \"\",\n              ],\n              vars: {\n                self:\n                  \"<django.core.handlers.wsgi.WSGIHandler object at 0x7fc14cb6efa0>\",\n                request: \"<WSGIRequest: GET '/template-error/'>\",\n                response:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                resolver:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                resolver_match:\n                  \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                callback: \"<function TemplateErrorView at 0x7fc14c63f940>\",\n                callback_args: [],\n                callback_kwargs: {},\n                middleware_method:\n                  \"<function CsrfViewMiddleware.process_view at 0x7fc14bc8ce50>\",\n                wrapped_callback:\n                  \"<function TemplateErrorView at 0x7fc14c63f940>\",\n              },\n            },\n            {\n              filename: \"django/template/response.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/template/response.py\",\n              function: \"render\",\n              module: \"django.template.response\",\n              lineno: 105,\n              pre_context: [\n                \"\",\n                \"        Return the baked response instance.\",\n                '        \"\"\"',\n                \"        retval = self\",\n                \"        if not self._is_rendered:\",\n              ],\n              context_line: \"            self.content = self.rendered_content\",\n              post_context: [\n                \"            for post_callback in self._post_render_callbacks:\",\n                \"                newretval = post_callback(retval)\",\n                \"                if newretval is not None:\",\n                \"                    retval = newretval\",\n                \"        return retval\",\n              ],\n              vars: {\n                self:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                retval:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n              },\n            },\n            {\n              filename: \"django/urls/base.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/urls/base.py\",\n              function: \"reverse\",\n              module: \"django.urls.base\",\n              lineno: 87,\n              pre_context: [\n                \"                else:\",\n                '                    raise NoReverseMatch(\"%s is not a registered namespace\" % key)',\n                \"        if ns_pattern:\",\n                \"            resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))\",\n                \"\",\n              ],\n              context_line:\n                \"    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))\",\n              post_context: [\n                \"\",\n                \"\",\n                \"reverse_lazy = lazy(reverse, str)\",\n                \"\",\n                \"\",\n              ],\n              vars: {\n                viewname: \"'nope'\",\n                urlconf: \"'django_error_factory.urls'\",\n                args: [],\n                kwargs: {},\n                current_app: \"''\",\n                resolver:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                prefix: \"'/'\",\n                view: \"'nope'\",\n                path: [],\n                current_path: \"None\",\n              },\n            },\n            {\n              filename: \"django/urls/resolvers.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/urls/resolvers.py\",\n              function: \"_reverse_with_prefix\",\n              module: \"django.urls.resolvers\",\n              lineno: 677,\n              pre_context: [\n                \"        else:\",\n                \"            msg = (\",\n                \"                \\\"Reverse for '%(view)s' not found. '%(view)s' is not \\\"\",\n                \"                \\\"a valid view function or pattern name.\\\" % {'view': lookup_view_s}\",\n                \"            )\",\n              ],\n              context_line: \"        raise NoReverseMatch(msg)\",\n              post_context: [],\n              vars: {\n                self:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                lookup_view: \"'nope'\",\n                _prefix: \"'/'\",\n                args: [],\n                possibilities: [],\n                m: \"None\",\n                n: \"None\",\n                lookup_view_s: \"'nope'\",\n                patterns: [],\n                msg:\n                  \"\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\"\",\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n  event_id: \"3e7c1345914d4924926d795ade8240cb\",\n  timestamp: \"2020-05-13T00:37:49.130239Z\",\n  breadcrumbs: [],\n  transaction: \"/template-error/\",\n  contexts: {\n    trace: {\n      trace_id: \"7f6b76eac5d042b78752db640a848008\",\n      span_id: \"802ffce6fe075f40\",\n      parent_span_id: \"be0f515132150c50\",\n      op: \"django.middleware\",\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n    },\n    runtime: {\n      name: \"CPython\",\n      version: \"3.8.2\",\n      build: \"3.8.2 (default, Apr 23 2020, 14:32:57) \\n[GCC 8.3.0]\",\n    },\n  },\n  modules: {\n    wheel: \"0.34.2\",\n    webencodings: \"0.5.1\",\n    attrs: \"19.3.0\",\n    asgiref: \"3.2.7\",\n    appdirs: \"1.4.3\",\n  },\n  extra: {\n    \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"],\n  },\n  request: {\n    url: \"http://localhost:8001/template-error/\",\n    query_string: \"\",\n    method: \"GET\",\n    env: {\n      SERVER_NAME: \"4c55e9e8d666\",\n      SERVER_PORT: \"8001\",\n    },\n    headers: {\n      \"Content-Length\": \"\",\n      \"Content-Type\": \"text/plain\",\n      Host: \"localhost:8001\",\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0\",\n      Accept:\n        \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n      \"Accept-Language\": \"en-US,en;q=0.5\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      Connection: \"keep-alive\",\n      Referer: \"http://localhost:8001/\",\n      Cookie: \"\",\n      \"Upgrade-Insecure-Requests\": \"1\",\n      Dnt: \"1\",\n    },\n  },\n  server_name: \"4c55e9e8d666\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.14.3\",\n    packages: [\n      {\n        name: \"pypi:sentry-sdk\",\n        version: \"0.14.3\",\n      },\n    ],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\",\n    ],\n  },\n  platform: \"python\",\n  _meta: {\n    exception: {\n      values: {\n        \"0\": {\n          stacktrace: {\n            frames: {\n              \"12\": {\n                vars: {\n                  \"\": {\n                    len: 13,\n                  },\n                },\n              },\n              \"13\": {\n                vars: {\n                  \"\": {\n                    len: 11,\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    request: {\n      headers: {\n        Cookie: {\n          \"\": {\n            rem: [[\"!config\", \"x\", 0, 373]],\n          },\n        },\n      },\n    },\n  },\n}"
            },
            {
                "name": "NotDone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/to-do-item/to-do-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    title: \"You'll need to do this\",\n  },\n})"
            },
            {
                "name": "oAuthConfigs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/oauth/social.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OAuthConfig[]",
                "defaultValue": "[\n  {\n    loginURL: \"https://gitlab.com/oauth/authorize\",\n    scope: \"read_user\",\n    name: \"gitlab\",\n  },\n  {\n    loginURL: \"https://accounts.google.com/o/oauth2/v2/auth\",\n    scope: \"openid profile email\",\n    name: \"google\",\n  },\n  {\n    loginURL: \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n    scope: \"User.Read\",\n    name: \"microsoft\",\n  },\n  {\n    loginURL: \"https://github.com/login/oauth/authorize\",\n    scope: \"read:user user:email\",\n    name: \"github\",\n  },\n]",
                "rawdescription": "Every possible OAuth Config supported",
                "description": "<p>Every possible OAuth Config supported</p>\n"
            },
            {
                "name": "One",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/forms/form-error/form-error.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    error: { non_field_errors: [\"Something went wrong\"] },\n  },\n})"
            },
            {
                "name": "organization",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: \"Business Company, Inc.\",\n  slug: \"business-company-inc\",\n  otherOrg: \"cypress-test-org-other\",\n}"
            },
            {
                "name": "organizationList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/organizations/organization-test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Organization[]",
                "defaultValue": "[\n  {\n    id: 2,\n    name: \"test org\",\n    slug: \"test-org\",\n    dateCreated: \"2019-12-20T14:50:31.641549Z\",\n    status: {\n      id: \"active\",\n      name: \"active\",\n    },\n    avatar: {\n      avatarType: \"\",\n      avatarUuid: null,\n    },\n    isEarlyAdopter: false,\n    require2FA: false,\n    isAcceptingEvents: true,\n  },\n  {\n    id: 1,\n    name: \"prince ali\",\n    slug: \"prince-ali\",\n    dateCreated: \"2019-12-20T14:49:28.631459Z\",\n    status: {\n      id: \"active\",\n      name: \"active\",\n    },\n    avatar: {\n      avatarType: \"\",\n      avatarUuid: null,\n    },\n    isEarlyAdopter: false,\n    require2FA: false,\n    isAcceptingEvents: true,\n  },\n]"
            },
            {
                "name": "osPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(name: string): string =>\n  `static/assets/images/os-logos/${name}.png`"
            },
            {
                "name": "otherPlatform",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Platform",
                "defaultValue": "{\n  integrations: [\n    {\n      link: \"\",\n      type: \"language\",\n      id: \"other\",\n      name: \"Other\",\n    },\n  ],\n  id: \"other\",\n  name: \"Other\",\n}"
            },
            {
                "name": "pageNotFound",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/page-not-found.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"121da0ea18894a6e9eafe7d7027fec4b\",\n  id: \"121da0ea18894a6e9eafe7d7027fec4b\",\n  issue: 13,\n  user: null,\n  contexts: {\n    trace: {\n      op: \"django.middleware\",\n      span_id: \"85bee10ac7bb746c\",\n      trace_id: \"52c5c9d9b7304cce95659e5d0615601c\",\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"bfac543765f9ce61\",\n    },\n    runtime: {\n      name: \"CPython\",\n      build: \"3.8.2 (default, Feb 26 2020, 15:09:34) \\n[GCC 8.3.0]\",\n      version: \"3.8.2\",\n    },\n  },\n  culprit: \"/message/\",\n  dateCreated: \"2020-03-13T13:33:44.881822Z\",\n  dateReceived: \"2020-03-13T13:33:44.993168Z\",\n  entries: [\n    {\n      type: \"request\",\n      data: {\n        env: {\n          SERVER_NAME: \"52c1bc4559ee\",\n          SERVER_PORT: \"8001\",\n        },\n        url: \"http://localhost:8001/message/\",\n        method: \"GET\",\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Cookie\", \"\"],\n          [\"Dnt\", \"1\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:74.0) Gecko/20100101 Firefox/74.0\",\n          ],\n        ],\n        query_string: \"\",\n        inferredContentType: \"text/plain\",\n      },\n    },\n  ],\n  metadata: {\n    title: \"Page not found!\",\n  },\n  packages: {\n    pip: \"20.0.2\",\n    six: \"1.14.0\",\n    cffi: \"1.14.0\",\n    cleo: \"0.7.6\",\n    idna: \"2.9\",\n    ipdb: \"0.12.3\",\n    jedi: \"0.16.0\",\n    pytz: \"2019.3\",\n    toml: \"0.10.0\",\n    attrs: \"19.3.0\",\n    black: \"19.10b0\",\n    cachy: \"0.3.0\",\n    click: \"7.0\",\n    parso: \"0.6.2\",\n    pylev: \"1.3.0\",\n    regex: \"2020.2.20\",\n    wheel: \"0.34.2\",\n    clikit: \"0.4.2\",\n    django: \"3.0.4\",\n    pastel: \"0.2.0\",\n    poetry: \"1.0.0\",\n    appdirs: \"1.4.3\",\n    asgiref: \"3.2.3\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    ipython: \"7.13.0\",\n    jeepney: \"0.4.3\",\n    keyring: \"19.3.0\",\n    msgpack: \"1.0.0\",\n    pexpect: \"4.8.0\",\n    pkginfo: \"1.5.0.1\",\n    tomlkit: \"0.5.11\",\n    urllib3: \"1.25.8\",\n    wcwidth: \"0.1.8\",\n    backcall: \"0.1.0\",\n    html5lib: \"1.0.1\",\n    lockfile: \"0.12.2\",\n    pathspec: \"0.7.0\",\n    pygments: \"2.6.1\",\n    requests: \"2.23.0\",\n    sqlparse: \"0.3.1\",\n    decorator: \"4.4.2\",\n    pycparser: \"2.20\",\n    pyparsing: \"2.4.6\",\n    traitlets: \"4.3.3\",\n    \"typed-ast\": \"1.4.1\",\n    jsonschema: \"3.2.0\",\n    ptyprocess: \"0.6.0\",\n    pyrsistent: \"0.14.11\",\n    \"sentry-sdk\": \"0.14.2\",\n    setuptools: \"45.2.0\",\n    pickleshare: \"0.7.5\",\n    shellingham: \"1.3.2\",\n    cachecontrol: \"0.12.6\",\n    cryptography: \"2.8\",\n    webencodings: \"0.5.1\",\n    secretstorage: \"3.1.2\",\n    \"prompt-toolkit\": \"3.0.3\",\n    \"ipython-genutils\": \"0.2.0\",\n    \"requests-toolbelt\": \"0.8.0\",\n  },\n  platform: \"python\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.14.2\",\n    packages: [\n      {\n        name: \"pypi:sentry-sdk\",\n        version: \"0.14.2\",\n      },\n    ],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\",\n    ],\n  },\n  tags: [],\n  title: \"Page not found!\",\n  type: \"default\",\n  nextEventID: null,\n  previousEventID: null,\n}"
            },
            {
                "name": "PlatformPickerButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: PlatformPickerComponent,\n    props: {\n      template: \"buttons\",\n    },\n  };\n}"
            },
            {
                "name": "PlatformPickerDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return {\n    component: PlatformPickerComponent,\n    props: {\n      template: \"dropdown\",\n    },\n  };\n}"
            },
            {
                "name": "platforms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platforms.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Platform[]",
                "defaultValue": "[\n  {\n    id: \"csharp\",\n    name: \"C#\",\n    integrations: [\n      {\n        id: \"csharp-aspnetcore\",\n        name: \"ASP.NET Core\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=aspnetcore\",\n      },\n      {\n        id: \"csharp\",\n        name: \"C#\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=csharp\",\n      },\n    ],\n  },\n  {\n    id: \"cordova\",\n    name: \"Cordova\",\n    integrations: [\n      {\n        id: \"cordova\",\n        name: \"Cordova\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=cordova\",\n      },\n    ],\n  },\n  {\n    id: \"electron\",\n    name: \"Electron\",\n    integrations: [\n      {\n        id: \"electron\",\n        name: \"Electron\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=electron\",\n      },\n    ],\n  },\n  {\n    id: \"elixir\",\n    name: \"Elixir\",\n    integrations: [\n      {\n        id: \"elixir\",\n        name: \"Elixir\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/elixir/\",\n      },\n    ],\n  },\n  {\n    id: \"go\",\n    name: \"Go\",\n    integrations: [\n      {\n        id: \"go\",\n        name: \"Go\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=go\",\n      },\n      {\n        id: \"go-http\",\n        name: \"net/http\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/go/http/\",\n      },\n    ],\n  },\n  {\n    id: \"java\",\n    name: \"Java\",\n    integrations: [\n      {\n        id: \"java-android\",\n        name: \"Android\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/android/\",\n      },\n      {\n        id: \"java-appengine\",\n        name: \"Google App Engine\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/appengine/\",\n      },\n      {\n        id: \"java\",\n        name: \"Java\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/java/\",\n      },\n      {\n        id: \"java-logging\",\n        name: \"java.util.logging\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/jul/\",\n      },\n      {\n        id: \"java-log4j\",\n        name: \"Log4j 1.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j/\",\n      },\n      {\n        id: \"java-log4j2\",\n        name: \"Log4j 2.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j2/\",\n      },\n      {\n        id: \"java-logback\",\n        name: \"Logback\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/logback/\",\n      },\n    ],\n  },\n  {\n    id: \"javascript\",\n    name: \"JavaScript\",\n    integrations: [\n      {\n        id: \"javascript-angular\",\n        name: \"Angular\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/angular/\",\n      },\n      {\n        id: \"javascript-angularjs\",\n        name: \"AngularJS\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/angularjs/\",\n      },\n      {\n        id: \"javascript-backbone\",\n        name: \"Backbone\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/#backbone\",\n      },\n      {\n        id: \"javascript-browser\",\n        name: \"Browser JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-ember\",\n        name: \"Ember\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/ember/\",\n      },\n      {\n        id: \"javascript\",\n        name: \"JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-react\",\n        name: \"React\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/react/\",\n      },\n      {\n        id: \"javascript-vue\",\n        name: \"Vue\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/vue/\",\n      },\n    ],\n  },\n  {\n    id: \"minidump\",\n    name: \"Minidump\",\n    integrations: [\n      {\n        id: \"minidump\",\n        name: \"Minidump\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/native/minidump/\",\n      },\n    ],\n  },\n  {\n    id: \"native\",\n    name: \"Native (C/C++)\",\n    integrations: [\n      {\n        id: \"native\",\n        name: \"Native (C/C++)\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=native\",\n      },\n    ],\n  },\n  {\n    id: \"node\",\n    name: \"Node.js\",\n    integrations: [\n      {\n        id: \"node-connect\",\n        name: \"Connect\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/connect/\",\n      },\n      {\n        id: \"node-express\",\n        name: \"Express\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/express/\",\n      },\n      {\n        id: \"node-koa\",\n        name: \"Koa\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/koa/\",\n      },\n      {\n        id: \"node\",\n        name: \"Node.js\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=node\",\n      },\n    ],\n  },\n  {\n    id: \"cocoa\",\n    name: \"Objective-C\",\n    integrations: [\n      {\n        id: \"cocoa-objc\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa-swift\",\n        name: \"Swift\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n    ],\n  },\n  {\n    id: \"php\",\n    name: \"PHP\",\n    integrations: [\n      {\n        id: \"php-laravel\",\n        name: \"Laravel\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/laravel/\",\n      },\n      {\n        id: \"php-monolog\",\n        name: \"Monolog\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/monolog/\",\n      },\n      {\n        id: \"php\",\n        name: \"PHP\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=php\",\n      },\n      {\n        id: \"php-symfony\",\n        name: \"Symfony\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/symfony/\",\n      },\n      {\n        id: \"php-symfony2\",\n        name: \"Symfony2\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/symfony2/\",\n      },\n    ],\n  },\n  {\n    id: \"python\",\n    name: \"Python\",\n    integrations: [\n      {\n        id: \"python-aiohttp\",\n        name: \"AIOHTTP\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aiohttp/\",\n      },\n      {\n        id: \"python-asgi\",\n        name: \"ASGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/asgi/\",\n      },\n      {\n        id: \"python-pythonawslambda\",\n        name: \"AWS Lambda\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aws_lambda/\",\n      },\n      {\n        id: \"python-bottle\",\n        name: \"Bottle\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/bottle/\",\n      },\n      {\n        id: \"python-celery\",\n        name: \"Celery\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/celery/\",\n      },\n      {\n        id: \"python-django\",\n        name: \"Django\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/django/\",\n      },\n      {\n        id: \"python-falcon\",\n        name: \"Falcon\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/falcon/\",\n      },\n      {\n        id: \"python-flask\",\n        name: \"Flask\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/flask/\",\n      },\n      {\n        id: \"python-pylons\",\n        name: \"Pylons\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/python/integrations/pylons/\",\n      },\n      {\n        id: \"python-pyramid\",\n        name: \"Pyramid\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/pyramid/\",\n      },\n      {\n        id: \"python\",\n        name: \"Python\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=python\",\n      },\n      {\n        id: \"python-rq\",\n        name: \"RQ (Redis Queue)\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/rq/\",\n      },\n      {\n        id: \"python-sanic\",\n        name: \"Sanic\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/sanic/\",\n      },\n      {\n        id: \"python-pythonserverless\",\n        name: \"Serverless (Python)\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/serverless/\",\n      },\n      {\n        id: \"python-tornado\",\n        name: \"Tornado\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/tornado/\",\n      },\n      {\n        id: \"python-wsgi\",\n        name: \"WSGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/wsgi/\",\n      },\n    ],\n  },\n  {\n    id: \"react-native\",\n    name: \"React-Native\",\n    integrations: [\n      {\n        id: \"react-native\",\n        name: \"React-Native\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/platforms/react-native/\",\n      },\n    ],\n  },\n  {\n    id: \"ruby\",\n    name: \"Ruby\",\n    integrations: [\n      {\n        id: \"ruby-rack\",\n        name: \"Rack\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rack/\",\n      },\n      {\n        id: \"ruby-rails\",\n        name: \"Rails\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rails/\",\n      },\n      {\n        id: \"ruby\",\n        name: \"Ruby\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/ruby/\",\n      },\n    ],\n  },\n  {\n    id: \"rust\",\n    name: \"Rust\",\n    integrations: [\n      {\n        id: \"rust\",\n        name: \"Rust\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=rust\",\n      },\n    ],\n  },\n]"
            },
            {
                "name": "popular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  \"javascript\",\n  \"javascript-react\",\n  \"python-django\",\n  \"python\",\n  \"python-flask\",\n  \"ruby-rails\",\n  \"node-express\",\n  \"php-laravel\",\n  \"php-symfony2\",\n  \"java\",\n  \"csharp\",\n  \"elixir\",\n  \"php\",\n  \"ruby\",\n  \"node\",\n  \"react-native\",\n  \"javascript-angular\",\n]"
            },
            {
                "name": "postError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/post-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"a63b6a3b61dd4e72875c4e8f89091f90\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: null,\n  message:\n    \"__getitem__ MultiValueDictKeyError 'nope' django/utils/datastructures.py /post-error/\",\n  id: \"4\",\n  size: 11733,\n  errors: [],\n  culprit: \"/post-error/\",\n  title: \"MultiValueDictKeyError: 'nope'\",\n  platform: \"python\",\n  location: \"django/utils/datastructures.py\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"__getitem__\",\n    type: \"MultiValueDictKeyError\",\n    value: \"'nope'\",\n    filename: \"django/utils/datastructures.py\"\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/post-error/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/post-error/\", key: \"url\", _meta: null }\n  ],\n  dateCreated: \"2020-01-27T19:17:42.605Z\",\n  dateReceived: \"2020-01-27T19:17:42.950Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"__getitem__\",\n                  colNo: null,\n                  vars: {\n                    self: {\n                      csrfmiddlewaretoken:\n                        \"'184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z'\",\n                      param1: \"'val'\"\n                    },\n                    __class__:\n                      \"<class 'django.utils.datastructures.MultiValueDict'>\",\n                    key: \"'nope'\"\n                  },\n                  symbol: null,\n                  module: \"django.utils.datastructures\",\n                  lineNo: 76,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/utils/datastructures.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/utils/datastructures.py\",\n                  platform: null,\n                  context: [\n                    [71, '        \"\"\"'],\n                    [\n                      72,\n                      \"        Return the last data value for this key, or [] if it's an empty list;\"\n                    ],\n                    [73, \"        raise KeyError if not found.\"],\n                    [74, '        \"\"\"'],\n                    [75, \"        try:\"],\n                    [76, \"            list_ = super().__getitem__(key)\"],\n                    [77, \"        except KeyError:\"],\n                    [78, \"            raise MultiValueDictKeyError(key)\"],\n                    [79, \"        try:\"],\n                    [80, \"            return list_[-1]\"],\n                    [81, \"        except IndexError:\"]\n                  ],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: null,\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"'nope'\",\n            type: \"KeyError\"\n          },\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f0117342580>>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    exc: \"MultiValueDictKeyError('nope')\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\"\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\"\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.PostErrorView, args=(), kwargs={}, url_name=post_error, app_names=[], namespaces=[], route=post-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f01164f0790>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f0117342580>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    callback: \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    wrapped_callback:\n                      \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\"\n                    ],\n                    [120, \"                view_name = callback.__name__\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.PostErrorView, args=(), kwargs={}, url_name=post_error, app_names=[], namespaces=[], route=post-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f01164f0790>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f0117342580>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    callback: \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    wrapped_callback:\n                      \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.PostErrorView object at 0x7f0115be28b0>\",\n                    args: [],\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.PostErrorView'>\"\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\"\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__'\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\"\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.PostErrorView object at 0x7f0115be28b0>\",\n                    handler:\n                      \"<bound method PostErrorView.post of <errors.views.PostErrorView object at 0x7f0115be28b0>>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    args: [],\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\"\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\"\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\"\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\"\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\"\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\"\n                    ]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"post\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.PostErrorView object at 0x7f0115be28b0>\",\n                    args: [],\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 22,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [17, '        User.objects.get(id=\"9999999\")'],\n                    [18, \"\"],\n                    [19, \"\"],\n                    [20, \"class PostErrorView(View):\"],\n                    [21, \"    def post(self, request, *args, **kwargs):\"],\n                    [22, '        request.POST[\"nope\"]'],\n                    [23, \"\"],\n                    [24, \"\"],\n                    [25, \"class DatabaseStackErrorView(View):\"],\n                    [26, \"    def get(self, request, *args, **kwargs):\"],\n                    [27, \"        users = User.objects.all()\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"__getitem__\",\n                  colNo: null,\n                  vars: {\n                    self: {\n                      csrfmiddlewaretoken:\n                        \"'184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z'\",\n                      param1: \"'val'\"\n                    },\n                    __class__:\n                      \"<class 'django.utils.datastructures.MultiValueDict'>\",\n                    key: \"'nope'\"\n                  },\n                  symbol: null,\n                  module: \"django.utils.datastructures\",\n                  lineNo: 78,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/utils/datastructures.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/utils/datastructures.py\",\n                  platform: null,\n                  context: [\n                    [73, \"        raise KeyError if not found.\"],\n                    [74, '        \"\"\"'],\n                    [75, \"        try:\"],\n                    [76, \"            list_ = super().__getitem__(key)\"],\n                    [77, \"        except KeyError:\"],\n                    [78, \"            raise MultiValueDictKeyError(key)\"],\n                    [79, \"        try:\"],\n                    [80, \"            return list_[-1]\"],\n                    [81, \"        except IndexError:\"],\n                    [82, \"            return []\"],\n                    [83, \"\"]\n                  ],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: \"django.utils.datastructures\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"'nope'\",\n            type: \"MultiValueDictKeyError\"\n          }\n        ],\n        excOmitted: null,\n        hasSystemFrames: false\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"application/x-www-form-urlencoded\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\"\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"95\"],\n          [\"Content-Type\", \"application/x-www-form-urlencoded\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Origin\", \"http://localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\n          ]\n        ],\n        url: \"http://localhost:8001/post-error/\",\n        query: [],\n        data: {\n          csrfmiddlewaretoken:\n            \"184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z\",\n          param1: \"val\"\n        },\n        method: \"POST\"\n      }\n    }\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\"\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" }\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\"\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"a54148a280874a8a\",\n      trace_id: \"2b711fddd258410d90f1f099768325f3\",\n      span_id: \"9367782b51c6c0db\",\n      type: \"default\",\n      op: \"django.middleware\"\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" }\n  },\n  fingerprints: [\"a89b105c1f47b0602d6b89ccb2193afb\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"4\"\n}"
            },
            {
                "name": "processLinkHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {})",
                "rawdescription": "Pagination info exists in a header, this parses it out for storing.",
                "description": "<p>Pagination info exists in a header, this parses it out for storing.</p>\n"
            },
            {
                "name": "project",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: \"NicheScrip\",\n  slug: \"nichescrip\",\n}"
            },
            {
                "name": "project2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: \"SwitchGrip\",\n  slug: \"switchgrip\",\n}"
            },
            {
                "name": "project3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: \"PitchFlip\",\n  slug: \"pitchflip\",\n}"
            },
            {
                "name": "projectCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const sampleCard = boolean(\"Sample Card\", false);\n\n  return {\n    component: ProjectCardComponent,\n    props: {\n      sampleCard,\n      title: \"alpaca\",\n      descriptionList: [\n        { key: \"organization\", value: \"knit\" },\n        { key: \"date created\", value: \"Mar 30, 2020\" },\n      ],\n      primaryButton: {\n        text: \"Issues\",\n        icon: \"warning\",\n        link: \"link\",\n      },\n      secondaryButton: {\n        text: \"Settings\",\n        icon: \"settings\",\n        link: \"link\",\n      },\n      isMember: boolean(\"isMember\", true),\n    },\n  };\n}"
            },
            {
                "name": "QRCode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  props: {\n    TOTPKey$: of(null),\n    step$: of(3),\n    TOTP$: of({\n      provisioning_uri: \"https://www.example.com\",\n      secret_key: \"AAAAAAAAAA\",\n    }),\n  },\n})"
            },
            {
                "name": "randomUserAgent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const keys = Object.keys(userAgents);\n  const random = Math.floor(Math.random() * keys.length);\n  return userAgents[keys[random]];\n}"
            },
            {
                "name": "RawStacktrace",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const testValues: any = [\n    {\n      type: \"System.DivideByZeroException\",\n      value: \"Attempted to divide by zero.\",\n      module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n      stacktrace: {\n        frames: [\n          {\n            function: select(\n              \"function\",\n              { NotNull: \"inner\", Null: null },\n              \"inner\"\n            ),\n            colNo: select(\"colNo\", { NotNull: 18, Zero: 0, Null: null }, 18),\n            vars: {\n              get_response:\n                \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n              request: \"<WSGIRequest: GET '/divide-zero/'>\",\n              exc: \"ZeroDivisionError('division by zero')\",\n            },\n            symbol: null,\n            module: select(\n              \"module\",\n              { NotNull: \"django.core.handlers.exception\", Null: null },\n              \"django.core.handlers.exception\"\n            ),\n            lineNo: select(\"lineNo\", { NotNull: 34, Null: null }, 34),\n            trust: null,\n            errors: null,\n            package: select(\n              \"package\",\n              {\n                NotNull: \"/System/Library/Frameworks/UIKit.framework/UIKit\",\n                Null: null,\n              },\n              null\n            ),\n            absPath: null,\n            inApp: false,\n            instructionAddr: select(\n              \"instructionAddr\",\n              { NotNull: \"0x000000019804aa20\", Null: null },\n              null\n            ),\n            filename: select(\n              \"module\",\n              { NotNull: \"django/core/handlers/exception.py\", Null: null },\n              \"django/core/handlers/exception.py\"\n            ),\n            platform: null,\n            context: [\n              [33, \" try:\"],\n              [\n                select(\n                  \"contextLineNo\",\n                  { ThirtyFour: 34, AnotherNumber: 117, Null: null },\n                  34\n                ),\n                \" response = get_response(request)\",\n              ],\n            ],\n            symbolAddr: null,\n          },\n        ],\n      },\n    },\n  ];\n\n  return {\n    component: RawStacktraceComponent,\n    props: {\n      rawStacktraceValues$: of(testValues),\n      eventPlatform: select(\n        \"Select Platform\",\n        {\n          javascript: \"javascript\",\n          ruby: \"ruby\",\n          php: \"php\",\n          java: \"java\",\n          cocoa: \"cocoa\",\n          native: \"native\",\n          default: \"\",\n        },\n        \"javascript\"\n      ),\n    },\n  };\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "sampleEmailAddressData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/emails/sample-email-address-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EmailAddress[]",
                "defaultValue": "[\n  {\n    isPrimary: false,\n    email: \"aa@example.com\",\n    isVerified: true,\n  },\n  {\n    isPrimary: false,\n    email: \"ac@example.com\",\n    isVerified: true,\n  },\n  {\n    isPrimary: false,\n    email: \"test@example.com\",\n    isVerified: false,\n  },\n  {\n    isPrimary: true,\n    email: \"primaryEmailAddress@example.com\",\n    isVerified: true,\n  },\n  {\n    isPrimary: false,\n    email: \"hello@example.com\",\n    isVerified: false,\n  },\n]"
            },
            {
                "name": "sampleIssueDetail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/issue-detail-test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IssueDetail",
                "defaultValue": "{\n  seenBy: [\n    {\n      username: \"a@aa.aa\",\n      lastLogin: \"2021-02-11T15:40:32.272Z\",\n      isSuperuser: false,\n      emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n      isManaged: false,\n      lastActive: \"2021-02-19T19:36:09.876Z\",\n      lastSeen: \"2021-02-19T19:32:16.371Z\",\n      identities: [],\n      id: \"3\",\n      isActive: true,\n      has2fa: false,\n      name: \"EmJay\",\n      avatarUrl: \"https://secure.gravatar.com/avatar/\",\n      dateJoined: \"2020-06-08T20:55:16.046Z\",\n      options: {\n        timezone: \"UTC\",\n        stacktraceOrder: -1,\n        language: \"en\",\n        clock24Hours: false,\n      },\n      flags: { newsletter_consent_prompt: false },\n      avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n      hasPasswordAuth: true,\n      email: \"a@aa.aa\",\n    },\n  ],\n  pluginIssues: [],\n  lastSeen: \"2020-11-30T15:03:41.311Z\",\n  userReportCount: 0,\n  numComments: 0,\n  userCount: 0,\n  stats: {\n    \"30d\": [\n      [1611100800.0, 0],\n      [1611187200.0, 0],\n      [1611273600.0, 0],\n      [1611360000.0, 0],\n      [1611446400.0, 0],\n      [1611532800.0, 0],\n      [1611619200.0, 0],\n      [1611705600.0, 0],\n      [1611792000.0, 0],\n      [1611878400.0, 0],\n      [1611964800.0, 0],\n      [1612051200.0, 0],\n      [1612137600.0, 0],\n      [1612224000.0, 0],\n      [1612310400.0, 0],\n      [1612396800.0, 0],\n      [1612483200.0, 0],\n      [1612569600.0, 0],\n      [1612656000.0, 0],\n      [1612742400.0, 0],\n      [1612828800.0, 0],\n      [1612915200.0, 0],\n      [1613001600.0, 0],\n      [1613088000.0, 0],\n      [1613174400.0, 0],\n      [1613260800.0, 0],\n      [1613347200.0, 0],\n      [1613433600.0, 0],\n      [1613520000.0, 0],\n      [1613606400.0, 0],\n      [1613692800.0, 0],\n    ],\n    \"24h\": [\n      [1613674800.0, 0],\n      [1613678400.0, 0],\n      [1613682000.0, 0],\n      [1613685600.0, 0],\n      [1613689200.0, 0],\n      [1613692800.0, 0],\n      [1613696400.0, 0],\n      [1613700000.0, 0],\n      [1613703600.0, 0],\n      [1613707200.0, 0],\n      [1613710800.0, 0],\n      [1613714400.0, 0],\n      [1613718000.0, 0],\n      [1613721600.0, 0],\n      [1613725200.0, 0],\n      [1613728800.0, 0],\n      [1613732400.0, 0],\n      [1613736000.0, 0],\n      [1613739600.0, 0],\n      [1613743200.0, 0],\n      [1613746800.0, 0],\n      [1613750400.0, 0],\n      [1613754000.0, 0],\n      [1613757600.0, 0],\n      [1613761200.0, 0],\n    ],\n  },\n  culprit: \"/divide-zero/\",\n  title: \"ZeroDivisionError: division by zero\",\n  id: 107,\n  assignedTo: null,\n  participants: [\n    {\n      username: \"a@aa.aa\",\n      lastLogin: \"2021-02-11T15:40:32.272Z\",\n      isSuperuser: false,\n      emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n      isManaged: false,\n      lastActive: \"2021-02-19T19:36:09.876Z\",\n      identities: [],\n      id: \"3\",\n      isActive: true,\n      has2fa: false,\n      name: \"EmJay\",\n      avatarUrl: \"https://secure.gravatar.com/avatar/\",\n      dateJoined: \"2020-06-08T20:55:16.046Z\",\n      options: {\n        timezone: \"UTC\",\n        stacktraceOrder: -1,\n        language: \"en\",\n        clock24Hours: false,\n      },\n      flags: { newsletter_consent_prompt: false },\n      avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n      hasPasswordAuth: true,\n      email: \"a@aa.aa\",\n    },\n  ],\n  logger: null,\n  type: \"error\",\n  annotations: [],\n  metadata: {\n    function: \"get\",\n    type: \"ZeroDivisionError\",\n    value: \"division by zero\",\n    filename: \"errors/views.py\",\n  },\n  status: \"unresolved\",\n  pluginActions: [],\n  tags: [\n    { uniqueValues: 3, name: \"Browser\", key: \"browser\" },\n    { uniqueValues: 2, name: \"Browser.Name\", key: \"browser.name\" },\n    { uniqueValues: 1, name: \"Handled\", key: \"handled\" },\n    { uniqueValues: 1, name: \"Level\", key: \"level\" },\n    { uniqueValues: 1, name: \"Mechanism\", key: \"mechanism\" },\n    { uniqueValues: 2, name: \"Os.Name\", key: \"os.name\" },\n    { uniqueValues: 1, name: \"Runtime\", key: \"runtime\" },\n    { uniqueValues: 1, name: \"Runtime.Name\", key: \"runtime.name\" },\n    { uniqueValues: 3, name: \"Server\", key: \"server_name\" },\n    { uniqueValues: 1, name: \"Transaction\", key: \"transaction\" },\n    { uniqueValues: 1, name: \"URL\", key: \"url\" },\n  ],\n  subscriptionDetails: { reason: \"assigned\" },\n  isPublic: false,\n  hasSeen: true,\n  firstRelease: null,\n  shortId: \"DJANGO-1\",\n  shareId: null,\n  firstSeen: \"2020-08-06T15:04:41.801Z\",\n  count: \"4\",\n  permalink: \"https://.com\",\n  level: \"error\",\n  isSubscribed: true,\n  pluginContexts: [],\n  isBookmarked: false,\n  project: {\n    platform: \"python-django\",\n    slug: \"django\",\n    id: \"21\",\n    name: \"Django\",\n  },\n  lastRelease: null,\n  activity: [\n    {\n      data: {},\n      dateCreated: \"2020-08-11T19:51:15.373Z\",\n      type: \"unassigned\",\n      id: \"35\",\n      user: {\n        username: \"a@aa.aa\",\n        lastLogin: \"2021-02-11T15:40:32.272Z\",\n        isSuperuser: false,\n        emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n        isManaged: false,\n        lastActive: \"2021-02-19T19:36:09.876Z\",\n        identities: [],\n        id: \"3\",\n        isActive: true,\n        has2fa: false,\n        name: \"A\",\n        avatarUrl: \"https://secure.gravatar.com/avatar/\",\n        dateJoined: \"2020-06-08T20:55:16.046Z\",\n        options: {\n          timezone: \"UTC\",\n          stacktraceOrder: -1,\n          language: \"en\",\n          clock24Hours: false,\n        },\n        flags: { newsletter_consent_prompt: false },\n        avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n        hasPasswordAuth: true,\n        email: \"a@aa.aa\",\n      },\n    },\n    {\n      data: {\n        assignee: \"3\",\n        assigneeType: \"user\",\n        assigneeEmail: \"a@aa.aa\",\n      },\n      dateCreated: \"2020-08-11T19:51:11.698Z\",\n      type: \"assigned\",\n      id: \"34\",\n      user: {\n        username: \"a@aa.aa\",\n        lastLogin: \"2021-02-11T15:40:32.272Z\",\n        isSuperuser: false,\n        emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n        isManaged: false,\n        lastActive: \"2021-02-19T19:36:09.876Z\",\n        identities: [],\n        id: \"3\",\n        isActive: true,\n        has2fa: false,\n        name: \"EmJay\",\n        avatarUrl: \"https://secure.gravatar.com/avatar/\",\n        dateJoined: \"2020-06-08T20:55:16.046Z\",\n        options: {\n          timezone: \"UTC\",\n          stacktraceOrder: -1,\n          language: \"en\",\n          clock24Hours: false,\n        },\n        flags: { newsletter_consent_prompt: false },\n        avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n        hasPasswordAuth: true,\n        email: \"a@aa.aa\",\n      },\n    },\n    {\n      data: {},\n      dateCreated: \"2020-08-06T15:04:41.801Z\",\n      type: \"first_seen\",\n      id: \"0\",\n      user: null,\n    },\n  ],\n  statusDetails: {},\n}"
            },
            {
                "name": "sampleProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/header-nav/header-nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OrganizationProject[]",
                "defaultValue": "[\n  {\n    name: \"GlitchTip\",\n    slug: \"glitchtip\",\n    id: 1,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"SwitchGrip\",\n    slug: \"switchgrip\",\n    id: 2,\n    platform: \"python-django\",\n    isMember: true,\n  },\n  {\n    name: \"PitchFlip\",\n    slug: \"pitchflip\",\n    id: 3,\n    platform: null,\n    isMember: true,\n  },\n  {\n    name: \"StitchStrip\",\n    slug: \"stitchstrip\",\n    id: 4,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"NicheScrip\",\n    slug: \"nichescrip\",\n    id: 5,\n    platform: \"python-django\",\n    isMember: true,\n  },\n  {\n    name: \"TwitchQuip\",\n    slug: \"twitchquip\",\n    id: 6,\n    platform: null,\n    isMember: true,\n  },\n  {\n    name: \"Wassilievitch Proprietorship\",\n    slug: \"wassilievitch-proprietorship\",\n    id: 7,\n    platform: \"javascript\",\n    isMember: true,\n  },\n]"
            },
            {
                "name": "sampleProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issues-page/issue-page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    name: \"GlitchTip\",\n    slug: \"glitchtip\",\n    id: 1,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"SwitchGrip\",\n    slug: \"switchgrip\",\n    id: 2,\n    platform: \"python-django\",\n    isMember: false,\n  },\n  {\n    name: \"PitchFlip\",\n    slug: \"pitchflip\",\n    id: 3,\n    platform: null,\n    isMember: true,\n  },\n  {\n    name: \"StitchStrip\",\n    slug: \"stitchstrip\",\n    id: 4,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"NicheScrip\",\n    slug: \"nichescrip\",\n    id: 5,\n    platform: \"python-django\",\n    isMember: true,\n  },\n  {\n    name: \"TwitchQuip\",\n    slug: \"twitchquip\",\n    id: 6,\n    platform: null,\n    isMember: false,\n  },\n  {\n    name: \"Wassilievitch Proprietorship\",\n    slug: \"wassilievitch-proprietorship\",\n    id: 7,\n    platform: \"javascript\",\n    isMember: true,\n  },\n]"
            },
            {
                "name": "snackBarDuration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "4000"
            },
            {
                "name": "socialApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/social-app.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  eventID: \"8f3cfd79bbf44390abda117725c96e57\",\n  id: \"8f3cfd79bbf44390abda117725c96e57\",\n  issue: 32,\n  contexts: {\n    trace: {\n      op: \"django.middleware\",\n      span_id: \"b8cbb053b30fb09b\",\n      trace_id: \"f9e158b9a93644f1aa5eecb7bd02bd95\",\n      description:\n        \"glitchtip.middleware.proxy.DecompressBodyMiddleware.__call__\",\n      parent_span_id: \"93b86622ccd9cb61\"\n    },\n    runtime: {\n      name: \"CPython\",\n      build: \"3.8.2 (default, Feb 26 2020, 15:09:34) \\n[GCC 8.3.0]\",\n      version: \"3.8.2\"\n    }\n  },\n  culprit: \"/rest-auth/gitlab/\",\n  dateCreated: \"2020-03-23T11:18:36.817518Z\",\n  dateReceived: \"2020-03-23T11:18:36.895859Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"SocialApp.DoesNotExist\",\n            value: \"SocialApp matching query does not exist.\",\n            module: \"allauth.socialaccount.models\",\n            mechanism: {\n              type: \"django\",\n              handled: false\n            },\n            stacktrace: {\n              frames: [\n                {\n                  vars: {\n                    exc:\n                      \"DoesNotExist('SocialApp matching query does not exist.')\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f233073c9d0>>\"\n                  },\n                  in_app: true,\n                  module: \"django.core.handlers.exception\",\n                  filename: \"django/core/handlers/exception.py\",\n                  function: \"inner\",\n                  context_line: \"            response = get_response(request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  lineNo: 34,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\"\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\"\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f233073c9d0>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    callback: \"<function GitlabLogin at 0x7f232ff24940>\",\n                    resolver: \"<URLResolver 'glitchtip.urls' (None:None) '^/'>\",\n                    response: \"None\",\n                    callback_args: [],\n                    resolver_match:\n                      \"ResolverMatch(func=glitchtip.social.GitlabLogin, args=(), kwargs={}, url_name=gitlab_login, app_names=[], namespaces=[], route=rest-auth/gitlab/)\",\n                    callback_kwargs: {},\n                    wrapped_callback:\n                      \"<function GitlabLogin at 0x7f232ff24940>\",\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f23306bc5e0>\"\n                  },\n                  in_app: true,\n                  module: \"django.core.handlers.base\",\n                  filename: \"django/core/handlers/base.py\",\n                  function: \"_get_response\",\n                  context_line:\n                    \"                response = self.process_exception_by_middleware(e, request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  lineNo: 115,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\"\n                    ],\n                    [120, \"                view_name = callback.__name__\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f233073c9d0>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    callback: \"<function GitlabLogin at 0x7f232ff24940>\",\n                    resolver: \"<URLResolver 'glitchtip.urls' (None:None) '^/'>\",\n                    response: \"None\",\n                    callback_args: [],\n                    resolver_match:\n                      \"ResolverMatch(func=glitchtip.social.GitlabLogin, args=(), kwargs={}, url_name=gitlab_login, app_names=[], namespaces=[], route=rest-auth/gitlab/)\",\n                    callback_kwargs: {},\n                    wrapped_callback:\n                      \"<function GitlabLogin at 0x7f232ff24940>\",\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f23306bc5e0>\"\n                  },\n                  in_app: true,\n                  module: \"django.core.handlers.base\",\n                  filename: \"django/core/handlers/base.py\",\n                  function: \"_get_response\",\n                  context_line:\n                    \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  lineNo: 113,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [\"<WSGIRequest: POST '/rest-auth/gitlab/'>\"],\n                    kwargs: {},\n                    view_func: \"<function GitlabLogin at 0x7f232ff1ca60>\"\n                  },\n                  in_app: true,\n                  module: \"django.views.decorators.csrf\",\n                  filename: \"django/views/decorators/csrf.py\",\n                  function: \"wrapped_view\",\n                  context_line: \"        return view_func(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/decorators/csrf.py\",\n                  lineNo: 54,\n                  context: [\n                    [49, \"def csrf_exempt(view_func):\"],\n                    [\n                      50,\n                      '    \"\"\"Mark a view function as being exempt from the CSRF view protection.\"\"\"'\n                    ],\n                    [\n                      51,\n                      \"    # view_func.csrf_exempt = True would also work, but decorators are nicer\"\n                    ],\n                    [\n                      52,\n                      \"    # if they don't have side effects, so return a new function.\"\n                    ],\n                    [53, \"    def wrapped_view(*args, **kwargs):\"],\n                    [54, \"        return view_func(*args, **kwargs)\"],\n                    [55, \"    wrapped_view.csrf_exempt = True\"],\n                    [56, \"    return wraps(view_func)(wrapped_view)\"]\n                  ]\n                },\n                {\n                  vars: {\n                    cls: \"<class 'glitchtip.social.GitlabLogin'>\",\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    initkwargs: {}\n                  },\n                  in_app: true,\n                  module: \"django.views.generic.base\",\n                  filename: \"django/views/generic/base.py\",\n                  function: \"view\",\n                  context_line:\n                    \"            return self.dispatch(request, *args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  lineNo: 71,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\"\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__'\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\"\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"]\n                  ]\n                },\n                {\n                  vars: {\n                    dec:\n                      \"<function sensitive_post_parameters.<locals>.decorator at 0x7f232ffb19d0>\",\n                    args: [\"<WSGIRequest: POST '/rest-auth/gitlab/'>\"],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    method: \"<function LoginView.dispatch at 0x7f232ffb1d30>\",\n                    decorators: [\n                      \"<function sensitive_post_parameters.<locals>.decorator at 0x7f232ffb19d0>\"\n                    ],\n                    bound_method:\n                      \"<function sensitive_post_parameters.<locals>.decorator.<locals>.sensitive_post_parameters_wrapper at 0x7f233371c550>\"\n                  },\n                  in_app: true,\n                  module: \"django.utils.decorators\",\n                  filename: \"django/utils/decorators.py\",\n                  function: \"_wrapper\",\n                  context_line: \"        return bound_method(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/utils/decorators.py\",\n                  lineNo: 43,\n                  context: [\n                    [\n                      38,\n                      \"        # 'func'. Also, wrap method.__get__() in a function because new\"\n                    ],\n                    [\n                      39,\n                      \"        # attributes can't be set on bound method objects, only on functions.\"\n                    ],\n                    [\n                      40,\n                      \"        bound_method = partial(method.__get__(self, type(self)))\"\n                    ],\n                    [41, \"        for dec in decorators:\"],\n                    [42, \"            bound_method = dec(bound_method)\"],\n                    [43, \"        return bound_method(*args, **kwargs)\"],\n                    [44, \"\"],\n                    [\n                      45,\n                      \"    # Copy any attributes that a decorator adds to the function it decorates.\"\n                    ],\n                    [46, \"    for dec in decorators:\"],\n                    [47, \"        _update_method_wrapper(_wrapper, dec)\"],\n                    [\n                      48,\n                      \"    # Preserve any existing attributes of 'method', including the name.\"\n                    ]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    view:\n                      \"functools.partial(<bound method LoginView.dispatch of <glitchtip.social.GitlabLogin object at 0x7f232fe5c100>>)\",\n                    kwargs: {},\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    parameters: [\n                      \"'password'\",\n                      \"'old_password'\",\n                      \"'new_password1'\",\n                      \"'new_password2'\"\n                    ]\n                  },\n                  in_app: true,\n                  module: \"django.views.decorators.debug\",\n                  filename: \"django/views/decorators/debug.py\",\n                  function: \"sensitive_post_parameters_wrapper\",\n                  context_line:\n                    \"            return view(request, *args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/decorators/debug.py\",\n                  lineNo: 76,\n                  context: [\n                    [71, \"            )\"],\n                    [72, \"            if parameters:\"],\n                    [\n                      73,\n                      \"                request.sensitive_post_parameters = parameters\"\n                    ],\n                    [74, \"            else:\"],\n                    [\n                      75,\n                      \"                request.sensitive_post_parameters = '__ALL__'\"\n                    ],\n                    [76, \"            return view(request, *args, **kwargs)\"],\n                    [77, \"        return sensitive_post_parameters_wrapper\"],\n                    [78, \"    return decorator\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [\"<WSGIRequest: POST '/rest-auth/gitlab/'>\"],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    __class__: \"<class 'rest_auth.views.LoginView'>\"\n                  },\n                  in_app: true,\n                  module: \"rest_auth.views\",\n                  filename: \"rest_auth/views.py\",\n                  function: \"dispatch\",\n                  context_line:\n                    \"        return super(LoginView, self).dispatch(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_auth/views.py\",\n                  lineNo: 49,\n                  context: [\n                    [44, \"    serializer_class = LoginSerializer\"],\n                    [45, \"    token_model = TokenModel\"],\n                    [46, \"\"],\n                    [47, \"    @sensitive_post_parameters_m\"],\n                    [48, \"    def dispatch(self, *args, **kwargs):\"],\n                    [\n                      49,\n                      \"        return super(LoginView, self).dispatch(*args, **kwargs)\"\n                    ],\n                    [50, \"\"],\n                    [51, \"    def process_login(self):\"],\n                    [52, \"        django_login(self.request, self.user)\"],\n                    [53, \"\"],\n                    [54, \"    def get_response_serializer(self):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    handler:\n                      \"<bound method LoginView.post of <glitchtip.social.GitlabLogin object at 0x7f232fe5c100>>\",\n                    request:\n                      \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"dispatch\",\n                  context_line:\n                    \"            response = self.handle_exception(exc)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 505,\n                  context: [\n                    [\n                      500,\n                      \"                handler = self.http_method_not_allowed\"\n                    ],\n                    [501, \"\"],\n                    [\n                      502,\n                      \"            response = handler(request, *args, **kwargs)\"\n                    ],\n                    [503, \"\"],\n                    [504, \"        except Exception as exc:\"],\n                    [505, \"            response = self.handle_exception(exc)\"],\n                    [506, \"\"],\n                    [\n                      507,\n                      \"        self.response = self.finalize_response(request, response, *args, **kwargs)\"\n                    ],\n                    [508, \"        return self.response\"],\n                    [509, \"\"],\n                    [510, \"    def options(self, request, *args, **kwargs):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    exc:\n                      \"DoesNotExist('SocialApp matching query does not exist.')\",\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    context: {\n                      args: [],\n                      view:\n                        \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                      kwargs: {},\n                      request:\n                        \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                    },\n                    response: \"None\",\n                    exception_handler:\n                      \"<function exception_handler at 0x7f233005b550>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"handle_exception\",\n                  context_line:\n                    \"            self.raise_uncaught_exception(exc)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 465,\n                  context: [\n                    [460, \"\"],\n                    [\n                      461,\n                      \"        context = self.get_exception_handler_context()\"\n                    ],\n                    [462, \"        response = exception_handler(exc, context)\"],\n                    [463, \"\"],\n                    [464, \"        if response is None:\"],\n                    [465, \"            self.raise_uncaught_exception(exc)\"],\n                    [466, \"\"],\n                    [467, \"        response.exception = True\"],\n                    [468, \"        return response\"],\n                    [469, \"\"],\n                    [470, \"    def raise_uncaught_exception(self, exc):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    exc:\n                      \"DoesNotExist('SocialApp matching query does not exist.')\",\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"raise_uncaught_exception\",\n                  context_line: \"        raise exc\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 476,\n                  context: [\n                    [471, \"        if settings.DEBUG:\"],\n                    [472, \"            request = self.request\"],\n                    [\n                      473,\n                      \"            renderer_format = getattr(request.accepted_renderer, 'format')\"\n                    ],\n                    [\n                      474,\n                      \"            use_plaintext_traceback = renderer_format not in ('html', 'api', 'admin')\"\n                    ],\n                    [\n                      475,\n                      \"            request.force_plaintext_errors(use_plaintext_traceback)\"\n                    ],\n                    [476, \"        raise exc\"],\n                    [477, \"\"],\n                    [\n                      478,\n                      \"    # Note: Views are made CSRF exempt from within `as_view` as to prevent\"\n                    ],\n                    [\n                      479,\n                      \"    # accidental removal of this exemption in cases where `dispatch` needs to\"\n                    ],\n                    [480, \"    # be overridden.\"],\n                    [481, \"    def dispatch(self, request, *args, **kwargs):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    handler:\n                      \"<bound method LoginView.post of <glitchtip.social.GitlabLogin object at 0x7f232fe5c100>>\",\n                    request:\n                      \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"dispatch\",\n                  context_line:\n                    \"            response = handler(request, *args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 502,\n                  context: [\n                    [\n                      497,\n                      \"                handler = getattr(self, request.method.lower(),\"\n                    ],\n                    [\n                      498,\n                      \"                                  self.http_method_not_allowed)\"\n                    ],\n                    [499, \"            else:\"],\n                    [\n                      500,\n                      \"                handler = self.http_method_not_allowed\"\n                    ],\n                    [501, \"\"],\n                    [\n                      502,\n                      \"            response = handler(request, *args, **kwargs)\"\n                    ],\n                    [503, \"\"],\n                    [504, \"        except Exception as exc:\"],\n                    [505, \"            response = self.handle_exception(exc)\"],\n                    [506, \"\"],\n                    [\n                      507,\n                      \"        self.response = self.finalize_response(request, response, *args, **kwargs)\"\n                    ]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    request:\n                      \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                  },\n                  in_app: true,\n                  module: \"rest_auth.views\",\n                  filename: \"rest_auth/views.py\",\n                  function: \"post\",\n                  context_line:\n                    \"        self.serializer.is_valid(raise_exception=True)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_auth/views.py\",\n                  lineNo: 103,\n                  context: [\n                    [98, \"\"],\n                    [99, \"    def post(self, request, *args, **kwargs):\"],\n                    [100, \"        self.request = request\"],\n                    [\n                      101,\n                      \"        self.serializer = self.get_serializer(data=self.request.data,\"\n                    ],\n                    [\n                      102,\n                      \"                                              context={'request': request})\"\n                    ],\n                    [\n                      103,\n                      \"        self.serializer.is_valid(raise_exception=True)\"\n                    ],\n                    [104, \"\"],\n                    [105, \"        self.login()\"],\n                    [106, \"        return self.get_response()\"],\n                    [107, \"\"],\n                    [108, \"\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"SocialLoginSerializer(context={'request': <rest_framework.request.Request object>, 'format': None, 'view': <glitchtip.social.GitlabLogin object>}, data={'access_token': '7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'}):\\n    access_token = CharField(allow_blank=True, required=False)\\n    code = CharField(allow_blank=True, required=False)\",\n                    raise_exception: \"True\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.serializers\",\n                  filename: \"rest_framework/serializers.py\",\n                  function: \"is_valid\",\n                  context_line:\n                    \"                self._validated_data = self.run_validation(self.initial_data)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/serializers.py\",\n                  lineNo: 234,\n                  context: [\n                    [\n                      229,\n                      \"            'passed when instantiating the serializer instance.'\"\n                    ],\n                    [230, \"        )\"],\n                    [231, \"\"],\n                    [232, \"        if not hasattr(self, '_validated_data'):\"],\n                    [233, \"            try:\"],\n                    [\n                      234,\n                      \"                self._validated_data = self.run_validation(self.initial_data)\"\n                    ],\n                    [235, \"            except ValidationError as exc:\"],\n                    [236, \"                self._validated_data = {}\"],\n                    [237, \"                self._errors = exc.detail\"],\n                    [238, \"            else:\"],\n                    [239, \"                self._errors = {}\"]\n                  ]\n                },\n                {\n                  vars: {\n                    data: {\n                      access_token:\n                        \"'7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'\"\n                    },\n                    self:\n                      \"SocialLoginSerializer(context={'request': <rest_framework.request.Request object>, 'format': None, 'view': <glitchtip.social.GitlabLogin object>}, data={'access_token': '7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'}):\\n    access_token = CharField(allow_blank=True, required=False)\\n    code = CharField(allow_blank=True, required=False)\",\n                    value: {\n                      access_token:\n                        \"'7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'\"\n                    },\n                    is_empty_value: \"False\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.serializers\",\n                  filename: \"rest_framework/serializers.py\",\n                  function: \"run_validation\",\n                  context_line: \"            value = self.validate(value)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/serializers.py\",\n                  lineNo: 436,\n                  context: [\n                    [431, \"            return data\"],\n                    [432, \"\"],\n                    [433, \"        value = self.to_internal_value(data)\"],\n                    [434, \"        try:\"],\n                    [435, \"            self.run_validators(value)\"],\n                    [436, \"            value = self.validate(value)\"],\n                    [\n                      437,\n                      \"            assert value is not None, '.validate() should return the validated data'\"\n                    ],\n                    [\n                      438,\n                      \"        except (ValidationError, DjangoValidationError) as exc:\"\n                    ],\n                    [\n                      439,\n                      \"            raise ValidationError(detail=as_serializer_error(exc))\"\n                    ],\n                    [440, \"\"],\n                    [441, \"        return value\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"SocialLoginSerializer(context={'request': <rest_framework.request.Request object>, 'format': None, 'view': <glitchtip.social.GitlabLogin object>}, data={'access_token': '7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'}):\\n    access_token = CharField(allow_blank=True, required=False)\\n    code = CharField(allow_blank=True, required=False)\",\n                    view:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    attrs: {\n                      access_token:\n                        \"'7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'\"\n                    },\n                    adapter:\n                      \"<allauth.socialaccount.providers.gitlab.views.GitLabOAuth2Adapter object at 0x7f232fe5c6a0>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    adapter_class:\n                      \"<class 'allauth.socialaccount.providers.gitlab.views.GitLabOAuth2Adapter'>\"\n                  },\n                  in_app: true,\n                  module: \"rest_auth.registration.serializers\",\n                  filename: \"rest_auth/registration/serializers.py\",\n                  function: \"validate\",\n                  context_line:\n                    \"        app = adapter.get_provider().get_app(request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_auth/registration/serializers.py\",\n                  lineNo: 75,\n                  context: [\n                    [\n                      70,\n                      \"        adapter_class = getattr(view, 'adapter_class', None)\"\n                    ],\n                    [71, \"        if not adapter_class:\"],\n                    [\n                      72,\n                      '            raise serializers.ValidationError(_(\"Define adapter_class in view\"))'\n                    ],\n                    [73, \"\"],\n                    [74, \"        adapter = adapter_class(request)\"],\n                    [\n                      75,\n                      \"        app = adapter.get_provider().get_app(request)\"\n                    ],\n                    [76, \"\"],\n                    [77, \"        # More info on code vs access_token\"],\n                    [\n                      78,\n                      \"        # http://stackoverflow.com/questions/8666316/facebook-oauth-2-0-code-and-token\"\n                    ],\n                    [79, \"\"],\n                    [80, \"        # Case 1: We received the access_token\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<allauth.socialaccount.providers.gitlab.provider.GitLabProvider object at 0x7f232fe5c4f0>\",\n                    adapter:\n                      \"<allauth.socialaccount.adapter.DefaultSocialAccountAdapter object at 0x7f232fe5c760>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\"\n                  },\n                  in_app: true,\n                  module: \"allauth.socialaccount.providers.base\",\n                  filename: \"allauth/socialaccount/providers/base.py\",\n                  function: \"get_app\",\n                  context_line:\n                    \"        return adapter.get_app(request, self.id)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/allauth/socialaccount/providers/base.py\",\n                  lineNo: 49,\n                  context: [\n                    [44, '        \"\"\"'],\n                    [\n                      45,\n                      '        raise NotImplementedError(\"get_login_url() for \" + self.name)'\n                    ],\n                    [46, \"\"],\n                    [47, \"    def get_app(self, request):\"],\n                    [48, \"        adapter = get_adapter(request)\"],\n                    [49, \"        return adapter.get_app(request, self.id)\"],\n                    [50, \"\"],\n                    [51, \"    def media_js(self, request):\"],\n                    [52, '        \"\"\"'],\n                    [\n                      53,\n                      \"        Some providers may require extra scripts (e.g. a Facebook connect)\"\n                    ],\n                    [54, '        \"\"\"']\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<allauth.socialaccount.adapter.DefaultSocialAccountAdapter object at 0x7f232fe5c760>\",\n                    config: \"None\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    provider: \"'gitlab'\",\n                    SocialApp:\n                      \"<class 'allauth.socialaccount.models.SocialApp'>\"\n                  },\n                  in_app: true,\n                  module: \"allauth.socialaccount.adapter\",\n                  filename: \"allauth/socialaccount/adapter.py\",\n                  function: \"get_app\",\n                  context_line:\n                    \"            app = SocialApp.objects.get_current(provider, request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/allauth/socialaccount/adapter.py\",\n                  lineNo: 203,\n                  context: [\n                    [198, \"        if config:\"],\n                    [199, \"            app = SocialApp(provider=provider)\"],\n                    [\n                      200,\n                      \"            for field in ['client_id', 'secret', 'key']:\"\n                    ],\n                    [\n                      201,\n                      \"                setattr(app, field, config.get(field))\"\n                    ],\n                    [202, \"        else:\"],\n                    [\n                      203,\n                      \"            app = SocialApp.objects.get_current(provider, request)\"\n                    ],\n                    [204, \"        return app\"],\n                    [205, \"\"],\n                    [206, \"\"],\n                    [207, \"def get_adapter(request=None):\"],\n                    [\n                      208,\n                      \"    return import_attribute(app_settings.ADAPTER)(request)\"\n                    ]\n                  ]\n                },\n                {\n                  vars: {\n                    app: \"None\",\n                    self:\n                      \"<allauth.socialaccount.models.SocialAppManager object at 0x7f2330858e80>\",\n                    site: \"<Site: example.com>\",\n                    cache: {},\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    provider: \"'gitlab'\"\n                  },\n                  in_app: true,\n                  module: \"allauth.socialaccount.models\",\n                  filename: \"allauth/socialaccount/models.py\",\n                  function: \"get_current\",\n                  context_line: \"            app = self.get(\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/allauth/socialaccount/models.py\",\n                  lineNo: 32,\n                  context: [\n                    [\n                      27,\n                      \"            cache = getattr(request, '_socialapp_cache', {})\"\n                    ],\n                    [28, \"            request._socialapp_cache = cache\"],\n                    [29, \"        app = cache.get(provider)\"],\n                    [30, \"        if not app:\"],\n                    [31, \"            site = get_current_site(request)\"],\n                    [32, \"            app = self.get(\"],\n                    [33, \"                sites__id=site.id,\"],\n                    [34, \"                provider=provider)\"],\n                    [35, \"            cache[provider] = app\"],\n                    [36, \"        return app\"],\n                    [37, \"\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    name: \"'get'\",\n                    self:\n                      \"<allauth.socialaccount.models.SocialAppManager object at 0x7f2330858e80>\",\n                    kwargs: {\n                      provider: \"'gitlab'\",\n                      sites__id: \"1\"\n                    }\n                  },\n                  in_app: true,\n                  module: \"django.db.models.manager\",\n                  filename: \"django/db/models/manager.py\",\n                  function: \"manager_method\",\n                  context_line:\n                    \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\",\n                  lineNo: 82,\n                  context: [\n                    [77, \"\"],\n                    [78, \"    @classmethod\"],\n                    [79, \"    def _get_queryset_methods(cls, queryset_class):\"],\n                    [80, \"        def create_method(name, method):\"],\n                    [\n                      81,\n                      \"            def manager_method(self, *args, **kwargs):\"\n                    ],\n                    [\n                      82,\n                      \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\"\n                    ],\n                    [\n                      83,\n                      \"            manager_method.__name__ = method.__name__\"\n                    ],\n                    [84, \"            manager_method.__doc__ = method.__doc__\"],\n                    [85, \"            return manager_method\"],\n                    [86, \"\"],\n                    [87, \"        new_methods = {}\"]\n                  ]\n                },\n                {\n                  vars: {\n                    num: \"0\",\n                    args: [],\n                    self:\n                      \"<QuerySet from django.db.models.query at 0x7f232fe5c7c0>\",\n                    clone:\n                      \"<QuerySet from django.db.models.query at 0x7f232fe5caf0>\",\n                    limit: \"21\",\n                    kwargs: {\n                      provider: \"'gitlab'\",\n                      sites__id: \"1\"\n                    }\n                  },\n                  in_app: true,\n                  module: \"django.db.models.query\",\n                  filename: \"django/db/models/query.py\",\n                  function: \"get\",\n                  context_line: \"            raise self.model.DoesNotExist(\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\",\n                  lineNo: 415,\n                  context: [\n                    [410, \"            clone.query.set_limits(high=limit)\"],\n                    [411, \"        num = len(clone)\"],\n                    [412, \"        if num == 1:\"],\n                    [413, \"            return clone._result_cache[0]\"],\n                    [414, \"        if not num:\"],\n                    [415, \"            raise self.model.DoesNotExist(\"],\n                    [\n                      416,\n                      '                \"%s matching query does not exist.\" %'\n                    ],\n                    [417, \"                self.model._meta.object_name\"],\n                    [418, \"            )\"],\n                    [419, \"        raise self.model.MultipleObjectsReturned(\"],\n                    [\n                      420,\n                      \"            'get() returned more than one %s -- it returned %s!' % (\"\n                    ]\n                  ]\n                }\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        env: {\n          SERVER_NAME: \"glitchtip-staging-6787c7c74c-7pdfb\",\n          SERVER_PORT: \"8080\"\n        },\n        url: \"https, https://staging.glitchtip.com/rest-auth/gitlab/\",\n        data: {\n          access_token:\n            \"7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007\"\n        },\n        method: \"POST\",\n        headers: [\n          [\"Accept\", \"application/json, text/plain, */*\"],\n          [\"Accept-Encoding\", \"gzip\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Cdn-Loop\", \"cloudflare\"],\n          [\"Cf-Connecting-Ip\", \"93.157.248.128\"],\n          [\"Cf-Ipcountry\", \"RU\"],\n          [\"Cf-Ray\", \"5787c0afbc0174ab-EWR\"],\n          [\"Cf-Visitor\", '{\"scheme\":\"https\"}'],\n          [\"Connection\", \"close\"],\n          [\"Content-Length\", \"83\"],\n          [\"Content-Type\", \"application/json\"],\n          [\"Cookie\", \"\"],\n          [\"Dnt\", \"1\"],\n          [\"Host\", \"staging.glitchtip.com\"],\n          [\"Origin\", \"https://staging.glitchtip.com\"],\n          [\"Referer\", \"https://staging.glitchtip.com/login/gitlab\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; NetBSD i686; rv:68.0) Gecko/20100101 Firefox/68.0\"\n          ],\n          [\"X-Forwarded-For\", \"\"],\n          [\"X-Forwarded-Port\", \"443\"],\n          [\"X-Forwarded-Proto\", \"https, https\"]\n        ],\n        query_string: \"\",\n        inferredContentType: \"application/json\"\n      }\n    }\n  ],\n  metadata: {\n    type: \"SocialApp.DoesNotExist\",\n    value: \"SocialApp matching query does not exist.\",\n    filename: \"django/db/models/query.py\",\n    function: \"get\"\n  },\n  packages: {\n    pip: \"20.0.2\",\n    six: \"1.14.0\",\n    amqp: \"2.5.2\",\n    cleo: \"0.7.6\",\n    idna: \"2.8\",\n    pytz: \"2019.3\",\n    vine: \"1.3.0\",\n    attrs: \"19.3.0\",\n    boto3: \"1.12.0\",\n    cachy: \"0.3.0\",\n    kombu: \"4.6.7\",\n    pylev: \"1.3.0\",\n    redis: \"3.3.11\",\n    uwsgi: \"2.0.18\",\n    wheel: \"0.34.2\",\n    celery: \"4.4.0\",\n    clikit: \"0.4.3\",\n    django: \"3.0.3\",\n    pastel: \"0.2.0\",\n    poetry: \"1.0.5\",\n    stripe: \"2.43.0\",\n    asgiref: \"3.2.3\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    jeepney: \"0.4.3\",\n    keyring: \"20.0.1\",\n    msgpack: \"1.0.0\",\n    pkginfo: \"1.5.0.1\",\n    tomlkit: \"0.5.11\",\n    urllib3: \"1.25.8\",\n    billiard: \"3.6.2.0\",\n    botocore: \"1.15.0\",\n    docutils: \"0.15.2\",\n    html5lib: \"1.0.1\",\n    jmespath: \"0.9.4\",\n    lockfile: \"0.12.2\",\n    oauthlib: \"3.1.0\",\n    requests: \"2.22.0\",\n    sqlparse: \"0.3.0\",\n    \"dj-stripe\": \"2.2.3\",\n    jsonfield: \"3.1.0\",\n    pyparsing: \"2.4.6\",\n    defusedxml: \"0.6.0\",\n    \"django-csp\": \"3.6\",\n    jsonschema: \"3.2.0\",\n    pyrsistent: \"0.15.7\",\n    s3transfer: \"0.3.3\",\n    \"sentry-sdk\": \"0.13.5\",\n    setuptools: \"45.2.0\",\n    simplejson: \"3.17.0\",\n    whitenoise: \"5.0.1\",\n    shellingham: \"1.3.2\",\n    cachecontrol: \"0.12.6\",\n    cryptography: \"2.8\",\n    webencodings: \"0.5.1\",\n    \"django-filter\": \"2.2.0\",\n    secretstorage: \"3.1.2\",\n    \"django-allauth\": \"0.41.0\",\n    \"django-environ\": \"0.4.5\",\n    \"python3-openid\": \"3.1.0\",\n    \"django-storages\": \"1.9.1\",\n    \"psycopg2-binary\": \"2.8.4\",\n    \"python-dateutil\": \"2.8.1\",\n    \"django-rest-auth\": \"0.9.5\",\n    \"django-extensions\": \"2.2.8\",\n    \"requests-oauthlib\": \"1.3.0\",\n    \"requests-toolbelt\": \"0.8.0\",\n    \"django-redis-cache\": \"2.1.0\",\n    \"drf-nested-routers\": \"0.91\",\n    \"django-cors-headers\": \"3.2.1\",\n    djangorestframework: \"3.11.0\",\n    \"django-debug-toolbar\": \"2.2\",\n    \"django-organizations\": \"1.1.2\",\n    \"django-celery-results\": \"1.2.0\"\n  },\n  platform: \"python\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.13.5\",\n    packages: [\n      {\n        name: \"pypi:sentry-sdk\",\n        version: \"0.13.5\"\n      }\n    ],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\"\n    ]\n  },\n  tags: [],\n  title: \"SocialApp.DoesNotExist: SocialApp matching query does not exist.\",\n  type: \"error\",\n  nextEventID: null,\n  previousEventID: \"cd12ee1200fb41dfa6133b2254118892\"\n}"
            },
            {
                "name": "socialAuth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/social-auth/social-auth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const loadingBoolean = select(\n    \"loading\",\n    { first: 3, second: 4, null: null },\n    null\n  );\n  return {\n    component: SocialAuthComponent,\n    props: {\n      disconnectLoading$: of(loadingBoolean),\n      user$: of({\n        username: \"rain@bow.com\",\n        lastLogin: \"2020-10-29T15:51:52.193929Z\",\n        isSuperuser: true,\n        emails: [],\n        identities: [\n          {\n            id: 3,\n            provider: \"google\",\n            uid: \"secret\",\n            last_login: \"2020-10-29T15:51:52.182486Z\",\n            date_joined: \"2020-10-29T15:51:52.182546Z\",\n            email: \"a@a.aa\",\n            username: null,\n          },\n          {\n            id: 4,\n            provider: \"google\",\n            uid: \"secret\",\n            last_login: \"2020-10-29T15:51:52.182486Z\",\n            date_joined: \"2020-10-29T15:51:52.182546Z\",\n            email: \"b@b.bb\",\n            username: null,\n          },\n        ],\n        id: \"1\",\n        isActive: true,\n        name: \"\",\n        dateJoined: \"2020-08-18T13:18:51.432490Z\",\n        hasPasswordAuth: true,\n        email: \"rain@bow.com\",\n      }),\n      socialApps$: of([\n        {\n          provider: \"google\",\n          name: \"Google\",\n          client_id: \"secrets secrets are no fun\",\n        },\n      ]),\n    },\n  };\n}"
            },
            {
                "name": "sorts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issues-page/issues-page.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  \"-last_seen\": \"Last Seen\",\n  last_seen: \"First Seen\",\n  \"-created\": \"Newest Creation Date\",\n  created: \"Oldest Creation Date\",\n  \"-count\": \"Most Frequent\",\n  count: \"Least Frequent\",\n  \"-priority\": \"Highest Priority\",\n  priority: \"Lowest Priority\",\n}"
            },
            {
                "name": "sourceMaps",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[...frontend, \"react-native\", \"cordova\", \"electron\"]"
            },
            {
                "name": "stacktraceUndefined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/stacktrace-undefined.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"c5974fd9b97d4fcbb9ecc011f9a18144\",\n  id: \"c5974fd9b97d4fcbb9ecc011f9a18144\",\n  issue: 111,\n  context: {\n    error: {\n      Op: \"Post\",\n      Err: {\n        Op: \"read\",\n        Err: { Err: 104, Syscall: \"read\" },\n        Net: \"tcp\",\n        Addr: { IP: \"redacted\", Port: 123, Zone: \"\" },\n        Source: { IP: \"redacted\", Port: 456, Zone: \"\" },\n      },\n      URL: \"https://redacted\",\n    },\n  },\n  contexts: {\n    os: { name: \"linux\" },\n    device: { arch: \"amd64\", num_cpu: 2 },\n    runtime: {\n      name: \"go\",\n      version: \"go1.13.12\",\n      go_maxprocs: 2,\n      go_numcgocalls: 5,\n      go_numroutines: 8,\n    },\n  },\n  culprit: \"\",\n  dateCreated: \"2020-12-14T14:35:46Z\",\n  dateReceived: \"2020-12-14T14:36:03.617166Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"*url.Error\",\n            value: \"Post redacted: read: connection reset by peer\",\n          },\n        ],\n        hasSystemFrames: false,\n      },\n    },\n  ],\n  message: \"\",\n  metadata: {\n    type: \"*url.Error\",\n    value: \"Post https://redacted: read: connection reset by peer\",\n  },\n  packages: { redacted: \"redacted\" },\n  platform: \"go\",\n  sdk: {\n    name: \"sentry.go\",\n    version: \"0.9.0\",\n    packages: [{ name: \"sentry-go\", version: \"0.9.0\" }],\n    integrations: [\n      \"ContextifyFrames\",\n      \"Environment\",\n      \"IgnoreErrors\",\n      \"Modules\",\n    ],\n  },\n  tags: [],\n  title: \"*url.Error: Post https://redacted\",\n  type: \"error\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"redacted\",\n    email: null,\n    data: {},\n    id: null,\n  },\n  projectID: 149,\n  userReport: null,\n  nextEventID: null,\n  previousEventID: null,\n}"
            },
            {
                "name": "stringError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/string-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"2ba0cf8565f248dc9501616cb4e0017b\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: \"478ffecb97314a9193af6fc7f6f08d05\",\n  message:\n    \"viewWrappedDebugError an error string /vendor.js viewWrappedDebugError(/vendor.js)\",\n  id: \"26\",\n  size: 4854,\n  errors: [\n    {\n      data: {\n        url: \"http://localhost:4200/polyfills.js\",\n        value: \"<class 'requests.exceptions.ConnectionError'>\"\n      },\n      message: \"Unable to fetch HTTP resource\",\n      type: \"fetch_generic_error\"\n    },\n    {\n      data: {\n        url: \"http://localhost:4200/vendor.js\",\n        value: \"<class 'requests.exceptions.ConnectionError'>\"\n      },\n      message: \"Unable to fetch HTTP resource\",\n      type: \"fetch_generic_error\"\n    }\n  ],\n  culprit: \"viewWrappedDebugError(/vendor.js)\",\n  title: \"Error: an error string\",\n  platform: \"javascript\",\n  location: \"/vendor.js\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"viewWrappedDebugError\",\n    type: \"Error\",\n    value: \"an error string\",\n    filename: \"/vendor.js\"\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"yes\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"instrument\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"http://localhost:4200/\", key: \"url\", _meta: null },\n    {\n      query: \"user.ip:208.53.32.36\",\n      value: \"ip:208.53.32.36\",\n      key: \"user\",\n      _meta: null\n    }\n  ],\n  dateCreated: \"2020-01-28T20:19:56.151Z\",\n  dateReceived: \"2020-01-28T20:19:56.151Z\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"208.53.32.36\",\n    email: null,\n    data: {},\n    id: null\n  },\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"globalZoneAwareCallback\",\n                  colNo: 27,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 4864,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 14,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 4838,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 34,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3700,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"runTask\",\n                  colNo: 47,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3403,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 60,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3625,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"onInvokeTask\",\n                  colNo: 33,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 70625,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 31,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3626,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"sentryWrapped\",\n                  colNo: 23,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 81911,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"decoratePreventDefault/<\",\n                  colNo: 50,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 79300,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"renderEventHandlerClosure/<\",\n                  colNo: 29,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 73554,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"dispatchEvent\",\n                  colNo: 25,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 61709,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"debugHandleEvent\",\n                  colNo: 12,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 75876,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"callWithDebugContext\",\n                  colNo: 15,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 76251,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"viewWrappedDebugError\",\n                  colNo: 15,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 61054,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: null,\n            rawStacktrace: null,\n            mechanism: {\n              data: { function: \"<anonymous>\" },\n              type: \"instrument\",\n              handled: true\n            },\n            threadId: null,\n            value: \"an error string\",\n            type: \"Error\"\n          }\n        ],\n        excOmitted: null,\n        hasSystemFrames: false\n      }\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"console\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:53.476Z\",\n            data: {\n              logger: \"console\",\n              extra: {\n                arguments: [\n                  \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\"\n                ]\n              }\n            },\n            message:\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            type: \"default\"\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:53.548Z\",\n            data: null,\n            message: \"body > app-root > ol > li > a\",\n            type: \"default\"\n          },\n          {\n            category: \"xhr\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:53.569Z\",\n            data: {\n              url: \"http://localhost:4200/sockjs-node/info?t=1580242793552\",\n              status_code: 200,\n              method: \"GET\"\n            },\n            message: null,\n            type: \"http\"\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:55.949Z\",\n            data: null,\n            message: \"body > app-root > ol > li > a\",\n            type: \"default\"\n          }\n        ]\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: null,\n        env: null,\n        headers: [\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\n          ]\n        ],\n        url: \"http://localhost:4200/\",\n        query: [],\n        data: null,\n        method: null\n      }\n    }\n  ],\n  packages: {},\n  sdk: {\n    version: \"5.11.1\",\n    name: \"sentry.javascript.browser\",\n    upstream: { url: null, isNewer: false, name: \"sentry.javascript.browser\" }\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null\n  },\n  contexts: {\n    os: { type: \"os\", name: \"Linux\" },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" }\n  },\n  fingerprints: [\"cd05695f108567c9cd4e56c8945ade8b\"],\n  context: { arguments: [] },\n  release: null,\n  groupID: \"7\"\n}"
            },
            {
                "name": "tags",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/tags-test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IssueTags[]",
                "defaultValue": "[\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"/api/{id}/store/\",\n        value: \"/api/{id}/store/\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"transaction\",\n        firstSeen: \"2021-01-20T22:53:12.495Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Transaction\",\n    key: \"transaction\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"CPython\",\n        value: \"CPython\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"runtime.name\",\n        firstSeen: \"2021-01-20T22:53:12.392Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Runtime.Name\",\n    key: \"runtime.name\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 228,\n        name: \"Windows 10\",\n        value: \"Windows 10\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"os.name\",\n        firstSeen: \"2021-01-20T22:53:12.321Z\",\n      },\n      {\n        count: 20,\n        name: \"Windows 7\",\n        value: \"Windows 7\",\n        lastSeen: \"2021-01-29T21:21:08.826Z\",\n        key: \"os.name\",\n        firstSeen: \"2021-01-27T16:50:53.612Z\",\n      },\n      {\n        count: 1,\n        name: \"Mac OS X\",\n        value: \"Mac OS X\",\n        lastSeen: \"2021-01-26T09:46:49.536Z\",\n        key: \"os.name\",\n        firstSeen: \"2021-01-26T09:46:58.208Z\",\n      },\n    ],\n    uniqueValues: 3,\n    name: \"Os.Name\",\n    key: \"os.name\",\n    totalValues: 249,\n  },\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"warning\",\n        value: \"warning\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"level\",\n        firstSeen: \"2021-01-20T22:53:11.157Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Level\",\n    key: \"level\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 163,\n        name: \"Chrome 88.0.4324\",\n        value: \"Chrome 88.0.4324\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"browser\",\n        firstSeen: \"2021-01-26T09:46:58.036Z\",\n      },\n      {\n        count: 86,\n        name: \"Chrome 87.0.4280\",\n        value: \"Chrome 87.0.4280\",\n        lastSeen: \"2021-01-29T22:21:19.120Z\",\n        key: \"browser\",\n        firstSeen: \"2021-01-20T22:53:08.249Z\",\n      },\n    ],\n    uniqueValues: 2,\n    name: \"Browser\",\n    key: \"browser\",\n    totalValues: 249,\n  },\n  {\n    topValues: [\n      {\n        count: 281,\n        name: \"CPython 3.9.1\",\n        value: \"CPython 3.9.1\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"runtime\",\n        firstSeen: \"2021-01-20T22:53:12.363Z\",\n      },\n      {\n        count: 4,\n        name: \"CPython 3.9.2\",\n        value: \"CPython 3.9.2\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"runtime\",\n        firstSeen: \"2021-02-22T14:01:57.069Z\",\n      },\n    ],\n    uniqueValues: 2,\n    name: \"Runtime\",\n    key: \"runtime\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 133,\n        name: \"glitchtip-prod-7b595d64f9-l9hcg\",\n        value: \"glitchtip-prod-7b595d64f9-l9hcg\",\n        lastSeen: \"2021-01-29T22:21:24.375Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-26T09:46:58.394Z\",\n      },\n      {\n        count: 74,\n        name: \"glitchtip-prod-7b595d64f9-cmhx5\",\n        value: \"glitchtip-prod-7b595d64f9-cmhx5\",\n        lastSeen: \"2021-01-28T17:46:22.173Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-26T14:15:08.772Z\",\n      },\n      {\n        count: 69,\n        name: \"glitchtip-prod-7b595d64f9-s4pvj\",\n        value: \"glitchtip-prod-7b595d64f9-s4pvj\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-28T21:50:53.094Z\",\n      },\n      {\n        count: 3,\n        name: \"glitchtip-prod-web-c4ffbddb6-d6vfm\",\n        value: \"glitchtip-prod-web-c4ffbddb6-d6vfm\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-22T14:04:17.109Z\",\n      },\n      {\n        count: 2,\n        name: \"glitchtip-prod-7b595d64f9-m9zv5\",\n        value: \"glitchtip-prod-7b595d64f9-m9zv5\",\n        lastSeen: \"2021-02-09T21:26:45.346Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-09T21:26:47.795Z\",\n      },\n      {\n        count: 2,\n        name: \"glitchtip-prod-7b595d64f9-85rpd\",\n        value: \"glitchtip-prod-7b595d64f9-85rpd\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-09T21:26:47.470Z\",\n      },\n      {\n        count: 1,\n        name: \"glitchtip-prod-web-c4ffbddb6-4zj55\",\n        value: \"glitchtip-prod-web-c4ffbddb6-4zj55\",\n        lastSeen: \"2021-02-22T14:01:47.898Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-22T14:01:57.158Z\",\n      },\n      {\n        count: 1,\n        name: \"glitchtip-prod-77497fc969-7ghqk\",\n        value: \"glitchtip-prod-77497fc969-7ghqk\",\n        lastSeen: \"2021-01-20T22:52:53.903Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-20T22:53:12.460Z\",\n      },\n    ],\n    uniqueValues: 8,\n    name: \"Server\",\n    key: \"server_name\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 280,\n        name: \"glitchtip@1.3.2\",\n        value: \"glitchtip@1.3.2\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"release\",\n        firstSeen: \"2021-01-26T09:46:58.323Z\",\n      },\n      {\n        count: 4,\n        name: \"glitchtip@1.4.0\",\n        value: \"glitchtip@1.4.0\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"release\",\n        firstSeen: \"2021-02-22T14:01:57.132Z\",\n      },\n      {\n        count: 1,\n        name: \"glitchtip@1.3.0\",\n        value: \"glitchtip@1.3.0\",\n        lastSeen: \"2021-01-20T22:52:53.903Z\",\n        key: \"release\",\n        firstSeen: \"2021-01-20T22:53:12.424Z\",\n      },\n    ],\n    uniqueValues: 3,\n    name: \"Release\",\n    key: \"release\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 249,\n        name: \"Chrome\",\n        value: \"Chrome\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"browser.name\",\n        firstSeen: \"2021-01-20T22:53:08.300Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Browser.Name\",\n    key: \"browser.name\",\n    totalValues: 249,\n  },\n  {\n    topValues: [\n      {\n        count: 1,\n        name: \"Mac OS X 11.1.0\",\n        value: \"Mac OS X 11.1.0\",\n        lastSeen: \"2021-01-26T09:46:49.536Z\",\n        key: \"os\",\n        firstSeen: \"2021-01-26T09:46:58.176Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"OS\",\n    key: \"os\",\n    totalValues: 1,\n  },\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"prod\",\n        value: \"prod\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"environment\",\n        firstSeen: \"2021-01-20T22:53:09.891Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Environment\",\n    key: \"environment\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 248,\n        name: \"https://app.glitchtip.com/api/164/store/\",\n        value: \"https://app.glitchtip.com/api/164/store/\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"url\",\n        firstSeen: \"2021-01-26T09:46:58.461Z\",\n      },\n      {\n        count: 28,\n        name: \"https://app.glitchtip.com/api/165/store/\",\n        value: \"https://app.glitchtip.com/api/165/store/\",\n        lastSeen: \"2021-01-27T15:26:47.539Z\",\n        key: \"url\",\n        firstSeen: \"2021-01-26T14:10:38.941Z\",\n      },\n      {\n        count: 4,\n        name: \"https://app.glitchtip.com/api/191/store/\",\n        value: \"https://app.glitchtip.com/api/191/store/\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"url\",\n        firstSeen: \"2021-02-22T14:01:57.217Z\",\n      },\n      {\n        count: 4,\n        name: \"https://app.glitchtip.com/api/176/store/\",\n        value: \"https://app.glitchtip.com/api/176/store/\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"url\",\n        firstSeen: \"2021-02-09T21:26:47.861Z\",\n      },\n      {\n        count: 1,\n        name: \"https://app.glitchtip.com/api/147/store/\",\n        value: \"https://app.glitchtip.com/api/147/store/\",\n        lastSeen: \"2021-01-20T22:52:53.903Z\",\n        key: \"url\",\n        firstSeen: \"2021-01-20T22:53:12.525Z\",\n      },\n    ],\n    uniqueValues: 5,\n    name: \"URL\",\n    key: \"url\",\n    totalValues: 285,\n  },\n]"
            },
            {
                "name": "team",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  name: \"cypresstestteam\",\n}"
            },
            {
                "name": "templateError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/template-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"737278b5db2a4280b82351342296beb0\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: null,\n  message:\n    \"NoReverseMatch Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name. /code/errors/templates/template_error.html /template-error/\",\n  id: \"6\",\n  size: 16872,\n  errors: [],\n  culprit: \"/template-error/\",\n  title:\n    \"NoReverseMatch: Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n  platform: \"python\",\n  location: \"/code/errors/templates/template_error.html\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    type: \"NoReverseMatch\",\n    value:\n      \"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n    filename: \"/code/errors/templates/template_error.html\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/template-error/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/template-error/\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-01-27T19:18:03.345Z\",\n  dateReceived: \"2020-01-27T19:18:03.531Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f61885db580>>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    exc:\n                      \"NoReverseMatch(\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\")\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\",\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\",\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f6187781c10>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f61885db580>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    callback: \"<function TemplateErrorView at 0x7f618810a040>\",\n                    wrapped_callback:\n                      \"<function TemplateErrorView at 0x7f618810a040>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 145,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [140, \"                    )\"],\n                    [141, \"\"],\n                    [142, \"            try:\"],\n                    [143, \"                response = response.render()\"],\n                    [144, \"            except Exception as e:\"],\n                    [\n                      145,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [146, \"\"],\n                    [147, \"        return response\"],\n                    [148, \"\"],\n                    [\n                      149,\n                      \"    def process_exception_by_middleware(self, exception, request):\",\n                    ],\n                    [150, '        \"\"\"'],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f6187781c10>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f61885db580>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    callback: \"<function TemplateErrorView at 0x7f618810a040>\",\n                    wrapped_callback:\n                      \"<function TemplateErrorView at 0x7f618810a040>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 143,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      138,\n                      '                        \"HttpResponse object. It returned None instead.\"',\n                    ],\n                    [\n                      139,\n                      \"                        % (middleware_method.__self__.__class__.__name__)\",\n                    ],\n                    [140, \"                    )\"],\n                    [141, \"\"],\n                    [142, \"            try:\"],\n                    [143, \"                response = response.render()\"],\n                    [144, \"            except Exception as e:\"],\n                    [\n                      145,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [146, \"\"],\n                    [147, \"        return response\"],\n                    [148, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                    retval:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                  },\n                  symbol: null,\n                  module: \"django.template.response\",\n                  lineNo: 105,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/response.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/response.py\",\n                  platform: null,\n                  context: [\n                    [100, \"\"],\n                    [101, \"        Return the baked response instance.\"],\n                    [102, '        \"\"\"'],\n                    [103, \"        retval = self\"],\n                    [104, \"        if not self._is_rendered:\"],\n                    [105, \"            self.content = self.rendered_content\"],\n                    [\n                      106,\n                      \"            for post_callback in self._post_render_callbacks:\",\n                    ],\n                    [107, \"                newretval = post_callback(retval)\"],\n                    [108, \"                if newretval is not None:\"],\n                    [109, \"                    retval = newretval\"],\n                    [110, \"        return retval\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"rendered_content\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                    context: {\n                      view:\n                        \"<errors.views.TemplateErrorView object at 0x7f6187682730>\",\n                    },\n                    template:\n                      \"<django.template.backends.django.Template object at 0x7f61876e10a0>\",\n                  },\n                  symbol: null,\n                  module: \"django.template.response\",\n                  lineNo: 83,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/response.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/response.py\",\n                  platform: null,\n                  context: [\n                    [\n                      78,\n                      \"        response content, you must either call render(), or set the\",\n                    ],\n                    [\n                      79,\n                      \"        content explicitly using the value of this property.\",\n                    ],\n                    [80, '        \"\"\"'],\n                    [\n                      81,\n                      \"        template = self.resolve_template(self.template_name)\",\n                    ],\n                    [\n                      82,\n                      \"        context = self.resolve_context(self.context_data)\",\n                    ],\n                    [\n                      83,\n                      \"        return template.render(context, self._request)\",\n                    ],\n                    [84, \"\"],\n                    [85, \"    def add_post_render_callback(self, callback):\"],\n                    [86, '        \"\"\"Add a new post-rendering callback.'],\n                    [87, \"\"],\n                    [88, \"        If the response has already been rendered,\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.backends.django.Template object at 0x7f61876e10a0>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.backends.django\",\n                  lineNo: 61,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/backends/django.py\",\n                  platform: null,\n                  context: [\n                    [56, \"        return self.template.origin\"],\n                    [57, \"\"],\n                    [58, \"    def render(self, context=None, request=None):\"],\n                    [\n                      59,\n                      \"        context = make_context(context, request, autoescape=self.backend.engine.autoescape)\",\n                    ],\n                    [60, \"        try:\"],\n                    [61, \"            return self.template.render(context)\"],\n                    [62, \"        except TemplateDoesNotExist as exc:\"],\n                    [63, \"            reraise(exc, self.backend)\"],\n                    [64, \"\"],\n                    [65, \"\"],\n                    [66, \"def copy_exception(exc, backend=None):\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.base.Template object at 0x7f618769f460>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 171,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      166,\n                      '        \"Display stage -- can be called many times\"',\n                    ],\n                    [\n                      167,\n                      \"        with context.render_context.push_state(self):\",\n                    ],\n                    [168, \"            if context.template is None:\"],\n                    [169, \"                with context.bind_template(self):\"],\n                    [\n                      170,\n                      \"                    context.template_name = self.name\",\n                    ],\n                    [171, \"                    return self._render(context)\"],\n                    [172, \"            else:\"],\n                    [173, \"                return self._render(context)\"],\n                    [174, \"\"],\n                    [175, \"    def compile_nodelist(self):\"],\n                    [176, '        \"\"\"'],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.base.Template object at 0x7f618769f460>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 163,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [158, \"    def __iter__(self):\"],\n                    [159, \"        for node in self.nodelist:\"],\n                    [160, \"            yield from node\"],\n                    [161, \"\"],\n                    [162, \"    def _render(self, context):\"],\n                    [163, \"        return self.nodelist.render(context)\"],\n                    [164, \"\"],\n                    [165, \"    def render(self, context):\"],\n                    [\n                      166,\n                      '        \"Display stage -- can be called many times\"',\n                    ],\n                    [\n                      167,\n                      \"        with context.render_context.push_state(self):\",\n                    ],\n                    [168, \"            if context.template is None:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    node:\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                    bit: \"'<a href=\\\"'\",\n                    bits: [\"'<a href=\\\"'\"],\n                    self: [\n                      \"<TextNode: '<a href=\\\"'>\",\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                      \"<TextNode: '\\\">'>\",\n                    ],\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 936,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [931, \"\"],\n                    [932, \"    def render(self, context):\"],\n                    [933, \"        bits = []\"],\n                    [934, \"        for node in self:\"],\n                    [935, \"            if isinstance(node, Node):\"],\n                    [\n                      936,\n                      \"                bit = node.render_annotated(context)\",\n                    ],\n                    [937, \"            else:\"],\n                    [938, \"                bit = node\"],\n                    [939, \"            bits.append(str(bit))\"],\n                    [940, \"        return mark_safe(''.join(bits))\"],\n                    [941, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: null,\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: null,\n                  lineNo: 1,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/templates/template_error.html\",\n                  inApp: true,\n                  instructionAddr: null,\n                  filename: \"/code/errors/templates/template_error.html\",\n                  platform: null,\n                  context: [\n                    [\n                      1,\n                      \"&lt;a href=&quot;{% url &#x27;nope&#x27; %}&quot;&gt;\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render_annotated\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 903,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      898,\n                      \"        rendering, the exception is annotated with contextual line information\",\n                    ],\n                    [\n                      899,\n                      \"        where it occurred in the template. For internal usage this method is\",\n                    ],\n                    [\n                      900,\n                      \"        preferred over using the render method directly.\",\n                    ],\n                    [901, '        \"\"\"'],\n                    [902, \"        try:\"],\n                    [903, \"            return self.render(context)\"],\n                    [904, \"        except Exception as e:\"],\n                    [\n                      905,\n                      \"            if context.template.engine.debug and not hasattr(e, 'template_debug'):\",\n                    ],\n                    [\n                      906,\n                      \"                e.template_debug = context.render_context.template.get_exception_info(e, self.token)\",\n                    ],\n                    [907, \"            raise\"],\n                    [908, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    reverse: \"<function reverse at 0x7f61887ad4c0>\",\n                    url: \"''\",\n                    self:\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                    args: [],\n                    current_app: \"''\",\n                    view_name: \"'nope'\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                    kwargs: {},\n                    NoReverseMatch:\n                      \"<class 'django.urls.exceptions.NoReverseMatch'>\",\n                  },\n                  symbol: null,\n                  module: \"django.template.defaulttags\",\n                  lineNo: 443,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/defaulttags.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/defaulttags.py\",\n                  platform: null,\n                  context: [\n                    [438, \"                current_app = None\"],\n                    [\n                      439,\n                      \"        # Try to look up the URL. If it fails, raise NoReverseMatch unless the\",\n                    ],\n                    [\n                      440,\n                      \"        # {% url ... as var %} construct is used, in which case return nothing.\",\n                    ],\n                    [441, \"        url = ''\"],\n                    [442, \"        try:\"],\n                    [\n                      443,\n                      \"            url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)\",\n                    ],\n                    [444, \"        except NoReverseMatch:\"],\n                    [445, \"            if self.asvar is None:\"],\n                    [446, \"                raise\"],\n                    [447, \"\"],\n                    [448, \"        if self.asvar:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"reverse\",\n                  colNo: null,\n                  vars: {\n                    current_path: \"None\",\n                    viewname: \"'nope'\",\n                    args: [],\n                    current_app: \"''\",\n                    prefix: \"'/'\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    kwargs: {},\n                    path: [],\n                    urlconf: \"'django_error_factory.urls'\",\n                    view: \"'nope'\",\n                  },\n                  symbol: null,\n                  module: \"django.urls.base\",\n                  lineNo: 87,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/urls/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/urls/base.py\",\n                  platform: null,\n                  context: [\n                    [82, \"                else:\"],\n                    [\n                      83,\n                      '                    raise NoReverseMatch(\"%s is not a registered namespace\" % key)',\n                    ],\n                    [84, \"        if ns_pattern:\"],\n                    [\n                      85,\n                      \"            resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))\",\n                    ],\n                    [86, \"\"],\n                    [\n                      87,\n                      \"    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))\",\n                    ],\n                    [88, \"\"],\n                    [89, \"\"],\n                    [90, \"reverse_lazy = lazy(reverse, str)\"],\n                    [91, \"\"],\n                    [92, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_reverse_with_prefix\",\n                  colNo: null,\n                  vars: {\n                    lookup_view: \"'nope'\",\n                    m: \"None\",\n                    self:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    args: [],\n                    _prefix: \"'/'\",\n                    lookup_view_s: \"'nope'\",\n                    n: \"None\",\n                    possibilities: [],\n                    patterns: [],\n                    msg:\n                      \"\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\"\",\n                  },\n                  symbol: null,\n                  module: \"django.urls.resolvers\",\n                  lineNo: 677,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/urls/resolvers.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/urls/resolvers.py\",\n                  platform: null,\n                  context: [\n                    [672, \"        else:\"],\n                    [673, \"            msg = (\"],\n                    [\n                      674,\n                      \"                \\\"Reverse for '%(view)s' not found. '%(view)s' is not \\\"\",\n                    ],\n                    [\n                      675,\n                      \"                \\\"a valid view function or pattern name.\\\" % {'view': lookup_view_s}\",\n                    ],\n                    [676, \"            )\"],\n                    [677, \"        raise NoReverseMatch(msg)\"],\n                  ],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: true,\n            },\n            module: \"django.urls.exceptions\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value:\n              \"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n            type: \"NoReverseMatch\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: true,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\",\n          ],\n        ],\n        url: \"http://localhost:8001/template-error/\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\",\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {\n      \"0\": {\n        data: {\n          values: {\n            \"0\": {\n              \"\": null,\n              stacktrace: {\n                \"\": null,\n                frames: {},\n                registers: null,\n                framesOmitted: null,\n              },\n              mechanism: null,\n              module: null,\n              value: null,\n              threadId: null,\n              type: null,\n            },\n          },\n        },\n      },\n    },\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\",\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"9ede40076b725295\",\n      trace_id: \"bec9565186e9474eb165f91e81deb6d5\",\n      span_id: \"9cfe2bda8c47ac22\",\n      type: \"default\",\n      op: \"django.middleware\",\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"a8b88d9a728170fc062bed162e6b9394\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"6\",\n}"
            },
            {
                "name": "testTransaction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/api/transactions/transactions-test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Transaction",
                "defaultValue": "{\n  eventId: \"6d8068b9-646d-4917-9502-cd61c7fb0bea\",\n  transaction: \"/\",\n  timestamp: \"2021-01-01T16:25:02.540670Z\",\n  startTimestamp: \"2021-01-01T16:24:02.540670Z\",\n}"
            },
            {
                "name": "totpUserKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/profile/multi-factor-auth/totp/test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserKey",
                "defaultValue": "{\n  id: 1,\n  created: \"\",\n  key_type: \"TOTP\",\n  last_used: \"\",\n  name: \"TOTP Key\",\n  user: 1,\n}"
            },
            {
                "name": "typography",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\n  template: `\n  <section>\n    <article class=\"mat-typography\">\n      <h1>Angular Material typography</h1>\n      <p><a href=\"https://material.angular.io/guide/typography\">Reference</a></p>\n      <p>This section is wrapped with class \"mat-typography\"</p>\n      <p>You can also cutomize with specific classes, as displayed below</p>\n    </article>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n      mat-display-4: Large, one-off header, usually at the top of the page (e.g.\n      a hero header).\n    </p>\n    <p class=\"mat-display-4\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n      mat-display-3: Large, one-off header, usually at the top of the page (e.g.\n      a hero header).\n    </p>\n    <p class=\"mat-display-3\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-display-2: Large, one-off header, usually at the top of the page (e.g.\n    a hero header).\n    </p>\n    <p class=\"mat-display-2\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-display-1: Large, one-off header, usually at the top of the page (e.g.\n    a hero header).\n    </p>\n    <p class=\"mat-display-1\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h1 OR mat-headline: Section heading corresponding to the h1 tag.\n    </p>\n    <h1 class=\"mat-h1 mat-headline\">The quick brown fox jumps over the lazy dog</h1>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h2 OR mat-title: Section heading corresponding to the h2 tag.\n    </p>\n    <h2 class=\"mat-h2 mat-title\">The quick brown fox jumps over the lazy dog</h2>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h3 OR mat-subheading-2: Section heading corresponding to the h3 tag.\n    </p>\n    <h3 class=\"mat-h3 mat-subheading-2\">The quick brown fox jumps over the lazy dog</h3>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h4 OR mat-subheading-1: Section heading corresponding to the h4 tag.\n    </p>\n    <h4 class=\"mat-h4 mat-subheading-1\">The quick brown fox jumps over the lazy dog</h4>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-body OR mat-body-1: Base body text.\n    </p>\n    <p class=\"mat-body mat-body-1\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-body-strong OR mat-body-2: Bolder body text.\n    </p>\n    <p class=\"mat-body-strong mat-body-2\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-small OR mat-caption: Smaller body and hint text.\n    </p>\n    <p class=\"mat-small mat-caption\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n  </section>\n  `,\n})"
            },
            {
                "name": "uniqueInfoLog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const unique = uniqueId(6);\n  return {\n    message: `What I'm really trying to say is: ${unique}`,\n    level: \"info\",\n    event_id: uniqueId(),\n    platform: \"javascript\",\n    sdk: {\n      name: \"sentry.javascript.browser\",\n      packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n      version: \"5.29.2\",\n      integrations: [\n        \"InboundFilters\",\n        \"FunctionToString\",\n        \"TryCatch\",\n        \"Breadcrumbs\",\n        \"GlobalHandlers\",\n        \"LinkedErrors\",\n        \"UserAgent\",\n        \"BrowserTracing\",\n      ],\n    },\n    timestamp: Date.now() / 1000,\n    contexts: {},\n    tags: { transaction: \"/\" },\n    breadcrumbs: [],\n    request: {\n      url: \"http://localhost:4201/\",\n      headers: { \"User-Agent\": randomUserAgent() },\n    },\n  };\n}"
            },
            {
                "name": "unknownContexts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const transformedContexts: any = [\n    {\n      type: \"user\",\n      icon: null,\n      matIcon: \"account_circle\",\n      title: \"em@jay.com\",\n      subtitle: \"117\",\n      key: \"ID\",\n    },\n    {\n      type: \"runtime\",\n      icon: \"static/assets/images/logos/48x48/cpython.png\",\n      matIcon: \"tab\",\n      title: \"CPython\",\n      subtitle: \"3.8.6\",\n      key: \"Version\",\n    },\n    {\n      type: \"browser\",\n      icon: undefined,\n      matIcon: \"tab\",\n      title: \"Unknown Browser\",\n      subtitle: \"Unknown\",\n      key: \"Version\",\n    },\n    {\n      type: \"device\",\n      icon: null,\n      matIcon: \"devices_other\",\n      title: \"Unknown Device\",\n      subtitle: null,\n      key: null,\n    },\n    {\n      type: \"os\",\n      icon: undefined,\n      matIcon: \"computer\",\n      title: \"Unknown Operating System\",\n      subtitle: \"Unknown\",\n      key: \"Version\",\n    },\n  ];\n  return {\n    component: ContextsComponent,\n    props: {\n      specialContexts$: of(transformedContexts),\n    },\n  };\n}"
            },
            {
                "name": "user",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/users.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  email: \"cypresstest@example.com\",\n  password: \"hunter22\",\n}"
            },
            {
                "name": "userAgents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n  ubuntuFirefox:\n    \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n  ubuntuChrome:\n    \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\",\n  windowsChrome:\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\",\n  macOSSafari:\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15\",\n  iOSSafari:\n    \"Mozilla/5.0 (iPhone; CPU iPhone OS 14_4_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1\",\n  windowsOpera:\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.192 Safari/537.36 OPR/74.0.3911.218\",\n  androidChrome:\n    \"Mozilla/5.0 (Linux; Android 11) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36\",\n}"
            },
            {
                "name": "warningMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "cypress/fixtures/events.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  message: \"Warning: something is a little bit bad\",\n  level: \"warning\",\n  event_id: \"4a36bb8becc44e3088a359218faecb80\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617248240.919,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"9cb691e04712aa93\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"76f86569455d499b8da2bd2aeaa7f9e4\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617248238.536,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617248238.54,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617248238.552,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617248238.585,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617248238552\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
            },
            {
                "name": "zeroDivisionDotnet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/zero-division-dotnet.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"cb2445d6cf6849358a99a624613235df\",\n  dist: null,\n  userReport: null,\n  projectID: \"7\",\n  previousEventID: \"a7d99673543f49a886c5718936471ac7\",\n  message: \"An unhandled exception has occurred while executing the request.\",\n  id: \"2074\",\n  size: 18612,\n  errors: [],\n  culprit: \"myWebApp.Pages.DivideZeroModel in DivideByZero\",\n  title: \"System.DivideByZeroException: Attempted to divide by zero.\",\n  platform: \"csharp\",\n  location: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"DivideByZero\",\n    type: \"System.DivideByZeroException\",\n    value: \"Attempted to divide by zero.\",\n    filename: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"0HLV7P8HVOBA7\", key: \"ConnectionId\", _meta: null },\n    { value: \"0HLV7P8HVOBA7:00000004\", key: \"RequestId\", _meta: null },\n    { value: \"|f3b3f1eb-41c98fd19654c178.\", key: \"SpanId\", _meta: null },\n    { value: \"f3b3f1eb-41c98fd19654c178\", key: \"TraceId\", _meta: null },\n    { value: \"Firefox 75.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"Development\", key: \"environment\", _meta: null },\n    { value: \"UnhandledException\", key: \"eventId\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    {\n      value: \"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddle...\",\n      key: \"logger\",\n      _meta: null,\n    },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"Linux\", key: \"server-os.name\", _meta: null },\n    { value: \".NET Core 3.1.3\", key: \"server-runtime\", _meta: null },\n    { value: \".NET Core\", key: \"server-runtime.name\", _meta: null },\n    { value: \"bsc\", key: \"server_name\", _meta: null },\n    { value: \"http://localhost:5000/Divide-Zero\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-04-23T21:06:09.659Z\",\n  dateReceived: \"2020-04-23T21:06:10.258Z\",\n  user: null,\n  entries: [\n    {\n      type: \"message\",\n      data: {\n        formatted:\n          \"An unhandled exception has occurred while executing the request.\",\n      },\n    },\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"Invoke\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Diagnostics, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Invoke\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Authorization.AuthorizationMiddleware\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Authorization.Policy, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"MoveNext\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Routing.EndpointMiddleware+<<Invoke>g__AwaitRequestTask|6_0>d\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Routing, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"MoveNext\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+<<InvokeAsync>g__Awaited|17_0>d\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeFilterPipelineAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Next\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Rethrow\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"MoveNext\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+<<InvokeNextResourceFilter>g__Awaited|24_0>d\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeInnerFilterAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Next\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Rethrow\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeNextPageFilterAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeHandlerMethodAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Execute\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.ExecutorFactory+VoidHandlerMethod\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"OnGet\",\n                  colNo: 6,\n                  vars: null,\n                  symbol: null,\n                  module: \"myWebApp.Pages.DivideZeroModel\",\n                  lineNo: 19,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"myWebApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\n                  absPath: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  inApp: true,\n                  instructionAddr: null,\n                  filename: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"DivideByZero\",\n                  colNo: 13,\n                  vars: null,\n                  symbol: null,\n                  module: \"myWebApp.Pages.DivideZeroModel\",\n                  lineNo: 14,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"myWebApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\n                  absPath: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  inApp: true,\n                  instructionAddr: null,\n                  filename: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: true,\n            },\n            module:\n              \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n            rawStacktrace: null,\n            mechanism: null,\n            threadId: 8,\n            value: \"Attempted to divide by zero.\",\n            type: \"System.DivideByZeroException\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: true,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: null,\n        env: {\n          SERVER_NAME: \"bsc\",\n          SERVER_PORT: \"5000\",\n          DOCUMENT_ROOT: \"/home/dotnet-error-factory/wwwroot\",\n        },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Host\", \"localhost:5000\"],\n          [\"Referer\", \"http://localhost:5000/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\",\n          ],\n        ],\n        url: \"http://localhost:5000/Divide-Zero\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    \"Microsoft.AspNetCore.Razor.Runtime\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Routing.Abstractions\": \"3.1.3.0\",\n    \"System.Runtime.InteropServices\": \"4.2.2.0\",\n    \"System.Memory\": \"4.2.1.0\",\n    \"System.Private.Uri\": \"4.0.6.0\",\n    \"Microsoft.AspNetCore.WebUtilities\": \"3.1.3.0\",\n    \"System.Security.Claims\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets\": \"3.1.3.0\",\n    \"System.IO.FileSystem.Watcher\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.TagHelpers\": \"3.1.3.0\",\n    \"System.Private.Xml.Linq\": \"4.0.2.0\",\n    \"System.Diagnostics.Debug\": \"4.1.2.0\",\n    \"Microsoft.Extensions.Configuration.FileExtensions\": \"3.1.3.0\",\n    \"System.Net.Http\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.HostFiltering\": \"3.1.3.0\",\n    \"System.Private.Xml\": \"4.0.2.0\",\n    \"Microsoft.AspNetCore.Authorization\": \"3.1.3.0\",\n    \"System.Numerics.Vectors\": \"4.1.6.0\",\n    \"Microsoft.AspNetCore.Mvc.ViewFeatures\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.StaticFiles\": \"3.1.3.0\",\n    \"Microsoft.Extensions.WebEncoders\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.Debug\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Hosting\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Mvc.Core\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Http.Features\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.EventLog\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Options\": \"3.1.3.0\",\n    \"System.ComponentModel.Primitives\": \"4.2.2.0\",\n    \"Microsoft.Win32.Registry\": \"4.1.3.0\",\n    \"myWebApp.Views\": \"1.0.0.0\",\n    \"System.Security.Cryptography.Primitives\": \"4.1.2.0\",\n    \"System.Runtime.CompilerServices.Unsafe\": \"4.0.6.0\",\n    \"Microsoft.AspNetCore.Antiforgery\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Server.IIS\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.EnvironmentVariables\": \"3.1.3.0\",\n    \"System.Reflection.Primitives\": \"4.1.2.0\",\n    \"Microsoft.Win32.Primitives\": \"4.1.2.0\",\n    \"System.IO.FileSystem\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.DataAnnotations\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.HttpOverrides\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.CommandLine\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Hosting\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Components\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Diagnostics.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.Console\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Connections.Abstractions\": \"3.1.3.0\",\n    \"System.Runtime\": \"4.2.2.0\",\n    netstandard: \"2.1.0.0\",\n    \"System.Diagnostics.StackTrace\": \"4.1.2.0\",\n    \"Microsoft.Net.Http.Headers\": \"3.1.3.0\",\n    \"System.Threading.ThreadPool\": \"4.1.2.0\",\n    \"System.Reflection.Emit.ILGeneration\": \"4.1.1.0\",\n    \"Microsoft.Extensions.Logging.Abstractions\": \"3.1.3.0\",\n    \"System.Threading\": \"4.1.2.0\",\n    \"System.Net.WebSockets\": \"4.1.2.0\",\n    \"Microsoft.Extensions.Configuration.Abstractions\": \"3.1.3.0\",\n    \"System.Security.Cryptography.Algorithms\": \"4.3.2.0\",\n    \"Microsoft.Extensions.ObjectPool\": \"3.1.3.0\",\n    \"System.Collections\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Razor\": \"3.1.3.0\",\n    \"Microsoft.Extensions.DependencyInjection.Abstractions\": \"3.1.3.0\",\n    \"System.ComponentModel\": \"4.0.4.0\",\n    \"Microsoft.AspNetCore.Html.Abstractions\": \"3.1.3.0\",\n    \"System.Linq\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Authentication.Core\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.DataProtection.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.Binder\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Metadata\": \"3.1.3.0\",\n    \"System.Collections.Specialized\": \"4.1.2.0\",\n    \"System.ComponentModel.Annotations\": \"4.3.1.0\",\n    \"Microsoft.Extensions.Localization.Abstractions\": \"3.1.3.0\",\n    \"System.Text.Encoding.Extensions\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.Razor\": \"3.1.3.0\",\n    \"System.Buffers\": \"4.0.5.0\",\n    \"Microsoft.Extensions.FileProviders.Abstractions\": \"3.1.3.0\",\n    \"System.Runtime.Intrinsics\": \"4.0.1.0\",\n    \"Microsoft.JSInterop\": \"3.1.3.0\",\n    \"System.Xml.XDocument\": \"4.1.2.0\",\n    \"System.Threading.Timer\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Hosting.Server.Abstractions\": \"3.1.3.0\",\n    \"System.Text.RegularExpressions\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Server.IISIntegration\": \"3.1.3.0\",\n    \"Microsoft.Extensions.DependencyInjection\": \"3.1.3.0\",\n    myWebApp: \"1.0.0.0\",\n    \"System.Text.Json\": \"4.0.1.1\",\n    \"System.Threading.Tasks\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Http.Extensions\": \"3.1.3.0\",\n    \"System.Diagnostics.DiagnosticSource\": \"4.0.5.0\",\n    \"System.Threading.Thread\": \"4.1.2.0\",\n    \"Sentry.Extensions.Logging\": \"2.1.1.0\",\n    \"Microsoft.Extensions.Hosting.Abstractions\": \"3.1.3.0\",\n    \"System.Security.Cryptography.Csp\": \"4.1.2.0\",\n    \"Microsoft.Extensions.FileProviders.Physical\": \"3.1.3.0\",\n    \"System.Net.Primitives\": \"4.1.2.0\",\n    \"System.Text.Encodings.Web\": \"4.0.5.0\",\n    \"System.ObjectModel\": \"4.1.2.0\",\n    \"System.Diagnostics.Tracing\": \"4.2.2.0\",\n    \"Microsoft.Extensions.FileSystemGlobbing\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Options.ConfigurationExtensions\": \"3.1.3.0\",\n    \"System.Security.Cryptography.X509Certificates\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Primitives\": \"3.1.3.0\",\n    \"System.Security.Principal\": \"4.1.2.0\",\n    \"System.IO.Pipelines\": \"4.0.2.1\",\n    \"Microsoft.AspNetCore.DataProtection\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel.Core\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.UserSecrets\": \"3.1.3.0\",\n    \"Sentry.AspNetCore\": \"2.1.1.0\",\n    \"System.Private.CoreLib\": \"4.0.0.0\",\n    \"System.Console\": \"4.1.2.0\",\n    \"System.Net.Security\": \"4.1.2.0\",\n    \"System.Runtime.Extensions\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Authorization.Policy\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Caching.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Hosting.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Http.Abstractions\": \"3.1.3.0\",\n    \"System.Reflection.Metadata\": \"1.4.5.0\",\n    \"System.IO.Compression\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Configuration.Json\": \"3.1.3.0\",\n    \"System.Reflection.Emit.Lightweight\": \"4.1.1.0\",\n    \"System.Drawing.Primitives\": \"4.2.1.0\",\n    \"Microsoft.AspNetCore.Mvc\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.EventSource\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Caching.Memory\": \"3.1.3.0\",\n    \"System.Collections.Immutable\": \"1.2.5.0\",\n    \"Sentry.Protocol\": \"2.1.1.0\",\n    Sentry: \"2.1.1.0\",\n    \"System.Linq.Expressions\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Configuration\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging\": \"3.1.3.0\",\n    \"System.Resources.ResourceManager\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Authentication.Abstractions\": \"3.1.3.0\",\n    \"System.Net.Sockets\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Diagnostics\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Http\": \"3.1.3.0\",\n    \"System.Collections.Concurrent\": \"4.0.15.0\",\n    \"System.ComponentModel.TypeConverter\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Logging.Configuration\": \"3.1.3.0\",\n    \"System.Runtime.InteropServices.RuntimeInformation\": \"4.0.4.0\",\n    \"Microsoft.AspNetCore.Routing\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Mvc.RazorPages\": \"3.1.3.0\",\n    \"Sentry.PlatformAbstractions\": \"1.1.0.0\",\n    \"Microsoft.AspNetCore.Cryptography.Internal\": \"3.1.3.0\",\n  },\n  sdk: {\n    version: \"2.1.1\",\n    name: \"sentry.dotnet.aspnetcore\",\n    upstream: { url: null, isNewer: false, name: \"sentry.dotnet.aspnetcore\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    \"server-runtime\": {\n      raw_description: \".NET Core 3.1.3\",\n      version: \"3.1.3\",\n      type: \"runtime\",\n      name: \".NET Core\",\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    \"server-os\": {\n      kernel_version: \"4.15.0\",\n      raw_description:\n        \"Linux 4.15.0-1079-oem #89-Ubuntu SMP Fri Mar 27 05:22:11 UTC 2020\",\n      type: \"os\",\n      name: \"Linux\",\n    },\n    browser: { version: \"75.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"29387c79a19642b7b20606cf9056f9ee\"],\n  context: {},\n  release: null,\n  groupID: \"49\",\n}"
            },
            {
                "name": "zeroDivisionError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/issues/issue-detail/event-detail/test-data/zero-division-error.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventDetail",
                "defaultValue": "{\n  eventID: \"7d8b0e3646284685b6c834bea72cee8e\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: \"345de1d2948f4904928b73ff884a007e\",\n  message:\n    \"get ZeroDivisionError division by zero errors/views.py /divide-zero/\",\n  id: \"19\",\n  size: 9755,\n  errors: [],\n  culprit: \"/divide-zero/\",\n  title: \"ZeroDivisionError: division by zero\",\n  platform: \"python\",\n  location: \"errors/views.py\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"get\",\n    type: \"ZeroDivisionError\",\n    value: \"division by zero\",\n    filename: \"errors/views.py\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/divide-zero/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/divide-zero/\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-01-27T19:19:06.143Z\",\n  dateReceived: \"2020-01-27T19:19:06.204Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    exc: \"ZeroDivisionError('division by zero')\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\",\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\",\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DivideZeroView, args=(), kwargs={}, url_name=divide_zero, app_names=[], namespaces=[], route=divide-zero/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    callback: \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    wrapped_callback:\n                      \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\",\n                    ],\n                    [120, \"                view_name = callback.__name__\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DivideZeroView, args=(), kwargs={}, url_name=divide_zero, app_names=[], namespaces=[], route=divide-zero/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    callback: \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    wrapped_callback:\n                      \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.DivideZeroView object at 0x7f9c4ade79a0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.DivideZeroView'>\",\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\",\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__',\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\",\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DivideZeroView object at 0x7f9c4ade79a0>\",\n                    handler:\n                      \"<bound method DivideZeroView.get of <errors.views.DivideZeroView object at 0x7f9c4ade79a0>>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    args: [],\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\",\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\",\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\",\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\",\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\",\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DivideZeroView object at 0x7f9c4ade79a0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 12,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [7, '    template_name = \"home.html\"'],\n                    [8, \"\"],\n                    [9, \"\"],\n                    [10, \"class DivideZeroView(View):\"],\n                    [11, \"    def get(self, request, *args, **kwargs):\"],\n                    [12, \"        0/0\"],\n                    [13, \"\"],\n                    [14, \"\"],\n                    [15, \"class DatabaseErrorView(View):\"],\n                    [16, \"    def get(self, request, *args, **kwargs):\"],\n                    [17, '        User.objects.get(id=\"9999999\")'],\n                  ],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false,\n            },\n            module: null,\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"division by zero\",\n            type: \"ZeroDivisionError\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\",\n          ],\n        ],\n        url: \"http://localhost:8001/divide-zero/\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\",\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\",\n    },\n\n    os: {\n      name: \"linux\",\n    },\n    device: {\n      arch: \"amd64\",\n      num_cpu: 8,\n    },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"886265157fcc2c0a\",\n      trace_id: \"605f4d2d9e6a43499afaf4bd240f33bd\",\n      span_id: \"88ccfce284caa9da\",\n      type: \"default\",\n      op: \"django.middleware\",\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"6c64a182729809288e28b95b0258be01\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"2\",\n}"
            }
        ],
        "functions": [
            {
                "name": "emailsValidator",
                "file": "src/app/settings/members/new-member/new-member.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateClassName",
                "file": "src/app/shared/shared.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>generateClassName comes from\n<a href=\"https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/contextSummary.jsx#L11\">https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/contextSummary.jsx#L11</a></p>\n",
                "args": [
                    {
                        "name": "name",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "name",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateIconPath",
                "file": "src/app/shared/shared.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Generates path to icons in iconDictionary</p>\n",
                "args": [
                    {
                        "name": "icon",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "icon",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isStacktrace",
                "file": "src/app/issues/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "stacktrace",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "Stacktrace",
                "jsdoctags": [
                    {
                        "name": "stacktrace",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "normalizeProjectParams",
                "file": "src/app/issues/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "projects",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "projects",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "numberValidator",
                "file": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "paramsToObject",
                "file": "src/app/issues/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "entries",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "entries",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "requestLogin",
                "file": "cypress/integration/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "seedBackend",
                "file": "cypress/integration/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "doExtraStuff",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "doExtraStuff",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "seedDjangoIssues",
                "file": "cypress/integration/screenshot-run.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "dsn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "dsn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "seedIssues",
                "file": "cypress/integration/issues.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "dsn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "dsn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "seedJavaScriptIssues",
                "file": "cypress/integration/screenshot-run.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "dsn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "dsn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "uniqueId",
                "file": "cypress/integration/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "length",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "length",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "urlParamsToObject",
                "file": "src/app/issues/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "url",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "url",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "validateEmails",
                "file": "src/app/settings/members/new-member/new-member.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Custom validator to vaildate emails separated by commas</p>\n",
                "args": [
                    {
                        "name": "emails",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "emails",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "BackupCodes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string[]",
                "file": "src/app/api/mfa/user-keys.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 179
            },
            {
                "name": "ContextsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"user\" | \"browser\" | \"runtime\" | \"os\" | \"client_os\" | \"device\" | \"gpu\"",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "EntryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"exception\" | \"breadcrumbs\" | \"request\" | \"message\" | \"csp\"",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "EntryUnion",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Entry<exception | ExceptionValueData> | Entry<breadcrumbs | BreadcrumbValueData> | Entry<request | Request> | Entry<message | Message> | Entry<csp | CSP>",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Environment",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"production\" | \"staging\" | \"development\"",
                "file": "cypress/fixtures/variables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "EventTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"error\" | \"default\"",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "IssueStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"resolved\" | \"unresolved\" | \"ignored\"",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Json",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "null | boolean | number | string | Json[] | literal type",
                "file": "src/app/interface-primitives.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "JsonArrayOrObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Json[] | literal type",
                "file": "src/app/interface-primitives.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "LoadingStateNames",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"add\" | \"delete\" | \"makePrimary\" | \"resendConfirmation\"",
                "file": "src/app/api/emails/email.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "MemberRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"member\" | \"admin\" | \"manager\" | \"owner\"",
                "file": "src/app/api/organizations/organizations.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "NotificationStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number",
                "file": "src/app/profile/notifications/notifications.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 144
            },
            {
                "name": "OAuthProvider",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"google\" | \"gitlab\" | \"github\" | \"microsoft\"",
                "file": "src/app/api/oauth/oauth.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Name as defined by django-allauth</p>\n",
                "kind": 183
            },
            {
                "name": "RecipientType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"email\" | \"webhook\"",
                "file": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ServerError",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/django.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "Stats",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 191
            },
            {
                "name": "StatsPeriod",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"24h\" | \"14d\" | \"30d\" | string",
                "file": "src/app/issues/interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "UserKeyType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\"",
                "file": "src/app/api/mfa/user-keys.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ValidAuth",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"TOTP\" | \"FIDO2\"",
                "file": "src/app/login/login.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/profile/auth-tokens/auth-tokens.stories.ts": [
                {
                    "name": "authTokens",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/auth-tokens/auth-tokens.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const authTokenData = [\n    {\n      scopes: [\"project:read\"],\n      dateCreated: \"2020-12-08T14:55:29.700718Z\",\n      label: \"Test Token\",\n      token: \"2254a159205830ca3d033617546b1c4634ef1f58\",\n      id: 26,\n    },\n    {\n      scopes: [\n        \"project:read\",\n        \"project:write\",\n        \"project:admin\",\n        \"project:releases\",\n        \"team:read\",\n        \"team:write\",\n        \"team:admin\",\n        \"event:read\",\n        \"event:write\",\n        \"event:admin\",\n        \"org:read\",\n        \"org:write\",\n        \"org:admin\",\n        \"member:read\",\n        \"member:write\",\n        \"member:admin\",\n      ],\n      dateCreated: \"2020-12-08T14:55:17.320799Z\",\n      label:\n        \"Token with a really long that probably should not happen normally but it could because that's an option we have\",\n      token: \"a389e813ea6920ba93fa3416e4792c68988e5991\",\n      id: 25,\n    },\n    {\n      scopes: [\"team:write\", \"event:write\", \"member:write\"],\n      dateCreated: \"2020-12-08T14:54:41.443359Z\",\n      label: \"Write Token\",\n      token: \"f36c969bb5adb240b8a50d01fe653807719bf662\",\n      id: 24,\n    },\n  ];\n  const statesOptions = {\n    empty: [],\n    hasTokens: authTokenData,\n  };\n  return {\n    component: AuthTokensComponent,\n    props: {\n      authTokens$: of(select(\"States\", statesOptions as any, [])),\n      deleteLoading$: of(\n        select(\n          \"loading\",\n          { first: 24, second: 25, third: 26, none: null },\n          null\n        )\n      ),\n      initialLoad$: of(boolean(\"Initial Load\", true)),\n    },\n  };\n}"
                }
            ],
            "cypress/fixtures/events.ts": [
                {
                    "name": "autoplayError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"EvalError\",\n        value:\n          'MDN says \"EvalError is not used in the current ECMAScript specification and will thus not be thrown by the runtime. However, the object itself remains for backwards compatibility with earlier versions of the specification.\"',\n        stacktrace: {\n          frames: [\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"HTMLButtonElement.globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"ZoneTask.invokeTask [as invoke]\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"Zone.runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"ZoneDelegate.invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"Object.onInvokeTask\",\n              in_app: true,\n              lineno: 47780,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"ZoneDelegate.invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"HTMLButtonElement.sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"HTMLButtonElement.<anonymous>\",\n              in_app: true,\n              lineno: 53584,\n            },\n            {\n              colno: 22,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34527,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34492,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_14_listener\",\n              in_app: true,\n              lineno: 203,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent.throwEvalError\",\n              in_app: true,\n              lineno: 143,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: \"7a9d061a477b4f1f9363dc9eb078d5ab\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617247433.425,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"96824092a8c6f343\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"891daa720ccb4171b0fd1f41344ee961\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617247424.183,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617247424.186,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617247424.201,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617247424.208,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617247424202\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\",\n    },\n  },\n}"
                },
                {
                    "name": "criticalMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  message: \"Critical Error\",\n  level: \"critical\",\n  event_id: \"96de7b91117842b2b13d45bbed6924f2\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617248494.277,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"90e4a530f0e1c9d1\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"eb14ef60cb5649dca86ebd8ba968f330\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617248490.962,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617248490.966,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617248490.979,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617248490.994,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617248490979\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617248492.899,\n      category: \"sentry.event\",\n      event_id: \"e3acf095b9ac405f823b5eb633cdaacf\",\n      level: \"info\",\n      message: \"A user actually clicked this thing\",\n    },\n    {\n      timestamp: 1617248492.903,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "debugMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  message: \"Debug message\",\n  level: \"debug\",\n  event_id: \"dd08d8f04fe841d4b44f6fc294251979\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617247994.923,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"807000baccc94ed1\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"f7c369c07e014b05a5751aa06afd8ab9\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617247992.853,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617247992.857,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617247992.876,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617247992.913,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617247992878\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "evalError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  message:\n    \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n  exception: {\n    values: [\n      {\n        value:\n          \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n        type: \"Error\",\n        mechanism: { handled: false, type: \"onunhandledrejection\" },\n      },\n    ],\n  },\n  tags: { transaction: \"/autoplay\", \"DOMException.code\": \"0\" },\n  level: \"error\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  event_id: \"c7b2b791d2f24512b20de453a0d28396\",\n  timestamp: 1617247530.337,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"a33222d43851a661\",\n      status: \"internal_error\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"e20a6bf912744b368a21893469c42675\",\n    },\n  },\n  breadcrumbs: [\n    {\n      timestamp: 1617247530.309,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617247530.317,\n      category: \"navigation\",\n      data: { from: \"/autoplay\", to: \"/autoplay\" },\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/autoplay\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "generateErrors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(url: string, count: number) => {\n  for (let i = 0; i < count; i++) {\n    cy.request(\"POST\", url, jsError());\n  }\n}"
                },
                {
                    "name": "generateIssues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(url: string, count: number) => {\n  for (let i = 0; i < count; i++) {\n    cy.request(\"POST\", url, uniqueInfoLog());\n  }\n}"
                },
                {
                    "name": "infoMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  message: \"A user actually clicked this thing\",\n  level: \"info\",\n  event_id: \"e3acf095b9ac405f823b5eb633cdaacf\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617248492.895,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"90e4a530f0e1c9d1\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"eb14ef60cb5649dca86ebd8ba968f330\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617248490.962,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617248490.966,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617248490.979,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617248490.994,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617248490979\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "jsError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  message: \"A Generic Error\",\n  exception: {\n    values: [\n      {\n        value: \"A Generic Error\",\n        type: \"Error\",\n        mechanism: { synthetic: true, handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: Date.now() / 1000,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"8e2b111ba056f7b5\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"1179b08e3ec14455836d323ab9af1d86\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617135472.93,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617135472.935,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617135472.946,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617135472.975,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617135472946\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: { \"User-Agent\": randomUserAgent() },\n  },\n})"
                },
                {
                    "name": "jsRangeError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"RangeError\",\n        value: \"The number must be between 0 and 10.\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 209,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_17_listener\",\n              in_app: true,\n              lineno: 209,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"checkRange\",\n              in_app: true,\n              lineno: 147,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119801.843,\n  environment: environments.production,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "jsReferenceError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"ReferenceError\",\n        value: \"undefinedVariable is not defined\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 215,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_20_listener\",\n              in_app: true,\n              lineno: 215,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"throwReferenceError\",\n              in_app: true,\n              lineno: 152,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119948.811,\n  environment: environments.staging,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      status: \"cancelled\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n        visibilitychange: \"document.hidden\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617119801.846,\n      category: \"sentry.event\",\n      event_id: \"2dd83f0e558c43be8f74b6ac310e3cd7\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.849,\n      category: \"sentry.event\",\n      event_id: \"984c336e2767438da5cd62f26ad88862\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.851,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"The number must be between 0 and 10.\",\n            name: \"RangeError\",\n            stack:\n              \"checkRange@http://localhost:4201/main.js:147:19\\nAppComponent_Template_button_click_17_listener@http://localhost:4201/main.js:209:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:209:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.852,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "jsSyntaxError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"ReferenceError\",\n        value: \"nope is not defined\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 221,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_23_listener\",\n              in_app: true,\n              lineno: 221,\n            },\n            {\n              colno: 9,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"throwSyntaxError\",\n              in_app: true,\n              lineno: 155,\n            },\n            {\n              filename: \"http://localhost:4201/main.js\",\n              function: \"eval\",\n              in_app: true,\n              lineno: 155,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119974.697,\n  environment: environments.development,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      status: \"cancelled\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n        visibilitychange: \"document.hidden\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617119801.846,\n      category: \"sentry.event\",\n      event_id: \"2dd83f0e558c43be8f74b6ac310e3cd7\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.849,\n      category: \"sentry.event\",\n      event_id: \"984c336e2767438da5cd62f26ad88862\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.851,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"The number must be between 0 and 10.\",\n            name: \"RangeError\",\n            stack:\n              \"checkRange@http://localhost:4201/main.js:147:19\\nAppComponent_Template_button_click_17_listener@http://localhost:4201/main.js:209:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:209:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.852,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n    {\n      timestamp: 1617119948.814,\n      category: \"sentry.event\",\n      event_id: \"76879380a28f49c3af3dc5ab09f3f688\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.818,\n      category: \"sentry.event\",\n      event_id: \"d1d28a88ed8a49c2b5169399bd01fe4d\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.82,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"undefinedVariable is not defined\",\n            name: \"ReferenceError\",\n            stack:\n              \"throwReferenceError@http://localhost:4201/main.js:152:17\\nAppComponent_Template_button_click_20_listener@http://localhost:4201/main.js:215:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:215:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.822,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "jsUriError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  exception: {\n    values: [\n      {\n        type: \"URIError\",\n        value: \"malformed URI sequence\",\n        stacktrace: {\n          frames: [\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"drainMicroTaskQueue\",\n              in_app: true,\n              lineno: 665,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleResolveOrReject/<\",\n              in_app: true,\n              lineno: 953,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"run\",\n              in_app: true,\n              lineno: 219,\n            },\n            {\n              colno: 36,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 459,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvoke\",\n              in_app: true,\n              lineno: 47753,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invoke\",\n              in_app: true,\n              lineno: 460,\n            },\n            {\n              colno: 26,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrapModuleFactory/</</<\",\n              in_app: true,\n              lineno: 48370,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 64,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"_moduleDoBootstrap/<\",\n              in_app: true,\n              lineno: 48400,\n            },\n            {\n              colno: 42,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"bootstrap\",\n              in_app: true,\n              lineno: 48687,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"create\",\n              in_app: true,\n              lineno: 44309,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28614,\n            },\n            {\n              colno: 24,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderChildComponents\",\n              in_app: true,\n              lineno: 28454,\n            },\n            {\n              colno: 15,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderComponent\",\n              in_app: true,\n              lineno: 29864,\n            },\n            {\n              colno: 28,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"renderView\",\n              in_app: true,\n              lineno: 28589,\n            },\n            {\n              colno: 19,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeTemplate\",\n              in_app: true,\n              lineno: 28782,\n            },\n            {\n              colno: 52,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template\",\n              in_app: true,\n              lineno: 227,\n            },\n            {\n              colno: 21,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"ɵɵlistener\",\n              in_app: true,\n              lineno: 34288,\n            },\n            {\n              colno: 44,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listenerInternal\",\n              in_app: true,\n              lineno: 34408,\n            },\n            {\n              colno: 34,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"listen\",\n              in_app: true,\n              lineno: 53734,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53358,\n            },\n            {\n              colno: 17,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"addEventListener\",\n              in_app: true,\n              lineno: 53813,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"instrumentDOM/</</<\",\n              in_app: true,\n              lineno: 5038,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wytX/TryCatch.prototype._wrapEventTarget/</<\",\n              in_app: true,\n              lineno: 80294,\n            },\n            {\n              colno: 39,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"makeAddListener/<\",\n              in_app: true,\n              lineno: 2024,\n            },\n            {\n              colno: 29,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleEventTask\",\n              in_app: true,\n              lineno: 332,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 306,\n            },\n            {\n              colno: 55,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 474,\n            },\n            {\n              colno: 69,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"onScheduleTask\",\n              in_app: true,\n              lineno: 368,\n            },\n            {\n              colno: 30,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"scheduleTask\",\n              in_app: true,\n              lineno: 481,\n            },\n            {\n              colno: 47,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"EventListener.handleEvent*customScheduleGlobal\",\n              in_app: true,\n              lineno: 1869,\n            },\n            {\n              colno: 31,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"globalZoneAwareCallback\",\n              in_app: true,\n              lineno: 1743,\n            },\n            {\n              colno: 18,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 1717,\n            },\n            {\n              colno: 38,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 576,\n            },\n            {\n              colno: 51,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"runTask\",\n              in_app: true,\n              lineno: 263,\n            },\n            {\n              colno: 40,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 494,\n            },\n            {\n              colno: 33,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"onInvokeTask\",\n              in_app: true,\n              lineno: 47741,\n            },\n            {\n              colno: 35,\n              filename: \"http://localhost:4201/polyfills.js\",\n              function: \"invokeTask\",\n              in_app: true,\n              lineno: 495,\n            },\n            {\n              colno: 23,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"sentryWrapped\",\n              in_app: true,\n              lineno: 79817,\n            },\n            {\n              colno: 50,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"decoratePreventDefault/<\",\n              in_app: true,\n              lineno: 53545,\n            },\n            {\n              colno: 54,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n              in_app: true,\n              lineno: 34488,\n            },\n            {\n              colno: 16,\n              filename: \"http://localhost:4201/vendor.js\",\n              function: \"executeListenerWithErrorHandling\",\n              in_app: true,\n              lineno: 34453,\n            },\n            {\n              colno: 146,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"AppComponent_Template_button_click_26_listener\",\n              in_app: true,\n              lineno: 227,\n            },\n            {\n              colno: 27,\n              filename: \"http://localhost:4201/main.js\",\n              function: \"throwUriError\",\n              in_app: true,\n              lineno: 158,\n            },\n          ],\n        },\n        mechanism: { handled: true, type: \"generic\" },\n      },\n    ],\n  },\n  level: \"error\",\n  event_id: uniqueId(),\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617119993.442,\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"b1c91194f8aeb446\",\n      status: \"cancelled\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n        visibilitychange: \"document.hidden\",\n      },\n      trace_id: \"b441f1a2469e40f998a0a22a9c33a4da\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617119800.24,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617119800.245,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617119800.258,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617119800.339,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617119800259\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n    {\n      timestamp: 1617119801.846,\n      category: \"sentry.event\",\n      event_id: \"2dd83f0e558c43be8f74b6ac310e3cd7\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.849,\n      category: \"sentry.event\",\n      event_id: \"984c336e2767438da5cd62f26ad88862\",\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.851,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"The number must be between 0 and 10.\",\n            name: \"RangeError\",\n            stack:\n              \"checkRange@http://localhost:4201/main.js:147:19\\nAppComponent_Template_button_click_17_listener@http://localhost:4201/main.js:209:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:209:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"RangeError: The number must be between 0 and 10.\",\n    },\n    {\n      timestamp: 1617119801.852,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n    {\n      timestamp: 1617119948.814,\n      category: \"sentry.event\",\n      event_id: \"76879380a28f49c3af3dc5ab09f3f688\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.818,\n      category: \"sentry.event\",\n      event_id: \"d1d28a88ed8a49c2b5169399bd01fe4d\",\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.82,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"undefinedVariable is not defined\",\n            name: \"ReferenceError\",\n            stack:\n              \"throwReferenceError@http://localhost:4201/main.js:152:17\\nAppComponent_Template_button_click_20_listener@http://localhost:4201/main.js:215:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:215:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"ReferenceError: undefinedVariable is not defined\",\n    },\n    {\n      timestamp: 1617119948.822,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n    {\n      timestamp: 1617119974.699,\n      category: \"sentry.event\",\n      event_id: \"0a1c63f986d8476fb88d4efa5382c7af\",\n      level: \"error\",\n      message: \"ReferenceError: nope is not defined\",\n    },\n    {\n      timestamp: 1617119974.705,\n      category: \"sentry.event\",\n      event_id: \"7dcf0e7f62b54ebdb0fb9938a0501d09\",\n      level: \"error\",\n      message: \"ReferenceError: nope is not defined\",\n    },\n    {\n      timestamp: 1617119974.708,\n      category: \"console\",\n      data: {\n        arguments: [\n          {\n            message: \"nope is not defined\",\n            name: \"ReferenceError\",\n            stack:\n              \"@http://localhost:4201/main.js line 155 > eval:1:1\\nthrowSyntaxError@http://localhost:4201/main.js:155:9\\nAppComponent_Template_button_click_23_listener@http://localhost:4201/main.js:221:146\\nexecuteListenerWithErrorHandling@http://localhost:4201/vendor.js:34453:16\\nwrapListenerIn_markDirtyAndPreventDefault@http://localhost:4201/vendor.js:34488:54\\ndecoratePreventDefault/<@http://localhost:4201/vendor.js:53545:50\\nsentryWrapped@http://localhost:4201/vendor.js:79817:23\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ninvokeTask@http://localhost:4201/polyfills.js:576:38\\ninvokeTask@http://localhost:4201/polyfills.js:1717:18\\nglobalZoneAwareCallback@http://localhost:4201/polyfills.js:1743:31\\nEventListener.handleEvent*customScheduleGlobal@http://localhost:4201/polyfills.js:1869:47\\nscheduleTask@http://localhost:4201/polyfills.js:481:30\\nonScheduleTask@http://localhost:4201/polyfills.js:368:69\\nscheduleTask@http://localhost:4201/polyfills.js:474:55\\nscheduleTask@http://localhost:4201/polyfills.js:306:47\\nscheduleEventTask@http://localhost:4201/polyfills.js:332:29\\nmakeAddListener/<@http://localhost:4201/polyfills.js:2024:39\\nwytX/TryCatch.prototype._wrapEventTarget/</<@http://localhost:4201/vendor.js:80294:33\\ninstrumentDOM/</</<@http://localhost:4201/vendor.js:5038:33\\naddEventListener@http://localhost:4201/vendor.js:53813:17\\naddEventListener@http://localhost:4201/vendor.js:53358:23\\nlisten@http://localhost:4201/vendor.js:53734:34\\nlistenerInternal@http://localhost:4201/vendor.js:34408:44\\nɵɵlistener@http://localhost:4201/vendor.js:34288:21\\nAppComponent_Template@http://localhost:4201/main.js:221:52\\nexecuteTemplate@http://localhost:4201/vendor.js:28782:19\\nrenderView@http://localhost:4201/vendor.js:28589:28\\nrenderComponent@http://localhost:4201/vendor.js:29864:15\\nrenderChildComponents@http://localhost:4201/vendor.js:28454:24\\nrenderView@http://localhost:4201/vendor.js:28614:34\\ncreate@http://localhost:4201/vendor.js:44309:23\\nbootstrap@http://localhost:4201/vendor.js:48687:42\\n_moduleDoBootstrap/<@http://localhost:4201/vendor.js:48400:64\\n_moduleDoBootstrap@http://localhost:4201/vendor.js:48400:44\\nbootstrapModuleFactory/</</<@http://localhost:4201/vendor.js:48370:26\\ninvoke@http://localhost:4201/polyfills.js:460:30\\nonInvoke@http://localhost:4201/vendor.js:47753:33\\ninvoke@http://localhost:4201/polyfills.js:459:36\\nrun@http://localhost:4201/polyfills.js:219:47\\nscheduleResolveOrReject/<@http://localhost:4201/polyfills.js:953:40\\ninvokeTask@http://localhost:4201/polyfills.js:495:35\\nonInvokeTask@http://localhost:4201/vendor.js:47741:33\\ninvokeTask@http://localhost:4201/polyfills.js:494:40\\nrunTask@http://localhost:4201/polyfills.js:263:51\\ndrainMicroTaskQueue@http://localhost:4201/polyfills.js:665:39\\n\",\n          },\n        ],\n        logger: \"console\",\n      },\n      level: \"error\",\n      message: \"ReferenceError: nope is not defined\",\n    },\n    {\n      timestamp: 1617119974.71,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > button\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                },
                {
                    "name": "randomUserAgent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const keys = Object.keys(userAgents);\n  const random = Math.floor(Math.random() * keys.length);\n  return userAgents[keys[random]];\n}"
                },
                {
                    "name": "uniqueInfoLog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const unique = uniqueId(6);\n  return {\n    message: `What I'm really trying to say is: ${unique}`,\n    level: \"info\",\n    event_id: uniqueId(),\n    platform: \"javascript\",\n    sdk: {\n      name: \"sentry.javascript.browser\",\n      packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n      version: \"5.29.2\",\n      integrations: [\n        \"InboundFilters\",\n        \"FunctionToString\",\n        \"TryCatch\",\n        \"Breadcrumbs\",\n        \"GlobalHandlers\",\n        \"LinkedErrors\",\n        \"UserAgent\",\n        \"BrowserTracing\",\n      ],\n    },\n    timestamp: Date.now() / 1000,\n    contexts: {},\n    tags: { transaction: \"/\" },\n    breadcrumbs: [],\n    request: {\n      url: \"http://localhost:4201/\",\n      headers: { \"User-Agent\": randomUserAgent() },\n    },\n  };\n}"
                },
                {
                    "name": "userAgents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  ubuntuFirefox:\n    \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n  ubuntuChrome:\n    \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\",\n  windowsChrome:\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36\",\n  macOSSafari:\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15\",\n  iOSSafari:\n    \"Mozilla/5.0 (iPhone; CPU iPhone OS 14_4_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1\",\n  windowsOpera:\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.192 Safari/537.36 OPR/74.0.3911.218\",\n  androidChrome:\n    \"Mozilla/5.0 (Linux; Android 11) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36\",\n}"
                },
                {
                    "name": "warningMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  message: \"Warning: something is a little bit bad\",\n  level: \"warning\",\n  event_id: \"4a36bb8becc44e3088a359218faecb80\",\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.29.2\" }],\n    version: \"5.29.2\",\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"BrowserTracing\",\n    ],\n  },\n  timestamp: 1617248240.919,\n  environment: \"grrrr\",\n  contexts: {\n    trace: {\n      op: \"pageload\",\n      span_id: \"9cb691e04712aa93\",\n      tags: {\n        __sentry_samplingMethod: \"client_sampler\",\n        __sentry_sampleRate: \"0\",\n      },\n      trace_id: \"76f86569455d499b8da2bd2aeaa7f9e4\",\n    },\n  },\n  tags: { transaction: \"/\" },\n  breadcrumbs: [\n    {\n      timestamp: 1617248238.536,\n      category: \"console\",\n      data: {\n        arguments: [\n          \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n        ],\n        logger: \"console\",\n      },\n      level: \"log\",\n      message:\n        \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n    },\n    {\n      timestamp: 1617248238.54,\n      category: \"navigation\",\n      data: { from: \"/\", to: \"/\" },\n    },\n    {\n      timestamp: 1617248238.552,\n      category: \"ui.click\",\n      message: \"body > app-root > ol > li > a\",\n    },\n    {\n      timestamp: 1617248238.585,\n      category: \"xhr\",\n      data: {\n        method: \"GET\",\n        url: \"http://localhost:4201/sockjs-node/info?t=1617248238552\",\n        status_code: 200,\n      },\n      type: \"http\",\n    },\n  ],\n  request: {\n    url: \"http://localhost:4201/\",\n    headers: {\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n    },\n  },\n}"
                }
            ],
            "src/app/settings/projects/platform-picker/platform-categories.ts": [
                {
                    "name": "backend",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  \"csharp\",\n  \"elixir\",\n  \"go\",\n  \"go-http\",\n  \"java-appengine\",\n  \"java\",\n  \"java-log4j\",\n  \"java-log4j2\",\n  \"java-logback\",\n  \"java-logging\",\n  \"native\",\n  \"node\",\n  \"node-express\",\n  \"node-koa\",\n  \"node-connect\",\n  \"php\",\n  \"php-laravel\",\n  \"php-monolog\",\n  \"php-symfony2\",\n  \"python\",\n  \"python-django\",\n  \"python-flask\",\n  \"python-sanic\",\n  \"python-celery\",\n  \"python-bottle\",\n  \"python-pylons\",\n  \"python-pyramid\",\n  \"python-tornado\",\n  \"python-rq\",\n  \"python-pythonawslambda\",\n  \"ruby\",\n  \"ruby-rails\",\n  \"ruby-rack\",\n  \"rust\",\n]"
                },
                {
                    "name": "categoryList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: \"popular\", name: \"Popular\", platforms: popular },\n  { id: \"browser\", name: \"Browser\", platforms: frontend },\n  { id: \"server\", name: \"Server\", platforms: backend },\n  { id: \"mobile\", name: \"Mobile\", platforms: mobile },\n  { id: \"desktop\", name: \"Desktop\", platforms: desktop },\n]"
                },
                {
                    "name": "desktop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\"cocoa\", \"csharp\", \"java\", \"electron\", \"minidump\", \"native\"]"
                },
                {
                    "name": "frontend",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  \"javascript\",\n  \"javascript-react\",\n  \"javascript-angular\",\n  \"javascript-angularjs\",\n  \"javascript-backbone\",\n  \"javascript-ember\",\n  \"javascript-vue\",\n]"
                },
                {
                    "name": "mobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  \"cocoa-objc\",\n  \"cocoa-swift\",\n  \"java-android\",\n  \"cordova\",\n  \"react-native\",\n]"
                },
                {
                    "name": "popular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  \"javascript\",\n  \"javascript-react\",\n  \"python-django\",\n  \"python\",\n  \"python-flask\",\n  \"ruby-rails\",\n  \"node-express\",\n  \"php-laravel\",\n  \"php-symfony2\",\n  \"java\",\n  \"csharp\",\n  \"elixir\",\n  \"php\",\n  \"ruby\",\n  \"node\",\n  \"react-native\",\n  \"javascript-angular\",\n]"
                },
                {
                    "name": "sourceMaps",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[...frontend, \"react-native\", \"cordova\", \"electron\"]"
                }
            ],
            "src/app/constants.ts": [
                {
                    "name": "baseUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"/api/0\""
                }
            ],
            "src/app/login/login.service.ts": [
                {
                    "name": "baseUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/login/login.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"/rest-auth\""
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/login/login.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoginState",
                    "defaultValue": "{\n  loading: false,\n  error: null,\n  validAuth: null,\n}"
                }
            ],
            "src/app/register/register.service.ts": [
                {
                    "name": "baseUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/register/register.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"/rest-auth\""
                }
            ],
            "src/app/profile/change-password/password.service.ts": [
                {
                    "name": "baseUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/change-password/password.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "\"/rest-auth/password\""
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/breadcrumb-error.ts": [
                {
                    "name": "breadcrumbError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/breadcrumb-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"5fe7c33003844db6a0c36a10be8bc8ee\",\n  id: \"5fe7c33003844db6a0c36a10be8bc8ee\",\n  issue: 234,\n  context: null,\n  contexts: {\n    os: { name: \"Linux\" },\n    device: { family: \"Other\" },\n    browser: { name: \"Chrome\", version: \"87.0.4280\" },\n  },\n  culprit: \"AppComponent.throwGenericError(http://localhost:4201/main.js)\",\n  dateCreated: \"2020-12-18T18:19:07.565111Z\",\n  dateReceived: \"2020-12-18T18:19:10.568103Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"Error\",\n            value: \"Bulk Generic Error! 29573c\",\n            mechanism: { type: \"generic\", handled: true },\n            stacktrace: {\n              frames: [\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"HTMLButtonElement.globalZoneAwareCallback\",\n                  inApp: false,\n                  colNo: 21,\n                  lineNo: 1660,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"invokeTask\",\n                  inApp: false,\n                  colNo: 18,\n                  lineNo: 1634,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneTask.invokeTask [as invoke]\",\n                  inApp: false,\n                  colNo: 38,\n                  lineNo: 493,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"Zone.runTask\",\n                  inApp: false,\n                  colNo: 51,\n                  lineNo: 180,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 40,\n                  lineNo: 411,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"Object.onInvokeTask\",\n                  inApp: false,\n                  colNo: 33,\n                  lineNo: 35341,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 35,\n                  lineNo: 412,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"HTMLButtonElement.sentryWrapped\",\n                  inApp: false,\n                  colNo: 23,\n                  lineNo: 48163,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"HTMLButtonElement.<anonymous>\",\n                  inApp: false,\n                  colNo: 38,\n                  lineNo: 40340,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"wrapListenerIn_markDirtyAndPreventDefault\",\n                  inApp: false,\n                  colNo: 22,\n                  lineNo: 22655,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"executeListenerWithErrorHandling\",\n                  inApp: false,\n                  colNo: 16,\n                  lineNo: 22620,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"AppComponent_Template_button_click_28_listener\",\n                  inApp: false,\n                  colNo: 146,\n                  lineNo: 226,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"AppComponent.throwMultipleErrors\",\n                  inApp: false,\n                  colNo: 24,\n                  lineNo: 130,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"globalZoneAwareCallback\",\n                  inApp: false,\n                  colNo: 25,\n                  lineNo: 1671,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"invokeTask\",\n                  inApp: false,\n                  colNo: 18,\n                  lineNo: 1634,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneTask.invokeTask [as invoke]\",\n                  inApp: false,\n                  colNo: 38,\n                  lineNo: 493,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"Zone.runTask\",\n                  inApp: false,\n                  colNo: 51,\n                  lineNo: 180,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 40,\n                  lineNo: 411,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"Object.onInvokeTask\",\n                  inApp: false,\n                  colNo: 33,\n                  lineNo: 35341,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/polyfills.js\",\n                  function: \"ZoneDelegate.invokeTask\",\n                  inApp: false,\n                  colNo: 35,\n                  lineNo: 412,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/vendor.js\",\n                  function: \"sentryWrapped\",\n                  inApp: false,\n                  colNo: 23,\n                  lineNo: 48163,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"?\",\n                  inApp: false,\n                  colNo: 22,\n                  lineNo: 166,\n                  context: [],\n                },\n                {\n                  filename: \"http://localhost:4201/main.js\",\n                  function: \"AppComponent.throwGenericError\",\n                  inApp: false,\n                  colNo: 15,\n                  lineNo: 156,\n                  context: [],\n                },\n              ],\n            },\n          },\n        ],\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"console\",\n            level: \"info\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n              ],\n            },\n            message:\n              \"Angular is running in development mode. Call enableProdMode() to enable production mode.\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:47.841276Z\",\n          },\n          {\n            category: \"navigation\",\n            level: \"info\",\n            event_id: null,\n            data: { to: \"/\", from: \"/\" },\n            message: null,\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:47.846091Z\",\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            data: null,\n            message: \"body > app-root > ol > li > button\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:47.866141Z\",\n          },\n          {\n            category: \"xhr\",\n            level: \"info\",\n            event_id: null,\n            data: {\n              url: \"http://localhost:4201/sockjs-node/info?t=1608314987866\",\n              method: \"GET\",\n              status_code: 200,\n            },\n            message: null,\n            type: \"http\",\n            timestamp: \"2020-12-18T18:09:47.876906Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"dc0bace5a9424510a883dfb1fe788a2f\",\n            data: null,\n            message: \"A Generic Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.493806Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"12b7ae492dca4531b6624572d68642b8\",\n            data: null,\n            message: \"A Generic Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.501181Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: { logger: \"console\", arguments: [\"A Generic Error \"] },\n            message: \"A Generic Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.503061Z\",\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            data: null,\n            message: \"body > app-root > ol > li > button\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:09:50.504631Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"info\",\n            event_id: \"f292f013b3684bab905efbe878278095\",\n            data: null,\n            message: \"Error\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.079361Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2ba3bdf6a8a2451b85d2da6ff2d5efdb\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 6eeab5\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.106146Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"46ace78f941545b984ef46b17012ea9c\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 6eeab5\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.111711Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 6eeab5\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 6eeab5\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 6eeab5\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.114976Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"96ced40509374a27bba7aaa71b80aaee\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 35bc8e\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.127321Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"01c872f45f9e4eb4b8e0d84d9858db3c\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 35bc8e\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.133191Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 35bc8e\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 35bc8e\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 35bc8e\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.136436Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"aa77666f1307404fafff4a8ba851dde3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 104670\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.149811Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"f3e6e8bba95d45d783f8a85bbef6ccbd\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 104670\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.154931Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 104670\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 104670\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 104670\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.157671Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2df16ce68e8c4dfbad48f57e347dcd52\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 089a90\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.170501Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"e76cfe0a855f41ee816439509e5addc0\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 089a90\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.176826Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 089a90\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 089a90\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 089a90\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.179231Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"cd4643bdbe894d7d9245297393cb3a88\",\n            data: null,\n            message: \"Error: Bulk Generic Error! cc17af\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.196466Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"6e74f914e3e14b7d9ea9eca37e27c100\",\n            data: null,\n            message: \"Error: Bulk Generic Error! cc17af\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.202191Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! cc17af\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! cc17af\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! cc17af\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.204731Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"30a1d68966c8466f9041639f48256f63\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 82c402\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.219456Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"0b502c797f704420a9dde2e75b4ccf54\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 82c402\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.227096Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 82c402\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 82c402\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 82c402\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.230251Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2e7fc17726d345aa862f1f67ee2c3587\",\n            data: null,\n            message: \"Error: Bulk Generic Error! ce7395\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.250811Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"dbb5c060a2784456b8396c1eeb5aa1ab\",\n            data: null,\n            message: \"Error: Bulk Generic Error! ce7395\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.260116Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! ce7395\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! ce7395\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! ce7395\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.263946Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"52224a03602b45b594c2cc46eda3f5e3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 159209\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.281326Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"d4419aaa3c36492a9f54b70794934294\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 159209\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.292326Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 159209\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 159209\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 159209\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.295531Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"3706de7ffaf04c899ba24c715efdd8d6\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 157f9a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.308371Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"fe7f106864244e7fb5eb06463d92f9fd\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 157f9a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.326941Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 157f9a\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 157f9a\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 157f9a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.330316Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"9e71f228024843529ef80c011af5a8f9\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 71490b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.354151Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2801ca771fc448ecbde22848d8b43d0d\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 71490b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.360801Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 71490b\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 71490b\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 71490b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.364131Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"7338b66e437e4c188b391ca62ebc167e\",\n            data: null,\n            message: \"Error: Bulk Generic Error! adef1b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.377856Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"8ea531e0f35e45cb9e4c362b442514fb\",\n            data: null,\n            message: \"Error: Bulk Generic Error! adef1b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.386486Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! adef1b\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! adef1b\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! adef1b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.389606Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"fcbba99113034b499d00e7faca1c3b95\",\n            data: null,\n            message: \"Error: Bulk Generic Error! d0f93b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.405331Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"2c89404472334ce4ae0b02970bcf82e8\",\n            data: null,\n            message: \"Error: Bulk Generic Error! d0f93b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.411846Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! d0f93b\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! d0f93b\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! d0f93b\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.417446Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"25e48beb914e4f9ebdaa3321142dbebe\",\n            data: null,\n            message: \"Error: Bulk Generic Error! f3cb64\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.433276Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"1ad7984674fd467c9aa1409009d7e2e3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! f3cb64\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.442131Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! f3cb64\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! f3cb64\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! f3cb64\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.449136Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"385852bc1147466594eb218797407ec2\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 14554f\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.464691Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"b19c5ae5a69e4ed997baefb5271d513d\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 14554f\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.472576Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 14554f\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 14554f\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 14554f\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.478936Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"3942ae3655bb4d3fbb77ff3d0caad7b1\",\n            data: null,\n            message: \"Error: Bulk Generic Error! a7bd45\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.497921Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"e6e51a12cf5748368293da2bfc747479\",\n            data: null,\n            message: \"Error: Bulk Generic Error! a7bd45\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.508751Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! a7bd45\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! a7bd45\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! a7bd45\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.514046Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"acbf8fabb51b4be3b7729f4f5f11eb1c\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 25201a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.523961Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"81a49b78f5474698afde3fdf58e62b58\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 25201a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.527626Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 25201a\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 25201a\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 25201a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.530551Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"0243092e0d414d51ba48828cf9d860c2\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 7cc942\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.537861Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"1c38832a2af94451a57556a0628314e3\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 7cc942\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.542071Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 7cc942\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 7cc942\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 7cc942\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.543496Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"bec18d45353a4c99831920a30995d928\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 98ea2a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.550176Z\",\n          },\n          {\n            category: \"sentry.event\",\n            level: \"error\",\n            event_id: \"175d0b7ef2c24ec8999d4e34ce7f1265\",\n            data: null,\n            message: \"Error: Bulk Generic Error! 98ea2a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.558196Z\",\n          },\n          {\n            category: \"console\",\n            level: \"error\",\n            event_id: null,\n            data: {\n              logger: \"console\",\n              arguments: [\n                {\n                  name: \"Error\",\n                  stack:\n                    \"Error: Bulk Generic Error! 98ea2a\\n    at AppComponent.throwGenericError (http://localhost:4201/main.js:156:15)\\n    at http://localhost:4201/main.js:166:22\\n    at sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at globalZoneAwareCallback (http://localhost:4201/polyfills.js:1671:25)\\n    at AppComponent.throwMultipleErrors (http://localhost:4201/main.js:130:24)\\n    at AppComponent_Template_button_click_28_listener (http://localhost:4201/main.js:226:146)\\n    at executeListenerWithErrorHandling (http://localhost:4201/vendor.js:22620:16)\\n    at wrapListenerIn_markDirtyAndPreventDefault (http://localhost:4201/vendor.js:22655:22)\\n    at HTMLButtonElement.<anonymous> (http://localhost:4201/vendor.js:40340:38)\\n    at HTMLButtonElement.sentryWrapped (http://localhost:4201/vendor.js:48163:23)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:412:35)\\n    at Object.onInvokeTask (http://localhost:4201/vendor.js:35341:33)\\n    at ZoneDelegate.invokeTask (http://localhost:4201/polyfills.js:411:40)\\n    at Zone.runTask (http://localhost:4201/polyfills.js:180:51)\\n    at ZoneTask.invokeTask [as invoke] (http://localhost:4201/polyfills.js:493:38)\\n    at invokeTask (http://localhost:4201/polyfills.js:1634:18)\\n    at HTMLButtonElement.globalZoneAwareCallback (http://localhost:4201/polyfills.js:1660:21)\",\n                  message: \"Bulk Generic Error! 98ea2a\",\n                },\n              ],\n            },\n            message: \"Error: Bulk Generic Error! 98ea2a\",\n            type: \"default\",\n            timestamp: \"2020-12-18T18:19:07.559986Z\",\n          },\n        ],\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        url: \"http://localhost:4201/\",\n        headers: [\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\",\n          ],\n        ],\n        inferredContentType: null,\n      },\n    },\n  ],\n  message: \"\",\n  metadata: {\n    type: \"Error\",\n    value: \"Bulk Generic Error! 29573c\",\n    filename: \"http://localhost:4201/main.js\",\n    function: \"AppComponent.throwGenericError\",\n  },\n  packages: null,\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    version: \"5.20.1\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.20.1\" }],\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n    ],\n  },\n  tags: [\n    { key: \"browser.name\", value: \"Chrome\", _meta: null },\n    { key: \"os.name\", value: \"Linux\", _meta: null },\n    { key: \"browser\", value: \"Chrome 87.0.4280\", _meta: null },\n  ],\n  title: \"Error: Bulk Generic Error! 29573c\",\n  type: \"error\",\n  user: null,\n  projectID: 40,\n  userReport: null,\n  nextEventID: null,\n  previousEventID: \"87dff1c6f2f8432b9c9b7e69a2f31cc5\",\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/event-detail.stories.ts": [
                {
                    "name": "BreadcrumbsLong",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: EntryBreadcrumbsComponent,\n    props: {\n      breadcrumbs$: of(breadcrumbError.entries[1].data),\n    },\n  };\n}"
                },
                {
                    "name": "BreadcrumbsMedium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const mediumLength: any = {\n    values: [\n      {\n        category: \"console\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.476Z\",\n        data: {\n          logger: \"console\",\n          extra: {\n            arguments: [\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            ],\n          },\n        },\n        message:\n          \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n        type: \"default\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.548Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"xhr\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.569Z\",\n        data: {\n          url: \"http://localhost:4200/sockjs-node/info?t=1580242793552\",\n          status_code: 200,\n          method: \"GET\",\n        },\n        message: null,\n        type: \"http\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:55.949Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"console\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.476Z\",\n        data: {\n          logger: \"console\",\n          extra: {\n            arguments: [\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            ],\n          },\n        },\n        message:\n          \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n        type: \"default\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.548Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"xhr\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.569Z\",\n        data: {\n          url: \"http://localhost:4200/sockjs-node/info?t=1580242793552\",\n          status_code: 200,\n          method: \"GET\",\n        },\n        message: null,\n        type: \"http\",\n      },\n      {\n        category: \"ui.click\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:55.949Z\",\n        data: null,\n        message: \"body > app-root > ol > li > a\",\n        type: \"default\",\n      },\n      {\n        category: \"console\",\n        level: \"info\",\n        event_id: null,\n        timestamp: \"2020-01-28T20:19:53.476Z\",\n        data: {\n          logger: \"console\",\n          extra: {\n            arguments: [\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            ],\n          },\n        },\n        message:\n          \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n        type: \"default\",\n      },\n    ],\n  };\n  return {\n    component: EntryBreadcrumbsComponent,\n    props: {\n      breadcrumbs$: of(mediumLength),\n    },\n  };\n}"
                },
                {
                    "name": "BreadcrumbsShort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: EntryBreadcrumbsComponent,\n    props: {\n      breadcrumbs$: of(databaseStackError.entries[1].data),\n    },\n  };\n}"
                },
                {
                    "name": "EntryCSP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: EntryCSPComponent,\n    props: {\n      eventEntryCSP$: of(cspError.entries[1].data),\n    },\n  };\n}"
                },
                {
                    "name": "EntryException",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const errorOptions = [\n    \"Database Error\",\n    \"Database Stack Error\",\n    \"Post Error\",\n    \"Template Error\",\n    \"Zero Division Error\",\n    \"Zero Division Dotnet\",\n    \"String Error\",\n    \"SocialApp.DoesNotExist\",\n    \"Test with Undefined Stacktrace\",\n  ];\n  const selectedError = select(\"Error Type\", errorOptions, errorOptions[0]);\n  let error: any = databaseError.entries[0].data;\n  let title: string = databaseError.title;\n  let platform: string = databaseError.platform;\n\n  switch (selectedError) {\n    case \"Database Error\":\n      error = databaseError.entries[0].data;\n      title = databaseError.title;\n      platform = databaseError.platform;\n      break;\n    case \"Database Stack Error\":\n      error = databaseStackError.entries[0].data;\n      title = databaseStackError.title;\n      platform = databaseStackError.platform;\n      break;\n    case \"Post Error\":\n      error = postError.entries[0].data;\n      title = postError.title;\n      platform = postError.platform;\n      break;\n    case \"Template Error\":\n      error = templateError.entries[0].data;\n      title = templateError.title;\n      platform = templateError.platform;\n      break;\n    case \"Zero Division Error\":\n      error = zeroDivisionError.entries[0].data;\n      title = zeroDivisionError.title;\n      platform = zeroDivisionError.platform;\n      break;\n    case \"Zero Division Dotnet\":\n      error = zeroDivisionDotnet.entries[1].data;\n      title = zeroDivisionDotnet.title;\n      platform = zeroDivisionDotnet.platform;\n      break;\n    case \"String Error\":\n      error = stringError.entries[0].data;\n      title = stringError.title;\n      platform = stringError.platform;\n      break;\n    case \"SocialApp.DoesNotExist\":\n      error = socialApp.entries[0].data;\n      title = socialApp.title;\n      platform = socialApp.platform;\n      break;\n    case \"Test with Undefined Stacktrace\":\n      error = stacktraceUndefined.entries[0].data;\n      title = stacktraceUndefined.title;\n      platform = databaseError.platform;\n      break;\n  }\n  return {\n    component: EntryExceptionComponent,\n    props: {\n      eventEntryException$: of(error),\n      eventTitle: title,\n      eventPlatform: platform,\n    },\n  };\n}"
                },
                {
                    "name": "EntryMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: EntryMessageComponent,\n    props: {\n      eventEntryMessage$: of(cspError.entries[0].data),\n    },\n  };\n}"
                },
                {
                    "name": "EntryRequest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const errorOptions = [\n    \"Post Error\",\n    \"Database Error\",\n    \"Database Stack Error\",\n    \"Template Error\",\n    \"Zero Division Error\",\n    \"String Error\",\n    \"CSP Error\",\n    \"Page Not Found\",\n    \"SocialApp.DoesNotExist\",\n  ];\n\n  const selectedError = select(\"Error Type\", errorOptions, errorOptions[0]);\n  let stackError: any = postError.entries[1].data;\n  let error: any = {\n    ...stackError,\n    domainName: \"localhost\",\n    path: \"/database-stack-error/\",\n  };\n  let bodyData: any = [\n    [\n      \"csrfmiddlewaretoken\",\n      \"184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z\",\n    ],\n    [\"param1\", \"val\"],\n  ];\n\n  switch (selectedError) {\n    case \"Database Error\":\n      stackError = databaseError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/database-error/\",\n      };\n      bodyData = null;\n      break;\n    case \"Database Stack Error\":\n      stackError = databaseStackError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/database-stack-error/\",\n      };\n      bodyData = null;\n      break;\n    case \"Post Error\":\n      stackError = postError.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/database-stack-error/\",\n      };\n      bodyData = [\n        [\n          \"csrfmiddlewaretoken\",\n          \"184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z\",\n        ],\n        [\"param1\", \"val\"],\n      ];\n      break;\n    case \"Template Error\":\n      stackError = templateError.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/template-error/\",\n      };\n      bodyData = null;\n      break;\n    case \"Zero Division Error\":\n      stackError = zeroDivisionError.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/divide-zero/\",\n      };\n      bodyData = null;\n      break;\n    case \"String Error\":\n      stackError = stringError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/\",\n      };\n      bodyData = null;\n      break;\n    case \"CSP Error\":\n      stackError = cspError.entries[2].data;\n      error = {\n        ...stackError,\n        domainName: \"www.website.com\",\n        path: \"/about-us/our-staff\",\n      };\n      bodyData = null;\n      break;\n    case \"Page Not Found\":\n      stackError = pageNotFound.entries[0].data;\n      error = {\n        ...stackError,\n        domainName: \"localhost\",\n        path: \"/message/\",\n      };\n      break;\n    case \"SocialApp.DoesNotExist\":\n      stackError = socialApp.entries[1].data;\n      error = {\n        ...stackError,\n        domainName: \"staging.glitchtip.com\",\n        path: \"/rest-auth/gitlab/\",\n      };\n      bodyData = [\n        [\n          \"access_token\",\n          \"7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007\",\n        ],\n      ];\n      break;\n  }\n\n  return {\n    component: EntryRequestComponent,\n    props: {\n      eventEntryRequest$: of(error),\n      requestDataArray$: of(bodyData),\n    },\n  };\n}"
                },
                {
                    "name": "FrameTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const frameTestData: any = {\n    function: select(\"function\", { NotNull: \"inner\", Null: null }, \"inner\"),\n    colNo: select(\"colNo\", { NotNull: 18, Zero: 0, Null: null }, 18),\n    vars: {\n      get_response:\n        \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n      request: \"<WSGIRequest: GET '/divide-zero/'>\",\n      exc: \"ZeroDivisionError('division by zero')\",\n    },\n    symbol: null,\n    module: select(\n      \"module\",\n      { NotNull: \"django.core.handlers.exception\", Null: null },\n      \"django.core.handlers.exception\"\n    ),\n    lineNo: select(\"lineNo\", { NotNull: 34, Null: null }, 34),\n    trust: null,\n    errors: null,\n    package: \"1.0.7\",\n    absPath: select(\n      \"absPath\",\n      {\n        NotNull: \"/code/errors/views.py\",\n        MatchFilename: \"django/core/handlers/exception.py\",\n        MatchModule: \"django.core.handlers.exception\",\n        IsURL: \"http://bing.com\",\n        maliciousUrl: \"javascript:alert('attack!')\",\n        Null: null,\n      },\n      null\n    ),\n    inApp: false,\n    instructionAddr:\n      \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n    filename: select(\n      \"filename\",\n      { NotNull: \"django/core/handlers/exception.py\", Null: null },\n      \"django/core/handlers/exception.py\"\n    ),\n    platform: select(\n      \"platform\",\n      { Python: \"python\", Java: \"java\", Null: null },\n      null\n    ),\n    context: [\n      [33, \" try:\"],\n      [\n        select(\n          \"contextLineNo\",\n          { ThirtyFour: 34, AnotherNumber: 117, Null: null },\n          34\n        ),\n        \" response = get_response(request)\",\n      ],\n    ],\n    symbolAddr: null,\n  };\n\n  return {\n    component: FrameTitleComponent,\n    props: {\n      frame: frameTestData,\n    },\n  };\n}"
                },
                {
                    "name": "RawStacktrace",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const testValues: any = [\n    {\n      type: \"System.DivideByZeroException\",\n      value: \"Attempted to divide by zero.\",\n      module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n      stacktrace: {\n        frames: [\n          {\n            function: select(\n              \"function\",\n              { NotNull: \"inner\", Null: null },\n              \"inner\"\n            ),\n            colNo: select(\"colNo\", { NotNull: 18, Zero: 0, Null: null }, 18),\n            vars: {\n              get_response:\n                \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n              request: \"<WSGIRequest: GET '/divide-zero/'>\",\n              exc: \"ZeroDivisionError('division by zero')\",\n            },\n            symbol: null,\n            module: select(\n              \"module\",\n              { NotNull: \"django.core.handlers.exception\", Null: null },\n              \"django.core.handlers.exception\"\n            ),\n            lineNo: select(\"lineNo\", { NotNull: 34, Null: null }, 34),\n            trust: null,\n            errors: null,\n            package: select(\n              \"package\",\n              {\n                NotNull: \"/System/Library/Frameworks/UIKit.framework/UIKit\",\n                Null: null,\n              },\n              null\n            ),\n            absPath: null,\n            inApp: false,\n            instructionAddr: select(\n              \"instructionAddr\",\n              { NotNull: \"0x000000019804aa20\", Null: null },\n              null\n            ),\n            filename: select(\n              \"module\",\n              { NotNull: \"django/core/handlers/exception.py\", Null: null },\n              \"django/core/handlers/exception.py\"\n            ),\n            platform: null,\n            context: [\n              [33, \" try:\"],\n              [\n                select(\n                  \"contextLineNo\",\n                  { ThirtyFour: 34, AnotherNumber: 117, Null: null },\n                  34\n                ),\n                \" response = get_response(request)\",\n              ],\n            ],\n            symbolAddr: null,\n          },\n        ],\n      },\n    },\n  ];\n\n  return {\n    component: RawStacktraceComponent,\n    props: {\n      rawStacktraceValues$: of(testValues),\n      eventPlatform: select(\n        \"Select Platform\",\n        {\n          javascript: \"javascript\",\n          ruby: \"ruby\",\n          php: \"php\",\n          java: \"java\",\n          cocoa: \"cocoa\",\n          native: \"native\",\n          default: \"\",\n        },\n        \"javascript\"\n      ),\n    },\n  };\n}"
                }
            ],
            "src/app/shared/shared.utils.ts": [
                {
                    "name": "browserPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(name: string, extension = \"svg\"): string => {\n  if (extension === \"svg\") {\n    return `static/assets/images/browser-svgs/${name}/${name}.${extension}`;\n  } else {\n    return `static/assets/images/browser-svgs/${name}/${name}_48x48.${extension}`;\n  }\n}",
                    "rawdescription": "Paths to different icon asset locations",
                    "description": "<p>Paths to different icon asset locations</p>\n"
                },
                {
                    "name": "iconDictionary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n  /** Browsers */\n  chrome: browserPath(\"chrome\"),\n  firefox: browserPath(\"firefox\"),\n  opera: browserPath(\"opera\"),\n  safari: browserPath(\"safari\", \"png\"),\n  mobilesafari: browserPath(\"safari-ios\"),\n  edge: browserPath(\"edge\"),\n  chromium: browserPath(\"chromium\"),\n  chromemobile: browserPath(\"chrome\"),\n  chromemobileios: browserPath(\"chrome\"),\n  qqbrowser: localPath(\"qqbrowser\"),\n  playstation: osPath(\"playstation\"),\n  internetexplorer: browserPath(\"internet-explorer-tile_10-11\"),\n\n  /** Operating Systems */\n  ubuntu: osPath(\"ubuntu\"),\n  linux: osPath(\"linux\"),\n  windows: osPath(\"windows\"),\n  android: osPath(\"android\"),\n  darwin: osPath(\"mac\"),\n  ios: osPath(\"ios\"),\n  macos: osPath(\"mac\"),\n  tvos: osPath(\"mac\"),\n  macosx: osPath(\"mac\"),\n  mac: osPath(\"mac\"),\n  apple: osPath(\"mac\"),\n  watchos: osPath(\"mac\"),\n  androidtablet: osPath(\"android\"),\n  androidphone: osPath(\"android\"),\n  watch: osPath(\"mac\"),\n  appletv: osPath(\"apple-tv\"),\n  ipod: osPath(\"mac\"),\n  iphone: osPath(\"mac\"),\n  ipad: osPath(\"mac\"),\n  redhat: osPath(\"red-hat\"),\n  fedora: osPath(\"fedora\"),\n  debian: osPath(\"debian\"),\n\n  /** Frameworks */\n  php: localPath(\"php\", \"jpg\"),\n  mono: localPath(\"mono\"),\n  netcore: localPath(\"dotnetcore\"),\n  netframework: localPath(\"dotnetframework\"),\n  electron: localPath(\"electron\"),\n  nvidia: localPath(\"nvidia\"),\n  amd: localPath(\"amd\"),\n  arm: localPath(\"arm\", \"jpg\"),\n  cpython: localPath(\"cpython\"),\n  python: localPath(\"python\"),\n  go: localPath(\"go\"),\n}"
                },
                {
                    "name": "localPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(name: string, type?: string): string =>\n  `static/assets/images/logos/48x48/${name}.${type ? type : \"png\"}`"
                },
                {
                    "name": "osPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(name: string): string =>\n  `static/assets/images/os-logos/${name}.png`"
                }
            ],
            "cypress/fixtures/users.ts": [
                {
                    "name": "changePassword",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/users.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  incorrect_password: \"bananas7\",\n  new_password1: \"drawmark47\",\n  new_password2: \"drawmark47\",\n}"
                },
                {
                    "name": "user",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/users.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  email: \"cypresstest@example.com\",\n  password: \"hunter22\",\n}"
                }
            ],
            "src/app/profile/profile.stories.ts": [
                {
                    "name": "changepw",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const loadingBoolean = boolean(\"Loading\", false);\n  const errorText = text(\"Server Error Message\", \"\");\n  const user = {\n    username: \"rain@bow.com\",\n    lastLogin: \"2020-11-24T20:52:03.864975Z\",\n    isSuperuser: true,\n    emails: [],\n    identities: [],\n    id: \"1\",\n    isActive: true,\n    name: \"\",\n    dateJoined: \"2020-08-18T13:18:51.432490Z\",\n    hasPasswordAuth: boolean(\"Has Password Auth\", true),\n    email: \"rain@bow.com\",\n  };\n  return {\n    component: ChangePasswordComponent,\n    props: {\n      loading: loadingBoolean,\n      error: errorText,\n      user$: of(user),\n    },\n  };\n}"
                }
            ],
            "src/app/shared/typography.stories.ts": [
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  template: `\n  <section class=\"mat-typography\">\n    <p class=\"mat-h1\">Sometimes you will want to customize the colors you are using. For this, refer to $amaranth-palette in _variables.scss</p>\n    <p>Use mat-color($amaranth-palette, 50) to get a color from the palette: <a href=\"https://v5.material.angular.io/guide/theming-your-components#using-colors-from-a-palette\" target=\"_blank\">Material Reference</a></p>\n    <div style=\"width: 100%; height: 100px; background-color: #fce8ed\"></div>\n    <p style=\"margin-top: 50px\">Use mat-contrast($amaranth-palette, 50) to get the contrasting color:</p>\n    <div style=\"width: 100%; height: 100px; background-color: #000000\"></div>\n    <p style=\"margin-top: 50px\">To use a gray color, use mat-color($mat-gray, 500): <a target=\"_blank\" href=\"https://material.io/design/color/the-color-system.html#tools-for-picking-colors\">Material Reference</a></p>\n    <div style=\"width: 100%; height: 100px; background-color: #9E9E9E\"></div>\n  </section>\n  `,\n})"
                },
                {
                    "name": "icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  template: `\n  <section class=\"mat-typography\">\n    <h1>Icons</h1>\n    <p>Angular material has a bunch of icons. You can find a pretty exhaustive list of them <a href=\"https://www.angularjswiki.com/angular/angular-material-icons-list-mat-icon-list/\" target=\"_blank\">here</a>\n    <p>Also, <a href=\"https://material.angular.io/components/icon/overview\" target=\"_blank\">here's</a> Angular's documentation on icons</p>\n    <p>Make sure to add the appropriate aria classes for accessibility!</p>\n    <mat-divider></mat-divider>\n    <mat-icon>delete</mat-icon>\n    <p aria-hidden=\"false\" aria-label=\"this is trash\">This is an icon</p>\n    <button mat-icon-button color=\"accent\" aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <p>This is a button icon</p>\n    <button mat-flat-button color=\"primary\">\n      <mat-icon aria-hidden=\"true\">done</mat-icon>\n      Resolve\n    </button>\n    <p>If the icon is purely decorative, you can make aria hidden true</p>\n  </section>\n  <section class=\"mat-typography\">\n    <h1>Custom Icons</h1>\n    <p>In addition to Angular's icons, we have added custom ones in 'index.html'</p>\n    <div style=\"display: flex; align-items: center; margin: 16px\">\n      <div>#gitlab:</div>\n      <svg style=\"width: 32px; height: 32px; margin-left: 8px; margin-right: 32px\"><use xlink:href=\"#gitlab\"></use></svg>\n      <div>#google:</div>\n      <svg style=\"width: 32px; height: 32px; margin-left: 8px; margin-right: 32px\"><use xlink:href=\"#google\"></use></svg>\n      <div>#microsoft:</div>\n      <svg style=\"width: 32px; height: 32px; margin-left: 8px; margin-right: 32px\"><use xlink:href=\"#microsoft\"></use></svg>\n    </div>\n  </section>\n  `,\n})"
                },
                {
                    "name": "typography",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  template: `\n  <section>\n    <article class=\"mat-typography\">\n      <h1>Angular Material typography</h1>\n      <p><a href=\"https://material.angular.io/guide/typography\">Reference</a></p>\n      <p>This section is wrapped with class \"mat-typography\"</p>\n      <p>You can also cutomize with specific classes, as displayed below</p>\n    </article>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n      mat-display-4: Large, one-off header, usually at the top of the page (e.g.\n      a hero header).\n    </p>\n    <p class=\"mat-display-4\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n      mat-display-3: Large, one-off header, usually at the top of the page (e.g.\n      a hero header).\n    </p>\n    <p class=\"mat-display-3\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-display-2: Large, one-off header, usually at the top of the page (e.g.\n    a hero header).\n    </p>\n    <p class=\"mat-display-2\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-display-1: Large, one-off header, usually at the top of the page (e.g.\n    a hero header).\n    </p>\n    <p class=\"mat-display-1\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h1 OR mat-headline: Section heading corresponding to the h1 tag.\n    </p>\n    <h1 class=\"mat-h1 mat-headline\">The quick brown fox jumps over the lazy dog</h1>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h2 OR mat-title: Section heading corresponding to the h2 tag.\n    </p>\n    <h2 class=\"mat-h2 mat-title\">The quick brown fox jumps over the lazy dog</h2>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h3 OR mat-subheading-2: Section heading corresponding to the h3 tag.\n    </p>\n    <h3 class=\"mat-h3 mat-subheading-2\">The quick brown fox jumps over the lazy dog</h3>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-h4 OR mat-subheading-1: Section heading corresponding to the h4 tag.\n    </p>\n    <h4 class=\"mat-h4 mat-subheading-1\">The quick brown fox jumps over the lazy dog</h4>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-body OR mat-body-1: Base body text.\n    </p>\n    <p class=\"mat-body mat-body-1\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-body-strong OR mat-body-2: Bolder body text.\n    </p>\n    <p class=\"mat-body-strong mat-body-2\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n\n    <p class=\"mat-h4 mat-subheading-1\">\n    mat-small OR mat-caption: Smaller body and hint text.\n    </p>\n    <p class=\"mat-small mat-caption\">The quick brown fox jumps over the lazy dog</p>\n\n    <mat-divider></mat-divider>\n  </section>\n  `,\n})"
                }
            ],
            "src/app/shared/material.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule,\n  ClipboardModule,\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context(\"./\", true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts": [
                {
                    "name": "contexts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const options = [];\n  let user = boolean(\"User\", true);\n  user\n    ? options.push({\n        title: \"em@jay.com\",\n        subtitle: \"EmJay117\",\n        key: \"Username\",\n        type: \"user\",\n        icon: null,\n        matIcon: \"account_circle\",\n      })\n    : null;\n\n  let browser = boolean(\"Browser\", true);\n  browser\n    ? options.push({\n        title: \"FireFox\",\n        subtitle: \"11.7\",\n        key: \"Version\",\n        type: \"browser\",\n        icon: \"static/assets/images/browser-svgs/firefox/firefox.svg\",\n        matIcon: null,\n      })\n    : null;\n\n  let runtime = boolean(\"Runtime\", true);\n  runtime\n    ? options.push({\n        title: \"CPython\",\n        subtitle: \"3.8.0\",\n        key: \"Version\",\n        type: \"runtime\",\n        icon: \"static/assets/images/logos/48x48/cpython.png\",\n        matIcon: null,\n      })\n    : null;\n\n  let os = boolean(\"OS\", true);\n  os\n    ? options.push({\n        title: \"Ubuntu\",\n        subtitle: \"20.0.4\",\n        key: \"Version\",\n        type: \"os\",\n        icon: \"static/assets/images/os-logos/ubuntu.png\",\n        matIcon: null,\n      })\n    : null;\n\n  let device = boolean(\"Device\", true);\n  device\n    ? options.push({\n        title: \"Red Ryder\",\n        subtitle: \"amd64\",\n        key: \"Arch\",\n        type: \"device\",\n        icon: null,\n        matIcon: \"devices_other\",\n      })\n    : null;\n\n  let gpu = boolean(\"GPU\", true);\n  gpu\n    ? options.push({\n        title: \"Graphic\",\n        subtitle: \"a vendor\",\n        key: \"Vendor\",\n        type: \"gpu\",\n        icon: null,\n        matIcon: null,\n      })\n    : null;\n\n  return {\n    component: ContextsComponent,\n    props: {\n      specialContexts$: of(options),\n    },\n  };\n}"
                },
                {
                    "name": "IconPaths",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const iconMarkup = Object.keys(iconDictionary).map(\n    (icon) => `\n    <div style=\"border: 1px solid lightgray; margin: 5px; padding: 0 10px 10px;\">\n      <p style=\"font-size: 0.75em\">${icon}</p>\n      <img\n        style=\"width: 50px; height: 50px;\"\n        class=\"image\"\n        src=\"${generateIconPath(icon)}\"\n      />\n    </div>\n  `\n  );\n\n  return {\n    template: `\n      <div style=\"display: flex; flex-wrap: wrap;\">\n        ${iconMarkup.join(\"\")}\n      </div>\n    `,\n  };\n}"
                },
                {
                    "name": "unknownContexts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const transformedContexts: any = [\n    {\n      type: \"user\",\n      icon: null,\n      matIcon: \"account_circle\",\n      title: \"em@jay.com\",\n      subtitle: \"117\",\n      key: \"ID\",\n    },\n    {\n      type: \"runtime\",\n      icon: \"static/assets/images/logos/48x48/cpython.png\",\n      matIcon: \"tab\",\n      title: \"CPython\",\n      subtitle: \"3.8.6\",\n      key: \"Version\",\n    },\n    {\n      type: \"browser\",\n      icon: undefined,\n      matIcon: \"tab\",\n      title: \"Unknown Browser\",\n      subtitle: \"Unknown\",\n      key: \"Version\",\n    },\n    {\n      type: \"device\",\n      icon: null,\n      matIcon: \"devices_other\",\n      title: \"Unknown Device\",\n      subtitle: null,\n      key: null,\n    },\n    {\n      type: \"os\",\n      icon: undefined,\n      matIcon: \"computer\",\n      title: \"Unknown Operating System\",\n      subtitle: \"Unknown\",\n      key: \"Version\",\n    },\n  ];\n  return {\n    component: ContextsComponent,\n    props: {\n      specialContexts$: of(transformedContexts),\n    },\n  };\n}"
                }
            ],
            "src/app/shared/shared.stories.ts": [
                {
                    "name": "copyInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: CopyInputComponent,\n    props: {\n      value: \"Some copying value\",\n      placeholder: \"placeholder\",\n    },\n  };\n}"
                },
                {
                    "name": "entryData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  component: EntryDataComponent,\n  props: {\n    key: \"Accept-Encoding\",\n    value: \"gzip, deflate, br\",\n  },\n})"
                },
                {
                    "name": "loadingButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: LoadingButtonComponent,\n    props: {\n      buttonText: text(\"Button Text\", \"ClickMe\"),\n      loading: boolean(\"Loading\", false),\n    },\n  };\n}"
                },
                {
                    "name": "projectCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const sampleCard = boolean(\"Sample Card\", false);\n\n  return {\n    component: ProjectCardComponent,\n    props: {\n      sampleCard,\n      title: \"alpaca\",\n      descriptionList: [\n        { key: \"organization\", value: \"knit\" },\n        { key: \"date created\", value: \"Mar 30, 2020\" },\n      ],\n      primaryButton: {\n        text: \"Issues\",\n        icon: \"warning\",\n        link: \"link\",\n      },\n      secondaryButton: {\n        text: \"Settings\",\n        icon: \"settings\",\n        link: \"link\",\n      },\n      isMember: boolean(\"isMember\", true),\n    },\n  };\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/csp-error.ts": [
                {
                    "name": "cspError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/csp-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"aaa83b555096427390ae2a5edb1c42ba\",\n  dist: null,\n  userReport: null,\n  projectID: \"1388394\",\n  previousEventID: \"c41fcae5f26440e7b7382659c2ebcd46\",\n  message: \"Blocked 'connect' from 'adtracker.com'\",\n  id: \"aaa83b555096427390ae2a5edb1c42ba\",\n  size: 4784,\n  errors: [],\n  culprit:\n    \"connect-src https://*.website.com https://*.companysite.com https://*.ecommsite.com localhost:* *.analyticssite.com *.analyticssite.io socialmediasite.com glitchtip.com *.marketingsite.com locatorsite.io *.locatorsite.com www.analytics-site...\",\n  title: \"Blocked 'connect' from 'adtracker.com'\",\n  sdkUpdates: [],\n  platform: \"other\",\n  location: \"adtracker.com\",\n  nextEventID: null,\n  type: \"csp\",\n  metadata: {\n    message: \"Blocked 'connect' from 'adtracker.com'\",\n    uri: \"adtracker.com\",\n    directive: \"connect-src\",\n  },\n  groupingConfig: {\n    enhancements: \"cJybzDhxY05qemJypZWRgaGlroGxrqHRBABbEwcC\",\n    id: \"legacy:2019-03-12\",\n  },\n  crashFile: null,\n  tags: [\n    { value: \"https://searchengine.com\", key: \"blocked-uri\", _meta: null },\n    { value: \"Google 101.0.303750572\", key: \"browser\", _meta: null },\n    { value: \"Google\", key: \"browser.name\", _meta: null },\n    { value: \"iOS 13.2\", key: \"client_os\", _meta: null },\n    { value: \"iOS\", key: \"client_os.name\", _meta: null },\n    { value: \"iPhone\", key: \"device\", _meta: null },\n    { value: \"iPhone\", key: \"device.family\", _meta: null },\n    { value: \"connect-src\", key: \"effective-directive\", _meta: null },\n    { value: \"production\", key: \"environment\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"csp\", key: \"logger\", _meta: null },\n    {\n      value: \"https://www.website.com/about-us/our-story\",\n      key: \"url\",\n      _meta: null,\n    },\n    {\n      query: 'user.ip:\"99.251.88.88\"',\n      value: \"ip:99.251.88.88\",\n      key: \"user\",\n      _meta: null,\n    },\n  ],\n  dateCreated: \"2020-04-10T16:09:45.860455Z\",\n  dateReceived: \"2020-04-10T16:09:45.860455Z\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"99.251.88.88\",\n    email: null,\n    data: null,\n    id: null,\n  },\n  entries: [\n    {\n      type: \"message\",\n      data: { formatted: \"Blocked 'connect' from 'adtracker.com'\" },\n    },\n    {\n      type: \"csp\",\n      data: {\n        line_number: 1,\n        blocked_uri: \"https://adtracker.com\",\n        status_code: 0,\n        violated_directive:\n          \"connect-src https://*.website.com https://*.companysite.com https://*.ecommsite.com localhost:* *.analyticssite.com *.analyticssite.io socialmediasite.com glitchtip.com *.marketingsite.com locatorsite.io *.locatorsite.com www.google-analytics.com www.socialmediasite.com wss://ws2.analyticssite.com\",\n        column_number: 25315,\n        document_uri: \"https://www.website.com/about-us/our-story\",\n        original_policy:\n          \"default-src 'self'; connect-src https://*.website.com https://*.companysite.com https://*.ecommsite.com localhost:* *.analyticssite.com *.analyticssite.io socialmediasite.com glitchtip.com *.marketingsite.com locatorsite.io *.locatorsite.com www.socialmediasite.com wss://ws2.analyticssite.com; font-src 'self' *.marketingsite.com; frame-src 'self' www.socialmediasite.com\",\n        source_file: \"https://adtracker.com\",\n        referrer: \"https://www.google.com/\",\n        effective_directive: \"connect-src\",\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: null,\n        cookies: [],\n        inferredContentType: null,\n        env: null,\n        headers: [\n          [\"Referer\", \"https://www.google.com/\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/101.0.303750571 Mobile/15E148 Safari/604.1\",\n          ],\n        ],\n        url: \"https://www.website.com/about-us/our-story\",\n        query: [],\n        data: null,\n        method: null,\n      },\n    },\n  ],\n  packages: {},\n  sdk: null,\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    device: {\n      brand: \"Apple\",\n      type: \"device\",\n      model: \"iPhone\",\n      family: \"iPhone\",\n    },\n    browser: { version: \"101.0.303750571\", type: \"browser\", name: \"Google\" },\n    client_os: { version: \"13.2\", type: \"os\", name: \"iOS\" },\n  },\n  fingerprints: [\"5dbf7ab1823094ca25bfeb21e4f44669\"],\n  context: {},\n  release: null,\n  groupID: \"2563601466\",\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/database-error.ts": [
                {
                    "name": "databaseError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/database-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"2eab5c723f11485eb4d9c36829b96aeb\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: \"40c612dbc706448c8b097d75adf2b9cf\",\n  message:\n    \"get User.DoesNotExist User matching query does not exist. django/db/models/query.py /database-error/\",\n  id: \"12\",\n  size: 11766,\n  errors: [],\n  culprit: \"/database-error/\",\n  title: \"User.DoesNotExist: User matching query does not exist.\",\n  platform: \"python\",\n  location: \"django/db/models/query.py\",\n  nextEventID: \"9b2c3a66777b4ee9ac572c80f090e6b3\",\n  type: \"error\",\n  metadata: {\n    function: \"get\",\n    type: \"User.DoesNotExist\",\n    value: \"User matching query does not exist.\",\n    filename: \"django/db/models/query.py\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/database-error/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/database-error/\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-01-27T19:18:36.900Z\",\n  dateReceived: \"2020-01-27T19:18:36.941Z\",\n  user: {\n    id: \"117\",\n    name: \"EmJay\",\n    username: \"emjay20\",\n    email: \"em@jay.com\",\n    ip_address: \"208.45.234\",\n  },\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    exc: \"DoesNotExist('User matching query does not exist.')\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\",\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\",\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseErrorView, args=(), kwargs={}, url_name=database_error, app_names=[], namespaces=[], route=database-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    callback: \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    wrapped_callback:\n                      \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\",\n                    ],\n                    [120, \"                view_name = callback.__name__\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseErrorView, args=(), kwargs={}, url_name=database_error, app_names=[], namespaces=[], route=database-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    callback: \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    wrapped_callback:\n                      \"<function DatabaseErrorView at 0x7f9c50bc1e50>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.DatabaseErrorView object at 0x7f9c50143fd0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.DatabaseErrorView'>\",\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\",\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__',\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\",\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseErrorView object at 0x7f9c50143fd0>\",\n                    handler:\n                      \"<bound method DatabaseErrorView.get of <errors.views.DatabaseErrorView object at 0x7f9c50143fd0>>\",\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    args: [],\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\",\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\",\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\",\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\",\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\",\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseErrorView object at 0x7f9c50143fd0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-error/'>\",\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 17,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [12, \"        0/0\"],\n                    [13, \"\"],\n                    [14, \"\"],\n                    [15, \"class DatabaseErrorView(View):\"],\n                    [16, \"    def get(self, request, *args, **kwargs):\"],\n                    [17, '        User.objects.get(id=\"9999999\")'],\n                    [18, \"\"],\n                    [19, \"\"],\n                    [20, \"class PostErrorView(View):\"],\n                    [21, \"    def post(self, request, *args, **kwargs):\"],\n                    [22, '        request.POST[\"nope\"]'],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"manager_method\",\n                  colNo: null,\n                  vars: {\n                    self: \"[Filtered]\",\n                    args: [],\n                    name: \"'get'\",\n                    kwargs: { id: \"'9999999'\" },\n                  },\n                  symbol: null,\n                  module: \"django.db.models.manager\",\n                  lineNo: 82,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/manager.py\",\n                  platform: null,\n                  context: [\n                    [77, \"\"],\n                    [78, \"    @classmethod\"],\n                    [79, \"    def _get_queryset_methods(cls, queryset_class):\"],\n                    [80, \"        def create_method(name, method):\"],\n                    [\n                      81,\n                      \"            def manager_method(self, *args, **kwargs):\",\n                    ],\n                    [\n                      82,\n                      \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\",\n                    ],\n                    [\n                      83,\n                      \"            manager_method.__name__ = method.__name__\",\n                    ],\n                    [84, \"            manager_method.__doc__ = method.__doc__\"],\n                    [85, \"            return manager_method\"],\n                    [86, \"\"],\n                    [87, \"        new_methods = {}\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    clone:\n                      \"<QuerySet from django.db.models.query at 0x7f9c50143d60>\",\n                    args: [],\n                    num: \"0\",\n                    limit: \"21\",\n                    kwargs: { id: \"'9999999'\" },\n                    self:\n                      \"<QuerySet from django.db.models.query at 0x7f9c50143c10>\",\n                  },\n                  symbol: null,\n                  module: \"django.db.models.query\",\n                  lineNo: 415,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/query.py\",\n                  platform: null,\n                  context: [\n                    [410, \"            clone.query.set_limits(high=limit)\"],\n                    [411, \"        num = len(clone)\"],\n                    [412, \"        if num == 1:\"],\n                    [413, \"            return clone._result_cache[0]\"],\n                    [414, \"        if not num:\"],\n                    [415, \"            raise self.model.DoesNotExist(\"],\n                    [\n                      416,\n                      '                \"%s matching query does not exist.\" %',\n                    ],\n                    [417, \"                self.model._meta.object_name\"],\n                    [418, \"            )\"],\n                    [419, \"        raise self.model.MultipleObjectsReturned(\"],\n                    [\n                      420,\n                      \"            'get() returned more than one %s -- it returned %s!' % (\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false,\n            },\n            module: \"django.contrib.auth.models\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"User matching query does not exist.\",\n            type: \"User.DoesNotExist\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"query\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-27T19:18:36.897Z\",\n            data: null,\n            message: \"[Filtered]\",\n            type: \"default\",\n          },\n        ],\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\",\n          ],\n        ],\n        url: \"http://localhost:8001/database-error/\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\",\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\",\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"8144a4e652f8bdce\",\n      trace_id: \"fbe7cbd1d08d48958fa84139e91a939a\",\n      span_id: \"9f4cd5ea58ab9758\",\n      type: \"default\",\n      op: \"django.middleware\",\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"fcb5a20863c5c53702766d5f857f1e55\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"3\",\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/database-stack-error.ts": [
                {
                    "name": "databaseStackError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/database-stack-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"96152e3aebb94c54803a35a4ffa513a2\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: null,\n  message:\n    \"get User.DoesNotExist User matching query does not exist. django/db/models/query.py /database-stack-error/\",\n  id: \"5\",\n  size: 12720,\n  errors: [],\n  culprit: \"/database-stack-error/\",\n  title: \"User.DoesNotExist: User matching query does not exist.\",\n  platform: \"python\",\n  location: \"django/db/models/query.py\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"get\",\n    type: \"User.DoesNotExist\",\n    value: \"User matching query does not exist.\",\n    filename: \"django/db/models/query.py\"\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/database-stack-error/\", key: \"transaction\", _meta: null },\n    {\n      value: \"http://localhost:8001/database-stack-error/\",\n      key: \"url\",\n      _meta: null\n    }\n  ],\n  dateCreated: \"2020-01-27T19:17:51.356Z\",\n  dateReceived: \"2020-01-27T19:17:51.592Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f500f0a8580>>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    exc: \"DoesNotExist('User matching query does not exist.')\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\"\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\"\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseStackErrorView, args=(), kwargs={}, url_name=database_stack_error, app_names=[], namespaces=[], route=database-stack-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f500e257a60>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f500f0a8580>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    wrapped_callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\"\n                    ],\n                    [120, \"                view_name = callback.__name__\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DatabaseStackErrorView, args=(), kwargs={}, url_name=database_stack_error, app_names=[], namespaces=[], route=database-stack-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f500e257a60>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f500f0a8580>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    wrapped_callback:\n                      \"<function DatabaseStackErrorView at 0x7f500ebcef70>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.DatabaseStackErrorView'>\"\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\"\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__'\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\"\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    handler:\n                      \"<bound method DatabaseStackErrorView.get of <errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>>\",\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    args: [],\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\"\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\"\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\"\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\"\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\"\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\"\n                    ]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/database-stack-error/'>\",\n                    users:\n                      \"<QuerySet from django.db.models.query at 0x7f500e1660a0>\",\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 28,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [23, \"\"],\n                    [24, \"\"],\n                    [25, \"class DatabaseStackErrorView(View):\"],\n                    [26, \"    def get(self, request, *args, **kwargs):\"],\n                    [27, \"        users = User.objects.all()\"],\n                    [28, \"        self.make_error(users)\"],\n                    [29, \"\"],\n                    [30, \"    def make_error(self, users):\"],\n                    [31, \"        User.objects.get(id=users.count() + 10000)\"],\n                    [32, \"\"],\n                    [33, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"make_error\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DatabaseStackErrorView object at 0x7f500e14ff70>\",\n                    users:\n                      \"<QuerySet from django.db.models.query at 0x7f500e1660a0>\"\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 31,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [26, \"    def get(self, request, *args, **kwargs):\"],\n                    [27, \"        users = User.objects.all()\"],\n                    [28, \"        self.make_error(users)\"],\n                    [29, \"\"],\n                    [30, \"    def make_error(self, users):\"],\n                    [31, \"        User.objects.get(id=users.count() + 10000)\"],\n                    [32, \"\"],\n                    [33, \"\"],\n                    [34, \"class TemplateErrorView(TemplateView):\"],\n                    [35, '    template_name = \"template_error.html\"'],\n                    [36, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"manager_method\",\n                  colNo: null,\n                  vars: {\n                    self: \"[Filtered]\",\n                    args: [],\n                    name: \"'get'\",\n                    kwargs: { id: \"10000\" }\n                  },\n                  symbol: null,\n                  module: \"django.db.models.manager\",\n                  lineNo: 82,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/manager.py\",\n                  platform: null,\n                  context: [\n                    [77, \"\"],\n                    [78, \"    @classmethod\"],\n                    [79, \"    def _get_queryset_methods(cls, queryset_class):\"],\n                    [80, \"        def create_method(name, method):\"],\n                    [\n                      81,\n                      \"            def manager_method(self, *args, **kwargs):\"\n                    ],\n                    [\n                      82,\n                      \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\"\n                    ],\n                    [\n                      83,\n                      \"            manager_method.__name__ = method.__name__\"\n                    ],\n                    [84, \"            manager_method.__doc__ = method.__doc__\"],\n                    [85, \"            return manager_method\"],\n                    [86, \"\"],\n                    [87, \"        new_methods = {}\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    clone:\n                      \"<QuerySet from django.db.models.query at 0x7f500e156a90>\",\n                    args: [],\n                    num: \"0\",\n                    limit: \"21\",\n                    kwargs: { id: \"10000\" },\n                    self:\n                      \"<QuerySet from django.db.models.query at 0x7f500e166400>\"\n                  },\n                  symbol: null,\n                  module: \"django.db.models.query\",\n                  lineNo: 415,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/db/models/query.py\",\n                  platform: null,\n                  context: [\n                    [410, \"            clone.query.set_limits(high=limit)\"],\n                    [411, \"        num = len(clone)\"],\n                    [412, \"        if num == 1:\"],\n                    [413, \"            return clone._result_cache[0]\"],\n                    [414, \"        if not num:\"],\n                    [415, \"            raise self.model.DoesNotExist(\"],\n                    [\n                      416,\n                      '                \"%s matching query does not exist.\" %'\n                    ],\n                    [417, \"                self.model._meta.object_name\"],\n                    [418, \"            )\"],\n                    [419, \"        raise self.model.MultipleObjectsReturned(\"],\n                    [\n                      420,\n                      \"            'get() returned more than one %s -- it returned %s!' % (\"\n                    ]\n                  ],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: \"django.contrib.auth.models\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"User matching query does not exist.\",\n            type: \"User.DoesNotExist\"\n          }\n        ],\n        excOmitted: null,\n        hasSystemFrames: false\n      }\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"query\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-27T19:17:51.349Z\",\n            data: null,\n            message: \"[Filtered]\",\n            type: \"default\"\n          },\n          {\n            category: \"query\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-27T19:17:51.352Z\",\n            data: null,\n            message: \"[Filtered]\",\n            type: \"default\"\n          }\n        ]\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\"\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\n          ]\n        ],\n        url: \"http://localhost:8001/database-stack-error/\",\n        query: [],\n        data: null,\n        method: \"GET\"\n      }\n    }\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\"\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" }\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\"\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"8389073c493a6c42\",\n      trace_id: \"6be83775186f443e8a98307ea2aad108\",\n      span_id: \"b058a47b707ea888\",\n      type: \"default\",\n      op: \"django.middleware\"\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" }\n  },\n  fingerprints: [\"4ddcc5b498f08c9d703a5816c7c76ecd\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"5\"\n}"
                }
            ],
            "src/app/profile/multi-factor-auth/totp/totp.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    TOTPKey$: of(null),\n  },\n})"
                },
                {
                    "name": "Enabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    TOTPKey$: of(totpUserKey),\n  },\n})"
                },
                {
                    "name": "QRCode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    TOTPKey$: of(null),\n    step$: of(3),\n    TOTP$: of({\n      provisioning_uri: \"https://www.example.com\",\n      secret_key: \"AAAAAAAAAA\",\n    }),\n  },\n})"
                }
            ],
            "src/app/shared/to-do-item/to-do-item.stories.ts": [
                {
                    "name": "Doing",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/to-do-item/to-do-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    title: \"Doing it now\",\n    isDone: \"doing\",\n  },\n})"
                },
                {
                    "name": "Done",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/to-do-item/to-do-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    title: \"You did it\",\n    isDone: \"true\",\n  },\n})"
                },
                {
                    "name": "NotDone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/to-do-item/to-do-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    title: \"You'll need to do this\",\n  },\n})"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/empty-stacktrace.ts": [
                {
                    "name": "emptyStacktrace",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/empty-stacktrace.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"64b48dd6880446b882cb0da3949d6563\",\n  id: \"64b48dd6880446b882cb0da3949d6563\",\n  issue: 106,\n  context: null,\n  contexts: {\n    os: { name: \"Ubuntu\" },\n    device: { family: \"Other\" },\n    browser: { name: \"Firefox\", version: \"82.0\" },\n  },\n  culprit: \"redacted\",\n  dateCreated: \"2020-11-01T00:00:00Z\",\n  dateReceived: \"2020-11-20T19:04:10.554312Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"Error\",\n            value:\n              \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n            mechanism: { type: \"onunhandledrejection\", handled: false },\n            stacktrace: {},\n          },\n        ],\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        url: \"redacted\",\n        headers: [\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:82.0) Gecko/20100101 Firefox/82.0\",\n          ],\n        ],\n        inferredContentType: null,\n      },\n    },\n  ],\n  message: \"\",\n  metadata: {\n    type: \"Error\",\n    value:\n      \"NotAllowedError: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\",\n  },\n  packages: null,\n  platform: \"javascript\",\n  sdk: {\n    name: \"sentry.javascript.browser\",\n    version: \"5.26.0\",\n    packages: [{ name: \"npm:@sentry/browser\", version: \"5.26.0\" }],\n    integrations: [\n      \"InboundFilters\",\n      \"FunctionToString\",\n      \"TryCatch\",\n      \"Breadcrumbs\",\n      \"GlobalHandlers\",\n      \"LinkedErrors\",\n      \"UserAgent\",\n      \"RewriteFrames\",\n    ],\n  },\n  tags: [\n    { key: \"browser.name\", value: \"Firefox\" },\n    { key: \"os.name\", value: \"Ubuntu\" },\n  ],\n  title:\n    \"Error: NotAllowedError: The play method is not allowed by the user agent or the platform in the current con…\",\n  type: \"error\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"redacted\",\n    email: null,\n    data: {},\n    id: null,\n  },\n  projectID: 149,\n  userReport: null,\n  nextEventID: null,\n  previousEventID: null,\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  billingEmail: \"sales@glitchtip.com\",\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  billingEmail: \"sales@glitchtip.com\",\n}"
                }
            ],
            "cypress/fixtures/variables.ts": [
                {
                    "name": "environments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Environment",
                    "defaultValue": "{\n  production: \"production\",\n  staging: \"staging\",\n  development: \"development\",\n}"
                },
                {
                    "name": "newProject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: \"newcypresstestproject\",\n  platform: \"newcypresstestplatform\",\n}"
                },
                {
                    "name": "newTeam",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  slug: \"newcypresstestteam\",\n}"
                },
                {
                    "name": "organization",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: \"Business Company, Inc.\",\n  slug: \"business-company-inc\",\n  otherOrg: \"cypress-test-org-other\",\n}"
                },
                {
                    "name": "project",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: \"NicheScrip\",\n  slug: \"nichescrip\",\n}"
                },
                {
                    "name": "project2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: \"SwitchGrip\",\n  slug: \"switchgrip\",\n}"
                },
                {
                    "name": "project3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: \"PitchFlip\",\n  slug: \"pitchflip\",\n}"
                },
                {
                    "name": "team",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  name: \"cypresstestteam\",\n}"
                }
            ],
            "src/app/settings/projects/platform-picker/platforms-for-picker.ts": [
                {
                    "name": "flattenedPlatforms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlatPlatform[]",
                    "defaultValue": "[...platforms, otherPlatform]\n  .map((platform) => {\n    const flatPlatforms: FlatPlatform[] = platform.integrations.map(\n      (integration) => ({ ...integration, language: platform.id })\n    );\n    return flatPlatforms;\n  })\n  // converts array of arrays to a single array\n  // https://stackoverflow.com/a/18307218\n  .reduce((a, b) => a.concat(b))"
                },
                {
                    "name": "otherPlatform",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Platform",
                    "defaultValue": "{\n  integrations: [\n    {\n      link: \"\",\n      type: \"language\",\n      id: \"other\",\n      name: \"Other\",\n    },\n  ],\n  id: \"other\",\n  name: \"Other\",\n}"
                }
            ],
            "cypress/integration/utils.ts": [
                {
                    "name": "getDSN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/integration/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(dsn: string) => {\n  const key = dsn.split(\"@\")[0].split(\"//\")[1];\n  const id = dsn.split(\"@\")[1].split(\"/\")[1];\n  const url = `/api/${id}/store/?sentry_key=${key}&sentry_version=7`;\n  return url;\n}"
                }
            ],
            "src/app/api/oauth/social.ts": [
                {
                    "name": "getOAuthConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/oauth/social.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(provider: OAuthProvider) =>\n  oAuthConfigs.find((config) => config.name === provider)"
                },
                {
                    "name": "oAuthConfigs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/oauth/social.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OAuthConfig[]",
                    "defaultValue": "[\n  {\n    loginURL: \"https://gitlab.com/oauth/authorize\",\n    scope: \"read_user\",\n    name: \"gitlab\",\n  },\n  {\n    loginURL: \"https://accounts.google.com/o/oauth2/v2/auth\",\n    scope: \"openid profile email\",\n    name: \"google\",\n  },\n  {\n    loginURL: \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n    scope: \"User.Read\",\n    name: \"microsoft\",\n  },\n  {\n    loginURL: \"https://github.com/login/oauth/authorize\",\n    scope: \"read:user user:email\",\n    name: \"github\",\n  },\n]",
                    "rawdescription": "Every possible OAuth Config supported",
                    "description": "<p>Every possible OAuth Config supported</p>\n"
                }
            ],
            "src/app/issues/header-nav/header-nav.stories.ts": [
                {
                    "name": "headerNav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/header-nav/header-nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  component: HeaderNavComponent,\n  props: {\n    projects$: of(sampleProjects),\n    appliedProjectIds: [1, 2, 5],\n  },\n})"
                },
                {
                    "name": "sampleProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/header-nav/header-nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationProject[]",
                    "defaultValue": "[\n  {\n    name: \"GlitchTip\",\n    slug: \"glitchtip\",\n    id: 1,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"SwitchGrip\",\n    slug: \"switchgrip\",\n    id: 2,\n    platform: \"python-django\",\n    isMember: true,\n  },\n  {\n    name: \"PitchFlip\",\n    slug: \"pitchflip\",\n    id: 3,\n    platform: null,\n    isMember: true,\n  },\n  {\n    name: \"StitchStrip\",\n    slug: \"stitchstrip\",\n    id: 4,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"NicheScrip\",\n    slug: \"nichescrip\",\n    id: 5,\n    platform: \"python-django\",\n    isMember: true,\n  },\n  {\n    name: \"TwitchQuip\",\n    slug: \"twitchquip\",\n    id: 6,\n    platform: null,\n    isMember: true,\n  },\n  {\n    name: \"Wassilievitch Proprietorship\",\n    slug: \"wassilievitch-proprietorship\",\n    id: 7,\n    platform: \"javascript\",\n    isMember: true,\n  },\n]"
                }
            ],
            "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts": [
                {
                    "name": "initialNewAlertState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  newAlertOpen: false,\n  newProjectAlertRecipients: null,\n  newAlertLoading: false,\n  newAlertError: null,\n}"
                },
                {
                    "name": "initialRecipientDialogState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  recipientError: null,\n  recipientDialogOpen: false,\n  activeAlert: null,\n}"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectAlertState",
                    "defaultValue": "{\n  initialLoad: false,\n  initialLoadError: null,\n  projectAlerts: null,\n  newAlertState: initialNewAlertState,\n  recipientDialogState: initialRecipientDialogState,\n  // current alerts\n  removeAlertLoading: null,\n  removeAlertError: null,\n  updateTimespanQuantityLoading: null,\n  updateTimespanQuantityError: null,\n  deleteRecipientLoading: null,\n}"
                }
            ],
            "src/app/shared/stateful-service/pagination-stateful-service.ts": [
                {
                    "name": "initialPaginationState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaginationState",
                    "defaultValue": "{\n  hits: null,\n  maxHits: null,\n  page: null,\n  nextPageURL: null,\n  previousPageURL: null,\n  loading: false,\n  initialLoadComplete: false,\n}"
                },
                {
                    "name": "processLinkHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(linkHeader: string) =>\n  linkHeader.split(\",\").reduce<{ [key: string]: string }>((acc, link) => {\n    // Only return results url when results are present\n    const match = link.match(/<(.*)>; rel=\"(\\w*)\"/);\n    const results = link\n      .split(\"; \")\n      .find((x) => x.startsWith(\"results\"))\n      ?.includes(\"true\");\n    if (results && match) {\n      const url = match[1];\n      const rel = match[2];\n      acc[rel] = url;\n      return acc;\n    }\n    return acc;\n  }, {})",
                    "rawdescription": "Pagination info exists in a header, this parses it out for storing.",
                    "description": "<p>Pagination info exists in a header, this parses it out for storing.</p>\n"
                }
            ],
            "src/app/api/settings.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/settings.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsState",
                    "defaultValue": "{\n  socialApps: [],\n  billingEnabled: false,\n  iPaidForGlitchTip: null,\n  enableUserRegistration: false,\n  matomoURL: null,\n  matomoSiteId: null,\n  chatwootWebsiteToken: null,\n  stripePublicKey: null,\n  sentryDSN: null,\n  sentryTracesSampleRate: null,\n  environment: null,\n  version: null,\n}"
                }
            ],
            "src/app/issues/issues.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issues.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssuesState",
                    "defaultValue": "{\n  issues: [],\n  selectedIssues: [],\n  pagination: initialPaginationState,\n  organizationEnvironments: [],\n  selectedProjectInfo: {},\n  areIssuesForProjectSelected: false,\n  errors: [],\n}"
                }
            ],
            "src/app/main-nav/main-nav.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/main-nav/main-nav.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MainNavState",
                    "defaultValue": "{\n  navOpen: true,\n  mobileNav: null,\n}"
                }
            ],
            "src/app/performance/performance.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/performance/performance.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerformanceState",
                    "defaultValue": "{\n  transactions: [],\n  pagination: initialPaginationState,\n}"
                }
            ],
            "src/app/projects/projects.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/projects/projects.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectsState",
                    "defaultValue": "{\n  projects: null,\n  initialLoadComplete: false,\n  loading: false,\n}"
                }
            ],
            "src/app/api/accept/accept-invite.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/accept/accept-invite.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AcceptState",
                    "defaultValue": "{\n  acceptInfo: null,\n}"
                }
            ],
            "src/app/api/auth/auth.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/auth/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthState",
                    "defaultValue": "{\n  isLoggedIn: false,\n  redirectUrl: \"\",\n}"
                }
            ],
            "src/app/api/emails/email.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/emails/email.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EmailState",
                    "defaultValue": "{\n  emailAddresses: [],\n  loadingStates: {\n    add: false,\n    delete: null,\n    makePrimary: null,\n    resendConfirmation: null,\n  },\n  addEmailError: \"\",\n}"
                }
            ],
            "src/app/api/organizations/member-detail.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/organizations/member-detail.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MemberDetailState",
                    "defaultValue": "{\n  memberDetail: null,\n  updateMemberError: \"\",\n  updateMemberLoading: false,\n}"
                }
            ],
            "src/app/api/organizations/members.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/organizations/members.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MembersState",
                    "defaultValue": "{\n  loadingResendInvite: null,\n  sentResendInvite: [],\n}"
                }
            ],
            "src/app/api/organizations/organizations.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/organizations/organizations.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationsState",
                    "defaultValue": "{\n  organizations: [],\n  activeOrganizationId: null,\n  activeOrganization: null,\n  organizationMembers: [],\n  organizationTeams: [],\n  errors: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: \"\",\n  },\n  loading: {\n    addTeamMember: \"\",\n    removeTeamMember: \"\",\n    addOrganizationMember: false,\n  },\n  initialLoad: false,\n}"
                }
            ],
            "src/app/api/reset-password/reset-password.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/reset-password/reset-password.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResetPasswordState",
                    "defaultValue": "{\n  setNewPasswordError: \"\",\n  setNewPasswordLoading: false,\n  sendResetEmailError: \"\",\n  sendResetEmailLoading: false,\n  sendResetEmailSuccess: \"\",\n}"
                }
            ],
            "src/app/api/subscriptions/subscriptions.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/subscriptions/subscriptions.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SubscriptionsState",
                    "defaultValue": "{\n  subscription: null,\n  eventsCount: null,\n  products: null,\n}"
                }
            ],
            "src/app/api/teams/teams.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/teams/teams.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TeamsState",
                    "defaultValue": "{\n  teams: null,\n  team: null,\n  teamMembers: [],\n  errors: { updateName: \"\", deleteTeam: \"\" },\n  loading: { updateName: false, deleteTeam: false },\n}"
                }
            ],
            "src/app/api/user/user.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/user/user.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserState",
                    "defaultValue": "{\n  user: null,\n  disconnectLoading: null,\n}"
                }
            ],
            "src/app/api/user-reports/user-reports.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/user-reports/user-reports.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserReportsState",
                    "defaultValue": "{\n  reports: null,\n  errors: null,\n  pagination: initialPaginationState,\n}"
                }
            ],
            "src/app/issues/issue-detail/issue-detail.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/issue-detail.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueDetailState",
                    "defaultValue": "{\n  issue: null,\n  event: null,\n  tags: null,\n  isReversed: true,\n  showShowMore: false,\n  issueLoading: false,\n  issueInitialLoadComplete: false,\n  eventLoading: false,\n  eventInitialLoadComplete: false,\n}"
                }
            ],
            "src/app/profile/auth-tokens/auth-tokens.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/auth-tokens/auth-tokens.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthTokensState",
                    "defaultValue": "{\n  apiTokens: [],\n  loading: {\n    apiTokens: false,\n    create: false,\n    delete: null,\n  },\n  createError: \"\",\n  createErrorLabel: \"\",\n  createErrorScopes: \"\",\n}"
                }
            ],
            "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MFAState",
                    "defaultValue": "{\n  userKeys: [],\n  initialLoad: false,\n  setupTOTPStage: 1,\n  TOTPResponse: null,\n  serverError: {},\n  backupCodes: null,\n  copiedCodes: false,\n  enteredCode: false,\n}"
                }
            ],
            "src/app/profile/notifications/notifications.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/notifications/notifications.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationsState",
                    "defaultValue": "{\n  projectViewExpanded: false,\n  subscribeByDefault: true,\n  subscribeByDefaultLoading: false,\n  subscribeByDefaultError: \"\",\n  groupedProjects: [],\n  projectAlertLoading: \"\",\n  projectAlertError: { error: \"\", id: \"\" },\n}"
                }
            ],
            "src/app/settings/projects/project-settings.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/project-settings.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectSettingsState",
                    "defaultValue": "{\n  projects: null,\n  projectsOnTeam: [],\n  projectsNotOnTeam: [],\n  projectDetail: null,\n  projectKeys: null,\n  loading: { addProjectToTeam: false, removeProjectFromTeam: \"\" },\n  errors: { addProjectToTeam: \"\", removeProjectFromTeam: \"\" },\n  pagination: initialPaginationState,\n}"
                }
            ],
            "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectsState",
                    "defaultValue": "{\n  initialLoad: false,\n  toggleHiddenLoading: null,\n  error: \"\",\n  environments: [],\n}"
                }
            ],
            "src/app/issues/issue-detail/issue-detail.stories.ts": [
                {
                    "name": "IssueDetailTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/issue-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const issueMetadata: any = {\n    directive: \"metadata directive\",\n    function: \"metadata function\",\n    message: \"metadata message\",\n    origin: \"metadata origin\",\n    title: \"metadata title\",\n    type: \"metadata type\",\n    uri: \"metadata uri\",\n    value: \"metadata value\",\n  };\n  return {\n    component: IssueDetailTitleComponent,\n    props: {\n      issueType: select(\n        \"Issue Type\",\n        {\n          Error: \"error\",\n          CSP: \"csp\",\n          expectct: \"expectct\",\n          Default: \"whatever\",\n        },\n        \"whatever\"\n      ),\n      culprit: select(\n        \"Culprit\",\n        { Culprit: \"this is the culprit\", Empty: \"\" },\n        \"this is the culprit\"\n      ),\n      metadata: issueMetadata,\n    },\n  };\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/event-by-issue-test-data.ts": [
                {
                    "name": "IssueEventList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/event-by-issue-test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Event[]",
                    "defaultValue": "[\n  {\n    eventID: \"a58902b72e3e45f58ab9ecfb08297fd1\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:25:31Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"a58902b72e3e45f58ab9ecfb08297fd1\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"f750f067686d4bf78e7512c8dfe47089\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:25:27Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"f750f067686d4bf78e7512c8dfe47089\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"47f42c33f3ed46da8499385273952a7c\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:24:50Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"47f42c33f3ed46da8499385273952a7c\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"00ad4149b92043f29d591e74f4167f90\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:24:28Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"00ad4149b92043f29d591e74f4167f90\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"59211189118c4133b4d2e1917d4fe845\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:23:36Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"59211189118c4133b4d2e1917d4fe845\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n  {\n    eventID: \"32bebb93704c4cd3886f22c47b2df3c4\",\n    tags: [\n      { value: \"no\", key: \"handled\" },\n      { value: \"error\", key: \"level\" },\n      { value: \"threading\", key: \"mechanism\" },\n      { value: \"CPython 3.8.0\", key: \"runtime\" },\n      { value: \"CPython\", key: \"runtime.name\" },\n      { value: \"340bbf5db4d1\", key: \"server_name\" },\n    ],\n    projectID: \"1851390\",\n    dateCreated: \"2020-01-09T14:22:51Z\",\n    user: {\n      username: null,\n      name: null,\n      ip_address: null,\n      email: null,\n      data: null,\n      id: null,\n    },\n    message:\n      \"<module> AttributeError type object 'ResultsView' has no attribute 'as_view' polls/urls.py polls.urls in <module>\",\n    id: \"32bebb93704c4cd3886f22c47b2df3c4\",\n    culprit: \"polls.urls in <module>\",\n    title:\n      \"AttributeError: type object 'ResultsView' has no attribute 'as_view'\",\n    platform: \"python\",\n    location: \"polls/urls.py\",\n    crashFile: null,\n    \"event.type\": \"error\",\n    groupID: \"1427810956\",\n  },\n]"
                }
            ],
            "src/app/issues/issues-page/issues-test-data.ts": [
                {
                    "name": "issueList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issues-page/issues-test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Issue[]",
                    "defaultValue": "[\n  {\n    lastSeen: \"2021-02-19T18:56:01.952Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-fatal/\",\n    title: \"fatal custom level\",\n    id: 240,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"fatal custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: false,\n    shortId: \"DJANGO-G\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:56:01.952Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"fatal\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n  {\n    lastSeen: \"2021-02-19T18:55:59.366Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-error/\",\n    title: \"error custom level\",\n    id: 239,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"error custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: false,\n    shortId: \"DJANGO-F\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:55:59.366Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"error\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n  {\n    lastSeen: \"2021-02-19T18:55:56.932Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-warning/\",\n    title: \"warning custom level\",\n    id: 238,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"warning custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: true,\n    shortId: \"DJANGO-E\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:55:56.932Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"warning\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n  {\n    lastSeen: \"2021-02-19T18:55:53.808Z\",\n    numComments: 0,\n    userCount: 0,\n    stats: {\n      \"24h\": [\n        [1613678400, 0],\n        [1613682000, 0],\n        [1613685600, 0],\n        [1613689200, 0],\n        [1613692800, 0],\n        [1613696400, 0],\n        [1613700000, 0],\n        [1613703600, 0],\n        [1613707200, 0],\n        [1613710800, 0],\n        [1613714400, 0],\n        [1613718000, 0],\n        [1613721600, 0],\n        [1613725200, 0],\n        [1613728800, 0],\n        [1613732400, 0],\n        [1613736000, 0],\n        [1613739600, 0],\n        [1613743200, 0],\n        [1613746800, 0],\n        [1613750400, 0],\n        [1613754000, 0],\n        [1613757600, 1],\n        [1613761200, 0],\n      ],\n    },\n    culprit: \"/level-info/\",\n    title: \"info custom level\",\n    id: 237,\n    assignedTo: null,\n    logger: null,\n    type: \"default\",\n    annotations: [],\n    metadata: {\n      title: \"info custom level\",\n    },\n    status: \"unresolved\",\n    subscriptionDetails: null,\n    isPublic: false,\n    hasSeen: false,\n    shortId: \"DJANGO-D\",\n    shareId: null,\n    firstSeen: \"2021-02-19T18:55:53.808Z\",\n    count: \"1\",\n    permalink: \"https://.com\",\n    level: \"info\",\n    isSubscribed: true,\n    isBookmarked: false,\n    project: {\n      platform: \"python-django\",\n      slug: \"django\",\n      id: \"21\",\n      name: \"Django\",\n    },\n    statusDetails: {},\n  },\n]"
                }
            ],
            "src/app/issues/issues-page/issue-page.stories.ts": [
                {
                    "name": "issueListItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issues-page/issue-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const statesDefaultValue = \"normal\";\n  const statesOptions = {\n    \"Normal, all projects\": statesDefaultValue,\n    \"Normal, one project applied\": \"normalOneProjectApplied\",\n    \"Initial Load\": \"initialLoad\",\n    \"Loading with URL params (page change is a common use case)\": \"loading\",\n    \"Loading without URL Params (should only be happening when issue length is 0)\":\n      \"loadingWithoutParams\",\n    \"Normal, some issues selected (checkboxes for issues won't check in storybook)\":\n      \"normalIssuesSelected\",\n    \"Normal, all issues selected (checkboxes for issues won't check in storybook)\":\n      \"normalIssuesAllSelected\",\n    \"Organization Has No Projects\": \"orgHasNoProjects\",\n    \"No Issues because there are URL params (for example, search query is applied)\":\n      \"noIssuesUrlParams\",\n    \"No Issues\": \"noIssues\",\n    \"No Issues, multiple projects\": \"noIssuesMultipleProjects\",\n    \"No Issues because you're not on the team, single project\":\n      \"noIssuesNotOnTeamSingleProject\",\n    \"No Issues because you're not on the team, multiple projects\":\n      \"noIssuesNotOnTeamMultipleProjects\",\n    \"Some issues show, but you're not on the team for some of the projects\":\n      \"someIssuesButNotOnTeamForAll\",\n  };\n  const states = select(\"States\", statesOptions, statesDefaultValue);\n\n  const sensibleDefaults = {\n    initialLoadComplete: true,\n    loading: false,\n    issueLength: issueList.length,\n    orgHasAProject: true,\n    appliedProjectCount: 0,\n    urlHasParam: false,\n    projectsWhereAdminIsNotOnTheTeam: [],\n    thereAreSelectedIssues: false,\n    areAllSelected: false,\n    userNotInSomeTeams: false,\n  };\n\n  const pageStateConfig: any = {\n    normal: {\n      ...sensibleDefaults,\n    },\n    normalOneProjectApplied: {\n      ...sensibleDefaults,\n      appliedProjectCount: 1,\n    },\n    normalIssuesSelected: {\n      ...sensibleDefaults,\n      thereAreSelectedIssues: true,\n    },\n    normalIssuesAllSelected: {\n      ...sensibleDefaults,\n      thereAreSelectedIssues: true,\n      areAllSelected: true,\n    },\n    initialLoad: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      initialLoadComplete: false,\n      loading: true,\n    },\n    loading: {\n      ...sensibleDefaults,\n      initialLoadComplete: false,\n      loading: true,\n      urlHasParam: true,\n    },\n    loadingWithoutParams: {\n      ...sensibleDefaults,\n      initialLoadComplete: false,\n      loading: true,\n      issueLength: 0,\n    },\n    orgHasNoProjects: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      orgHasAProject: false,\n    },\n    noIssues: {\n      ...sensibleDefaults,\n      issueLength: 0,\n    },\n    noIssuesMultipleProjects: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      appliedProjectCount: 4,\n    },\n    noIssuesUrlParams: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      urlHasParam: true,\n    },\n    noIssuesNotOnTeamSingleProject: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      projectsWhereAdminIsNotOnTheTeam: [sampleProjects[1]],\n    },\n    noIssuesNotOnTeamMultipleProjects: {\n      ...sensibleDefaults,\n      issueLength: 0,\n      appliedProjectCount: 4,\n      projectsWhereAdminIsNotOnTheTeam: [sampleProjects[1], sampleProjects[4]],\n    },\n    someIssuesButNotOnTeamForAll: {\n      ...sensibleDefaults,\n      issueLength: 4,\n      userNotInSomeTeams: true,\n    },\n  };\n\n  return {\n    component: IssuesPageComponent,\n    props: {\n      // initialLoadComplete$: of(pageStateConfig[states].initialLoadComplete),\n      loading$: of(pageStateConfig[states].loading),\n      appliedProjectCount$: of(pageStateConfig[states].appliedProjectCount),\n      areAllSelected$: of(pageStateConfig[states].areAllSelected),\n      thereAreSelectedIssues$: of(\n        pageStateConfig[states].thereAreSelectedIssues\n      ),\n      // orgHasAProject$: of(pageStateConfig[states].orgHasAProject),\n      projectsFromParams$: of([2, 3, 4]),\n      // projectsWhereAdminIsNotOnTheTeam$: of(\n      //   pageStateConfig[states].projectsWhereAdminIsNotOnTheTeam\n      // ),\n      issues$: of(issueList.slice(0, pageStateConfig[states].issueLength)),\n      // userNotInSomeTeams$: of(pageStateConfig[states].userNotInSomeTeams),\n    },\n  };\n}"
                },
                {
                    "name": "sampleProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issues-page/issue-page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    name: \"GlitchTip\",\n    slug: \"glitchtip\",\n    id: 1,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"SwitchGrip\",\n    slug: \"switchgrip\",\n    id: 2,\n    platform: \"python-django\",\n    isMember: false,\n  },\n  {\n    name: \"PitchFlip\",\n    slug: \"pitchflip\",\n    id: 3,\n    platform: null,\n    isMember: true,\n  },\n  {\n    name: \"StitchStrip\",\n    slug: \"stitchstrip\",\n    id: 4,\n    platform: \"javascript\",\n    isMember: true,\n  },\n  {\n    name: \"NicheScrip\",\n    slug: \"nichescrip\",\n    id: 5,\n    platform: \"python-django\",\n    isMember: true,\n  },\n  {\n    name: \"TwitchQuip\",\n    slug: \"twitchquip\",\n    id: 6,\n    platform: null,\n    isMember: false,\n  },\n  {\n    name: \"Wassilievitch Proprietorship\",\n    slug: \"wassilievitch-proprietorship\",\n    id: 7,\n    platform: \"javascript\",\n    isMember: true,\n  },\n]"
                }
            ],
            "cypress/fixtures/django-events.ts": [
                {
                    "name": "logging",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/django-events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  level: \"warning\",\n  logger: \"errors.views\",\n  logentry: { message: \"Server warning: better have a look\", params: [] },\n  extra: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  event_id: \"78d24ed7495c46fc8dbde72c1f20679b\",\n  timestamp: \"2020-04-24T18:23:02.950832Z\",\n  breadcrumbs: [],\n  transaction: \"/warning/\",\n  contexts: {\n    trace: {\n      trace_id: \"1022e5e9d8e44d2ebafddfa839b58c5f\",\n      span_id: \"9d329137b651e5ce\",\n      parent_span_id: \"b18a82b300d6699d\",\n      op: \"django.middleware\",\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n    },\n    runtime: {\n      name: \"CPython\",\n      version: \"3.8.2\",\n      build: \"3.8.2 (default, Feb 26 2020, 15:09:34) \\n[GCC 8.3.0]\",\n    },\n  },\n  modules: {\n    wheel: \"0.34.2\",\n    webencodings: \"0.5.1\",\n    wcwidth: \"0.1.8\",\n    urllib3: \"1.25.8\",\n    \"typed-ast\": \"1.4.1\",\n    traitlets: \"4.3.3\",\n    tomlkit: \"0.5.11\",\n    toml: \"0.10.0\",\n    sqlparse: \"0.3.1\",\n    six: \"1.14.0\",\n    appdirs: \"1.4.3\",\n  },\n  request: {\n    url: \"http://localhost:8001/warning/\",\n    query_string: \"\",\n    method: \"GET\",\n    env: { SERVER_NAME: \"5949a3cc0cd4\", SERVER_PORT: \"8001\" },\n    headers: {\n      \"Content-Length\": \"\",\n      \"Content-Type\": \"text/plain\",\n      Host: \"localhost:8001\",\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\",\n      Accept:\n        \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n      \"Accept-Language\": \"en-US,en;q=0.5\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      Referer: \"http://localhost:8001/\",\n      Connection: \"keep-alive\",\n      Cookie: \"\",\n      \"Upgrade-Insecure-Requests\": \"1\",\n      \"Cache-Control\": \"max-age=0\",\n    },\n  },\n  server_name: \"5949a3cc0cd4\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.14.2\",\n    packages: [{ name: \"pypi:sentry-sdk\", version: \"0.14.2\" }],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\",\n    ],\n  },\n  platform: \"python\",\n  _meta: {\n    request: {\n      headers: { Cookie: { \"\": { rem: [[\"!config\", \"x\", 0, 1110]] } } },\n    },\n  },\n}"
                },
                {
                    "name": "noReverseMatch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "cypress/fixtures/django-events.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  level: \"error\",\n  exception: {\n    values: [\n      {\n        module: \"django.urls.exceptions\",\n        type: \"NoReverseMatch\",\n        value:\n          \"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n        mechanism: {\n          type: \"django\",\n          handled: false,\n        },\n        stacktrace: {\n          frames: [\n            {\n              filename: \"django/core/handlers/exception.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n              function: \"inner\",\n              module: \"django.core.handlers.exception\",\n              lineno: 34,\n              pre_context: [\n                \"    can rely on getting a response instead of an exception.\",\n                '    \"\"\"',\n                \"    @wraps(get_response)\",\n                \"    def inner(request):\",\n                \"        try:\",\n              ],\n              context_line: \"            response = get_response(request)\",\n              post_context: [\n                \"        except Exception as exc:\",\n                \"            response = response_for_exception(request, exc)\",\n                \"        return response\",\n                \"    return inner\",\n                \"\",\n              ],\n              vars: {\n                request: \"<WSGIRequest: GET '/template-error/'>\",\n                exc:\n                  \"NoReverseMatch(\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\")\",\n                get_response:\n                  \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7fc14cb6efa0>>\",\n              },\n            },\n            {\n              filename: \"django/core/handlers/base.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n              function: \"_get_response\",\n              module: \"django.core.handlers.base\",\n              lineno: 145,\n              pre_context: [\n                \"                    )\",\n                \"\",\n                \"            try:\",\n                \"                response = response.render()\",\n                \"            except Exception as e:\",\n              ],\n              context_line:\n                \"                response = self.process_exception_by_middleware(e, request)\",\n              post_context: [\n                \"\",\n                \"        return response\",\n                \"\",\n                \"    def process_exception_by_middleware(self, exception, request):\",\n                '        \"\"\"',\n              ],\n              vars: {\n                self:\n                  \"<django.core.handlers.wsgi.WSGIHandler object at 0x7fc14cb6efa0>\",\n                request: \"<WSGIRequest: GET '/template-error/'>\",\n                response:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                resolver:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                resolver_match:\n                  \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                callback: \"<function TemplateErrorView at 0x7fc14c63f940>\",\n                callback_args: [],\n                callback_kwargs: {},\n                middleware_method:\n                  \"<function CsrfViewMiddleware.process_view at 0x7fc14bc8ce50>\",\n                wrapped_callback:\n                  \"<function TemplateErrorView at 0x7fc14c63f940>\",\n              },\n            },\n            {\n              filename: \"django/core/handlers/base.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n              function: \"_get_response\",\n              module: \"django.core.handlers.base\",\n              lineno: 143,\n              pre_context: [\n                '                        \"HttpResponse object. It returned None instead.\"',\n                \"                        % (middleware_method.__self__.__class__.__name__)\",\n                \"                    )\",\n                \"\",\n                \"            try:\",\n              ],\n              context_line: \"                response = response.render()\",\n              post_context: [\n                \"            except Exception as e:\",\n                \"                response = self.process_exception_by_middleware(e, request)\",\n                \"\",\n                \"        return response\",\n                \"\",\n              ],\n              vars: {\n                self:\n                  \"<django.core.handlers.wsgi.WSGIHandler object at 0x7fc14cb6efa0>\",\n                request: \"<WSGIRequest: GET '/template-error/'>\",\n                response:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                resolver:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                resolver_match:\n                  \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                callback: \"<function TemplateErrorView at 0x7fc14c63f940>\",\n                callback_args: [],\n                callback_kwargs: {},\n                middleware_method:\n                  \"<function CsrfViewMiddleware.process_view at 0x7fc14bc8ce50>\",\n                wrapped_callback:\n                  \"<function TemplateErrorView at 0x7fc14c63f940>\",\n              },\n            },\n            {\n              filename: \"django/template/response.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/template/response.py\",\n              function: \"render\",\n              module: \"django.template.response\",\n              lineno: 105,\n              pre_context: [\n                \"\",\n                \"        Return the baked response instance.\",\n                '        \"\"\"',\n                \"        retval = self\",\n                \"        if not self._is_rendered:\",\n              ],\n              context_line: \"            self.content = self.rendered_content\",\n              post_context: [\n                \"            for post_callback in self._post_render_callbacks:\",\n                \"                newretval = post_callback(retval)\",\n                \"                if newretval is not None:\",\n                \"                    retval = newretval\",\n                \"        return retval\",\n              ],\n              vars: {\n                self:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                retval:\n                  '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n              },\n            },\n            {\n              filename: \"django/urls/base.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/urls/base.py\",\n              function: \"reverse\",\n              module: \"django.urls.base\",\n              lineno: 87,\n              pre_context: [\n                \"                else:\",\n                '                    raise NoReverseMatch(\"%s is not a registered namespace\" % key)',\n                \"        if ns_pattern:\",\n                \"            resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))\",\n                \"\",\n              ],\n              context_line:\n                \"    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))\",\n              post_context: [\n                \"\",\n                \"\",\n                \"reverse_lazy = lazy(reverse, str)\",\n                \"\",\n                \"\",\n              ],\n              vars: {\n                viewname: \"'nope'\",\n                urlconf: \"'django_error_factory.urls'\",\n                args: [],\n                kwargs: {},\n                current_app: \"''\",\n                resolver:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                prefix: \"'/'\",\n                view: \"'nope'\",\n                path: [],\n                current_path: \"None\",\n              },\n            },\n            {\n              filename: \"django/urls/resolvers.py\",\n              abs_path:\n                \"/usr/local/lib/python3.8/site-packages/django/urls/resolvers.py\",\n              function: \"_reverse_with_prefix\",\n              module: \"django.urls.resolvers\",\n              lineno: 677,\n              pre_context: [\n                \"        else:\",\n                \"            msg = (\",\n                \"                \\\"Reverse for '%(view)s' not found. '%(view)s' is not \\\"\",\n                \"                \\\"a valid view function or pattern name.\\\" % {'view': lookup_view_s}\",\n                \"            )\",\n              ],\n              context_line: \"        raise NoReverseMatch(msg)\",\n              post_context: [],\n              vars: {\n                self:\n                  \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                lookup_view: \"'nope'\",\n                _prefix: \"'/'\",\n                args: [],\n                possibilities: [],\n                m: \"None\",\n                n: \"None\",\n                lookup_view_s: \"'nope'\",\n                patterns: [],\n                msg:\n                  \"\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\"\",\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n  event_id: \"3e7c1345914d4924926d795ade8240cb\",\n  timestamp: \"2020-05-13T00:37:49.130239Z\",\n  breadcrumbs: [],\n  transaction: \"/template-error/\",\n  contexts: {\n    trace: {\n      trace_id: \"7f6b76eac5d042b78752db640a848008\",\n      span_id: \"802ffce6fe075f40\",\n      parent_span_id: \"be0f515132150c50\",\n      op: \"django.middleware\",\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n    },\n    runtime: {\n      name: \"CPython\",\n      version: \"3.8.2\",\n      build: \"3.8.2 (default, Apr 23 2020, 14:32:57) \\n[GCC 8.3.0]\",\n    },\n  },\n  modules: {\n    wheel: \"0.34.2\",\n    webencodings: \"0.5.1\",\n    attrs: \"19.3.0\",\n    asgiref: \"3.2.7\",\n    appdirs: \"1.4.3\",\n  },\n  extra: {\n    \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"],\n  },\n  request: {\n    url: \"http://localhost:8001/template-error/\",\n    query_string: \"\",\n    method: \"GET\",\n    env: {\n      SERVER_NAME: \"4c55e9e8d666\",\n      SERVER_PORT: \"8001\",\n    },\n    headers: {\n      \"Content-Length\": \"\",\n      \"Content-Type\": \"text/plain\",\n      Host: \"localhost:8001\",\n      \"User-Agent\":\n        \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0\",\n      Accept:\n        \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n      \"Accept-Language\": \"en-US,en;q=0.5\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      Connection: \"keep-alive\",\n      Referer: \"http://localhost:8001/\",\n      Cookie: \"\",\n      \"Upgrade-Insecure-Requests\": \"1\",\n      Dnt: \"1\",\n    },\n  },\n  server_name: \"4c55e9e8d666\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.14.3\",\n    packages: [\n      {\n        name: \"pypi:sentry-sdk\",\n        version: \"0.14.3\",\n      },\n    ],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\",\n    ],\n  },\n  platform: \"python\",\n  _meta: {\n    exception: {\n      values: {\n        \"0\": {\n          stacktrace: {\n            frames: {\n              \"12\": {\n                vars: {\n                  \"\": {\n                    len: 13,\n                  },\n                },\n              },\n              \"13\": {\n                vars: {\n                  \"\": {\n                    len: 11,\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    request: {\n      headers: {\n        Cookie: {\n          \"\": {\n            rem: [[\"!config\", \"x\", 0, 373]],\n          },\n        },\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/forms/form-error/form-error.stories.ts": [
                {
                    "name": "Many",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/forms/form-error/form-error.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    error: {\n      non_field_errors: [\n        \"Something went wrong\",\n        \"Another thing went wrong too\",\n      ],\n    },\n  },\n})"
                },
                {
                    "name": "One",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/forms/form-error/form-error.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\n  props: {\n    error: { non_field_errors: [\"Something went wrong\"] },\n  },\n})"
                }
            ],
            "src/app/api/organizations/organization-test-data.ts": [
                {
                    "name": "organizationList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/organizations/organization-test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization[]",
                    "defaultValue": "[\n  {\n    id: 2,\n    name: \"test org\",\n    slug: \"test-org\",\n    dateCreated: \"2019-12-20T14:50:31.641549Z\",\n    status: {\n      id: \"active\",\n      name: \"active\",\n    },\n    avatar: {\n      avatarType: \"\",\n      avatarUuid: null,\n    },\n    isEarlyAdopter: false,\n    require2FA: false,\n    isAcceptingEvents: true,\n  },\n  {\n    id: 1,\n    name: \"prince ali\",\n    slug: \"prince-ali\",\n    dateCreated: \"2019-12-20T14:49:28.631459Z\",\n    status: {\n      id: \"active\",\n      name: \"active\",\n    },\n    avatar: {\n      avatarType: \"\",\n      avatarUuid: null,\n    },\n    isEarlyAdopter: false,\n    require2FA: false,\n    isAcceptingEvents: true,\n  },\n]"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/page-not-found.ts": [
                {
                    "name": "pageNotFound",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/page-not-found.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"121da0ea18894a6e9eafe7d7027fec4b\",\n  id: \"121da0ea18894a6e9eafe7d7027fec4b\",\n  issue: 13,\n  user: null,\n  contexts: {\n    trace: {\n      op: \"django.middleware\",\n      span_id: \"85bee10ac7bb746c\",\n      trace_id: \"52c5c9d9b7304cce95659e5d0615601c\",\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"bfac543765f9ce61\",\n    },\n    runtime: {\n      name: \"CPython\",\n      build: \"3.8.2 (default, Feb 26 2020, 15:09:34) \\n[GCC 8.3.0]\",\n      version: \"3.8.2\",\n    },\n  },\n  culprit: \"/message/\",\n  dateCreated: \"2020-03-13T13:33:44.881822Z\",\n  dateReceived: \"2020-03-13T13:33:44.993168Z\",\n  entries: [\n    {\n      type: \"request\",\n      data: {\n        env: {\n          SERVER_NAME: \"52c1bc4559ee\",\n          SERVER_PORT: \"8001\",\n        },\n        url: \"http://localhost:8001/message/\",\n        method: \"GET\",\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Cookie\", \"\"],\n          [\"Dnt\", \"1\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:74.0) Gecko/20100101 Firefox/74.0\",\n          ],\n        ],\n        query_string: \"\",\n        inferredContentType: \"text/plain\",\n      },\n    },\n  ],\n  metadata: {\n    title: \"Page not found!\",\n  },\n  packages: {\n    pip: \"20.0.2\",\n    six: \"1.14.0\",\n    cffi: \"1.14.0\",\n    cleo: \"0.7.6\",\n    idna: \"2.9\",\n    ipdb: \"0.12.3\",\n    jedi: \"0.16.0\",\n    pytz: \"2019.3\",\n    toml: \"0.10.0\",\n    attrs: \"19.3.0\",\n    black: \"19.10b0\",\n    cachy: \"0.3.0\",\n    click: \"7.0\",\n    parso: \"0.6.2\",\n    pylev: \"1.3.0\",\n    regex: \"2020.2.20\",\n    wheel: \"0.34.2\",\n    clikit: \"0.4.2\",\n    django: \"3.0.4\",\n    pastel: \"0.2.0\",\n    poetry: \"1.0.0\",\n    appdirs: \"1.4.3\",\n    asgiref: \"3.2.3\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    ipython: \"7.13.0\",\n    jeepney: \"0.4.3\",\n    keyring: \"19.3.0\",\n    msgpack: \"1.0.0\",\n    pexpect: \"4.8.0\",\n    pkginfo: \"1.5.0.1\",\n    tomlkit: \"0.5.11\",\n    urllib3: \"1.25.8\",\n    wcwidth: \"0.1.8\",\n    backcall: \"0.1.0\",\n    html5lib: \"1.0.1\",\n    lockfile: \"0.12.2\",\n    pathspec: \"0.7.0\",\n    pygments: \"2.6.1\",\n    requests: \"2.23.0\",\n    sqlparse: \"0.3.1\",\n    decorator: \"4.4.2\",\n    pycparser: \"2.20\",\n    pyparsing: \"2.4.6\",\n    traitlets: \"4.3.3\",\n    \"typed-ast\": \"1.4.1\",\n    jsonschema: \"3.2.0\",\n    ptyprocess: \"0.6.0\",\n    pyrsistent: \"0.14.11\",\n    \"sentry-sdk\": \"0.14.2\",\n    setuptools: \"45.2.0\",\n    pickleshare: \"0.7.5\",\n    shellingham: \"1.3.2\",\n    cachecontrol: \"0.12.6\",\n    cryptography: \"2.8\",\n    webencodings: \"0.5.1\",\n    secretstorage: \"3.1.2\",\n    \"prompt-toolkit\": \"3.0.3\",\n    \"ipython-genutils\": \"0.2.0\",\n    \"requests-toolbelt\": \"0.8.0\",\n  },\n  platform: \"python\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.14.2\",\n    packages: [\n      {\n        name: \"pypi:sentry-sdk\",\n        version: \"0.14.2\",\n      },\n    ],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\",\n    ],\n  },\n  tags: [],\n  title: \"Page not found!\",\n  type: \"default\",\n  nextEventID: null,\n  previousEventID: null,\n}"
                }
            ],
            "src/app/settings/projects/platform-picker/platform-picker.stories.ts": [
                {
                    "name": "PlatformPickerButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: PlatformPickerComponent,\n    props: {\n      template: \"buttons\",\n    },\n  };\n}"
                },
                {
                    "name": "PlatformPickerDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platform-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return {\n    component: PlatformPickerComponent,\n    props: {\n      template: \"dropdown\",\n    },\n  };\n}"
                }
            ],
            "src/app/settings/projects/platform-picker/platforms.ts": [
                {
                    "name": "platforms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/settings/projects/platform-picker/platforms.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Platform[]",
                    "defaultValue": "[\n  {\n    id: \"csharp\",\n    name: \"C#\",\n    integrations: [\n      {\n        id: \"csharp-aspnetcore\",\n        name: \"ASP.NET Core\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=aspnetcore\",\n      },\n      {\n        id: \"csharp\",\n        name: \"C#\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=csharp\",\n      },\n    ],\n  },\n  {\n    id: \"cordova\",\n    name: \"Cordova\",\n    integrations: [\n      {\n        id: \"cordova\",\n        name: \"Cordova\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=cordova\",\n      },\n    ],\n  },\n  {\n    id: \"electron\",\n    name: \"Electron\",\n    integrations: [\n      {\n        id: \"electron\",\n        name: \"Electron\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=electron\",\n      },\n    ],\n  },\n  {\n    id: \"elixir\",\n    name: \"Elixir\",\n    integrations: [\n      {\n        id: \"elixir\",\n        name: \"Elixir\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/elixir/\",\n      },\n    ],\n  },\n  {\n    id: \"go\",\n    name: \"Go\",\n    integrations: [\n      {\n        id: \"go\",\n        name: \"Go\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=go\",\n      },\n      {\n        id: \"go-http\",\n        name: \"net/http\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/go/http/\",\n      },\n    ],\n  },\n  {\n    id: \"java\",\n    name: \"Java\",\n    integrations: [\n      {\n        id: \"java-android\",\n        name: \"Android\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/android/\",\n      },\n      {\n        id: \"java-appengine\",\n        name: \"Google App Engine\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/appengine/\",\n      },\n      {\n        id: \"java\",\n        name: \"Java\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/java/\",\n      },\n      {\n        id: \"java-logging\",\n        name: \"java.util.logging\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/jul/\",\n      },\n      {\n        id: \"java-log4j\",\n        name: \"Log4j 1.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j/\",\n      },\n      {\n        id: \"java-log4j2\",\n        name: \"Log4j 2.x\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/log4j2/\",\n      },\n      {\n        id: \"java-logback\",\n        name: \"Logback\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/java/modules/logback/\",\n      },\n    ],\n  },\n  {\n    id: \"javascript\",\n    name: \"JavaScript\",\n    integrations: [\n      {\n        id: \"javascript-angular\",\n        name: \"Angular\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/angular/\",\n      },\n      {\n        id: \"javascript-angularjs\",\n        name: \"AngularJS\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/angularjs/\",\n      },\n      {\n        id: \"javascript-backbone\",\n        name: \"Backbone\",\n        type: \"framework\",\n        link:\n          \"https://docs.sentry.io/clients/javascript/integrations/#backbone\",\n      },\n      {\n        id: \"javascript-browser\",\n        name: \"Browser JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-ember\",\n        name: \"Ember\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/ember/\",\n      },\n      {\n        id: \"javascript\",\n        name: \"JavaScript\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=browser\",\n      },\n      {\n        id: \"javascript-react\",\n        name: \"React\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/react/\",\n      },\n      {\n        id: \"javascript-vue\",\n        name: \"Vue\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/javascript/vue/\",\n      },\n    ],\n  },\n  {\n    id: \"minidump\",\n    name: \"Minidump\",\n    integrations: [\n      {\n        id: \"minidump\",\n        name: \"Minidump\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/native/minidump/\",\n      },\n    ],\n  },\n  {\n    id: \"native\",\n    name: \"Native (C/C++)\",\n    integrations: [\n      {\n        id: \"native\",\n        name: \"Native (C/C++)\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=native\",\n      },\n    ],\n  },\n  {\n    id: \"node\",\n    name: \"Node.js\",\n    integrations: [\n      {\n        id: \"node-connect\",\n        name: \"Connect\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/connect/\",\n      },\n      {\n        id: \"node-express\",\n        name: \"Express\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/express/\",\n      },\n      {\n        id: \"node-koa\",\n        name: \"Koa\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/node/koa/\",\n      },\n      {\n        id: \"node\",\n        name: \"Node.js\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=node\",\n      },\n    ],\n  },\n  {\n    id: \"cocoa\",\n    name: \"Objective-C\",\n    integrations: [\n      {\n        id: \"cocoa-objc\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa\",\n        name: \"Objective-C\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n      {\n        id: \"cocoa-swift\",\n        name: \"Swift\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/cocoa/\",\n      },\n    ],\n  },\n  {\n    id: \"php\",\n    name: \"PHP\",\n    integrations: [\n      {\n        id: \"php-laravel\",\n        name: \"Laravel\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/laravel/\",\n      },\n      {\n        id: \"php-monolog\",\n        name: \"Monolog\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/monolog/\",\n      },\n      {\n        id: \"php\",\n        name: \"PHP\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/error-reporting/quickstart/?platform=php\",\n      },\n      {\n        id: \"php-symfony\",\n        name: \"Symfony\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/php/symfony/\",\n      },\n      {\n        id: \"php-symfony2\",\n        name: \"Symfony2\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/php/integrations/symfony2/\",\n      },\n    ],\n  },\n  {\n    id: \"python\",\n    name: \"Python\",\n    integrations: [\n      {\n        id: \"python-aiohttp\",\n        name: \"AIOHTTP\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aiohttp/\",\n      },\n      {\n        id: \"python-asgi\",\n        name: \"ASGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/asgi/\",\n      },\n      {\n        id: \"python-pythonawslambda\",\n        name: \"AWS Lambda\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/aws_lambda/\",\n      },\n      {\n        id: \"python-bottle\",\n        name: \"Bottle\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/bottle/\",\n      },\n      {\n        id: \"python-celery\",\n        name: \"Celery\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/celery/\",\n      },\n      {\n        id: \"python-django\",\n        name: \"Django\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/django/\",\n      },\n      {\n        id: \"python-falcon\",\n        name: \"Falcon\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/falcon/\",\n      },\n      {\n        id: \"python-flask\",\n        name: \"Flask\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/flask/\",\n      },\n      {\n        id: \"python-pylons\",\n        name: \"Pylons\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/python/integrations/pylons/\",\n      },\n      {\n        id: \"python-pyramid\",\n        name: \"Pyramid\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/pyramid/\",\n      },\n      {\n        id: \"python\",\n        name: \"Python\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=python\",\n      },\n      {\n        id: \"python-rq\",\n        name: \"RQ (Redis Queue)\",\n        type: \"library\",\n        link: \"https://docs.sentry.io/platforms/python/rq/\",\n      },\n      {\n        id: \"python-sanic\",\n        name: \"Sanic\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/sanic/\",\n      },\n      {\n        id: \"python-pythonserverless\",\n        name: \"Serverless (Python)\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/serverless/\",\n      },\n      {\n        id: \"python-tornado\",\n        name: \"Tornado\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/tornado/\",\n      },\n      {\n        id: \"python-wsgi\",\n        name: \"WSGI\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/platforms/python/wsgi/\",\n      },\n    ],\n  },\n  {\n    id: \"react-native\",\n    name: \"React-Native\",\n    integrations: [\n      {\n        id: \"react-native\",\n        name: \"React-Native\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/platforms/react-native/\",\n      },\n    ],\n  },\n  {\n    id: \"ruby\",\n    name: \"Ruby\",\n    integrations: [\n      {\n        id: \"ruby-rack\",\n        name: \"Rack\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rack/\",\n      },\n      {\n        id: \"ruby-rails\",\n        name: \"Rails\",\n        type: \"framework\",\n        link: \"https://docs.sentry.io/clients/ruby/integrations/rails/\",\n      },\n      {\n        id: \"ruby\",\n        name: \"Ruby\",\n        type: \"language\",\n        link: \"https://docs.sentry.io/clients/ruby/\",\n      },\n    ],\n  },\n  {\n    id: \"rust\",\n    name: \"Rust\",\n    integrations: [\n      {\n        id: \"rust\",\n        name: \"Rust\",\n        type: \"language\",\n        link:\n          \"https://docs.sentry.io/error-reporting/quickstart/?platform=rust\",\n      },\n    ],\n  },\n]"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/post-error.ts": [
                {
                    "name": "postError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/post-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"a63b6a3b61dd4e72875c4e8f89091f90\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: null,\n  message:\n    \"__getitem__ MultiValueDictKeyError 'nope' django/utils/datastructures.py /post-error/\",\n  id: \"4\",\n  size: 11733,\n  errors: [],\n  culprit: \"/post-error/\",\n  title: \"MultiValueDictKeyError: 'nope'\",\n  platform: \"python\",\n  location: \"django/utils/datastructures.py\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"__getitem__\",\n    type: \"MultiValueDictKeyError\",\n    value: \"'nope'\",\n    filename: \"django/utils/datastructures.py\"\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/post-error/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/post-error/\", key: \"url\", _meta: null }\n  ],\n  dateCreated: \"2020-01-27T19:17:42.605Z\",\n  dateReceived: \"2020-01-27T19:17:42.950Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"__getitem__\",\n                  colNo: null,\n                  vars: {\n                    self: {\n                      csrfmiddlewaretoken:\n                        \"'184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z'\",\n                      param1: \"'val'\"\n                    },\n                    __class__:\n                      \"<class 'django.utils.datastructures.MultiValueDict'>\",\n                    key: \"'nope'\"\n                  },\n                  symbol: null,\n                  module: \"django.utils.datastructures\",\n                  lineNo: 76,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/utils/datastructures.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/utils/datastructures.py\",\n                  platform: null,\n                  context: [\n                    [71, '        \"\"\"'],\n                    [\n                      72,\n                      \"        Return the last data value for this key, or [] if it's an empty list;\"\n                    ],\n                    [73, \"        raise KeyError if not found.\"],\n                    [74, '        \"\"\"'],\n                    [75, \"        try:\"],\n                    [76, \"            list_ = super().__getitem__(key)\"],\n                    [77, \"        except KeyError:\"],\n                    [78, \"            raise MultiValueDictKeyError(key)\"],\n                    [79, \"        try:\"],\n                    [80, \"            return list_[-1]\"],\n                    [81, \"        except IndexError:\"]\n                  ],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: null,\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"'nope'\",\n            type: \"KeyError\"\n          },\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f0117342580>>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    exc: \"MultiValueDictKeyError('nope')\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\"\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\"\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.PostErrorView, args=(), kwargs={}, url_name=post_error, app_names=[], namespaces=[], route=post-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f01164f0790>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f0117342580>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    callback: \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    wrapped_callback:\n                      \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\"\n                    ],\n                    [120, \"                view_name = callback.__name__\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.PostErrorView, args=(), kwargs={}, url_name=post_error, app_names=[], namespaces=[], route=post-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f01164f0790>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f0117342580>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    callback: \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    wrapped_callback:\n                      \"<function PostErrorView at 0x7f0116e68ee0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\"\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.PostErrorView object at 0x7f0115be28b0>\",\n                    args: [],\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.PostErrorView'>\"\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\"\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__'\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\"\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.PostErrorView object at 0x7f0115be28b0>\",\n                    handler:\n                      \"<bound method PostErrorView.post of <errors.views.PostErrorView object at 0x7f0115be28b0>>\",\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    args: [],\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\"\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\"\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\"\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\"\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\"\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\"\n                    ]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"post\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.PostErrorView object at 0x7f0115be28b0>\",\n                    args: [],\n                    request: \"<WSGIRequest: POST '/post-error/'>\",\n                    kwargs: {}\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 22,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [17, '        User.objects.get(id=\"9999999\")'],\n                    [18, \"\"],\n                    [19, \"\"],\n                    [20, \"class PostErrorView(View):\"],\n                    [21, \"    def post(self, request, *args, **kwargs):\"],\n                    [22, '        request.POST[\"nope\"]'],\n                    [23, \"\"],\n                    [24, \"\"],\n                    [25, \"class DatabaseStackErrorView(View):\"],\n                    [26, \"    def get(self, request, *args, **kwargs):\"],\n                    [27, \"        users = User.objects.all()\"]\n                  ],\n                  symbolAddr: null\n                },\n                {\n                  function: \"__getitem__\",\n                  colNo: null,\n                  vars: {\n                    self: {\n                      csrfmiddlewaretoken:\n                        \"'184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z'\",\n                      param1: \"'val'\"\n                    },\n                    __class__:\n                      \"<class 'django.utils.datastructures.MultiValueDict'>\",\n                    key: \"'nope'\"\n                  },\n                  symbol: null,\n                  module: \"django.utils.datastructures\",\n                  lineNo: 78,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/utils/datastructures.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/utils/datastructures.py\",\n                  platform: null,\n                  context: [\n                    [73, \"        raise KeyError if not found.\"],\n                    [74, '        \"\"\"'],\n                    [75, \"        try:\"],\n                    [76, \"            list_ = super().__getitem__(key)\"],\n                    [77, \"        except KeyError:\"],\n                    [78, \"            raise MultiValueDictKeyError(key)\"],\n                    [79, \"        try:\"],\n                    [80, \"            return list_[-1]\"],\n                    [81, \"        except IndexError:\"],\n                    [82, \"            return []\"],\n                    [83, \"\"]\n                  ],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: \"django.utils.datastructures\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"'nope'\",\n            type: \"MultiValueDictKeyError\"\n          }\n        ],\n        excOmitted: null,\n        hasSystemFrames: false\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"application/x-www-form-urlencoded\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\"\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"95\"],\n          [\"Content-Type\", \"application/x-www-form-urlencoded\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Origin\", \"http://localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\n          ]\n        ],\n        url: \"http://localhost:8001/post-error/\",\n        query: [],\n        data: {\n          csrfmiddlewaretoken:\n            \"184VTEFb5oyMNrInUlX5Yxj6EuTllb7IiQ9axkeCcqKYrG4PKkXJnn1RrGRdcJ3z\",\n          param1: \"val\"\n        },\n        method: \"POST\"\n      }\n    }\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\"\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" }\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\"\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"a54148a280874a8a\",\n      trace_id: \"2b711fddd258410d90f1f099768325f3\",\n      span_id: \"9367782b51c6c0db\",\n      type: \"default\",\n      op: \"django.middleware\"\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" }\n  },\n  fingerprints: [\"a89b105c1f47b0602d6b89ccb2193afb\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"4\"\n}"
                }
            ],
            "src/app/api/emails/sample-email-address-data.ts": [
                {
                    "name": "sampleEmailAddressData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/emails/sample-email-address-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EmailAddress[]",
                    "defaultValue": "[\n  {\n    isPrimary: false,\n    email: \"aa@example.com\",\n    isVerified: true,\n  },\n  {\n    isPrimary: false,\n    email: \"ac@example.com\",\n    isVerified: true,\n  },\n  {\n    isPrimary: false,\n    email: \"test@example.com\",\n    isVerified: false,\n  },\n  {\n    isPrimary: true,\n    email: \"primaryEmailAddress@example.com\",\n    isVerified: true,\n  },\n  {\n    isPrimary: false,\n    email: \"hello@example.com\",\n    isVerified: false,\n  },\n]"
                }
            ],
            "src/app/issues/issue-detail/issue-detail-test-data.ts": [
                {
                    "name": "sampleIssueDetail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/issue-detail-test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueDetail",
                    "defaultValue": "{\n  seenBy: [\n    {\n      username: \"a@aa.aa\",\n      lastLogin: \"2021-02-11T15:40:32.272Z\",\n      isSuperuser: false,\n      emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n      isManaged: false,\n      lastActive: \"2021-02-19T19:36:09.876Z\",\n      lastSeen: \"2021-02-19T19:32:16.371Z\",\n      identities: [],\n      id: \"3\",\n      isActive: true,\n      has2fa: false,\n      name: \"EmJay\",\n      avatarUrl: \"https://secure.gravatar.com/avatar/\",\n      dateJoined: \"2020-06-08T20:55:16.046Z\",\n      options: {\n        timezone: \"UTC\",\n        stacktraceOrder: -1,\n        language: \"en\",\n        clock24Hours: false,\n      },\n      flags: { newsletter_consent_prompt: false },\n      avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n      hasPasswordAuth: true,\n      email: \"a@aa.aa\",\n    },\n  ],\n  pluginIssues: [],\n  lastSeen: \"2020-11-30T15:03:41.311Z\",\n  userReportCount: 0,\n  numComments: 0,\n  userCount: 0,\n  stats: {\n    \"30d\": [\n      [1611100800.0, 0],\n      [1611187200.0, 0],\n      [1611273600.0, 0],\n      [1611360000.0, 0],\n      [1611446400.0, 0],\n      [1611532800.0, 0],\n      [1611619200.0, 0],\n      [1611705600.0, 0],\n      [1611792000.0, 0],\n      [1611878400.0, 0],\n      [1611964800.0, 0],\n      [1612051200.0, 0],\n      [1612137600.0, 0],\n      [1612224000.0, 0],\n      [1612310400.0, 0],\n      [1612396800.0, 0],\n      [1612483200.0, 0],\n      [1612569600.0, 0],\n      [1612656000.0, 0],\n      [1612742400.0, 0],\n      [1612828800.0, 0],\n      [1612915200.0, 0],\n      [1613001600.0, 0],\n      [1613088000.0, 0],\n      [1613174400.0, 0],\n      [1613260800.0, 0],\n      [1613347200.0, 0],\n      [1613433600.0, 0],\n      [1613520000.0, 0],\n      [1613606400.0, 0],\n      [1613692800.0, 0],\n    ],\n    \"24h\": [\n      [1613674800.0, 0],\n      [1613678400.0, 0],\n      [1613682000.0, 0],\n      [1613685600.0, 0],\n      [1613689200.0, 0],\n      [1613692800.0, 0],\n      [1613696400.0, 0],\n      [1613700000.0, 0],\n      [1613703600.0, 0],\n      [1613707200.0, 0],\n      [1613710800.0, 0],\n      [1613714400.0, 0],\n      [1613718000.0, 0],\n      [1613721600.0, 0],\n      [1613725200.0, 0],\n      [1613728800.0, 0],\n      [1613732400.0, 0],\n      [1613736000.0, 0],\n      [1613739600.0, 0],\n      [1613743200.0, 0],\n      [1613746800.0, 0],\n      [1613750400.0, 0],\n      [1613754000.0, 0],\n      [1613757600.0, 0],\n      [1613761200.0, 0],\n    ],\n  },\n  culprit: \"/divide-zero/\",\n  title: \"ZeroDivisionError: division by zero\",\n  id: 107,\n  assignedTo: null,\n  participants: [\n    {\n      username: \"a@aa.aa\",\n      lastLogin: \"2021-02-11T15:40:32.272Z\",\n      isSuperuser: false,\n      emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n      isManaged: false,\n      lastActive: \"2021-02-19T19:36:09.876Z\",\n      identities: [],\n      id: \"3\",\n      isActive: true,\n      has2fa: false,\n      name: \"EmJay\",\n      avatarUrl: \"https://secure.gravatar.com/avatar/\",\n      dateJoined: \"2020-06-08T20:55:16.046Z\",\n      options: {\n        timezone: \"UTC\",\n        stacktraceOrder: -1,\n        language: \"en\",\n        clock24Hours: false,\n      },\n      flags: { newsletter_consent_prompt: false },\n      avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n      hasPasswordAuth: true,\n      email: \"a@aa.aa\",\n    },\n  ],\n  logger: null,\n  type: \"error\",\n  annotations: [],\n  metadata: {\n    function: \"get\",\n    type: \"ZeroDivisionError\",\n    value: \"division by zero\",\n    filename: \"errors/views.py\",\n  },\n  status: \"unresolved\",\n  pluginActions: [],\n  tags: [\n    { uniqueValues: 3, name: \"Browser\", key: \"browser\" },\n    { uniqueValues: 2, name: \"Browser.Name\", key: \"browser.name\" },\n    { uniqueValues: 1, name: \"Handled\", key: \"handled\" },\n    { uniqueValues: 1, name: \"Level\", key: \"level\" },\n    { uniqueValues: 1, name: \"Mechanism\", key: \"mechanism\" },\n    { uniqueValues: 2, name: \"Os.Name\", key: \"os.name\" },\n    { uniqueValues: 1, name: \"Runtime\", key: \"runtime\" },\n    { uniqueValues: 1, name: \"Runtime.Name\", key: \"runtime.name\" },\n    { uniqueValues: 3, name: \"Server\", key: \"server_name\" },\n    { uniqueValues: 1, name: \"Transaction\", key: \"transaction\" },\n    { uniqueValues: 1, name: \"URL\", key: \"url\" },\n  ],\n  subscriptionDetails: { reason: \"assigned\" },\n  isPublic: false,\n  hasSeen: true,\n  firstRelease: null,\n  shortId: \"DJANGO-1\",\n  shareId: null,\n  firstSeen: \"2020-08-06T15:04:41.801Z\",\n  count: \"4\",\n  permalink: \"https://.com\",\n  level: \"error\",\n  isSubscribed: true,\n  pluginContexts: [],\n  isBookmarked: false,\n  project: {\n    platform: \"python-django\",\n    slug: \"django\",\n    id: \"21\",\n    name: \"Django\",\n  },\n  lastRelease: null,\n  activity: [\n    {\n      data: {},\n      dateCreated: \"2020-08-11T19:51:15.373Z\",\n      type: \"unassigned\",\n      id: \"35\",\n      user: {\n        username: \"a@aa.aa\",\n        lastLogin: \"2021-02-11T15:40:32.272Z\",\n        isSuperuser: false,\n        emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n        isManaged: false,\n        lastActive: \"2021-02-19T19:36:09.876Z\",\n        identities: [],\n        id: \"3\",\n        isActive: true,\n        has2fa: false,\n        name: \"A\",\n        avatarUrl: \"https://secure.gravatar.com/avatar/\",\n        dateJoined: \"2020-06-08T20:55:16.046Z\",\n        options: {\n          timezone: \"UTC\",\n          stacktraceOrder: -1,\n          language: \"en\",\n          clock24Hours: false,\n        },\n        flags: { newsletter_consent_prompt: false },\n        avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n        hasPasswordAuth: true,\n        email: \"a@aa.aa\",\n      },\n    },\n    {\n      data: {\n        assignee: \"3\",\n        assigneeType: \"user\",\n        assigneeEmail: \"a@aa.aa\",\n      },\n      dateCreated: \"2020-08-11T19:51:11.698Z\",\n      type: \"assigned\",\n      id: \"34\",\n      user: {\n        username: \"a@aa.aa\",\n        lastLogin: \"2021-02-11T15:40:32.272Z\",\n        isSuperuser: false,\n        emails: [{ is_verified: false, id: \"8\", email: \"a@aa.aa\" }],\n        isManaged: false,\n        lastActive: \"2021-02-19T19:36:09.876Z\",\n        identities: [],\n        id: \"3\",\n        isActive: true,\n        has2fa: false,\n        name: \"EmJay\",\n        avatarUrl: \"https://secure.gravatar.com/avatar/\",\n        dateJoined: \"2020-06-08T20:55:16.046Z\",\n        options: {\n          timezone: \"UTC\",\n          stacktraceOrder: -1,\n          language: \"en\",\n          clock24Hours: false,\n        },\n        flags: { newsletter_consent_prompt: false },\n        avatar: { avatarUuid: null, avatarType: \"letter_avatar\" },\n        hasPasswordAuth: true,\n        email: \"a@aa.aa\",\n      },\n    },\n    {\n      data: {},\n      dateCreated: \"2020-08-06T15:04:41.801Z\",\n      type: \"first_seen\",\n      id: \"0\",\n      user: null,\n    },\n  ],\n  statusDetails: {},\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "snackBarDuration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "4000"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/social-app.ts": [
                {
                    "name": "socialApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/social-app.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  eventID: \"8f3cfd79bbf44390abda117725c96e57\",\n  id: \"8f3cfd79bbf44390abda117725c96e57\",\n  issue: 32,\n  contexts: {\n    trace: {\n      op: \"django.middleware\",\n      span_id: \"b8cbb053b30fb09b\",\n      trace_id: \"f9e158b9a93644f1aa5eecb7bd02bd95\",\n      description:\n        \"glitchtip.middleware.proxy.DecompressBodyMiddleware.__call__\",\n      parent_span_id: \"93b86622ccd9cb61\"\n    },\n    runtime: {\n      name: \"CPython\",\n      build: \"3.8.2 (default, Feb 26 2020, 15:09:34) \\n[GCC 8.3.0]\",\n      version: \"3.8.2\"\n    }\n  },\n  culprit: \"/rest-auth/gitlab/\",\n  dateCreated: \"2020-03-23T11:18:36.817518Z\",\n  dateReceived: \"2020-03-23T11:18:36.895859Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"SocialApp.DoesNotExist\",\n            value: \"SocialApp matching query does not exist.\",\n            module: \"allauth.socialaccount.models\",\n            mechanism: {\n              type: \"django\",\n              handled: false\n            },\n            stacktrace: {\n              frames: [\n                {\n                  vars: {\n                    exc:\n                      \"DoesNotExist('SocialApp matching query does not exist.')\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f233073c9d0>>\"\n                  },\n                  in_app: true,\n                  module: \"django.core.handlers.exception\",\n                  filename: \"django/core/handlers/exception.py\",\n                  function: \"inner\",\n                  context_line: \"            response = get_response(request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  lineNo: 34,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\"\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\"\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f233073c9d0>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    callback: \"<function GitlabLogin at 0x7f232ff24940>\",\n                    resolver: \"<URLResolver 'glitchtip.urls' (None:None) '^/'>\",\n                    response: \"None\",\n                    callback_args: [],\n                    resolver_match:\n                      \"ResolverMatch(func=glitchtip.social.GitlabLogin, args=(), kwargs={}, url_name=gitlab_login, app_names=[], namespaces=[], route=rest-auth/gitlab/)\",\n                    callback_kwargs: {},\n                    wrapped_callback:\n                      \"<function GitlabLogin at 0x7f232ff24940>\",\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f23306bc5e0>\"\n                  },\n                  in_app: true,\n                  module: \"django.core.handlers.base\",\n                  filename: \"django/core/handlers/base.py\",\n                  function: \"_get_response\",\n                  context_line:\n                    \"                response = self.process_exception_by_middleware(e, request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  lineNo: 115,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\"\n                    ],\n                    [120, \"                view_name = callback.__name__\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f233073c9d0>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    callback: \"<function GitlabLogin at 0x7f232ff24940>\",\n                    resolver: \"<URLResolver 'glitchtip.urls' (None:None) '^/'>\",\n                    response: \"None\",\n                    callback_args: [],\n                    resolver_match:\n                      \"ResolverMatch(func=glitchtip.social.GitlabLogin, args=(), kwargs={}, url_name=gitlab_login, app_names=[], namespaces=[], route=rest-auth/gitlab/)\",\n                    callback_kwargs: {},\n                    wrapped_callback:\n                      \"<function GitlabLogin at 0x7f232ff24940>\",\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f23306bc5e0>\"\n                  },\n                  in_app: true,\n                  module: \"django.core.handlers.base\",\n                  filename: \"django/core/handlers/base.py\",\n                  function: \"_get_response\",\n                  context_line:\n                    \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  lineNo: 113,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\"\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\"\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\"\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\"\n                    ],\n                    [118, \"        if response is None:\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [\"<WSGIRequest: POST '/rest-auth/gitlab/'>\"],\n                    kwargs: {},\n                    view_func: \"<function GitlabLogin at 0x7f232ff1ca60>\"\n                  },\n                  in_app: true,\n                  module: \"django.views.decorators.csrf\",\n                  filename: \"django/views/decorators/csrf.py\",\n                  function: \"wrapped_view\",\n                  context_line: \"        return view_func(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/decorators/csrf.py\",\n                  lineNo: 54,\n                  context: [\n                    [49, \"def csrf_exempt(view_func):\"],\n                    [\n                      50,\n                      '    \"\"\"Mark a view function as being exempt from the CSRF view protection.\"\"\"'\n                    ],\n                    [\n                      51,\n                      \"    # view_func.csrf_exempt = True would also work, but decorators are nicer\"\n                    ],\n                    [\n                      52,\n                      \"    # if they don't have side effects, so return a new function.\"\n                    ],\n                    [53, \"    def wrapped_view(*args, **kwargs):\"],\n                    [54, \"        return view_func(*args, **kwargs)\"],\n                    [55, \"    wrapped_view.csrf_exempt = True\"],\n                    [56, \"    return wraps(view_func)(wrapped_view)\"]\n                  ]\n                },\n                {\n                  vars: {\n                    cls: \"<class 'glitchtip.social.GitlabLogin'>\",\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    initkwargs: {}\n                  },\n                  in_app: true,\n                  module: \"django.views.generic.base\",\n                  filename: \"django/views/generic/base.py\",\n                  function: \"view\",\n                  context_line:\n                    \"            return self.dispatch(request, *args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  lineNo: 71,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\"\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__'\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\"\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"]\n                  ]\n                },\n                {\n                  vars: {\n                    dec:\n                      \"<function sensitive_post_parameters.<locals>.decorator at 0x7f232ffb19d0>\",\n                    args: [\"<WSGIRequest: POST '/rest-auth/gitlab/'>\"],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    method: \"<function LoginView.dispatch at 0x7f232ffb1d30>\",\n                    decorators: [\n                      \"<function sensitive_post_parameters.<locals>.decorator at 0x7f232ffb19d0>\"\n                    ],\n                    bound_method:\n                      \"<function sensitive_post_parameters.<locals>.decorator.<locals>.sensitive_post_parameters_wrapper at 0x7f233371c550>\"\n                  },\n                  in_app: true,\n                  module: \"django.utils.decorators\",\n                  filename: \"django/utils/decorators.py\",\n                  function: \"_wrapper\",\n                  context_line: \"        return bound_method(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/utils/decorators.py\",\n                  lineNo: 43,\n                  context: [\n                    [\n                      38,\n                      \"        # 'func'. Also, wrap method.__get__() in a function because new\"\n                    ],\n                    [\n                      39,\n                      \"        # attributes can't be set on bound method objects, only on functions.\"\n                    ],\n                    [\n                      40,\n                      \"        bound_method = partial(method.__get__(self, type(self)))\"\n                    ],\n                    [41, \"        for dec in decorators:\"],\n                    [42, \"            bound_method = dec(bound_method)\"],\n                    [43, \"        return bound_method(*args, **kwargs)\"],\n                    [44, \"\"],\n                    [\n                      45,\n                      \"    # Copy any attributes that a decorator adds to the function it decorates.\"\n                    ],\n                    [46, \"    for dec in decorators:\"],\n                    [47, \"        _update_method_wrapper(_wrapper, dec)\"],\n                    [\n                      48,\n                      \"    # Preserve any existing attributes of 'method', including the name.\"\n                    ]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    view:\n                      \"functools.partial(<bound method LoginView.dispatch of <glitchtip.social.GitlabLogin object at 0x7f232fe5c100>>)\",\n                    kwargs: {},\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    parameters: [\n                      \"'password'\",\n                      \"'old_password'\",\n                      \"'new_password1'\",\n                      \"'new_password2'\"\n                    ]\n                  },\n                  in_app: true,\n                  module: \"django.views.decorators.debug\",\n                  filename: \"django/views/decorators/debug.py\",\n                  function: \"sensitive_post_parameters_wrapper\",\n                  context_line:\n                    \"            return view(request, *args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/decorators/debug.py\",\n                  lineNo: 76,\n                  context: [\n                    [71, \"            )\"],\n                    [72, \"            if parameters:\"],\n                    [\n                      73,\n                      \"                request.sensitive_post_parameters = parameters\"\n                    ],\n                    [74, \"            else:\"],\n                    [\n                      75,\n                      \"                request.sensitive_post_parameters = '__ALL__'\"\n                    ],\n                    [76, \"            return view(request, *args, **kwargs)\"],\n                    [77, \"        return sensitive_post_parameters_wrapper\"],\n                    [78, \"    return decorator\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [\"<WSGIRequest: POST '/rest-auth/gitlab/'>\"],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    __class__: \"<class 'rest_auth.views.LoginView'>\"\n                  },\n                  in_app: true,\n                  module: \"rest_auth.views\",\n                  filename: \"rest_auth/views.py\",\n                  function: \"dispatch\",\n                  context_line:\n                    \"        return super(LoginView, self).dispatch(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_auth/views.py\",\n                  lineNo: 49,\n                  context: [\n                    [44, \"    serializer_class = LoginSerializer\"],\n                    [45, \"    token_model = TokenModel\"],\n                    [46, \"\"],\n                    [47, \"    @sensitive_post_parameters_m\"],\n                    [48, \"    def dispatch(self, *args, **kwargs):\"],\n                    [\n                      49,\n                      \"        return super(LoginView, self).dispatch(*args, **kwargs)\"\n                    ],\n                    [50, \"\"],\n                    [51, \"    def process_login(self):\"],\n                    [52, \"        django_login(self.request, self.user)\"],\n                    [53, \"\"],\n                    [54, \"    def get_response_serializer(self):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    handler:\n                      \"<bound method LoginView.post of <glitchtip.social.GitlabLogin object at 0x7f232fe5c100>>\",\n                    request:\n                      \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"dispatch\",\n                  context_line:\n                    \"            response = self.handle_exception(exc)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 505,\n                  context: [\n                    [\n                      500,\n                      \"                handler = self.http_method_not_allowed\"\n                    ],\n                    [501, \"\"],\n                    [\n                      502,\n                      \"            response = handler(request, *args, **kwargs)\"\n                    ],\n                    [503, \"\"],\n                    [504, \"        except Exception as exc:\"],\n                    [505, \"            response = self.handle_exception(exc)\"],\n                    [506, \"\"],\n                    [\n                      507,\n                      \"        self.response = self.finalize_response(request, response, *args, **kwargs)\"\n                    ],\n                    [508, \"        return self.response\"],\n                    [509, \"\"],\n                    [510, \"    def options(self, request, *args, **kwargs):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    exc:\n                      \"DoesNotExist('SocialApp matching query does not exist.')\",\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    context: {\n                      args: [],\n                      view:\n                        \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                      kwargs: {},\n                      request:\n                        \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                    },\n                    response: \"None\",\n                    exception_handler:\n                      \"<function exception_handler at 0x7f233005b550>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"handle_exception\",\n                  context_line:\n                    \"            self.raise_uncaught_exception(exc)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 465,\n                  context: [\n                    [460, \"\"],\n                    [\n                      461,\n                      \"        context = self.get_exception_handler_context()\"\n                    ],\n                    [462, \"        response = exception_handler(exc, context)\"],\n                    [463, \"\"],\n                    [464, \"        if response is None:\"],\n                    [465, \"            self.raise_uncaught_exception(exc)\"],\n                    [466, \"\"],\n                    [467, \"        response.exception = True\"],\n                    [468, \"        return response\"],\n                    [469, \"\"],\n                    [470, \"    def raise_uncaught_exception(self, exc):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    exc:\n                      \"DoesNotExist('SocialApp matching query does not exist.')\",\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"raise_uncaught_exception\",\n                  context_line: \"        raise exc\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 476,\n                  context: [\n                    [471, \"        if settings.DEBUG:\"],\n                    [472, \"            request = self.request\"],\n                    [\n                      473,\n                      \"            renderer_format = getattr(request.accepted_renderer, 'format')\"\n                    ],\n                    [\n                      474,\n                      \"            use_plaintext_traceback = renderer_format not in ('html', 'api', 'admin')\"\n                    ],\n                    [\n                      475,\n                      \"            request.force_plaintext_errors(use_plaintext_traceback)\"\n                    ],\n                    [476, \"        raise exc\"],\n                    [477, \"\"],\n                    [\n                      478,\n                      \"    # Note: Views are made CSRF exempt from within `as_view` as to prevent\"\n                    ],\n                    [\n                      479,\n                      \"    # accidental removal of this exemption in cases where `dispatch` needs to\"\n                    ],\n                    [480, \"    # be overridden.\"],\n                    [481, \"    def dispatch(self, request, *args, **kwargs):\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    handler:\n                      \"<bound method LoginView.post of <glitchtip.social.GitlabLogin object at 0x7f232fe5c100>>\",\n                    request:\n                      \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.views\",\n                  filename: \"rest_framework/views.py\",\n                  function: \"dispatch\",\n                  context_line:\n                    \"            response = handler(request, *args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/views.py\",\n                  lineNo: 502,\n                  context: [\n                    [\n                      497,\n                      \"                handler = getattr(self, request.method.lower(),\"\n                    ],\n                    [\n                      498,\n                      \"                                  self.http_method_not_allowed)\"\n                    ],\n                    [499, \"            else:\"],\n                    [\n                      500,\n                      \"                handler = self.http_method_not_allowed\"\n                    ],\n                    [501, \"\"],\n                    [\n                      502,\n                      \"            response = handler(request, *args, **kwargs)\"\n                    ],\n                    [503, \"\"],\n                    [504, \"        except Exception as exc:\"],\n                    [505, \"            response = self.handle_exception(exc)\"],\n                    [506, \"\"],\n                    [\n                      507,\n                      \"        self.response = self.finalize_response(request, response, *args, **kwargs)\"\n                    ]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    self:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    kwargs: {},\n                    request:\n                      \"<rest_framework.request.Request object at 0x7f232fe5c490>\"\n                  },\n                  in_app: true,\n                  module: \"rest_auth.views\",\n                  filename: \"rest_auth/views.py\",\n                  function: \"post\",\n                  context_line:\n                    \"        self.serializer.is_valid(raise_exception=True)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_auth/views.py\",\n                  lineNo: 103,\n                  context: [\n                    [98, \"\"],\n                    [99, \"    def post(self, request, *args, **kwargs):\"],\n                    [100, \"        self.request = request\"],\n                    [\n                      101,\n                      \"        self.serializer = self.get_serializer(data=self.request.data,\"\n                    ],\n                    [\n                      102,\n                      \"                                              context={'request': request})\"\n                    ],\n                    [\n                      103,\n                      \"        self.serializer.is_valid(raise_exception=True)\"\n                    ],\n                    [104, \"\"],\n                    [105, \"        self.login()\"],\n                    [106, \"        return self.get_response()\"],\n                    [107, \"\"],\n                    [108, \"\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"SocialLoginSerializer(context={'request': <rest_framework.request.Request object>, 'format': None, 'view': <glitchtip.social.GitlabLogin object>}, data={'access_token': '7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'}):\\n    access_token = CharField(allow_blank=True, required=False)\\n    code = CharField(allow_blank=True, required=False)\",\n                    raise_exception: \"True\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.serializers\",\n                  filename: \"rest_framework/serializers.py\",\n                  function: \"is_valid\",\n                  context_line:\n                    \"                self._validated_data = self.run_validation(self.initial_data)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/serializers.py\",\n                  lineNo: 234,\n                  context: [\n                    [\n                      229,\n                      \"            'passed when instantiating the serializer instance.'\"\n                    ],\n                    [230, \"        )\"],\n                    [231, \"\"],\n                    [232, \"        if not hasattr(self, '_validated_data'):\"],\n                    [233, \"            try:\"],\n                    [\n                      234,\n                      \"                self._validated_data = self.run_validation(self.initial_data)\"\n                    ],\n                    [235, \"            except ValidationError as exc:\"],\n                    [236, \"                self._validated_data = {}\"],\n                    [237, \"                self._errors = exc.detail\"],\n                    [238, \"            else:\"],\n                    [239, \"                self._errors = {}\"]\n                  ]\n                },\n                {\n                  vars: {\n                    data: {\n                      access_token:\n                        \"'7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'\"\n                    },\n                    self:\n                      \"SocialLoginSerializer(context={'request': <rest_framework.request.Request object>, 'format': None, 'view': <glitchtip.social.GitlabLogin object>}, data={'access_token': '7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'}):\\n    access_token = CharField(allow_blank=True, required=False)\\n    code = CharField(allow_blank=True, required=False)\",\n                    value: {\n                      access_token:\n                        \"'7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'\"\n                    },\n                    is_empty_value: \"False\"\n                  },\n                  in_app: true,\n                  module: \"rest_framework.serializers\",\n                  filename: \"rest_framework/serializers.py\",\n                  function: \"run_validation\",\n                  context_line: \"            value = self.validate(value)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_framework/serializers.py\",\n                  lineNo: 436,\n                  context: [\n                    [431, \"            return data\"],\n                    [432, \"\"],\n                    [433, \"        value = self.to_internal_value(data)\"],\n                    [434, \"        try:\"],\n                    [435, \"            self.run_validators(value)\"],\n                    [436, \"            value = self.validate(value)\"],\n                    [\n                      437,\n                      \"            assert value is not None, '.validate() should return the validated data'\"\n                    ],\n                    [\n                      438,\n                      \"        except (ValidationError, DjangoValidationError) as exc:\"\n                    ],\n                    [\n                      439,\n                      \"            raise ValidationError(detail=as_serializer_error(exc))\"\n                    ],\n                    [440, \"\"],\n                    [441, \"        return value\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"SocialLoginSerializer(context={'request': <rest_framework.request.Request object>, 'format': None, 'view': <glitchtip.social.GitlabLogin object>}, data={'access_token': '7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'}):\\n    access_token = CharField(allow_blank=True, required=False)\\n    code = CharField(allow_blank=True, required=False)\",\n                    view:\n                      \"<glitchtip.social.GitlabLogin object at 0x7f232fe5c100>\",\n                    attrs: {\n                      access_token:\n                        \"'7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007'\"\n                    },\n                    adapter:\n                      \"<allauth.socialaccount.providers.gitlab.views.GitLabOAuth2Adapter object at 0x7f232fe5c6a0>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    adapter_class:\n                      \"<class 'allauth.socialaccount.providers.gitlab.views.GitLabOAuth2Adapter'>\"\n                  },\n                  in_app: true,\n                  module: \"rest_auth.registration.serializers\",\n                  filename: \"rest_auth/registration/serializers.py\",\n                  function: \"validate\",\n                  context_line:\n                    \"        app = adapter.get_provider().get_app(request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/rest_auth/registration/serializers.py\",\n                  lineNo: 75,\n                  context: [\n                    [\n                      70,\n                      \"        adapter_class = getattr(view, 'adapter_class', None)\"\n                    ],\n                    [71, \"        if not adapter_class:\"],\n                    [\n                      72,\n                      '            raise serializers.ValidationError(_(\"Define adapter_class in view\"))'\n                    ],\n                    [73, \"\"],\n                    [74, \"        adapter = adapter_class(request)\"],\n                    [\n                      75,\n                      \"        app = adapter.get_provider().get_app(request)\"\n                    ],\n                    [76, \"\"],\n                    [77, \"        # More info on code vs access_token\"],\n                    [\n                      78,\n                      \"        # http://stackoverflow.com/questions/8666316/facebook-oauth-2-0-code-and-token\"\n                    ],\n                    [79, \"\"],\n                    [80, \"        # Case 1: We received the access_token\"]\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<allauth.socialaccount.providers.gitlab.provider.GitLabProvider object at 0x7f232fe5c4f0>\",\n                    adapter:\n                      \"<allauth.socialaccount.adapter.DefaultSocialAccountAdapter object at 0x7f232fe5c760>\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\"\n                  },\n                  in_app: true,\n                  module: \"allauth.socialaccount.providers.base\",\n                  filename: \"allauth/socialaccount/providers/base.py\",\n                  function: \"get_app\",\n                  context_line:\n                    \"        return adapter.get_app(request, self.id)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/allauth/socialaccount/providers/base.py\",\n                  lineNo: 49,\n                  context: [\n                    [44, '        \"\"\"'],\n                    [\n                      45,\n                      '        raise NotImplementedError(\"get_login_url() for \" + self.name)'\n                    ],\n                    [46, \"\"],\n                    [47, \"    def get_app(self, request):\"],\n                    [48, \"        adapter = get_adapter(request)\"],\n                    [49, \"        return adapter.get_app(request, self.id)\"],\n                    [50, \"\"],\n                    [51, \"    def media_js(self, request):\"],\n                    [52, '        \"\"\"'],\n                    [\n                      53,\n                      \"        Some providers may require extra scripts (e.g. a Facebook connect)\"\n                    ],\n                    [54, '        \"\"\"']\n                  ]\n                },\n                {\n                  vars: {\n                    self:\n                      \"<allauth.socialaccount.adapter.DefaultSocialAccountAdapter object at 0x7f232fe5c760>\",\n                    config: \"None\",\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    provider: \"'gitlab'\",\n                    SocialApp:\n                      \"<class 'allauth.socialaccount.models.SocialApp'>\"\n                  },\n                  in_app: true,\n                  module: \"allauth.socialaccount.adapter\",\n                  filename: \"allauth/socialaccount/adapter.py\",\n                  function: \"get_app\",\n                  context_line:\n                    \"            app = SocialApp.objects.get_current(provider, request)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/allauth/socialaccount/adapter.py\",\n                  lineNo: 203,\n                  context: [\n                    [198, \"        if config:\"],\n                    [199, \"            app = SocialApp(provider=provider)\"],\n                    [\n                      200,\n                      \"            for field in ['client_id', 'secret', 'key']:\"\n                    ],\n                    [\n                      201,\n                      \"                setattr(app, field, config.get(field))\"\n                    ],\n                    [202, \"        else:\"],\n                    [\n                      203,\n                      \"            app = SocialApp.objects.get_current(provider, request)\"\n                    ],\n                    [204, \"        return app\"],\n                    [205, \"\"],\n                    [206, \"\"],\n                    [207, \"def get_adapter(request=None):\"],\n                    [\n                      208,\n                      \"    return import_attribute(app_settings.ADAPTER)(request)\"\n                    ]\n                  ]\n                },\n                {\n                  vars: {\n                    app: \"None\",\n                    self:\n                      \"<allauth.socialaccount.models.SocialAppManager object at 0x7f2330858e80>\",\n                    site: \"<Site: example.com>\",\n                    cache: {},\n                    request: \"<WSGIRequest: POST '/rest-auth/gitlab/'>\",\n                    provider: \"'gitlab'\"\n                  },\n                  in_app: true,\n                  module: \"allauth.socialaccount.models\",\n                  filename: \"allauth/socialaccount/models.py\",\n                  function: \"get_current\",\n                  context_line: \"            app = self.get(\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/allauth/socialaccount/models.py\",\n                  lineNo: 32,\n                  context: [\n                    [\n                      27,\n                      \"            cache = getattr(request, '_socialapp_cache', {})\"\n                    ],\n                    [28, \"            request._socialapp_cache = cache\"],\n                    [29, \"        app = cache.get(provider)\"],\n                    [30, \"        if not app:\"],\n                    [31, \"            site = get_current_site(request)\"],\n                    [32, \"            app = self.get(\"],\n                    [33, \"                sites__id=site.id,\"],\n                    [34, \"                provider=provider)\"],\n                    [35, \"            cache[provider] = app\"],\n                    [36, \"        return app\"],\n                    [37, \"\"]\n                  ]\n                },\n                {\n                  vars: {\n                    args: [],\n                    name: \"'get'\",\n                    self:\n                      \"<allauth.socialaccount.models.SocialAppManager object at 0x7f2330858e80>\",\n                    kwargs: {\n                      provider: \"'gitlab'\",\n                      sites__id: \"1\"\n                    }\n                  },\n                  in_app: true,\n                  module: \"django.db.models.manager\",\n                  filename: \"django/db/models/manager.py\",\n                  function: \"manager_method\",\n                  context_line:\n                    \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/manager.py\",\n                  lineNo: 82,\n                  context: [\n                    [77, \"\"],\n                    [78, \"    @classmethod\"],\n                    [79, \"    def _get_queryset_methods(cls, queryset_class):\"],\n                    [80, \"        def create_method(name, method):\"],\n                    [\n                      81,\n                      \"            def manager_method(self, *args, **kwargs):\"\n                    ],\n                    [\n                      82,\n                      \"                return getattr(self.get_queryset(), name)(*args, **kwargs)\"\n                    ],\n                    [\n                      83,\n                      \"            manager_method.__name__ = method.__name__\"\n                    ],\n                    [84, \"            manager_method.__doc__ = method.__doc__\"],\n                    [85, \"            return manager_method\"],\n                    [86, \"\"],\n                    [87, \"        new_methods = {}\"]\n                  ]\n                },\n                {\n                  vars: {\n                    num: \"0\",\n                    args: [],\n                    self:\n                      \"<QuerySet from django.db.models.query at 0x7f232fe5c7c0>\",\n                    clone:\n                      \"<QuerySet from django.db.models.query at 0x7f232fe5caf0>\",\n                    limit: \"21\",\n                    kwargs: {\n                      provider: \"'gitlab'\",\n                      sites__id: \"1\"\n                    }\n                  },\n                  in_app: true,\n                  module: \"django.db.models.query\",\n                  filename: \"django/db/models/query.py\",\n                  function: \"get\",\n                  context_line: \"            raise self.model.DoesNotExist(\",\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/db/models/query.py\",\n                  lineNo: 415,\n                  context: [\n                    [410, \"            clone.query.set_limits(high=limit)\"],\n                    [411, \"        num = len(clone)\"],\n                    [412, \"        if num == 1:\"],\n                    [413, \"            return clone._result_cache[0]\"],\n                    [414, \"        if not num:\"],\n                    [415, \"            raise self.model.DoesNotExist(\"],\n                    [\n                      416,\n                      '                \"%s matching query does not exist.\" %'\n                    ],\n                    [417, \"                self.model._meta.object_name\"],\n                    [418, \"            )\"],\n                    [419, \"        raise self.model.MultipleObjectsReturned(\"],\n                    [\n                      420,\n                      \"            'get() returned more than one %s -- it returned %s!' % (\"\n                    ]\n                  ]\n                }\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        env: {\n          SERVER_NAME: \"glitchtip-staging-6787c7c74c-7pdfb\",\n          SERVER_PORT: \"8080\"\n        },\n        url: \"https, https://staging.glitchtip.com/rest-auth/gitlab/\",\n        data: {\n          access_token:\n            \"7e6d28e705369c544138248b3bbdc575b5698ec13c21f7e67482c2553a536007\"\n        },\n        method: \"POST\",\n        headers: [\n          [\"Accept\", \"application/json, text/plain, */*\"],\n          [\"Accept-Encoding\", \"gzip\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Cdn-Loop\", \"cloudflare\"],\n          [\"Cf-Connecting-Ip\", \"93.157.248.128\"],\n          [\"Cf-Ipcountry\", \"RU\"],\n          [\"Cf-Ray\", \"5787c0afbc0174ab-EWR\"],\n          [\"Cf-Visitor\", '{\"scheme\":\"https\"}'],\n          [\"Connection\", \"close\"],\n          [\"Content-Length\", \"83\"],\n          [\"Content-Type\", \"application/json\"],\n          [\"Cookie\", \"\"],\n          [\"Dnt\", \"1\"],\n          [\"Host\", \"staging.glitchtip.com\"],\n          [\"Origin\", \"https://staging.glitchtip.com\"],\n          [\"Referer\", \"https://staging.glitchtip.com/login/gitlab\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; NetBSD i686; rv:68.0) Gecko/20100101 Firefox/68.0\"\n          ],\n          [\"X-Forwarded-For\", \"\"],\n          [\"X-Forwarded-Port\", \"443\"],\n          [\"X-Forwarded-Proto\", \"https, https\"]\n        ],\n        query_string: \"\",\n        inferredContentType: \"application/json\"\n      }\n    }\n  ],\n  metadata: {\n    type: \"SocialApp.DoesNotExist\",\n    value: \"SocialApp matching query does not exist.\",\n    filename: \"django/db/models/query.py\",\n    function: \"get\"\n  },\n  packages: {\n    pip: \"20.0.2\",\n    six: \"1.14.0\",\n    amqp: \"2.5.2\",\n    cleo: \"0.7.6\",\n    idna: \"2.8\",\n    pytz: \"2019.3\",\n    vine: \"1.3.0\",\n    attrs: \"19.3.0\",\n    boto3: \"1.12.0\",\n    cachy: \"0.3.0\",\n    kombu: \"4.6.7\",\n    pylev: \"1.3.0\",\n    redis: \"3.3.11\",\n    uwsgi: \"2.0.18\",\n    wheel: \"0.34.2\",\n    celery: \"4.4.0\",\n    clikit: \"0.4.3\",\n    django: \"3.0.3\",\n    pastel: \"0.2.0\",\n    poetry: \"1.0.5\",\n    stripe: \"2.43.0\",\n    asgiref: \"3.2.3\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    jeepney: \"0.4.3\",\n    keyring: \"20.0.1\",\n    msgpack: \"1.0.0\",\n    pkginfo: \"1.5.0.1\",\n    tomlkit: \"0.5.11\",\n    urllib3: \"1.25.8\",\n    billiard: \"3.6.2.0\",\n    botocore: \"1.15.0\",\n    docutils: \"0.15.2\",\n    html5lib: \"1.0.1\",\n    jmespath: \"0.9.4\",\n    lockfile: \"0.12.2\",\n    oauthlib: \"3.1.0\",\n    requests: \"2.22.0\",\n    sqlparse: \"0.3.0\",\n    \"dj-stripe\": \"2.2.3\",\n    jsonfield: \"3.1.0\",\n    pyparsing: \"2.4.6\",\n    defusedxml: \"0.6.0\",\n    \"django-csp\": \"3.6\",\n    jsonschema: \"3.2.0\",\n    pyrsistent: \"0.15.7\",\n    s3transfer: \"0.3.3\",\n    \"sentry-sdk\": \"0.13.5\",\n    setuptools: \"45.2.0\",\n    simplejson: \"3.17.0\",\n    whitenoise: \"5.0.1\",\n    shellingham: \"1.3.2\",\n    cachecontrol: \"0.12.6\",\n    cryptography: \"2.8\",\n    webencodings: \"0.5.1\",\n    \"django-filter\": \"2.2.0\",\n    secretstorage: \"3.1.2\",\n    \"django-allauth\": \"0.41.0\",\n    \"django-environ\": \"0.4.5\",\n    \"python3-openid\": \"3.1.0\",\n    \"django-storages\": \"1.9.1\",\n    \"psycopg2-binary\": \"2.8.4\",\n    \"python-dateutil\": \"2.8.1\",\n    \"django-rest-auth\": \"0.9.5\",\n    \"django-extensions\": \"2.2.8\",\n    \"requests-oauthlib\": \"1.3.0\",\n    \"requests-toolbelt\": \"0.8.0\",\n    \"django-redis-cache\": \"2.1.0\",\n    \"drf-nested-routers\": \"0.91\",\n    \"django-cors-headers\": \"3.2.1\",\n    djangorestframework: \"3.11.0\",\n    \"django-debug-toolbar\": \"2.2\",\n    \"django-organizations\": \"1.1.2\",\n    \"django-celery-results\": \"1.2.0\"\n  },\n  platform: \"python\",\n  sdk: {\n    name: \"sentry.python\",\n    version: \"0.13.5\",\n    packages: [\n      {\n        name: \"pypi:sentry-sdk\",\n        version: \"0.13.5\"\n      }\n    ],\n    integrations: [\n      \"argv\",\n      \"atexit\",\n      \"dedupe\",\n      \"django\",\n      \"excepthook\",\n      \"logging\",\n      \"modules\",\n      \"stdlib\",\n      \"threading\"\n    ]\n  },\n  tags: [],\n  title: \"SocialApp.DoesNotExist: SocialApp matching query does not exist.\",\n  type: \"error\",\n  nextEventID: null,\n  previousEventID: \"cd12ee1200fb41dfa6133b2254118892\"\n}"
                }
            ],
            "src/app/profile/social-auth/social-auth.stories.ts": [
                {
                    "name": "socialAuth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/social-auth/social-auth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const loadingBoolean = select(\n    \"loading\",\n    { first: 3, second: 4, null: null },\n    null\n  );\n  return {\n    component: SocialAuthComponent,\n    props: {\n      disconnectLoading$: of(loadingBoolean),\n      user$: of({\n        username: \"rain@bow.com\",\n        lastLogin: \"2020-10-29T15:51:52.193929Z\",\n        isSuperuser: true,\n        emails: [],\n        identities: [\n          {\n            id: 3,\n            provider: \"google\",\n            uid: \"secret\",\n            last_login: \"2020-10-29T15:51:52.182486Z\",\n            date_joined: \"2020-10-29T15:51:52.182546Z\",\n            email: \"a@a.aa\",\n            username: null,\n          },\n          {\n            id: 4,\n            provider: \"google\",\n            uid: \"secret\",\n            last_login: \"2020-10-29T15:51:52.182486Z\",\n            date_joined: \"2020-10-29T15:51:52.182546Z\",\n            email: \"b@b.bb\",\n            username: null,\n          },\n        ],\n        id: \"1\",\n        isActive: true,\n        name: \"\",\n        dateJoined: \"2020-08-18T13:18:51.432490Z\",\n        hasPasswordAuth: true,\n        email: \"rain@bow.com\",\n      }),\n      socialApps$: of([\n        {\n          provider: \"google\",\n          name: \"Google\",\n          client_id: \"secrets secrets are no fun\",\n        },\n      ]),\n    },\n  };\n}"
                }
            ],
            "src/app/issues/issues-page/issues-page.component.ts": [
                {
                    "name": "sorts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issues-page/issues-page.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  \"-last_seen\": \"Last Seen\",\n  last_seen: \"First Seen\",\n  \"-created\": \"Newest Creation Date\",\n  created: \"Oldest Creation Date\",\n  \"-count\": \"Most Frequent\",\n  count: \"Least Frequent\",\n  \"-priority\": \"Highest Priority\",\n  priority: \"Lowest Priority\",\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/stacktrace-undefined.ts": [
                {
                    "name": "stacktraceUndefined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/stacktrace-undefined.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"c5974fd9b97d4fcbb9ecc011f9a18144\",\n  id: \"c5974fd9b97d4fcbb9ecc011f9a18144\",\n  issue: 111,\n  context: {\n    error: {\n      Op: \"Post\",\n      Err: {\n        Op: \"read\",\n        Err: { Err: 104, Syscall: \"read\" },\n        Net: \"tcp\",\n        Addr: { IP: \"redacted\", Port: 123, Zone: \"\" },\n        Source: { IP: \"redacted\", Port: 456, Zone: \"\" },\n      },\n      URL: \"https://redacted\",\n    },\n  },\n  contexts: {\n    os: { name: \"linux\" },\n    device: { arch: \"amd64\", num_cpu: 2 },\n    runtime: {\n      name: \"go\",\n      version: \"go1.13.12\",\n      go_maxprocs: 2,\n      go_numcgocalls: 5,\n      go_numroutines: 8,\n    },\n  },\n  culprit: \"\",\n  dateCreated: \"2020-12-14T14:35:46Z\",\n  dateReceived: \"2020-12-14T14:36:03.617166Z\",\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            type: \"*url.Error\",\n            value: \"Post redacted: read: connection reset by peer\",\n          },\n        ],\n        hasSystemFrames: false,\n      },\n    },\n  ],\n  message: \"\",\n  metadata: {\n    type: \"*url.Error\",\n    value: \"Post https://redacted: read: connection reset by peer\",\n  },\n  packages: { redacted: \"redacted\" },\n  platform: \"go\",\n  sdk: {\n    name: \"sentry.go\",\n    version: \"0.9.0\",\n    packages: [{ name: \"sentry-go\", version: \"0.9.0\" }],\n    integrations: [\n      \"ContextifyFrames\",\n      \"Environment\",\n      \"IgnoreErrors\",\n      \"Modules\",\n    ],\n  },\n  tags: [],\n  title: \"*url.Error: Post https://redacted\",\n  type: \"error\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"redacted\",\n    email: null,\n    data: {},\n    id: null,\n  },\n  projectID: 149,\n  userReport: null,\n  nextEventID: null,\n  previousEventID: null,\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/string-error.ts": [
                {
                    "name": "stringError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/string-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"2ba0cf8565f248dc9501616cb4e0017b\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: \"478ffecb97314a9193af6fc7f6f08d05\",\n  message:\n    \"viewWrappedDebugError an error string /vendor.js viewWrappedDebugError(/vendor.js)\",\n  id: \"26\",\n  size: 4854,\n  errors: [\n    {\n      data: {\n        url: \"http://localhost:4200/polyfills.js\",\n        value: \"<class 'requests.exceptions.ConnectionError'>\"\n      },\n      message: \"Unable to fetch HTTP resource\",\n      type: \"fetch_generic_error\"\n    },\n    {\n      data: {\n        url: \"http://localhost:4200/vendor.js\",\n        value: \"<class 'requests.exceptions.ConnectionError'>\"\n      },\n      message: \"Unable to fetch HTTP resource\",\n      type: \"fetch_generic_error\"\n    }\n  ],\n  culprit: \"viewWrappedDebugError(/vendor.js)\",\n  title: \"Error: an error string\",\n  platform: \"javascript\",\n  location: \"/vendor.js\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"viewWrappedDebugError\",\n    type: \"Error\",\n    value: \"an error string\",\n    filename: \"/vendor.js\"\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"yes\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"instrument\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"http://localhost:4200/\", key: \"url\", _meta: null },\n    {\n      query: \"user.ip:208.53.32.36\",\n      value: \"ip:208.53.32.36\",\n      key: \"user\",\n      _meta: null\n    }\n  ],\n  dateCreated: \"2020-01-28T20:19:56.151Z\",\n  dateReceived: \"2020-01-28T20:19:56.151Z\",\n  user: {\n    username: null,\n    name: null,\n    ip_address: \"208.53.32.36\",\n    email: null,\n    data: {},\n    id: null\n  },\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"globalZoneAwareCallback\",\n                  colNo: 27,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 4864,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 14,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 4838,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 34,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3700,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"runTask\",\n                  colNo: 47,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3403,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 60,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3625,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"onInvokeTask\",\n                  colNo: 33,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 70625,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"invokeTask\",\n                  colNo: 31,\n                  vars: null,\n                  symbol: null,\n                  module: \"polyfills\",\n                  lineNo: 3626,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/polyfills.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/polyfills.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"sentryWrapped\",\n                  colNo: 23,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 81911,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"decoratePreventDefault/<\",\n                  colNo: 50,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 79300,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"renderEventHandlerClosure/<\",\n                  colNo: 29,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 73554,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"dispatchEvent\",\n                  colNo: 25,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 61709,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"debugHandleEvent\",\n                  colNo: 12,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 75876,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"callWithDebugContext\",\n                  colNo: 15,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 76251,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                },\n                {\n                  function: \"viewWrappedDebugError\",\n                  colNo: 15,\n                  vars: null,\n                  symbol: null,\n                  module: \"vendor\",\n                  lineNo: 61054,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"http://localhost:4200/vendor.js\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"/vendor.js\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null\n                }\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false\n            },\n            module: null,\n            rawStacktrace: null,\n            mechanism: {\n              data: { function: \"<anonymous>\" },\n              type: \"instrument\",\n              handled: true\n            },\n            threadId: null,\n            value: \"an error string\",\n            type: \"Error\"\n          }\n        ],\n        excOmitted: null,\n        hasSystemFrames: false\n      }\n    },\n    {\n      type: \"breadcrumbs\",\n      data: {\n        values: [\n          {\n            category: \"console\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:53.476Z\",\n            data: {\n              logger: \"console\",\n              extra: {\n                arguments: [\n                  \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\"\n                ]\n              }\n            },\n            message:\n              \"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\",\n            type: \"default\"\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:53.548Z\",\n            data: null,\n            message: \"body > app-root > ol > li > a\",\n            type: \"default\"\n          },\n          {\n            category: \"xhr\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:53.569Z\",\n            data: {\n              url: \"http://localhost:4200/sockjs-node/info?t=1580242793552\",\n              status_code: 200,\n              method: \"GET\"\n            },\n            message: null,\n            type: \"http\"\n          },\n          {\n            category: \"ui.click\",\n            level: \"info\",\n            event_id: null,\n            timestamp: \"2020-01-28T20:19:55.949Z\",\n            data: null,\n            message: \"body > app-root > ol > li > a\",\n            type: \"default\"\n          }\n        ]\n      }\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: null,\n        env: null,\n        headers: [\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\n          ]\n        ],\n        url: \"http://localhost:4200/\",\n        query: [],\n        data: null,\n        method: null\n      }\n    }\n  ],\n  packages: {},\n  sdk: {\n    version: \"5.11.1\",\n    name: \"sentry.javascript.browser\",\n    upstream: { url: null, isNewer: false, name: \"sentry.javascript.browser\" }\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null\n  },\n  contexts: {\n    os: { type: \"os\", name: \"Linux\" },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" }\n  },\n  fingerprints: [\"cd05695f108567c9cd4e56c8945ade8b\"],\n  context: { arguments: [] },\n  release: null,\n  groupID: \"7\"\n}"
                }
            ],
            "src/app/issues/issue-detail/tags-test-data.ts": [
                {
                    "name": "tags",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/tags-test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IssueTags[]",
                    "defaultValue": "[\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"/api/{id}/store/\",\n        value: \"/api/{id}/store/\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"transaction\",\n        firstSeen: \"2021-01-20T22:53:12.495Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Transaction\",\n    key: \"transaction\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"CPython\",\n        value: \"CPython\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"runtime.name\",\n        firstSeen: \"2021-01-20T22:53:12.392Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Runtime.Name\",\n    key: \"runtime.name\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 228,\n        name: \"Windows 10\",\n        value: \"Windows 10\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"os.name\",\n        firstSeen: \"2021-01-20T22:53:12.321Z\",\n      },\n      {\n        count: 20,\n        name: \"Windows 7\",\n        value: \"Windows 7\",\n        lastSeen: \"2021-01-29T21:21:08.826Z\",\n        key: \"os.name\",\n        firstSeen: \"2021-01-27T16:50:53.612Z\",\n      },\n      {\n        count: 1,\n        name: \"Mac OS X\",\n        value: \"Mac OS X\",\n        lastSeen: \"2021-01-26T09:46:49.536Z\",\n        key: \"os.name\",\n        firstSeen: \"2021-01-26T09:46:58.208Z\",\n      },\n    ],\n    uniqueValues: 3,\n    name: \"Os.Name\",\n    key: \"os.name\",\n    totalValues: 249,\n  },\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"warning\",\n        value: \"warning\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"level\",\n        firstSeen: \"2021-01-20T22:53:11.157Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Level\",\n    key: \"level\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 163,\n        name: \"Chrome 88.0.4324\",\n        value: \"Chrome 88.0.4324\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"browser\",\n        firstSeen: \"2021-01-26T09:46:58.036Z\",\n      },\n      {\n        count: 86,\n        name: \"Chrome 87.0.4280\",\n        value: \"Chrome 87.0.4280\",\n        lastSeen: \"2021-01-29T22:21:19.120Z\",\n        key: \"browser\",\n        firstSeen: \"2021-01-20T22:53:08.249Z\",\n      },\n    ],\n    uniqueValues: 2,\n    name: \"Browser\",\n    key: \"browser\",\n    totalValues: 249,\n  },\n  {\n    topValues: [\n      {\n        count: 281,\n        name: \"CPython 3.9.1\",\n        value: \"CPython 3.9.1\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"runtime\",\n        firstSeen: \"2021-01-20T22:53:12.363Z\",\n      },\n      {\n        count: 4,\n        name: \"CPython 3.9.2\",\n        value: \"CPython 3.9.2\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"runtime\",\n        firstSeen: \"2021-02-22T14:01:57.069Z\",\n      },\n    ],\n    uniqueValues: 2,\n    name: \"Runtime\",\n    key: \"runtime\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 133,\n        name: \"glitchtip-prod-7b595d64f9-l9hcg\",\n        value: \"glitchtip-prod-7b595d64f9-l9hcg\",\n        lastSeen: \"2021-01-29T22:21:24.375Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-26T09:46:58.394Z\",\n      },\n      {\n        count: 74,\n        name: \"glitchtip-prod-7b595d64f9-cmhx5\",\n        value: \"glitchtip-prod-7b595d64f9-cmhx5\",\n        lastSeen: \"2021-01-28T17:46:22.173Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-26T14:15:08.772Z\",\n      },\n      {\n        count: 69,\n        name: \"glitchtip-prod-7b595d64f9-s4pvj\",\n        value: \"glitchtip-prod-7b595d64f9-s4pvj\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-28T21:50:53.094Z\",\n      },\n      {\n        count: 3,\n        name: \"glitchtip-prod-web-c4ffbddb6-d6vfm\",\n        value: \"glitchtip-prod-web-c4ffbddb6-d6vfm\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-22T14:04:17.109Z\",\n      },\n      {\n        count: 2,\n        name: \"glitchtip-prod-7b595d64f9-m9zv5\",\n        value: \"glitchtip-prod-7b595d64f9-m9zv5\",\n        lastSeen: \"2021-02-09T21:26:45.346Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-09T21:26:47.795Z\",\n      },\n      {\n        count: 2,\n        name: \"glitchtip-prod-7b595d64f9-85rpd\",\n        value: \"glitchtip-prod-7b595d64f9-85rpd\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-09T21:26:47.470Z\",\n      },\n      {\n        count: 1,\n        name: \"glitchtip-prod-web-c4ffbddb6-4zj55\",\n        value: \"glitchtip-prod-web-c4ffbddb6-4zj55\",\n        lastSeen: \"2021-02-22T14:01:47.898Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-02-22T14:01:57.158Z\",\n      },\n      {\n        count: 1,\n        name: \"glitchtip-prod-77497fc969-7ghqk\",\n        value: \"glitchtip-prod-77497fc969-7ghqk\",\n        lastSeen: \"2021-01-20T22:52:53.903Z\",\n        key: \"server_name\",\n        firstSeen: \"2021-01-20T22:53:12.460Z\",\n      },\n    ],\n    uniqueValues: 8,\n    name: \"Server\",\n    key: \"server_name\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 280,\n        name: \"glitchtip@1.3.2\",\n        value: \"glitchtip@1.3.2\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"release\",\n        firstSeen: \"2021-01-26T09:46:58.323Z\",\n      },\n      {\n        count: 4,\n        name: \"glitchtip@1.4.0\",\n        value: \"glitchtip@1.4.0\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"release\",\n        firstSeen: \"2021-02-22T14:01:57.132Z\",\n      },\n      {\n        count: 1,\n        name: \"glitchtip@1.3.0\",\n        value: \"glitchtip@1.3.0\",\n        lastSeen: \"2021-01-20T22:52:53.903Z\",\n        key: \"release\",\n        firstSeen: \"2021-01-20T22:53:12.424Z\",\n      },\n    ],\n    uniqueValues: 3,\n    name: \"Release\",\n    key: \"release\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 249,\n        name: \"Chrome\",\n        value: \"Chrome\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"browser.name\",\n        firstSeen: \"2021-01-20T22:53:08.300Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Browser.Name\",\n    key: \"browser.name\",\n    totalValues: 249,\n  },\n  {\n    topValues: [\n      {\n        count: 1,\n        name: \"Mac OS X 11.1.0\",\n        value: \"Mac OS X 11.1.0\",\n        lastSeen: \"2021-01-26T09:46:49.536Z\",\n        key: \"os\",\n        firstSeen: \"2021-01-26T09:46:58.176Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"OS\",\n    key: \"os\",\n    totalValues: 1,\n  },\n  {\n    topValues: [\n      {\n        count: 285,\n        name: \"prod\",\n        value: \"prod\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"environment\",\n        firstSeen: \"2021-01-20T22:53:09.891Z\",\n      },\n    ],\n    uniqueValues: 1,\n    name: \"Environment\",\n    key: \"environment\",\n    totalValues: 285,\n  },\n  {\n    topValues: [\n      {\n        count: 248,\n        name: \"https://app.glitchtip.com/api/164/store/\",\n        value: \"https://app.glitchtip.com/api/164/store/\",\n        lastSeen: \"2021-01-30T18:18:21.702Z\",\n        key: \"url\",\n        firstSeen: \"2021-01-26T09:46:58.461Z\",\n      },\n      {\n        count: 28,\n        name: \"https://app.glitchtip.com/api/165/store/\",\n        value: \"https://app.glitchtip.com/api/165/store/\",\n        lastSeen: \"2021-01-27T15:26:47.539Z\",\n        key: \"url\",\n        firstSeen: \"2021-01-26T14:10:38.941Z\",\n      },\n      {\n        count: 4,\n        name: \"https://app.glitchtip.com/api/191/store/\",\n        value: \"https://app.glitchtip.com/api/191/store/\",\n        lastSeen: \"2021-02-22T15:17:59.030Z\",\n        key: \"url\",\n        firstSeen: \"2021-02-22T14:01:57.217Z\",\n      },\n      {\n        count: 4,\n        name: \"https://app.glitchtip.com/api/176/store/\",\n        value: \"https://app.glitchtip.com/api/176/store/\",\n        lastSeen: \"2021-02-09T21:26:53.684Z\",\n        key: \"url\",\n        firstSeen: \"2021-02-09T21:26:47.861Z\",\n      },\n      {\n        count: 1,\n        name: \"https://app.glitchtip.com/api/147/store/\",\n        value: \"https://app.glitchtip.com/api/147/store/\",\n        lastSeen: \"2021-01-20T22:52:53.903Z\",\n        key: \"url\",\n        firstSeen: \"2021-01-20T22:53:12.525Z\",\n      },\n    ],\n    uniqueValues: 5,\n    name: \"URL\",\n    key: \"url\",\n    totalValues: 285,\n  },\n]"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/template-error.ts": [
                {
                    "name": "templateError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/template-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"737278b5db2a4280b82351342296beb0\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: null,\n  message:\n    \"NoReverseMatch Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name. /code/errors/templates/template_error.html /template-error/\",\n  id: \"6\",\n  size: 16872,\n  errors: [],\n  culprit: \"/template-error/\",\n  title:\n    \"NoReverseMatch: Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n  platform: \"python\",\n  location: \"/code/errors/templates/template_error.html\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    type: \"NoReverseMatch\",\n    value:\n      \"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n    filename: \"/code/errors/templates/template_error.html\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/template-error/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/template-error/\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-01-27T19:18:03.345Z\",\n  dateReceived: \"2020-01-27T19:18:03.531Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f61885db580>>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    exc:\n                      \"NoReverseMatch(\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\")\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\",\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\",\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f6187781c10>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f61885db580>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    callback: \"<function TemplateErrorView at 0x7f618810a040>\",\n                    wrapped_callback:\n                      \"<function TemplateErrorView at 0x7f618810a040>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 145,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [140, \"                    )\"],\n                    [141, \"\"],\n                    [142, \"            try:\"],\n                    [143, \"                response = response.render()\"],\n                    [144, \"            except Exception as e:\"],\n                    [\n                      145,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [146, \"\"],\n                    [147, \"        return response\"],\n                    [148, \"\"],\n                    [\n                      149,\n                      \"    def process_exception_by_middleware(self, exception, request):\",\n                    ],\n                    [150, '        \"\"\"'],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f6187781c10>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f61885db580>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    callback: \"<function TemplateErrorView at 0x7f618810a040>\",\n                    wrapped_callback:\n                      \"<function TemplateErrorView at 0x7f618810a040>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 143,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      138,\n                      '                        \"HttpResponse object. It returned None instead.\"',\n                    ],\n                    [\n                      139,\n                      \"                        % (middleware_method.__self__.__class__.__name__)\",\n                    ],\n                    [140, \"                    )\"],\n                    [141, \"\"],\n                    [142, \"            try:\"],\n                    [143, \"                response = response.render()\"],\n                    [144, \"            except Exception as e:\"],\n                    [\n                      145,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [146, \"\"],\n                    [147, \"        return response\"],\n                    [148, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                    retval:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                  },\n                  symbol: null,\n                  module: \"django.template.response\",\n                  lineNo: 105,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/response.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/response.py\",\n                  platform: null,\n                  context: [\n                    [100, \"\"],\n                    [101, \"        Return the baked response instance.\"],\n                    [102, '        \"\"\"'],\n                    [103, \"        retval = self\"],\n                    [104, \"        if not self._is_rendered:\"],\n                    [105, \"            self.content = self.rendered_content\"],\n                    [\n                      106,\n                      \"            for post_callback in self._post_render_callbacks:\",\n                    ],\n                    [107, \"                newretval = post_callback(retval)\"],\n                    [108, \"                if newretval is not None:\"],\n                    [109, \"                    retval = newretval\"],\n                    [110, \"        return retval\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"rendered_content\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      '<TemplateResponse status_code=200, \"text/html; charset=utf-8\">',\n                    context: {\n                      view:\n                        \"<errors.views.TemplateErrorView object at 0x7f6187682730>\",\n                    },\n                    template:\n                      \"<django.template.backends.django.Template object at 0x7f61876e10a0>\",\n                  },\n                  symbol: null,\n                  module: \"django.template.response\",\n                  lineNo: 83,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/response.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/response.py\",\n                  platform: null,\n                  context: [\n                    [\n                      78,\n                      \"        response content, you must either call render(), or set the\",\n                    ],\n                    [\n                      79,\n                      \"        content explicitly using the value of this property.\",\n                    ],\n                    [80, '        \"\"\"'],\n                    [\n                      81,\n                      \"        template = self.resolve_template(self.template_name)\",\n                    ],\n                    [\n                      82,\n                      \"        context = self.resolve_context(self.context_data)\",\n                    ],\n                    [\n                      83,\n                      \"        return template.render(context, self._request)\",\n                    ],\n                    [84, \"\"],\n                    [85, \"    def add_post_render_callback(self, callback):\"],\n                    [86, '        \"\"\"Add a new post-rendering callback.'],\n                    [87, \"\"],\n                    [88, \"        If the response has already been rendered,\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.backends.django.Template object at 0x7f61876e10a0>\",\n                    request: \"<WSGIRequest: GET '/template-error/'>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.backends.django\",\n                  lineNo: 61,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/backends/django.py\",\n                  platform: null,\n                  context: [\n                    [56, \"        return self.template.origin\"],\n                    [57, \"\"],\n                    [58, \"    def render(self, context=None, request=None):\"],\n                    [\n                      59,\n                      \"        context = make_context(context, request, autoescape=self.backend.engine.autoescape)\",\n                    ],\n                    [60, \"        try:\"],\n                    [61, \"            return self.template.render(context)\"],\n                    [62, \"        except TemplateDoesNotExist as exc:\"],\n                    [63, \"            reraise(exc, self.backend)\"],\n                    [64, \"\"],\n                    [65, \"\"],\n                    [66, \"def copy_exception(exc, backend=None):\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.base.Template object at 0x7f618769f460>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 171,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      166,\n                      '        \"Display stage -- can be called many times\"',\n                    ],\n                    [\n                      167,\n                      \"        with context.render_context.push_state(self):\",\n                    ],\n                    [168, \"            if context.template is None:\"],\n                    [169, \"                with context.bind_template(self):\"],\n                    [\n                      170,\n                      \"                    context.template_name = self.name\",\n                    ],\n                    [171, \"                    return self._render(context)\"],\n                    [172, \"            else:\"],\n                    [173, \"                return self._render(context)\"],\n                    [174, \"\"],\n                    [175, \"    def compile_nodelist(self):\"],\n                    [176, '        \"\"\"'],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_render\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.base.Template object at 0x7f618769f460>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 163,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [158, \"    def __iter__(self):\"],\n                    [159, \"        for node in self.nodelist:\"],\n                    [160, \"            yield from node\"],\n                    [161, \"\"],\n                    [162, \"    def _render(self, context):\"],\n                    [163, \"        return self.nodelist.render(context)\"],\n                    [164, \"\"],\n                    [165, \"    def render(self, context):\"],\n                    [\n                      166,\n                      '        \"Display stage -- can be called many times\"',\n                    ],\n                    [\n                      167,\n                      \"        with context.render_context.push_state(self):\",\n                    ],\n                    [168, \"            if context.template is None:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    node:\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                    bit: \"'<a href=\\\"'\",\n                    bits: [\"'<a href=\\\"'\"],\n                    self: [\n                      \"<TextNode: '<a href=\\\"'>\",\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                      \"<TextNode: '\\\">'>\",\n                    ],\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 936,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [931, \"\"],\n                    [932, \"    def render(self, context):\"],\n                    [933, \"        bits = []\"],\n                    [934, \"        for node in self:\"],\n                    [935, \"            if isinstance(node, Node):\"],\n                    [\n                      936,\n                      \"                bit = node.render_annotated(context)\",\n                    ],\n                    [937, \"            else:\"],\n                    [938, \"                bit = node\"],\n                    [939, \"            bits.append(str(bit))\"],\n                    [940, \"        return mark_safe(''.join(bits))\"],\n                    [941, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: null,\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: null,\n                  lineNo: 1,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/templates/template_error.html\",\n                  inApp: true,\n                  instructionAddr: null,\n                  filename: \"/code/errors/templates/template_error.html\",\n                  platform: null,\n                  context: [\n                    [\n                      1,\n                      \"&lt;a href=&quot;{% url &#x27;nope&#x27; %}&quot;&gt;\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render_annotated\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                  },\n                  symbol: null,\n                  module: \"django.template.base\",\n                  lineNo: 903,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      898,\n                      \"        rendering, the exception is annotated with contextual line information\",\n                    ],\n                    [\n                      899,\n                      \"        where it occurred in the template. For internal usage this method is\",\n                    ],\n                    [\n                      900,\n                      \"        preferred over using the render method directly.\",\n                    ],\n                    [901, '        \"\"\"'],\n                    [902, \"        try:\"],\n                    [903, \"            return self.render(context)\"],\n                    [904, \"        except Exception as e:\"],\n                    [\n                      905,\n                      \"            if context.template.engine.debug and not hasattr(e, 'template_debug'):\",\n                    ],\n                    [\n                      906,\n                      \"                e.template_debug = context.render_context.template.get_exception_info(e, self.token)\",\n                    ],\n                    [907, \"            raise\"],\n                    [908, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"render\",\n                  colNo: null,\n                  vars: {\n                    reverse: \"<function reverse at 0x7f61887ad4c0>\",\n                    url: \"''\",\n                    self:\n                      \"<django.template.defaulttags.URLNode object at 0x7f618769fc10>\",\n                    args: [],\n                    current_app: \"''\",\n                    view_name: \"'nope'\",\n                    context:\n                      \"[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7f6187682730>}]\",\n                    kwargs: {},\n                    NoReverseMatch:\n                      \"<class 'django.urls.exceptions.NoReverseMatch'>\",\n                  },\n                  symbol: null,\n                  module: \"django.template.defaulttags\",\n                  lineNo: 443,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/template/defaulttags.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/template/defaulttags.py\",\n                  platform: null,\n                  context: [\n                    [438, \"                current_app = None\"],\n                    [\n                      439,\n                      \"        # Try to look up the URL. If it fails, raise NoReverseMatch unless the\",\n                    ],\n                    [\n                      440,\n                      \"        # {% url ... as var %} construct is used, in which case return nothing.\",\n                    ],\n                    [441, \"        url = ''\"],\n                    [442, \"        try:\"],\n                    [\n                      443,\n                      \"            url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)\",\n                    ],\n                    [444, \"        except NoReverseMatch:\"],\n                    [445, \"            if self.asvar is None:\"],\n                    [446, \"                raise\"],\n                    [447, \"\"],\n                    [448, \"        if self.asvar:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"reverse\",\n                  colNo: null,\n                  vars: {\n                    current_path: \"None\",\n                    viewname: \"'nope'\",\n                    args: [],\n                    current_app: \"''\",\n                    prefix: \"'/'\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    kwargs: {},\n                    path: [],\n                    urlconf: \"'django_error_factory.urls'\",\n                    view: \"'nope'\",\n                  },\n                  symbol: null,\n                  module: \"django.urls.base\",\n                  lineNo: 87,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/urls/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/urls/base.py\",\n                  platform: null,\n                  context: [\n                    [82, \"                else:\"],\n                    [\n                      83,\n                      '                    raise NoReverseMatch(\"%s is not a registered namespace\" % key)',\n                    ],\n                    [84, \"        if ns_pattern:\"],\n                    [\n                      85,\n                      \"            resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))\",\n                    ],\n                    [86, \"\"],\n                    [\n                      87,\n                      \"    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))\",\n                    ],\n                    [88, \"\"],\n                    [89, \"\"],\n                    [90, \"reverse_lazy = lazy(reverse, str)\"],\n                    [91, \"\"],\n                    [92, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_reverse_with_prefix\",\n                  colNo: null,\n                  vars: {\n                    lookup_view: \"'nope'\",\n                    m: \"None\",\n                    self:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    args: [],\n                    _prefix: \"'/'\",\n                    lookup_view_s: \"'nope'\",\n                    n: \"None\",\n                    possibilities: [],\n                    patterns: [],\n                    msg:\n                      \"\\\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\\\"\",\n                  },\n                  symbol: null,\n                  module: \"django.urls.resolvers\",\n                  lineNo: 677,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/urls/resolvers.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/urls/resolvers.py\",\n                  platform: null,\n                  context: [\n                    [672, \"        else:\"],\n                    [673, \"            msg = (\"],\n                    [\n                      674,\n                      \"                \\\"Reverse for '%(view)s' not found. '%(view)s' is not \\\"\",\n                    ],\n                    [\n                      675,\n                      \"                \\\"a valid view function or pattern name.\\\" % {'view': lookup_view_s}\",\n                    ],\n                    [676, \"            )\"],\n                    [677, \"        raise NoReverseMatch(msg)\"],\n                  ],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: true,\n            },\n            module: \"django.urls.exceptions\",\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value:\n              \"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\",\n            type: \"NoReverseMatch\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: true,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\",\n          ],\n        ],\n        url: \"http://localhost:8001/template-error/\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\",\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {\n      \"0\": {\n        data: {\n          values: {\n            \"0\": {\n              \"\": null,\n              stacktrace: {\n                \"\": null,\n                frames: {},\n                registers: null,\n                framesOmitted: null,\n              },\n              mechanism: null,\n              module: null,\n              value: null,\n              threadId: null,\n              type: null,\n            },\n          },\n        },\n      },\n    },\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\",\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"9ede40076b725295\",\n      trace_id: \"bec9565186e9474eb165f91e81deb6d5\",\n      span_id: \"9cfe2bda8c47ac22\",\n      type: \"default\",\n      op: \"django.middleware\",\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"a8b88d9a728170fc062bed162e6b9394\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"6\",\n}"
                }
            ],
            "src/app/api/transactions/transactions-test-data.ts": [
                {
                    "name": "testTransaction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/api/transactions/transactions-test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction",
                    "defaultValue": "{\n  eventId: \"6d8068b9-646d-4917-9502-cd61c7fb0bea\",\n  transaction: \"/\",\n  timestamp: \"2021-01-01T16:25:02.540670Z\",\n  startTimestamp: \"2021-01-01T16:24:02.540670Z\",\n}"
                }
            ],
            "src/app/profile/multi-factor-auth/totp/test-data.ts": [
                {
                    "name": "totpUserKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/profile/multi-factor-auth/totp/test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserKey",
                    "defaultValue": "{\n  id: 1,\n  created: \"\",\n  key_type: \"TOTP\",\n  last_used: \"\",\n  name: \"TOTP Key\",\n  user: 1,\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/zero-division-dotnet.ts": [
                {
                    "name": "zeroDivisionDotnet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/zero-division-dotnet.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"cb2445d6cf6849358a99a624613235df\",\n  dist: null,\n  userReport: null,\n  projectID: \"7\",\n  previousEventID: \"a7d99673543f49a886c5718936471ac7\",\n  message: \"An unhandled exception has occurred while executing the request.\",\n  id: \"2074\",\n  size: 18612,\n  errors: [],\n  culprit: \"myWebApp.Pages.DivideZeroModel in DivideByZero\",\n  title: \"System.DivideByZeroException: Attempted to divide by zero.\",\n  platform: \"csharp\",\n  location: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"DivideByZero\",\n    type: \"System.DivideByZeroException\",\n    value: \"Attempted to divide by zero.\",\n    filename: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"0HLV7P8HVOBA7\", key: \"ConnectionId\", _meta: null },\n    { value: \"0HLV7P8HVOBA7:00000004\", key: \"RequestId\", _meta: null },\n    { value: \"|f3b3f1eb-41c98fd19654c178.\", key: \"SpanId\", _meta: null },\n    { value: \"f3b3f1eb-41c98fd19654c178\", key: \"TraceId\", _meta: null },\n    { value: \"Firefox 75.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"Development\", key: \"environment\", _meta: null },\n    { value: \"UnhandledException\", key: \"eventId\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    {\n      value: \"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddle...\",\n      key: \"logger\",\n      _meta: null,\n    },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"Linux\", key: \"server-os.name\", _meta: null },\n    { value: \".NET Core 3.1.3\", key: \"server-runtime\", _meta: null },\n    { value: \".NET Core\", key: \"server-runtime.name\", _meta: null },\n    { value: \"bsc\", key: \"server_name\", _meta: null },\n    { value: \"http://localhost:5000/Divide-Zero\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-04-23T21:06:09.659Z\",\n  dateReceived: \"2020-04-23T21:06:10.258Z\",\n  user: null,\n  entries: [\n    {\n      type: \"message\",\n      data: {\n        formatted:\n          \"An unhandled exception has occurred while executing the request.\",\n      },\n    },\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"Invoke\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Diagnostics, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Invoke\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Authorization.AuthorizationMiddleware\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Authorization.Policy, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"MoveNext\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Routing.EndpointMiddleware+<<Invoke>g__AwaitRequestTask|6_0>d\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Routing, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"MoveNext\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+<<InvokeAsync>g__Awaited|17_0>d\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeFilterPipelineAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Next\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Rethrow\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"MoveNext\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker+<<InvokeNextResourceFilter>g__Awaited|24_0>d\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.Core, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeInnerFilterAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Next\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Rethrow\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeNextPageFilterAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"GetResult\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"HandleNonSuccessAndDebuggerNotification\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"ThrowForNonSuccess\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module: \"System.Runtime.CompilerServices.TaskAwaiter\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Throw\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"System.Runtime.ExceptionServices.ExceptionDispatchInfo\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"InvokeHandlerMethodAsync\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageActionInvoker\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"Execute\",\n                  colNo: null,\n                  vars: null,\n                  symbol: null,\n                  module:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.ExecutorFactory+VoidHandlerMethod\",\n                  lineNo: null,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"Microsoft.AspNetCore.Mvc.RazorPages, Version=3.1.3.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\",\n                  absPath: null,\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: null,\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"OnGet\",\n                  colNo: 6,\n                  vars: null,\n                  symbol: null,\n                  module: \"myWebApp.Pages.DivideZeroModel\",\n                  lineNo: 19,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"myWebApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\n                  absPath: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  inApp: true,\n                  instructionAddr: null,\n                  filename: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"DivideByZero\",\n                  colNo: 13,\n                  vars: null,\n                  symbol: null,\n                  module: \"myWebApp.Pages.DivideZeroModel\",\n                  lineNo: 14,\n                  trust: null,\n                  errors: null,\n                  package:\n                    \"myWebApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\",\n                  absPath: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  inApp: true,\n                  instructionAddr: null,\n                  filename: \"/home/dotnet-error-factory/Pages/Divide-Zero.cs\",\n                  platform: null,\n                  context: [],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: true,\n            },\n            module:\n              \"System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\",\n            rawStacktrace: null,\n            mechanism: null,\n            threadId: 8,\n            value: \"Attempted to divide by zero.\",\n            type: \"System.DivideByZeroException\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: true,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: null,\n        env: {\n          SERVER_NAME: \"bsc\",\n          SERVER_PORT: \"5000\",\n          DOCUMENT_ROOT: \"/home/dotnet-error-factory/wwwroot\",\n        },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Host\", \"localhost:5000\"],\n          [\"Referer\", \"http://localhost:5000/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0\",\n          ],\n        ],\n        url: \"http://localhost:5000/Divide-Zero\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    \"Microsoft.AspNetCore.Razor.Runtime\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Routing.Abstractions\": \"3.1.3.0\",\n    \"System.Runtime.InteropServices\": \"4.2.2.0\",\n    \"System.Memory\": \"4.2.1.0\",\n    \"System.Private.Uri\": \"4.0.6.0\",\n    \"Microsoft.AspNetCore.WebUtilities\": \"3.1.3.0\",\n    \"System.Security.Claims\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets\": \"3.1.3.0\",\n    \"System.IO.FileSystem.Watcher\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.TagHelpers\": \"3.1.3.0\",\n    \"System.Private.Xml.Linq\": \"4.0.2.0\",\n    \"System.Diagnostics.Debug\": \"4.1.2.0\",\n    \"Microsoft.Extensions.Configuration.FileExtensions\": \"3.1.3.0\",\n    \"System.Net.Http\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.HostFiltering\": \"3.1.3.0\",\n    \"System.Private.Xml\": \"4.0.2.0\",\n    \"Microsoft.AspNetCore.Authorization\": \"3.1.3.0\",\n    \"System.Numerics.Vectors\": \"4.1.6.0\",\n    \"Microsoft.AspNetCore.Mvc.ViewFeatures\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.StaticFiles\": \"3.1.3.0\",\n    \"Microsoft.Extensions.WebEncoders\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.Debug\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Hosting\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Mvc.Core\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Http.Features\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.EventLog\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Options\": \"3.1.3.0\",\n    \"System.ComponentModel.Primitives\": \"4.2.2.0\",\n    \"Microsoft.Win32.Registry\": \"4.1.3.0\",\n    \"myWebApp.Views\": \"1.0.0.0\",\n    \"System.Security.Cryptography.Primitives\": \"4.1.2.0\",\n    \"System.Runtime.CompilerServices.Unsafe\": \"4.0.6.0\",\n    \"Microsoft.AspNetCore.Antiforgery\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Server.IIS\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.EnvironmentVariables\": \"3.1.3.0\",\n    \"System.Reflection.Primitives\": \"4.1.2.0\",\n    \"Microsoft.Win32.Primitives\": \"4.1.2.0\",\n    \"System.IO.FileSystem\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.DataAnnotations\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.HttpOverrides\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.CommandLine\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Hosting\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Components\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Diagnostics.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.Console\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Connections.Abstractions\": \"3.1.3.0\",\n    \"System.Runtime\": \"4.2.2.0\",\n    netstandard: \"2.1.0.0\",\n    \"System.Diagnostics.StackTrace\": \"4.1.2.0\",\n    \"Microsoft.Net.Http.Headers\": \"3.1.3.0\",\n    \"System.Threading.ThreadPool\": \"4.1.2.0\",\n    \"System.Reflection.Emit.ILGeneration\": \"4.1.1.0\",\n    \"Microsoft.Extensions.Logging.Abstractions\": \"3.1.3.0\",\n    \"System.Threading\": \"4.1.2.0\",\n    \"System.Net.WebSockets\": \"4.1.2.0\",\n    \"Microsoft.Extensions.Configuration.Abstractions\": \"3.1.3.0\",\n    \"System.Security.Cryptography.Algorithms\": \"4.3.2.0\",\n    \"Microsoft.Extensions.ObjectPool\": \"3.1.3.0\",\n    \"System.Collections\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Razor\": \"3.1.3.0\",\n    \"Microsoft.Extensions.DependencyInjection.Abstractions\": \"3.1.3.0\",\n    \"System.ComponentModel\": \"4.0.4.0\",\n    \"Microsoft.AspNetCore.Html.Abstractions\": \"3.1.3.0\",\n    \"System.Linq\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Authentication.Core\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.DataProtection.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.Binder\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Metadata\": \"3.1.3.0\",\n    \"System.Collections.Specialized\": \"4.1.2.0\",\n    \"System.ComponentModel.Annotations\": \"4.3.1.0\",\n    \"Microsoft.Extensions.Localization.Abstractions\": \"3.1.3.0\",\n    \"System.Text.Encoding.Extensions\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.Razor\": \"3.1.3.0\",\n    \"System.Buffers\": \"4.0.5.0\",\n    \"Microsoft.Extensions.FileProviders.Abstractions\": \"3.1.3.0\",\n    \"System.Runtime.Intrinsics\": \"4.0.1.0\",\n    \"Microsoft.JSInterop\": \"3.1.3.0\",\n    \"System.Xml.XDocument\": \"4.1.2.0\",\n    \"System.Threading.Timer\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Hosting.Server.Abstractions\": \"3.1.3.0\",\n    \"System.Text.RegularExpressions\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Server.IISIntegration\": \"3.1.3.0\",\n    \"Microsoft.Extensions.DependencyInjection\": \"3.1.3.0\",\n    myWebApp: \"1.0.0.0\",\n    \"System.Text.Json\": \"4.0.1.1\",\n    \"System.Threading.Tasks\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Http.Extensions\": \"3.1.3.0\",\n    \"System.Diagnostics.DiagnosticSource\": \"4.0.5.0\",\n    \"System.Threading.Thread\": \"4.1.2.0\",\n    \"Sentry.Extensions.Logging\": \"2.1.1.0\",\n    \"Microsoft.Extensions.Hosting.Abstractions\": \"3.1.3.0\",\n    \"System.Security.Cryptography.Csp\": \"4.1.2.0\",\n    \"Microsoft.Extensions.FileProviders.Physical\": \"3.1.3.0\",\n    \"System.Net.Primitives\": \"4.1.2.0\",\n    \"System.Text.Encodings.Web\": \"4.0.5.0\",\n    \"System.ObjectModel\": \"4.1.2.0\",\n    \"System.Diagnostics.Tracing\": \"4.2.2.0\",\n    \"Microsoft.Extensions.FileSystemGlobbing\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Options.ConfigurationExtensions\": \"3.1.3.0\",\n    \"System.Security.Cryptography.X509Certificates\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Primitives\": \"3.1.3.0\",\n    \"System.Security.Principal\": \"4.1.2.0\",\n    \"System.IO.Pipelines\": \"4.0.2.1\",\n    \"Microsoft.AspNetCore.DataProtection\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Server.Kestrel.Core\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Configuration.UserSecrets\": \"3.1.3.0\",\n    \"Sentry.AspNetCore\": \"2.1.1.0\",\n    \"System.Private.CoreLib\": \"4.0.0.0\",\n    \"System.Console\": \"4.1.2.0\",\n    \"System.Net.Security\": \"4.1.2.0\",\n    \"System.Runtime.Extensions\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Authorization.Policy\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Caching.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Hosting.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Http.Abstractions\": \"3.1.3.0\",\n    \"System.Reflection.Metadata\": \"1.4.5.0\",\n    \"System.IO.Compression\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Configuration.Json\": \"3.1.3.0\",\n    \"System.Reflection.Emit.Lightweight\": \"4.1.1.0\",\n    \"System.Drawing.Primitives\": \"4.2.1.0\",\n    \"Microsoft.AspNetCore.Mvc\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging.EventSource\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Caching.Memory\": \"3.1.3.0\",\n    \"System.Collections.Immutable\": \"1.2.5.0\",\n    \"Sentry.Protocol\": \"2.1.1.0\",\n    Sentry: \"2.1.1.0\",\n    \"System.Linq.Expressions\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Configuration\": \"3.1.3.0\",\n    \"Microsoft.Extensions.Logging\": \"3.1.3.0\",\n    \"System.Resources.ResourceManager\": \"4.1.2.0\",\n    \"Microsoft.AspNetCore.Mvc.Abstractions\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Authentication.Abstractions\": \"3.1.3.0\",\n    \"System.Net.Sockets\": \"4.2.2.0\",\n    \"Microsoft.AspNetCore.Diagnostics\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Http\": \"3.1.3.0\",\n    \"System.Collections.Concurrent\": \"4.0.15.0\",\n    \"System.ComponentModel.TypeConverter\": \"4.2.2.0\",\n    \"Microsoft.Extensions.Logging.Configuration\": \"3.1.3.0\",\n    \"System.Runtime.InteropServices.RuntimeInformation\": \"4.0.4.0\",\n    \"Microsoft.AspNetCore.Routing\": \"3.1.3.0\",\n    \"Microsoft.AspNetCore.Mvc.RazorPages\": \"3.1.3.0\",\n    \"Sentry.PlatformAbstractions\": \"1.1.0.0\",\n    \"Microsoft.AspNetCore.Cryptography.Internal\": \"3.1.3.0\",\n  },\n  sdk: {\n    version: \"2.1.1\",\n    name: \"sentry.dotnet.aspnetcore\",\n    upstream: { url: null, isNewer: false, name: \"sentry.dotnet.aspnetcore\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    \"server-runtime\": {\n      raw_description: \".NET Core 3.1.3\",\n      version: \"3.1.3\",\n      type: \"runtime\",\n      name: \".NET Core\",\n    },\n    os: { type: \"os\", name: \"Linux\" },\n    \"server-os\": {\n      kernel_version: \"4.15.0\",\n      raw_description:\n        \"Linux 4.15.0-1079-oem #89-Ubuntu SMP Fri Mar 27 05:22:11 UTC 2020\",\n      type: \"os\",\n      name: \"Linux\",\n    },\n    browser: { version: \"75.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"29387c79a19642b7b20606cf9056f9ee\"],\n  context: {},\n  release: null,\n  groupID: \"49\",\n}"
                }
            ],
            "src/app/issues/issue-detail/event-detail/test-data/zero-division-error.ts": [
                {
                    "name": "zeroDivisionError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/issues/issue-detail/event-detail/test-data/zero-division-error.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDetail",
                    "defaultValue": "{\n  eventID: \"7d8b0e3646284685b6c834bea72cee8e\",\n  dist: null,\n  userReport: null,\n  projectID: \"2\",\n  previousEventID: \"345de1d2948f4904928b73ff884a007e\",\n  message:\n    \"get ZeroDivisionError division by zero errors/views.py /divide-zero/\",\n  id: \"19\",\n  size: 9755,\n  errors: [],\n  culprit: \"/divide-zero/\",\n  title: \"ZeroDivisionError: division by zero\",\n  platform: \"python\",\n  location: \"errors/views.py\",\n  nextEventID: null,\n  type: \"error\",\n  metadata: {\n    function: \"get\",\n    type: \"ZeroDivisionError\",\n    value: \"division by zero\",\n    filename: \"errors/views.py\",\n  },\n  groupingConfig: { id: \"legacy:2019-03-12\" },\n  crashFile: null,\n  tags: [\n    { value: \"Firefox 72.0\", key: \"browser\", _meta: null },\n    { value: \"Firefox\", key: \"browser.name\", _meta: null },\n    { value: \"no\", key: \"handled\", _meta: null },\n    { value: \"error\", key: \"level\", _meta: null },\n    { value: \"django\", key: \"mechanism\", _meta: null },\n    { value: \"Linux\", key: \"os.name\", _meta: null },\n    { value: \"CPython 3.8.0\", key: \"runtime\", _meta: null },\n    { value: \"CPython\", key: \"runtime.name\", _meta: null },\n    { value: \"ab3aadbbc567\", key: \"server_name\", _meta: null },\n    { value: \"/divide-zero/\", key: \"transaction\", _meta: null },\n    { value: \"http://localhost:8001/divide-zero/\", key: \"url\", _meta: null },\n  ],\n  dateCreated: \"2020-01-27T19:19:06.143Z\",\n  dateReceived: \"2020-01-27T19:19:06.204Z\",\n  user: null,\n  entries: [\n    {\n      type: \"exception\",\n      data: {\n        values: [\n          {\n            stacktrace: {\n              frames: [\n                {\n                  function: \"inner\",\n                  colNo: null,\n                  vars: {\n                    get_response:\n                      \"<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    exc: \"ZeroDivisionError('division by zero')\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.exception\",\n                  lineNo: 34,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/exception.py\",\n                  platform: null,\n                  context: [\n                    [\n                      29,\n                      \"    can rely on getting a response instead of an exception.\",\n                    ],\n                    [30, '    \"\"\"'],\n                    [31, \"    @wraps(get_response)\"],\n                    [32, \"    def inner(request):\"],\n                    [33, \"        try:\"],\n                    [34, \"            response = get_response(request)\"],\n                    [35, \"        except Exception as exc:\"],\n                    [\n                      36,\n                      \"            response = response_for_exception(request, exc)\",\n                    ],\n                    [37, \"        return response\"],\n                    [38, \"    return inner\"],\n                    [39, \"\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DivideZeroView, args=(), kwargs={}, url_name=divide_zero, app_names=[], namespaces=[], route=divide-zero/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    callback: \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    wrapped_callback:\n                      \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 115,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                    [\n                      119,\n                      \"            if isinstance(callback, types.FunctionType):    # FBV\",\n                    ],\n                    [120, \"                view_name = callback.__name__\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"_get_response\",\n                  colNo: null,\n                  vars: {\n                    resolver_match:\n                      \"ResolverMatch(func=errors.views.DivideZeroView, args=(), kwargs={}, url_name=divide_zero, app_names=[], namespaces=[], route=divide-zero/)\",\n                    callback_args: [],\n                    middleware_method:\n                      \"<function CsrfViewMiddleware.process_view at 0x7f9c5023b8b0>\",\n                    self:\n                      \"<django.core.handlers.wsgi.WSGIHandler object at 0x7f9c5109b580>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    callback: \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    wrapped_callback:\n                      \"<function DivideZeroView at 0x7f9c50bc1af0>\",\n                    resolver:\n                      \"<URLResolver 'django_error_factory.urls' (None:None) '^/'>\",\n                    callback_kwargs: {},\n                    response: \"None\",\n                  },\n                  symbol: null,\n                  module: \"django.core.handlers.base\",\n                  lineNo: 113,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/core/handlers/base.py\",\n                  platform: null,\n                  context: [\n                    [108, \"                break\"],\n                    [109, \"\"],\n                    [110, \"        if response is None:\"],\n                    [\n                      111,\n                      \"            wrapped_callback = self.make_view_atomic(callback)\",\n                    ],\n                    [112, \"            try:\"],\n                    [\n                      113,\n                      \"                response = wrapped_callback(request, *callback_args, **callback_kwargs)\",\n                    ],\n                    [114, \"            except Exception as e:\"],\n                    [\n                      115,\n                      \"                response = self.process_exception_by_middleware(e, request)\",\n                    ],\n                    [116, \"\"],\n                    [\n                      117,\n                      \"        # Complain if the view returned None (a common error).\",\n                    ],\n                    [118, \"        if response is None:\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"view\",\n                  colNo: null,\n                  vars: {\n                    initkwargs: {},\n                    self:\n                      \"<errors.views.DivideZeroView object at 0x7f9c4ade79a0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    kwargs: {},\n                    cls: \"<class 'errors.views.DivideZeroView'>\",\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 71,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [66, \"            if not hasattr(self, 'request'):\"],\n                    [67, \"                raise AttributeError(\"],\n                    [\n                      68,\n                      \"                    \\\"%s instance has no 'request' attribute. Did you override \\\"\",\n                    ],\n                    [\n                      69,\n                      '                    \"setup() and forget to call super()?\" % cls.__name__',\n                    ],\n                    [70, \"                )\"],\n                    [\n                      71,\n                      \"            return self.dispatch(request, *args, **kwargs)\",\n                    ],\n                    [72, \"        view.view_class = cls\"],\n                    [73, \"        view.view_initkwargs = initkwargs\"],\n                    [74, \"\"],\n                    [75, \"        # take name and docstring from class\"],\n                    [76, \"        update_wrapper(view, cls, updated=())\"],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"dispatch\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DivideZeroView object at 0x7f9c4ade79a0>\",\n                    handler:\n                      \"<bound method DivideZeroView.get of <errors.views.DivideZeroView object at 0x7f9c4ade79a0>>\",\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    args: [],\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"django.views.generic.base\",\n                  lineNo: 97,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath:\n                    \"/usr/local/lib/python3.8/site-packages/django/views/generic/base.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"django/views/generic/base.py\",\n                  platform: null,\n                  context: [\n                    [\n                      92,\n                      \"        # request method isn't on the approved list.\",\n                    ],\n                    [\n                      93,\n                      \"        if request.method.lower() in self.http_method_names:\",\n                    ],\n                    [\n                      94,\n                      \"            handler = getattr(self, request.method.lower(), self.http_method_not_allowed)\",\n                    ],\n                    [95, \"        else:\"],\n                    [96, \"            handler = self.http_method_not_allowed\"],\n                    [97, \"        return handler(request, *args, **kwargs)\"],\n                    [98, \"\"],\n                    [\n                      99,\n                      \"    def http_method_not_allowed(self, request, *args, **kwargs):\",\n                    ],\n                    [100, \"        logger.warning(\"],\n                    [\n                      101,\n                      \"            'Method Not Allowed (%s): %s', request.method, request.path,\",\n                    ],\n                    [\n                      102,\n                      \"            extra={'status_code': 405, 'request': request}\",\n                    ],\n                  ],\n                  symbolAddr: null,\n                },\n                {\n                  function: \"get\",\n                  colNo: null,\n                  vars: {\n                    self:\n                      \"<errors.views.DivideZeroView object at 0x7f9c4ade79a0>\",\n                    args: [],\n                    request: \"<WSGIRequest: GET '/divide-zero/'>\",\n                    kwargs: {},\n                  },\n                  symbol: null,\n                  module: \"errors.views\",\n                  lineNo: 12,\n                  trust: null,\n                  errors: null,\n                  package: null,\n                  absPath: \"/code/errors/views.py\",\n                  inApp: false,\n                  instructionAddr: null,\n                  filename: \"errors/views.py\",\n                  platform: null,\n                  context: [\n                    [7, '    template_name = \"home.html\"'],\n                    [8, \"\"],\n                    [9, \"\"],\n                    [10, \"class DivideZeroView(View):\"],\n                    [11, \"    def get(self, request, *args, **kwargs):\"],\n                    [12, \"        0/0\"],\n                    [13, \"\"],\n                    [14, \"\"],\n                    [15, \"class DatabaseErrorView(View):\"],\n                    [16, \"    def get(self, request, *args, **kwargs):\"],\n                    [17, '        User.objects.get(id=\"9999999\")'],\n                  ],\n                  symbolAddr: null,\n                },\n              ],\n              framesOmitted: null,\n              registers: null,\n              hasSystemFrames: false,\n            },\n            module: null,\n            rawStacktrace: null,\n            mechanism: { type: \"django\", handled: false },\n            threadId: null,\n            value: \"division by zero\",\n            type: \"ZeroDivisionError\",\n          },\n        ],\n        excOmitted: null,\n        hasSystemFrames: false,\n      },\n    },\n    {\n      type: \"request\",\n      data: {\n        fragment: \"\",\n        cookies: [],\n        inferredContentType: \"text/plain\",\n        env: { SERVER_NAME: \"ab3aadbbc567\", SERVER_PORT: \"8001\" },\n        headers: [\n          [\n            \"Accept\",\n            \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n          ],\n          [\"Accept-Encoding\", \"gzip, deflate\"],\n          [\"Accept-Language\", \"en-US,en;q=0.5\"],\n          [\"Connection\", \"keep-alive\"],\n          [\"Content-Length\", \"\"],\n          [\"Content-Type\", \"text/plain\"],\n          [\"Host\", \"localhost:8001\"],\n          [\"Referer\", \"http://localhost:8001/\"],\n          [\"Upgrade-Insecure-Requests\", \"1\"],\n          [\n            \"User-Agent\",\n            \"Mozilla/5.0 (X11; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\",\n          ],\n        ],\n        url: \"http://localhost:8001/divide-zero/\",\n        query: [],\n        data: null,\n        method: \"GET\",\n      },\n    },\n  ],\n  packages: {\n    cffi: \"1.13.2\",\n    \"ipython-genutils\": \"0.2.0\",\n    pygments: \"2.5.2\",\n    cleo: \"0.7.6\",\n    pip: \"19.3.1\",\n    \"prompt-toolkit\": \"3.0.2\",\n    parso: \"0.5.2\",\n    jeepney: \"0.4.2\",\n    click: \"7.0\",\n    appdirs: \"1.4.3\",\n    \"requests-toolbelt\": \"0.8.0\",\n    regex: \"2020.1.8\",\n    pastel: \"0.1.1\",\n    msgpack: \"0.6.2\",\n    pexpect: \"4.8.0\",\n    \"sentry-sdk\": \"0.14.0\",\n    ipdb: \"0.12.3\",\n    six: \"1.14.0\",\n    poetry: \"1.0.0\",\n    ptyprocess: \"0.6.0\",\n    html5lib: \"1.0.1\",\n    jedi: \"0.15.2\",\n    traitlets: \"4.3.3\",\n    asgiref: \"3.2.3\",\n    cachy: \"0.3.0\",\n    pathspec: \"0.7.0\",\n    cachecontrol: \"0.12.6\",\n    certifi: \"2019.11.28\",\n    chardet: \"3.0.4\",\n    wheel: \"0.33.6\",\n    backcall: \"0.1.0\",\n    cryptography: \"2.8\",\n    sqlparse: \"0.3.0\",\n    pycparser: \"2.19\",\n    secretstorage: \"3.1.2\",\n    urllib3: \"1.25.7\",\n    webencodings: \"0.5.1\",\n    pytz: \"2019.3\",\n    clikit: \"0.4.1\",\n    ipython: \"7.11.1\",\n    lockfile: \"0.12.2\",\n    pickleshare: \"0.7.5\",\n    decorator: \"4.4.1\",\n    tomlkit: \"0.5.8\",\n    jsonschema: \"3.2.0\",\n    \"typed-ast\": \"1.4.1\",\n    keyring: \"19.3.0\",\n    wcwidth: \"0.1.8\",\n    django: \"3.0.2\",\n    pyrsistent: \"0.14.11\",\n    pyparsing: \"2.4.6\",\n    pylev: \"1.3.0\",\n    toml: \"0.10.0\",\n    setuptools: \"41.6.0\",\n    pkginfo: \"1.5.0.1\",\n    black: \"19.10b0\",\n    requests: \"2.22.0\",\n    shellingham: \"1.3.1\",\n    idna: \"2.8\",\n    attrs: \"19.3.0\",\n  },\n  sdk: {\n    version: \"0.14.0\",\n    name: \"sentry.python\",\n    upstream: { url: null, isNewer: false, name: \"sentry.python\" },\n  },\n  _meta: {\n    user: null,\n    context: null,\n    entries: {},\n    contexts: null,\n    message: null,\n    packages: null,\n    tags: {},\n    sdk: null,\n  },\n  contexts: {\n    runtime: {\n      version: \"3.8.0\",\n      type: \"runtime\",\n      build: \"3.8.0 (default, Nov 23 2019, 05:49:00) \\n[GCC 8.3.0]\",\n      name: \"CPython\",\n    },\n\n    os: {\n      name: \"linux\",\n    },\n    device: {\n      arch: \"amd64\",\n      num_cpu: 8,\n    },\n    trace: {\n      description:\n        \"django.middleware.clickjacking.XFrameOptionsMiddleware.__call__\",\n      parent_span_id: \"886265157fcc2c0a\",\n      trace_id: \"605f4d2d9e6a43499afaf4bd240f33bd\",\n      span_id: \"88ccfce284caa9da\",\n      type: \"default\",\n      op: \"django.middleware\",\n    },\n    browser: { version: \"72.0\", type: \"browser\", name: \"Firefox\" },\n  },\n  fingerprints: [\"6c64a182729809288e28b95b0258be01\"],\n  context: { \"sys.argv\": [\"./manage.py\", \"runserver\", \"0.0.0.0:8001\"] },\n  release: null,\n  groupID: \"2\",\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/settings/members/new-member/new-member.component.ts": [
                {
                    "name": "emailsValidator",
                    "file": "src/app/settings/members/new-member/new-member.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateEmails",
                    "file": "src/app/settings/members/new-member/new-member.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Custom validator to vaildate emails separated by commas</p>\n",
                    "args": [
                        {
                            "name": "emails",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "emails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/shared.utils.ts": [
                {
                    "name": "generateClassName",
                    "file": "src/app/shared/shared.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>generateClassName comes from\n<a href=\"https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/contextSummary.jsx#L11\">https://gitlab.com/glitchtip/sentry-open-source/sentry/-/blob/master/src/sentry/static/sentry/app/components/events/contextSummary.jsx#L11</a></p>\n",
                    "args": [
                        {
                            "name": "name",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateIconPath",
                    "file": "src/app/shared/shared.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Generates path to icons in iconDictionary</p>\n",
                    "args": [
                        {
                            "name": "icon",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "icon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/issues/utils.ts": [
                {
                    "name": "isStacktrace",
                    "file": "src/app/issues/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "stacktrace",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "Stacktrace",
                    "jsdoctags": [
                        {
                            "name": "stacktrace",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "normalizeProjectParams",
                    "file": "src/app/issues/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "projects",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "projects",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "paramsToObject",
                    "file": "src/app/issues/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "entries",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "entries",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "urlParamsToObject",
                    "file": "src/app/issues/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "url",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts": [
                {
                    "name": "numberValidator",
                    "file": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "cypress/integration/utils.ts": [
                {
                    "name": "requestLogin",
                    "file": "cypress/integration/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "seedBackend",
                    "file": "cypress/integration/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "doExtraStuff",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "doExtraStuff",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uniqueId",
                    "file": "cypress/integration/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "cypress/integration/screenshot-run.ts": [
                {
                    "name": "seedDjangoIssues",
                    "file": "cypress/integration/screenshot-run.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "dsn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "dsn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "seedJavaScriptIssues",
                    "file": "cypress/integration/screenshot-run.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "dsn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "dsn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "cypress/integration/issues.ts": [
                {
                    "name": "seedIssues",
                    "file": "cypress/integration/issues.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "dsn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "dsn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/api/mfa/user-keys.service.ts": [
                {
                    "name": "BackupCodes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string[]",
                    "file": "src/app/api/mfa/user-keys.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 179
                },
                {
                    "name": "UserKeyType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"FIDO2\" | \"TOTP\" | \"Trusted Device\" | \"Backup Codes\"",
                    "file": "src/app/api/mfa/user-keys.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/issues/interfaces.ts": [
                {
                    "name": "ContextsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"user\" | \"browser\" | \"runtime\" | \"os\" | \"client_os\" | \"device\" | \"gpu\"",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "EntryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"exception\" | \"breadcrumbs\" | \"request\" | \"message\" | \"csp\"",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "EntryUnion",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Entry<exception | ExceptionValueData> | Entry<breadcrumbs | BreadcrumbValueData> | Entry<request | Request> | Entry<message | Message> | Entry<csp | CSP>",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "EventTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"error\" | \"default\"",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "IssueStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"resolved\" | \"unresolved\" | \"ignored\"",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "Stats",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 191
                },
                {
                    "name": "StatsPeriod",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"24h\" | \"14d\" | \"30d\" | string",
                    "file": "src/app/issues/interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "cypress/fixtures/variables.ts": [
                {
                    "name": "Environment",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"production\" | \"staging\" | \"development\"",
                    "file": "cypress/fixtures/variables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/interface-primitives.ts": [
                {
                    "name": "Json",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "null | boolean | number | string | Json[] | literal type",
                    "file": "src/app/interface-primitives.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "JsonArrayOrObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Json[] | literal type",
                    "file": "src/app/interface-primitives.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/api/emails/email.service.ts": [
                {
                    "name": "LoadingStateNames",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"add\" | \"delete\" | \"makePrimary\" | \"resendConfirmation\"",
                    "file": "src/app/api/emails/email.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/api/organizations/organizations.interface.ts": [
                {
                    "name": "MemberRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"member\" | \"admin\" | \"manager\" | \"owner\"",
                    "file": "src/app/api/organizations/organizations.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/profile/notifications/notifications.interface.ts": [
                {
                    "name": "NotificationStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number",
                    "file": "src/app/profile/notifications/notifications.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 144
                }
            ],
            "src/app/api/oauth/oauth.interfaces.ts": [
                {
                    "name": "OAuthProvider",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"google\" | \"gitlab\" | \"github\" | \"microsoft\"",
                    "file": "src/app/api/oauth/oauth.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Name as defined by django-allauth</p>\n",
                    "kind": 183
                }
            ],
            "src/app/api/projects/project-alerts/project-alerts.interface.ts": [
                {
                    "name": "RecipientType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"email\" | \"webhook\"",
                    "file": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/django.interfaces.ts": [
                {
                    "name": "ServerError",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/django.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/login/login.service.ts": [
                {
                    "name": "ValidAuth",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"TOTP\" | \"FIDO2\"",
                    "file": "src/app/login/login.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./home/home.module#HomeModule",
                        "pathMatch": "full",
                        "canActivate": [
                            "IsLoggedInGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/home/home-routing.module.ts",
                                        "module": "HomeRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomeComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomeModule"
                            }
                        ]
                    },
                    {
                        "path": "organizations/new",
                        "loadChildren": "./new-organization/new-organization.module#NewOrganizationModule",
                        "canActivate": [
                            "IsLoggedInGuard"
                        ],
                        "data": {
                            "title": "CreateNewOrganization"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/new-organization/new-organization-routing.module.ts",
                                        "module": "NewOrganizationRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "NewOrganizationsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "NewOrganizationModule"
                            }
                        ]
                    },
                    {
                        "path": "login",
                        "loadChildren": "./login/login.module#LoginModule",
                        "canActivate": [
                            "AlreadyLoggedInGuard"
                        ],
                        "data": {
                            "title": "LogIn"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/login/login-routing.module.ts",
                                        "module": "LoginRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LoginComponent"
                                            },
                                            {
                                                "path": ":provider",
                                                "component": "LoginComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "LoginModule"
                            }
                        ]
                    },
                    {
                        "path": "profile",
                        "loadChildren": "./profile/profile.module#ProfileModule",
                        "canActivate": [
                            "IsLoggedInGuard"
                        ],
                        "data": {
                            "title": "Profile"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/profile/profile-routing.module.ts",
                                        "module": "ProfileRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ProfileComponent",
                                                "children": [
                                                    {
                                                        "path": "auth-tokens",
                                                        "component": "AuthTokensComponent"
                                                    },
                                                    {
                                                        "path": "auth-tokens/new",
                                                        "component": "NewTokenComponent"
                                                    },
                                                    {
                                                        "path": "",
                                                        "component": "AccountComponent"
                                                    },
                                                    {
                                                        "path": "notifications",
                                                        "component": "NotificationsComponent"
                                                    },
                                                    {
                                                        "path": "multi-factor-auth",
                                                        "component": "MultiFactorAuthComponent"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "confirm-email/:key",
                                                "component": "ConfirmEmailComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ProfileModule"
                            }
                        ]
                    },
                    {
                        "path": "register",
                        "loadChildren": "./register/register.module#RegisterModule",
                        "canActivate": [
                            "AlreadyLoggedInGuard"
                        ],
                        "data": {
                            "title": "Register"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/register/register-routing.module.ts",
                                        "module": "RegisterRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "RegisterComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "RegisterModule"
                            }
                        ]
                    },
                    {
                        "path": "reset-password",
                        "loadChildren": "./reset-password/reset-password.module#ResetPasswordModule",
                        "data": {
                            "title": "ResetPassword"
                        },
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/reset-password/reset-password-routing.module.ts",
                                        "module": "ResetPasswordRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ResetPasswordComponent"
                                            },
                                            {
                                                "path": "set-new-password/:uidb64/:token",
                                                "component": "SetNewPasswordComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ResetPasswordModule"
                            }
                        ]
                    },
                    {
                        "path": "auth",
                        "loadChildren": "./auth/auth.module#AuthModule"
                    },
                    {
                        "path": "accept/:memberId/:token",
                        "loadChildren": "./accept/accept.module#AcceptModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/accept/accept-routing.module.ts",
                                        "module": "AcceptRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AcceptInviteComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AcceptModule"
                            }
                        ]
                    },
                    {
                        "path": ":org-slug/:project-slug/issues/:id",
                        "redirectTo": ":org-slug/issues/:id",
                        "pathMatch": "full"
                    },
                    {
                        "path": ":org-slug",
                        "canActivate": [
                            "IsLoggedInGuard"
                        ],
                        "children": [
                            {
                                "path": "issues",
                                "loadChildren": "./issues/issues.module#IssuesModule",
                                "data": {
                                    "title": "Issues"
                                },
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/issues/issues-routing.module.ts",
                                                "module": "IssuesRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "IssuesPageComponent"
                                                    },
                                                    {
                                                        "path": ":issue-id",
                                                        "component": "IssueDetailComponent",
                                                        "children": [
                                                            {
                                                                "path": "",
                                                                "component": "EventDetailComponent"
                                                            },
                                                            {
                                                                "path": "user-reports",
                                                                "component": "UserReportsIssueComponent"
                                                            },
                                                            {
                                                                "path": "events/:event-id",
                                                                "component": "EventDetailComponent"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "IssuesModule"
                                    }
                                ]
                            },
                            {
                                "path": "projects",
                                "loadChildren": "./projects/projects.module#ProjectsModule",
                                "data": {
                                    "title": "Projects"
                                },
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/projects/projects-routing.module.ts",
                                                "module": "ProjectsRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "ProjectsComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "ProjectsModule"
                                    }
                                ]
                            },
                            {
                                "path": "settings",
                                "loadChildren": "./settings/settings.module#SettingsModule",
                                "data": {
                                    "title": "Settings"
                                },
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/settings/settings-routing.module.ts",
                                                "module": "SettingsRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "SettingsComponent",
                                                        "children": [
                                                            {
                                                                "path": "",
                                                                "component": "OrganizationComponent"
                                                            },
                                                            {
                                                                "path": "projects",
                                                                "component": "ProjectsComponent"
                                                            },
                                                            {
                                                                "path": "projects/new",
                                                                "component": "NewProjectComponent"
                                                            },
                                                            {
                                                                "path": "projects/:project-slug",
                                                                "component": "ProjectDetailComponent"
                                                            },
                                                            {
                                                                "path": "subscription",
                                                                "loadChildren": "./subscription/subscription.module#SubscriptionModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [
                                                                            {
                                                                                "name": "routes",
                                                                                "filename": "src/app/settings/subscription/subscription-routing.module.ts",
                                                                                "module": "SubscriptionRoutingModule",
                                                                                "children": [
                                                                                    {
                                                                                        "path": "",
                                                                                        "component": "SubscriptionComponent"
                                                                                    }
                                                                                ],
                                                                                "kind": "module"
                                                                            }
                                                                        ],
                                                                        "module": "SubscriptionModule"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "path": "teams",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "TeamsComponent"
                                                                    },
                                                                    {
                                                                        "path": ":team-slug",
                                                                        "component": "TeamDetailsComponent",
                                                                        "children": [
                                                                            {
                                                                                "path": "members",
                                                                                "component": "TeamMembersComponent"
                                                                            },
                                                                            {
                                                                                "path": "projects",
                                                                                "component": "TeamProjectsComponent"
                                                                            },
                                                                            {
                                                                                "path": "settings",
                                                                                "component": "TeamSettingsComponent"
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "path": "members",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "MembersComponent"
                                                                    },
                                                                    {
                                                                        "path": "new",
                                                                        "component": "NewMemberComponent"
                                                                    },
                                                                    {
                                                                        "path": ":member-id",
                                                                        "component": "MemberDetailComponent"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "SettingsModule"
                                    }
                                ]
                            },
                            {
                                "path": "performance",
                                "loadChildren": "./performance/performance.module#PerformanceModule",
                                "data": {
                                    "title": "Performance"
                                },
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/performance/performance-routing.module.ts",
                                                "module": "PerformanceRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "PerformanceComponent"
                                                    },
                                                    {
                                                        "path": ":event-id",
                                                        "component": "TransactionDetailComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "PerformanceModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": "",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "cypress/fixtures/django-events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "logging",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/django-events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noReverseMatch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "autoplayError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "criticalMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "debugMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "evalError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateErrors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateIssues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "infoMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "jsError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "jsRangeError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "jsReferenceError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "jsSyntaxError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "jsUriError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "randomUserAgent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "uniqueInfoLog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userAgents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/events.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "warningMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/users.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "changePassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/users.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "user",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "newProject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "newTeam",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "organization",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "project",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "project2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "project3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/fixtures/variables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "team",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/issues.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "seedIssues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/screenshot-run.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "seedDjangoIssues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/screenshot-run.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "seedJavaScriptIssues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "requestLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "seedBackend",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "uniqueId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "cypress/integration/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDSN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/accept/accept-invite/accept-invite.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AcceptInviteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/api/accept/accept-invite.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AcceptAPIResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/accept/accept-invite.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AcceptInviteService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/api/accept/accept-invite.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AcceptState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/accept/accept-invite.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/api-tokens/api-tokens.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "APIToken",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/api-tokens/api-tokens.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewAPIToken",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/api-tokens/api-tokens.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "APITokenService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/api/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 23,
                "coverageCount": "4/17",
                "status": "low"
            },
            {
                "filePath": "src/app/api/auth/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/auth/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/auth/token.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "TokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/confirm-email/confirm-email.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ConfirmEmailService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/emails/email.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EmailAddress",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/emails/email.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EmailService",
                "coveragePercent": 5,
                "coverageCount": "2/35",
                "status": "low"
            },
            {
                "filePath": "src/app/api/emails/email.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EmailState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/emails/email.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoadingStates",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "src/app/api/emails/email.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/emails/sample-email-address-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleEmailAddressData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/issues/issues-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IssuesAPIService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/api/mfa/user-keys.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserKeysService",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/api/mfa/user-keys.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BackUpCodesRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/mfa/user-keys.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BackUpGenerateResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/mfa/user-keys.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TOTPRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/mfa/user-keys.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TOTPResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/mfa/user-keys.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserKey",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/api/oauth/oauth.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OAuthConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/oauth/oauth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GlitchTipOAuthService",
                "coveragePercent": 8,
                "coverageCount": "1/12",
                "status": "low"
            },
            {
                "filePath": "src/app/api/oauth/oauth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RestAuthConnectData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/oauth/oauth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RestAuthLoginResp",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/oauth/social.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getOAuthConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/oauth/social.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "oAuthConfigs",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/api/organizations/member-detail.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MemberDetailService",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/member-detail.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MemberDetailState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/member-detail.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/members.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MembersService",
                "coveragePercent": 23,
                "coverageCount": "3/13",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/members.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MembersState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/members.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organization-test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "organizationList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrganizationAPIService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Avatar",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Environment",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Member",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MemberSelector",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Organization",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationDetail",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationErrors",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationLoading",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationMembersRequest",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationNew",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationProject",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationUser",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrgStatus",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectEnvironment",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrganizationsService",
                "coveragePercent": 11,
                "coverageCount": "7/63",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationsState",
                "coveragePercent": 11,
                "coverageCount": "1/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/organizations/organizations.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AlertRecipient",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewAlertRecipient",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewProjectAlert",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/project-alerts/project-alerts.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectAlert",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/project-alerts/project-alerts.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectAlertsAPIService",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/project-keys-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectKeysAPIService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Avatar",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DSN",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Project",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectDetail",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectIssueView",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectKey",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectNew",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/projects/projects-api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectsAPIService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/api/reset-password/reset-password.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResetPasswordService",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/api/reset-password/reset-password.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResetPasswordState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/reset-password/reset-password.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/settings.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SettingsService",
                "coveragePercent": 8,
                "coverageCount": "1/12",
                "status": "low"
            },
            {
                "filePath": "src/app/api/settings.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingsState",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/api/settings.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseProduct",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateSubscriptionResp",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Plan",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Subscription",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SubscriptionsService",
                "coveragePercent": 22,
                "coverageCount": "4/18",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubscriptionsState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/subscriptions/subscriptions.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/teams/teams.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Team",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/teams/teams.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TeamErrors",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/teams/teams.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TeamLoading",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/teams/teams.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TeamsService",
                "coveragePercent": 3,
                "coverageCount": "1/27",
                "status": "low"
            },
            {
                "filePath": "src/app/api/teams/teams.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TeamsState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/api/teams/teams.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/transactions/transactions-test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testTransaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/transactions/transactions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Transaction",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/transactions/transactions.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionWithDelta",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/api/transactions/transactions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransactionsService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user-reports/user-reports.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserReport",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user-reports/user-reports.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserReportsService",
                "coveragePercent": 5,
                "coverageCount": "1/20",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user-reports/user-reports.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserReportsState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user-reports/user-reports.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Email",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialAccount",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialApp",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/api/user/user.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "snackBarDuration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/already-logged-in.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AlreadyLoggedInGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/is-logged-in.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "IsLoggedInGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/header-nav/header-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderNavComponent",
                "coveragePercent": 28,
                "coverageCount": "8/28",
                "status": "medium"
            },
            {
                "filePath": "src/app/issues/header-nav/header-nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "headerNav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/header-nav/header-nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Activity",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AnnotatedContexts",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AnnotatedRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbValueData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CSP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EndUser",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Entry",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Errors",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Event",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventDetail",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventTag",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ExceptionValueData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FirstRelease",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Frame",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GroupingConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Issue",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssueDetail",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssueMetadata",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssueTags",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssueTagsAdjusted",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssueWithSelected",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Mechanism",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Request",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Stacktrace",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tag",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TopValue",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TopValueAdjusted",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateStatusResponse",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Values",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/context/contexts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contexts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconPaths",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/context/contexts.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "unknownContexts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-breadcrumbs/entry-breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryBreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-csp/entry-csp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryCSPComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-exception/entry-exception.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryExceptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-exception/frame-expanded/frame-expanded.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FrameExpandedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-exception/frame-title/frame-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FrameTitleComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-exception/raw-stacktrace/raw-stacktrace.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RawStacktraceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-message/entry-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/entry-request/entry-request.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryRequestComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-by-issue-test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IssueEventList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EventDetailComponent",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BreadcrumbsLong",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BreadcrumbsMedium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BreadcrumbsShort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EntryCSP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EntryException",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EntryMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EntryRequest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FrameTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/event-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RawStacktrace",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/breadcrumb-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breadcrumbError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/csp-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cspError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/database-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "databaseError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/database-stack-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "databaseStackError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/empty-stacktrace.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "emptyStacktrace",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/page-not-found.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pageNotFound",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/post-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "postError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/social-app.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "socialApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/stacktrace-undefined.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stacktraceUndefined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/string-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stringError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/template-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/zero-division-dotnet.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "zeroDivisionDotnet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/event-detail/test-data/zero-division-error.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "zeroDivisionError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail-tags/issue-detail-tags.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueDetailTagsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail-test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleIssueDetail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail-title/issue-detail-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueDetailTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IssueDetailService",
                "coveragePercent": 10,
                "coverageCount": "6/59",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssueDetailState",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/issue-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IssueDetailTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-detail/tags-test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tags",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issue-zero-states/issue-zero-states.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssueZeroStatesComponent",
                "coveragePercent": 9,
                "coverageCount": "2/21",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues-page/issue-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "issueListItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues-page/issue-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues-page/issues-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IssuesPageComponent",
                "coveragePercent": 6,
                "coverageCount": "3/45",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues-page/issues-page.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sorts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues-page/issues-test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "issueList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IssuesService",
                "coveragePercent": 15,
                "coverageCount": "6/39",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IssuesState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/issues.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/user-reports-issue/user-reports-issue.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserReportsIssueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isStacktrace",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "normalizeProjectParams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "paramsToObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/issues/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "urlParamsToObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/lazy-markdown/lazy-markdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LazyMarkdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login-totp/login-totp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginTotpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginService",
                "coveragePercent": 6,
                "coverageCount": "1/15",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/main-nav/main-nav.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MainNavService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/main-nav/main-nav.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MainNavState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/main-nav/main-nav.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/main-nav/main-nav/main-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/new-organization/new-organization.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewOrganizationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/performance/performance.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PerformanceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/performance/performance.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PerformanceService",
                "coveragePercent": 7,
                "coverageCount": "1/14",
                "status": "low"
            },
            {
                "filePath": "src/app/performance/performance.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PerformanceState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/performance/performance.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/performance/transaction-detail/transaction-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/account/account.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/auth-tokens/auth-tokens.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthTokensComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/auth-tokens/auth-tokens.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthTokensService",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/auth-tokens/auth-tokens.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthTokensState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/auth-tokens/auth-tokens.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/auth-tokens/auth-tokens.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authTokens",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/auth-tokens/new-token/new-token.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewTokenComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/change-password/change-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChangePasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/change-password/password.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PasswordService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/change-password/password.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChangePassword",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/change-password/password.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/confirm-email/confirm-email.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmEmailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/manage-emails/manage-emails.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManageEmailsComponent",
                "coveragePercent": 14,
                "coverageCount": "2/14",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/fido2/fido2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Fido2Component",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/multi-factor-auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiFactorAuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MultiFactorAuthService",
                "coveragePercent": 3,
                "coverageCount": "1/26",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MFAState",
                "coveragePercent": 11,
                "coverageCount": "1/9",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/multi-factor-auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/totp/test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "totpUserKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/totp/totp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TOTPComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Enabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/multi-factor-auth/totp/totp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "QRCode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GroupedProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectAlerts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectError",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectWithAlertStatus",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SubscribeByDefault",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NotificationsService",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NotificationsState",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/notifications/notifications.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "changepw",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/social-auth/social-auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialAuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/profile/social-auth/social-auth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "socialAuth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/projects/projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/projects/projects.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectsService",
                "coveragePercent": 8,
                "coverageCount": "1/12",
                "status": "low"
            },
            {
                "filePath": "src/app/projects/projects.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectsState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/projects/projects.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/rate-limit-banner/rate-limit-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RateLimitBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/register/register.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegisterService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/register/register.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reset-password/reset-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResetPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/reset-password/set-new-password/set-new-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SetNewPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/members/member-detail/member-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MemberDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/members/members.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MembersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/members/new-member/new-member.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewMemberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/members/new-member/new-member.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "emailsValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/members/new-member/new-member.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "validateEmails",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/settings/organization/organization.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrganizationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/new-project/new-project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "backend",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categoryList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "desktop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "frontend",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "popular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sourceMaps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlatformPickerComponent",
                "coveragePercent": 11,
                "coverageCount": "3/26",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PlatformPickerButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platform-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PlatformPickerDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlatPlatform",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flattenedPlatforms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platforms-for-picker.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "otherPlatform",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platforms.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Integration",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platforms.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Platform",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/platform-picker/platforms.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "platforms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NewAlertErrorStateMatcher",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/alert-form/alert-form.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "numberValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/new-recipient/new-recipient.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewRecipientComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectAlertsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectAlertsService",
                "coveragePercent": 20,
                "coverageCount": "12/59",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NewAlertState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectAlertState",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RecipientDialogState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialNewAlertState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialRecipientDialogState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-alerts/project-alerts.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-environments/project-environments.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectEnvironmentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectEnvironmentsService",
                "coveragePercent": 5,
                "coverageCount": "1/19",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectsState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-detail/project-environments/project-environments.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-settings.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectSettingsService",
                "coveragePercent": 4,
                "coverageCount": "2/44",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-settings.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectError",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-settings.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectLoading",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-settings.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectSettingsState",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/project-settings.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/projects/projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/settings/settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/subscription/payment/payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/subscription/stripe.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StripeBillingPortalSession",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/subscription/stripe.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StripeCheckoutSession",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/subscription/stripe.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StripeSession",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/subscription/stripe.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StripeService",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/subscription/subscription.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubscriptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/new-team/new-team.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewTeamComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/new-team/slugify.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SlugifyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/team-details/team-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/team-members/team-members.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamMembersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/team-projects/team-projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/team-settings/team-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/settings/teams/teams.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/auth-svg/auth-svg.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthSvgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/copy-input/copy-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CopyInputComponent",
                "coveragePercent": 40,
                "coverageCount": "2/5",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/days-ago.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DaysAgoPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/days-ago.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DaysOldPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/entry-data/entry-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EntryDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/forms/form-error/form-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/forms/form-error/form-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Many",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/forms/form-error/form-error.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "One",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input-matcher.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "InputMatcherDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/less-annoying-error-state-matcher.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LessAnnoyingErrorStateMatcher",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/loading-button/loading-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingButtonComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/project-card/empty-projects/empty-projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/project-card/project-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/project-list/project-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectCardButton",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectCardButtonWithQuery",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "copyInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "entryData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadingButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "projectCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateClassName",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/shared.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateIconPath",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/shared.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserPath",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/shared.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconDictionary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "osPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PaginationBaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PaginationStatefulService",
                "coveragePercent": 18,
                "coverageCount": "2/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaginationState",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaginationStatefulServiceState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Paginator",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialPaginationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stateful-service/pagination-stateful-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "processLinkHeader",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/stateful-service/stateful-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StatefulService",
                "coveragePercent": 28,
                "coverageCount": "2/7",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/to-do-item/to-do-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToDoItemComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/to-do-item/to-do-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Doing",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/to-do-item/to-do-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Done",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/to-do-item/to-do-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotDone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "typography",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}